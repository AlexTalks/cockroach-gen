// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLJOB",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCONTROLJOB",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11627

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1312,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	219, 195,
	444, 195,
	-2, 0,
	-1, 79,
	208, 1116,
	221, 1116,
	237, 335,
	335, 335,
	344, 910,
	376, 335,
	388, 910,
	429, 910,
	454, 335,
	479, 910,
	-2, 0,
	-1, 85,
	237, 339,
	-2, 0,
	-1, 86,
	122, 1312,
	214, 1312,
	464, 1312,
	465, 1312,
	-2, 0,
	-1, 102,
	139, 1283,
	157, 1283,
	170, 1283,
	217, 1283,
	250, 1283,
	294, 1283,
	304, 1283,
	459, 1283,
	-2, 1254,
	-1, 136,
	147, 795,
	236, 795,
	338, 764,
	393, 764,
	447, 795,
	-2, 0,
	-1, 138,
	4, 1314,
	21, 1314,
	22, 1314,
	23, 1314,
	24, 1314,
	25, 1314,
	26, 1314,
	28, 1314,
	29, 1314,
	35, 1314,
	40, 1314,
	41, 1314,
	42, 1314,
	43, 1314,
	44, 1314,
	45, 1314,
	46, 1314,
	47, 1314,
	48, 1314,
	49, 1314,
	51, 1314,
	52, 1314,
	53, 1314,
	54, 1314,
	56, 1314,
	57, 1314,
	58, 1314,
	59, 1314,
	60, 1314,
	61, 1314,
	65, 1314,
	66, 1314,
	67, 1314,
	68, 1314,
	70, 1314,
	71, 1314,
	72, 1314,
	76, 1314,
	77, 1314,
	78, 1314,
	79, 1314,
	80, 1314,
	81, 1314,
	82, 1314,
	85, 1314,
	86, 1314,
	87, 1314,
	88, 1314,
	90, 1314,
	92, 1314,
	93, 1314,
	94, 1314,
	95, 1314,
	97, 1314,
	99, 1314,
	100, 1314,
	108, 1314,
	109, 1314,
	110, 1314,
	111, 1314,
	113, 1314,
	114, 1314,
	115, 1314,
	117, 1314,
	118, 1314,
	119, 1314,
	121, 1314,
	122, 1314,
	124, 1314,
	125, 1314,
	126, 1314,
	129, 1314,
	130, 1314,
	131, 1314,
	133, 1314,
	134, 1314,
	136, 1314,
	137, 1314,
	138, 1314,
	140, 1314,
	141, 1314,
	142, 1314,
	143, 1314,
	144, 1314,
	145, 1314,
	146, 1314,
	147, 1314,
	148, 1314,
	149, 1314,
	150, 1314,
	151, 1314,
	152, 1314,
	153, 1314,
	154, 1314,
	156, 1314,
	162, 1314,
	163, 1314,
	164, 1314,
	165, 1314,
	169, 1314,
	171, 1314,
	175, 1314,
	176, 1314,
	177, 1314,
	178, 1314,
	179, 1314,
	180, 1314,
	182, 1314,
	183, 1314,
	185, 1314,
	186, 1314,
	188, 1314,
	189, 1314,
	190, 1314,
	191, 1314,
	192, 1314,
	193, 1314,
	194, 1314,
	195, 1314,
	196, 1314,
	198, 1314,
	199, 1314,
	201, 1314,
	202, 1314,
	203, 1314,
	204, 1314,
	208, 1314,
	209, 1314,
	210, 1314,
	211, 1314,
	214, 1314,
	215, 1314,
	216, 1314,
	218, 1314,
	220, 1314,
	221, 1314,
	223, 1314,
	225, 1314,
	226, 1314,
	227, 1314,
	229, 1314,
	233, 1314,
	234, 1314,
	235, 1314,
	236, 1314,
	237, 1314,
	238, 1314,
	240, 1314,
	241, 1314,
	242, 1314,
	244, 1314,
	245, 1314,
	247, 1314,
	248, 1314,
	251, 1314,
	252, 1314,
	253, 1314,
	256, 1314,
	257, 1314,
	258, 1314,
	259, 1314,
	261, 1314,
	262, 1314,
	263, 1314,
	264, 1314,
	265, 1314,
	266, 1314,
	267, 1314,
	268, 1314,
	269, 1314,
	270, 1314,
	271, 1314,
	273, 1314,
	275, 1314,
	276, 1314,
	277, 1314,
	278, 1314,
	279, 1314,
	280, 1314,
	281, 1314,
	283, 1314,
	285, 1314,
	287, 1314,
	289, 1314,
	290, 1314,
	291, 1314,
	292, 1314,
	293, 1314,
	296, 1314,
	299, 1314,
	300, 1314,
	301, 1314,
	302, 1314,
	305, 1314,
	306, 1314,
	307, 1314,
	309, 1314,
	311, 1314,
	312, 1314,
	313, 1314,
	314, 1314,
	315, 1314,
	316, 1314,
	317, 1314,
	318, 1314,
	319, 1314,
	320, 1314,
	321, 1314,
	322, 1314,
	324, 1314,
	325, 1314,
	326, 1314,
	327, 1314,
	328, 1314,
	329, 1314,
	330, 1314,
	331, 1314,
	332, 1314,
	334, 1314,
	336, 1314,
	337, 1314,
	338, 1314,
	339, 1314,
	340, 1314,
	341, 1314,
	342, 1314,
	343, 1314,
	344, 1314,
	345, 1314,
	346, 1314,
	348, 1314,
	354, 1314,
	356, 1314,
	357, 1314,
	358, 1314,
	359, 1314,
	360, 1314,
	361, 1314,
	362, 1314,
	363, 1314,
	365, 1314,
	366, 1314,
	367, 1314,
	369, 1314,
	370, 1314,
	371, 1314,
	372, 1314,
	373, 1314,
	374, 1314,
	376, 1314,
	377, 1314,
	378, 1314,
	379, 1314,
	380, 1314,
	381, 1314,
	382, 1314,
	383, 1314,
	384, 1314,
	385, 1314,
	386, 1314,
	388, 1314,
	389, 1314,
	390, 1314,
	391, 1314,
	392, 1314,
	393, 1314,
	395, 1314,
	396, 1314,
	397, 1314,
	398, 1314,
	399, 1314,
	401, 1314,
	402, 1314,
	403, 1314,
	404, 1314,
	405, 1314,
	406, 1314,
	407, 1314,
	409, 1314,
	411, 1314,
	412, 1314,
	413, 1314,
	414, 1314,
	415, 1314,
	416, 1314,
	417, 1314,
	418, 1314,
	419, 1314,
	420, 1314,
	421, 1314,
	422, 1314,
	423, 1314,
	425, 1314,
	426, 1314,
	428, 1314,
	430, 1314,
	431, 1314,
	432, 1314,
	433, 1314,
	434, 1314,
	435, 1314,
	436, 1314,
	437, 1314,
	439, 1314,
	440, 1314,
	441, 1314,
	442, 1314,
	443, 1314,
	445, 1314,
	447, 1314,
	448, 1314,
	449, 1314,
	450, 1314,
	451, 1314,
	453, 1314,
	454, 1314,
	455, 1314,
	457, 1314,
	458, 1314,
	461, 1314,
	462, 1314,
	463, 1314,
	464, 1314,
	465, 1314,
	466, 1314,
	467, 1314,
	469, 1314,
	472, 1314,
	473, 1314,
	474, 1314,
	475, 1314,
	476, 1314,
	477, 1314,
	479, 1314,
	480, 1314,
	481, 1314,
	486, 1314,
	487, 1314,
	488, 1314,
	489, 1314,
	490, 1314,
	491, 1314,
	-2, 0,
	-1, 139,
	1, 1188,
	225, 1188,
	334, 1188,
	342, 1188,
	494, 1188,
	518, 1188,
	-2, 0,
	-1, 141,
	1, 1188,
	518, 1188,
	-2, 0,
	-1, 142,
	1, 1188,
	518, 1188,
	-2, 0,
	-1, 143,
	1, 1188,
	444, 1188,
	518, 1188,
	-2, 0,
	-1, 172,
	139, 1282,
	157, 1282,
	170, 1282,
	217, 1282,
	250, 1282,
	294, 1282,
	304, 1282,
	459, 1282,
	-2, 1257,
	-1, 208,
	4, 1321,
	5, 1321,
	6, 1321,
	7, 1321,
	8, 1321,
	9, 1321,
	10, 1321,
	21, 1321,
	22, 1321,
	23, 1321,
	24, 1321,
	25, 1321,
	26, 1321,
	28, 1321,
	29, 1321,
	35, 1321,
	36, 1321,
	40, 1321,
	41, 1321,
	42, 1321,
	43, 1321,
	44, 1321,
	45, 1321,
	46, 1321,
	47, 1321,
	48, 1321,
	49, 1321,
	51, 1321,
	52, 1321,
	53, 1321,
	54, 1321,
	56, 1321,
	57, 1321,
	58, 1321,
	59, 1321,
	60, 1321,
	61, 1321,
	62, 1321,
	63, 1321,
	64, 1321,
	65, 1321,
	66, 1321,
	67, 1321,
	68, 1321,
	70, 1321,
	71, 1321,
	72, 1321,
	74, 1321,
	76, 1321,
	77, 1321,
	78, 1321,
	79, 1321,
	80, 1321,
	81, 1321,
	82, 1321,
	85, 1321,
	86, 1321,
	87, 1321,
	88, 1321,
	90, 1321,
	92, 1321,
	93, 1321,
	94, 1321,
	95, 1321,
	97, 1321,
	98, 1321,
	99, 1321,
	100, 1321,
	101, 1321,
	102, 1321,
	103, 1321,
	104, 1321,
	105, 1321,
	106, 1321,
	107, 1321,
	108, 1321,
	109, 1321,
	110, 1321,
	111, 1321,
	112, 1321,
	113, 1321,
	114, 1321,
	115, 1321,
	116, 1321,
	117, 1321,
	118, 1321,
	119, 1321,
	121, 1321,
	122, 1321,
	124, 1321,
	125, 1321,
	126, 1321,
	129, 1321,
	130, 1321,
	131, 1321,
	133, 1321,
	134, 1321,
	136, 1321,
	137, 1321,
	138, 1321,
	140, 1321,
	141, 1321,
	142, 1321,
	143, 1321,
	144, 1321,
	145, 1321,
	146, 1321,
	147, 1321,
	148, 1321,
	149, 1321,
	150, 1321,
	151, 1321,
	152, 1321,
	153, 1321,
	154, 1321,
	155, 1321,
	156, 1321,
	162, 1321,
	163, 1321,
	164, 1321,
	165, 1321,
	169, 1321,
	171, 1321,
	174, 1321,
	175, 1321,
	176, 1321,
	177, 1321,
	178, 1321,
	179, 1321,
	180, 1321,
	182, 1321,
	183, 1321,
	185, 1321,
	186, 1321,
	188, 1321,
	189, 1321,
	190, 1321,
	191, 1321,
	192, 1321,
	193, 1321,
	194, 1321,
	195, 1321,
	196, 1321,
	197, 1321,
	198, 1321,
	199, 1321,
	201, 1321,
	202, 1321,
	203, 1321,
	204, 1321,
	208, 1321,
	209, 1321,
	210, 1321,
	211, 1321,
	213, 1321,
	214, 1321,
	215, 1321,
	216, 1321,
	218, 1321,
	220, 1321,
	221, 1321,
	222, 1321,
	223, 1321,
	224, 1321,
	225, 1321,
	226, 1321,
	227, 1321,
	228, 1321,
	229, 1321,
	233, 1321,
	234, 1321,
	235, 1321,
	236, 1321,
	237, 1321,
	238, 1321,
	240, 1321,
	241, 1321,
	242, 1321,
	244, 1321,
	245, 1321,
	246, 1321,
	247, 1321,
	248, 1321,
	249, 1321,
	251, 1321,
	252, 1321,
	253, 1321,
	254, 1321,
	255, 1321,
	256, 1321,
	257, 1321,
	258, 1321,
	259, 1321,
	261, 1321,
	262, 1321,
	263, 1321,
	264, 1321,
	265, 1321,
	266, 1321,
	267, 1321,
	268, 1321,
	269, 1321,
	270, 1321,
	271, 1321,
	273, 1321,
	274, 1321,
	275, 1321,
	276, 1321,
	277, 1321,
	278, 1321,
	279, 1321,
	280, 1321,
	281, 1321,
	282, 1321,
	283, 1321,
	284, 1321,
	285, 1321,
	286, 1321,
	287, 1321,
	288, 1321,
	289, 1321,
	290, 1321,
	291, 1321,
	292, 1321,
	293, 1321,
	296, 1321,
	300, 1321,
	301, 1321,
	302, 1321,
	305, 1321,
	306, 1321,
	307, 1321,
	308, 1321,
	309, 1321,
	310, 1321,
	311, 1321,
	312, 1321,
	313, 1321,
	314, 1321,
	315, 1321,
	316, 1321,
	317, 1321,
	318, 1321,
	319, 1321,
	320, 1321,
	321, 1321,
	322, 1321,
	324, 1321,
	325, 1321,
	326, 1321,
	327, 1321,
	328, 1321,
	329, 1321,
	330, 1321,
	331, 1321,
	332, 1321,
	334, 1321,
	336, 1321,
	337, 1321,
	338, 1321,
	339, 1321,
	340, 1321,
	341, 1321,
	342, 1321,
	343, 1321,
	344, 1321,
	345, 1321,
	346, 1321,
	348, 1321,
	354, 1321,
	356, 1321,
	357, 1321,
	358, 1321,
	359, 1321,
	360, 1321,
	361, 1321,
	362, 1321,
	363, 1321,
	365, 1321,
	366, 1321,
	367, 1321,
	368, 1321,
	369, 1321,
	370, 1321,
	371, 1321,
	372, 1321,
	373, 1321,
	374, 1321,
	376, 1321,
	377, 1321,
	378, 1321,
	379, 1321,
	380, 1321,
	381, 1321,
	382, 1321,
	383, 1321,
	384, 1321,
	385, 1321,
	386, 1321,
	388, 1321,
	389, 1321,
	390, 1321,
	391, 1321,
	392, 1321,
	393, 1321,
	394, 1321,
	395, 1321,
	396, 1321,
	397, 1321,
	398, 1321,
	399, 1321,
	400, 1321,
	401, 1321,
	402, 1321,
	403, 1321,
	404, 1321,
	405, 1321,
	406, 1321,
	407, 1321,
	409, 1321,
	411, 1321,
	412, 1321,
	413, 1321,
	414, 1321,
	415, 1321,
	416, 1321,
	417, 1321,
	418, 1321,
	419, 1321,
	420, 1321,
	421, 1321,
	422, 1321,
	423, 1321,
	425, 1321,
	426, 1321,
	427, 1321,
	428, 1321,
	430, 1321,
	431, 1321,
	432, 1321,
	433, 1321,
	434, 1321,
	435, 1321,
	436, 1321,
	437, 1321,
	439, 1321,
	440, 1321,
	441, 1321,
	442, 1321,
	443, 1321,
	445, 1321,
	447, 1321,
	448, 1321,
	449, 1321,
	450, 1321,
	451, 1321,
	452, 1321,
	453, 1321,
	454, 1321,
	455, 1321,
	457, 1321,
	458, 1321,
	460, 1321,
	461, 1321,
	462, 1321,
	463, 1321,
	464, 1321,
	465, 1321,
	466, 1321,
	467, 1321,
	468, 1321,
	469, 1321,
	472, 1321,
	473, 1321,
	474, 1321,
	475, 1321,
	476, 1321,
	477, 1321,
	479, 1321,
	480, 1321,
	481, 1321,
	486, 1321,
	487, 1321,
	488, 1321,
	489, 1321,
	490, 1321,
	491, 1321,
	492, 1321,
	499, 1321,
	506, 1321,
	507, 1321,
	508, 1321,
	515, 1321,
	519, 1321,
	-2, 0,
	-1, 625,
	173, 2030,
	444, 2030,
	498, 2030,
	517, 2030,
	-2, 0,
	-1, 626,
	173, 2118,
	444, 2118,
	498, 2118,
	517, 2118,
	-2, 0,
	-1, 627,
	173, 2018,
	444, 2018,
	498, 2018,
	517, 2018,
	-2, 0,
	-1, 629,
	173, 2218,
	444, 2218,
	498, 2218,
	517, 2218,
	-2, 0,
	-1, 631,
	173, 2252,
	444, 2252,
	498, 2252,
	517, 2252,
	-2, 0,
	-1, 638,
	173, 2133,
	444, 2133,
	498, 2133,
	517, 2133,
	-2, 612,
	-1, 669,
	517, 1969,
	520, 1969,
	-2, 849,
	-1, 670,
	517, 1971,
	520, 1971,
	-2, 850,
	-1, 671,
	517, 1970,
	520, 1970,
	-2, 851,
	-1, 672,
	520, 1904,
	-2, 852,
	-1, 694,
	170, 209,
	-2, 0,
	-1, 716,
	479, 1093,
	-2, 911,
	-1, 756,
	4, 1114,
	21, 1114,
	22, 1114,
	23, 1114,
	24, 1114,
	25, 1114,
	26, 1114,
	28, 1114,
	29, 1114,
	35, 1114,
	40, 1114,
	41, 1114,
	42, 1114,
	43, 1114,
	44, 1114,
	45, 1114,
	46, 1114,
	47, 1114,
	48, 1114,
	49, 1114,
	51, 1114,
	52, 1114,
	53, 1114,
	54, 1114,
	56, 1114,
	57, 1114,
	58, 1114,
	59, 1114,
	60, 1114,
	61, 1114,
	65, 1114,
	66, 1114,
	67, 1114,
	68, 1114,
	70, 1114,
	71, 1114,
	72, 1114,
	76, 1114,
	77, 1114,
	78, 1114,
	79, 1114,
	80, 1114,
	81, 1114,
	82, 1114,
	85, 1114,
	86, 1114,
	87, 1114,
	88, 1114,
	90, 1114,
	92, 1114,
	93, 1114,
	94, 1114,
	95, 1114,
	97, 1114,
	99, 1114,
	100, 1114,
	108, 1114,
	109, 1114,
	110, 1114,
	111, 1114,
	113, 1114,
	114, 1114,
	115, 1114,
	117, 1114,
	118, 1114,
	119, 1114,
	121, 1114,
	122, 1114,
	124, 1114,
	125, 1114,
	126, 1114,
	129, 1114,
	130, 1114,
	131, 1114,
	133, 1114,
	134, 1114,
	136, 1114,
	137, 1114,
	138, 1114,
	140, 1114,
	141, 1114,
	142, 1114,
	143, 1114,
	144, 1114,
	145, 1114,
	146, 1114,
	147, 1114,
	148, 1114,
	149, 1114,
	150, 1114,
	151, 1114,
	152, 1114,
	153, 1114,
	154, 1114,
	156, 1114,
	162, 1114,
	163, 1114,
	164, 1114,
	165, 1114,
	169, 1114,
	171, 1114,
	175, 1114,
	176, 1114,
	177, 1114,
	178, 1114,
	179, 1114,
	180, 1114,
	182, 1114,
	183, 1114,
	185, 1114,
	186, 1114,
	188, 1114,
	189, 1114,
	190, 1114,
	191, 1114,
	192, 1114,
	193, 1114,
	194, 1114,
	195, 1114,
	196, 1114,
	198, 1114,
	199, 1114,
	201, 1114,
	202, 1114,
	203, 1114,
	204, 1114,
	208, 1114,
	209, 1114,
	210, 1114,
	211, 1114,
	214, 1114,
	215, 1114,
	216, 1114,
	218, 1114,
	220, 1114,
	221, 1114,
	223, 1114,
	225, 1114,
	226, 1114,
	227, 1114,
	229, 1114,
	233, 1114,
	234, 1114,
	235, 1114,
	236, 1114,
	237, 1114,
	238, 1114,
	240, 1114,
	241, 1114,
	242, 1114,
	244, 1114,
	245, 1114,
	247, 1114,
	248, 1114,
	251, 1114,
	252, 1114,
	253, 1114,
	256, 1114,
	257, 1114,
	258, 1114,
	259, 1114,
	261, 1114,
	262, 1114,
	263, 1114,
	264, 1114,
	265, 1114,
	266, 1114,
	267, 1114,
	268, 1114,
	269, 1114,
	270, 1114,
	271, 1114,
	273, 1114,
	275, 1114,
	276, 1114,
	277, 1114,
	278, 1114,
	279, 1114,
	280, 1114,
	281, 1114,
	283, 1114,
	285, 1114,
	287, 1114,
	289, 1114,
	290, 1114,
	291, 1114,
	292, 1114,
	293, 1114,
	296, 1114,
	300, 1114,
	301, 1114,
	302, 1114,
	305, 1114,
	306, 1114,
	307, 1114,
	309, 1114,
	311, 1114,
	312, 1114,
	313, 1114,
	314, 1114,
	315, 1114,
	316, 1114,
	317, 1114,
	318, 1114,
	319, 1114,
	320, 1114,
	321, 1114,
	322, 1114,
	324, 1114,
	325, 1114,
	326, 1114,
	327, 1114,
	328, 1114,
	329, 1114,
	330, 1114,
	331, 1114,
	332, 1114,
	334, 1114,
	336, 1114,
	337, 1114,
	338, 1114,
	339, 1114,
	340, 1114,
	341, 1114,
	342, 1114,
	343, 1114,
	344, 1114,
	345, 1114,
	346, 1114,
	348, 1114,
	354, 1114,
	356, 1114,
	357, 1114,
	358, 1114,
	359, 1114,
	360, 1114,
	361, 1114,
	362, 1114,
	363, 1114,
	365, 1114,
	366, 1114,
	367, 1114,
	369, 1114,
	370, 1114,
	371, 1114,
	372, 1114,
	373, 1114,
	374, 1114,
	376, 1114,
	377, 1114,
	378, 1114,
	379, 1114,
	380, 1114,
	381, 1114,
	382, 1114,
	383, 1114,
	384, 1114,
	385, 1114,
	386, 1114,
	388, 1114,
	389, 1114,
	390, 1114,
	391, 1114,
	392, 1114,
	393, 1114,
	395, 1114,
	396, 1114,
	397, 1114,
	398, 1114,
	399, 1114,
	401, 1114,
	402, 1114,
	403, 1114,
	404, 1114,
	405, 1114,
	406, 1114,
	407, 1114,
	409, 1114,
	411, 1114,
	412, 1114,
	413, 1114,
	414, 1114,
	415, 1114,
	416, 1114,
	417, 1114,
	418, 1114,
	419, 1114,
	420, 1114,
	421, 1114,
	422, 1114,
	423, 1114,
	425, 1114,
	426, 1114,
	428, 1114,
	430, 1114,
	431, 1114,
	432, 1114,
	433, 1114,
	434, 1114,
	435, 1114,
	436, 1114,
	437, 1114,
	439, 1114,
	440, 1114,
	441, 1114,
	442, 1114,
	443, 1114,
	445, 1114,
	447, 1114,
	448, 1114,
	449, 1114,
	450, 1114,
	451, 1114,
	453, 1114,
	454, 1114,
	455, 1114,
	457, 1114,
	458, 1114,
	461, 1114,
	462, 1114,
	463, 1114,
	464, 1114,
	465, 1114,
	466, 1114,
	467, 1114,
	469, 1114,
	472, 1114,
	473, 1114,
	474, 1114,
	475, 1114,
	476, 1114,
	477, 1114,
	479, 1114,
	480, 1114,
	481, 1114,
	486, 1114,
	487, 1114,
	488, 1114,
	489, 1114,
	490, 1114,
	491, 1114,
	-2, 0,
	-1, 835,
	338, 765,
	393, 765,
	-2, 0,
	-1, 836,
	338, 764,
	393, 764,
	-2, 708,
	-1, 840,
	1, 805,
	514, 805,
	516, 805,
	518, 805,
	-2, 0,
	-1, 841,
	1, 743,
	514, 743,
	516, 743,
	518, 743,
	-2, 0,
	-1, 842,
	1, 848,
	170, 848,
	514, 848,
	516, 848,
	518, 848,
	-2, 0,
	-1, 850,
	1, 768,
	514, 768,
	516, 768,
	518, 768,
	-2, 0,
	-1, 856,
	1, 805,
	514, 805,
	516, 805,
	518, 805,
	-2, 0,
	-1, 857,
	1, 807,
	514, 807,
	516, 807,
	518, 807,
	-2, 0,
	-1, 858,
	1, 810,
	514, 810,
	516, 810,
	518, 810,
	-2, 0,
	-1, 864,
	1, 827,
	514, 827,
	516, 827,
	518, 827,
	-2, 0,
	-1, 865,
	1, 829,
	514, 829,
	516, 829,
	518, 829,
	-2, 0,
	-1, 914,
	157, 1323,
	170, 1323,
	250, 1323,
	294, 1323,
	-2, 1261,
	-1, 929,
	157, 1322,
	170, 1322,
	250, 1322,
	294, 1322,
	-2, 1258,
	-1, 955,
	517, 1968,
	-2, 620,
	-1, 983,
	5, 1960,
	515, 1958,
	-2, 1949,
	-1, 991,
	5, 1981,
	515, 1978,
	-2, 1969,
	-1, 992,
	5, 1982,
	515, 1979,
	-2, 1970,
	-1, 1000,
	517, 1966,
	-2, 1948,
	-1, 1001,
	515, 2331,
	-2, 1967,
	-1, 1024,
	515, 2330,
	-2, 1983,
	-1, 1025,
	5, 1488,
	-2, 2301,
	-1, 1026,
	5, 1489,
	-2, 2302,
	-1, 1027,
	5, 1490,
	-2, 2316,
	-1, 1028,
	5, 1491,
	-2, 2280,
	-1, 1029,
	5, 1492,
	-2, 2314,
	-1, 1030,
	5, 1500,
	-2, 2293,
	-1, 1031,
	5, 1487,
	-2, 2289,
	-1, 1032,
	5, 1487,
	-2, 2288,
	-1, 1033,
	5, 1487,
	-2, 2307,
	-1, 1034,
	5, 1498,
	-2, 2282,
	-1, 1035,
	5, 1503,
	-2, 2281,
	-1, 1036,
	5, 1505,
	-2, 2326,
	-1, 1039,
	5, 1527,
	-2, 2319,
	-1, 1040,
	5, 1519,
	-2, 2320,
	-1, 1041,
	5, 1527,
	-2, 2321,
	-1, 1042,
	5, 1523,
	-2, 2322,
	-1, 1043,
	5, 1473,
	-2, 2294,
	-1, 1044,
	5, 1474,
	-2, 2295,
	-1, 1045,
	5, 1475,
	-2, 2283,
	-1, 1072,
	5, 1510,
	-2, 2327,
	-1, 1073,
	5, 1511,
	-2, 2317,
	-1, 1074,
	5, 1512,
	480, 1512,
	-2, 2284,
	-1, 1075,
	5, 1513,
	480, 1513,
	-2, 2285,
	-1, 1112,
	515, 1978,
	-2, 1969,
	-1, 1113,
	515, 1979,
	-2, 1970,
	-1, 1143,
	173, 2252,
	444, 2252,
	498, 2252,
	517, 2252,
	-2, 0,
	-1, 1146,
	1, 598,
	518, 598,
	-2, 1196,
	-1, 1271,
	356, 1944,
	395, 1944,
	508, 1944,
	-2, 1942,
	-1, 1283,
	519, 1944,
	-2, 1945,
	-1, 1290,
	1, 1090,
	514, 1090,
	516, 1090,
	518, 1090,
	-2, 1310,
	-1, 1344,
	344, 910,
	479, 910,
	-2, 334,
	-1, 1365,
	1, 1090,
	514, 1090,
	516, 1090,
	518, 1090,
	-2, 1310,
	-1, 1372,
	4, 1114,
	21, 1114,
	22, 1114,
	23, 1114,
	24, 1114,
	25, 1114,
	26, 1114,
	28, 1114,
	29, 1114,
	35, 1114,
	40, 1114,
	41, 1114,
	42, 1114,
	43, 1114,
	44, 1114,
	45, 1114,
	46, 1114,
	47, 1114,
	48, 1114,
	49, 1114,
	51, 1114,
	52, 1114,
	53, 1114,
	54, 1114,
	56, 1114,
	57, 1114,
	58, 1114,
	59, 1114,
	60, 1114,
	61, 1114,
	65, 1114,
	66, 1114,
	67, 1114,
	68, 1114,
	70, 1114,
	71, 1114,
	72, 1114,
	76, 1114,
	77, 1114,
	78, 1114,
	79, 1114,
	80, 1114,
	81, 1114,
	82, 1114,
	85, 1114,
	86, 1114,
	87, 1114,
	88, 1114,
	90, 1114,
	92, 1114,
	93, 1114,
	94, 1114,
	95, 1114,
	97, 1114,
	99, 1114,
	100, 1114,
	108, 1114,
	109, 1114,
	110, 1114,
	111, 1114,
	113, 1114,
	114, 1114,
	115, 1114,
	117, 1114,
	118, 1114,
	119, 1114,
	121, 1114,
	122, 1114,
	124, 1114,
	125, 1114,
	126, 1114,
	129, 1114,
	130, 1114,
	131, 1114,
	133, 1114,
	134, 1114,
	136, 1114,
	137, 1114,
	138, 1114,
	140, 1114,
	141, 1114,
	142, 1114,
	143, 1114,
	144, 1114,
	145, 1114,
	146, 1114,
	147, 1114,
	148, 1114,
	149, 1114,
	150, 1114,
	151, 1114,
	152, 1114,
	153, 1114,
	154, 1114,
	162, 1114,
	163, 1114,
	164, 1114,
	165, 1114,
	169, 1114,
	171, 1114,
	175, 1114,
	176, 1114,
	177, 1114,
	178, 1114,
	179, 1114,
	180, 1114,
	182, 1114,
	183, 1114,
	185, 1114,
	186, 1114,
	188, 1114,
	189, 1114,
	190, 1114,
	191, 1114,
	192, 1114,
	193, 1114,
	194, 1114,
	195, 1114,
	196, 1114,
	198, 1114,
	199, 1114,
	201, 1114,
	202, 1114,
	203, 1114,
	204, 1114,
	209, 1114,
	210, 1114,
	211, 1114,
	214, 1114,
	215, 1114,
	216, 1114,
	218, 1114,
	220, 1114,
	221, 1114,
	223, 1114,
	225, 1114,
	226, 1114,
	227, 1114,
	229, 1114,
	233, 1114,
	234, 1114,
	235, 1114,
	236, 1114,
	237, 1114,
	238, 1114,
	240, 1114,
	241, 1114,
	242, 1114,
	244, 1114,
	245, 1114,
	247, 1114,
	248, 1114,
	251, 1114,
	252, 1114,
	253, 1114,
	256, 1114,
	257, 1114,
	258, 1114,
	259, 1114,
	261, 1114,
	262, 1114,
	263, 1114,
	264, 1114,
	265, 1114,
	266, 1114,
	267, 1114,
	268, 1114,
	269, 1114,
	270, 1114,
	271, 1114,
	273, 1114,
	275, 1114,
	276, 1114,
	277, 1114,
	278, 1114,
	279, 1114,
	280, 1114,
	281, 1114,
	283, 1114,
	287, 1114,
	289, 1114,
	290, 1114,
	291, 1114,
	292, 1114,
	293, 1114,
	296, 1114,
	298, 1114,
	300, 1114,
	301, 1114,
	302, 1114,
	305, 1114,
	306, 1114,
	307, 1114,
	309, 1114,
	311, 1114,
	312, 1114,
	313, 1114,
	314, 1114,
	315, 1114,
	316, 1114,
	317, 1114,
	318, 1114,
	319, 1114,
	320, 1114,
	321, 1114,
	322, 1114,
	324, 1114,
	325, 1114,
	326, 1114,
	327, 1114,
	328, 1114,
	329, 1114,
	330, 1114,
	331, 1114,
	332, 1114,
	334, 1114,
	336, 1114,
	337, 1114,
	338, 1114,
	339, 1114,
	340, 1114,
	341, 1114,
	342, 1114,
	343, 1114,
	344, 1114,
	345, 1114,
	346, 1114,
	348, 1114,
	354, 1114,
	356, 1114,
	357, 1114,
	358, 1114,
	359, 1114,
	360, 1114,
	361, 1114,
	362, 1114,
	363, 1114,
	365, 1114,
	366, 1114,
	367, 1114,
	369, 1114,
	370, 1114,
	371, 1114,
	372, 1114,
	373, 1114,
	374, 1114,
	376, 1114,
	377, 1114,
	378, 1114,
	379, 1114,
	380, 1114,
	381, 1114,
	382, 1114,
	383, 1114,
	384, 1114,
	385, 1114,
	386, 1114,
	388, 1114,
	389, 1114,
	390, 1114,
	391, 1114,
	392, 1114,
	393, 1114,
	395, 1114,
	396, 1114,
	397, 1114,
	398, 1114,
	399, 1114,
	401, 1114,
	402, 1114,
	403, 1114,
	404, 1114,
	405, 1114,
	406, 1114,
	407, 1114,
	409, 1114,
	411, 1114,
	412, 1114,
	413, 1114,
	414, 1114,
	415, 1114,
	416, 1114,
	417, 1114,
	418, 1114,
	419, 1114,
	420, 1114,
	421, 1114,
	422, 1114,
	423, 1114,
	425, 1114,
	426, 1114,
	428, 1114,
	430, 1114,
	431, 1114,
	432, 1114,
	433, 1114,
	434, 1114,
	435, 1114,
	436, 1114,
	437, 1114,
	439, 1114,
	440, 1114,
	441, 1114,
	442, 1114,
	443, 1114,
	445, 1114,
	447, 1114,
	448, 1114,
	449, 1114,
	450, 1114,
	451, 1114,
	453, 1114,
	454, 1114,
	455, 1114,
	457, 1114,
	458, 1114,
	461, 1114,
	462, 1114,
	463, 1114,
	464, 1114,
	465, 1114,
	466, 1114,
	467, 1114,
	469, 1114,
	472, 1114,
	473, 1114,
	474, 1114,
	475, 1114,
	476, 1114,
	477, 1114,
	479, 1114,
	480, 1114,
	481, 1114,
	486, 1114,
	487, 1114,
	488, 1114,
	489, 1114,
	490, 1114,
	491, 1114,
	-2, 0,
	-1, 1445,
	1, 473,
	514, 473,
	516, 473,
	518, 473,
	-2, 1281,
	-1, 1448,
	4, 2325,
	11, 2325,
	12, 2325,
	14, 2325,
	15, 2325,
	16, 2325,
	17, 2325,
	18, 2325,
	19, 2325,
	21, 2325,
	22, 2325,
	23, 2325,
	24, 2325,
	25, 2325,
	26, 2325,
	28, 2325,
	29, 2325,
	32, 2325,
	33, 2325,
	35, 2325,
	37, 2325,
	40, 2325,
	41, 2325,
	42, 2325,
	43, 2325,
	44, 2325,
	45, 2325,
	46, 2325,
	47, 2325,
	48, 2325,
	49, 2325,
	51, 2325,
	52, 2325,
	53, 2325,
	54, 2325,
	56, 2325,
	57, 2325,
	58, 2325,
	59, 2325,
	60, 2325,
	61, 2325,
	65, 2325,
	66, 2325,
	67, 2325,
	68, 2325,
	70, 2325,
	71, 2325,
	72, 2325,
	73, 2325,
	76, 2325,
	77, 2325,
	78, 2325,
	79, 2325,
	80, 2325,
	81, 2325,
	82, 2325,
	83, 2325,
	85, 2325,
	86, 2325,
	87, 2325,
	88, 2325,
	90, 2325,
	91, 2325,
	92, 2325,
	93, 2325,
	94, 2325,
	95, 2325,
	97, 2325,
	98, 2325,
	99, 2325,
	100, 2325,
	108, 2325,
	109, 2325,
	110, 2325,
	111, 2325,
	113, 2325,
	114, 2325,
	115, 2325,
	117, 2325,
	118, 2325,
	119, 2325,
	121, 2325,
	122, 2325,
	124, 2325,
	125, 2325,
	126, 2325,
	129, 2325,
	130, 2325,
	131, 2325,
	133, 2325,
	134, 2325,
	136, 2325,
	137, 2325,
	138, 2325,
	140, 2325,
	141, 2325,
	142, 2325,
	143, 2325,
	144, 2325,
	145, 2325,
	146, 2325,
	147, 2325,
	148, 2325,
	149, 2325,
	150, 2325,
	151, 2325,
	152, 2325,
	153, 2325,
	154, 2325,
	158, 2325,
	159, 2325,
	160, 2325,
	161, 2325,
	162, 2325,
	163, 2325,
	164, 2325,
	165, 2325,
	168, 2325,
	169, 2325,
	171, 2325,
	174, 2325,
	175, 2325,
	176, 2325,
	177, 2325,
	178, 2325,
	179, 2325,
	180, 2325,
	182, 2325,
	183, 2325,
	185, 2325,
	186, 2325,
	188, 2325,
	189, 2325,
	190, 2325,
	191, 2325,
	192, 2325,
	193, 2325,
	194, 2325,
	195, 2325,
	196, 2325,
	197, 2325,
	198, 2325,
	199, 2325,
	200, 2325,
	201, 2325,
	202, 2325,
	203, 2325,
	204, 2325,
	206, 2325,
	207, 2325,
	209, 2325,
	210, 2325,
	211, 2325,
	213, 2325,
	214, 2325,
	215, 2325,
	216, 2325,
	218, 2325,
	220, 2325,
	221, 2325,
	222, 2325,
	223, 2325,
	224, 2325,
	225, 2325,
	226, 2325,
	227, 2325,
	228, 2325,
	229, 2325,
	231, 2325,
	232, 2325,
	233, 2325,
	234, 2325,
	235, 2325,
	236, 2325,
	237, 2325,
	238, 2325,
	240, 2325,
	241, 2325,
	242, 2325,
	244, 2325,
	245, 2325,
	246, 2325,
	247, 2325,
	248, 2325,
	249, 2325,
	251, 2325,
	252, 2325,
	253, 2325,
	256, 2325,
	257, 2325,
	258, 2325,
	259, 2325,
	260, 2325,
	261, 2325,
	262, 2325,
	263, 2325,
	264, 2325,
	265, 2325,
	266, 2325,
	267, 2325,
	268, 2325,
	269, 2325,
	270, 2325,
	271, 2325,
	273, 2325,
	274, 2325,
	275, 2325,
	276, 2325,
	277, 2325,
	278, 2325,
	279, 2325,
	280, 2325,
	281, 2325,
	283, 2325,
	286, 2325,
	287, 2325,
	289, 2325,
	290, 2325,
	291, 2325,
	292, 2325,
	293, 2325,
	296, 2325,
	300, 2325,
	301, 2325,
	302, 2325,
	303, 2325,
	305, 2325,
	306, 2325,
	307, 2325,
	309, 2325,
	311, 2325,
	312, 2325,
	313, 2325,
	314, 2325,
	315, 2325,
	316, 2325,
	317, 2325,
	318, 2325,
	319, 2325,
	320, 2325,
	321, 2325,
	322, 2325,
	324, 2325,
	325, 2325,
	326, 2325,
	327, 2325,
	328, 2325,
	329, 2325,
	330, 2325,
	331, 2325,
	332, 2325,
	334, 2325,
	336, 2325,
	337, 2325,
	338, 2325,
	339, 2325,
	340, 2325,
	341, 2325,
	342, 2325,
	343, 2325,
	344, 2325,
	345, 2325,
	346, 2325,
	348, 2325,
	354, 2325,
	355, 2325,
	356, 2325,
	357, 2325,
	358, 2325,
	359, 2325,
	360, 2325,
	361, 2325,
	362, 2325,
	363, 2325,
	365, 2325,
	366, 2325,
	367, 2325,
	368, 2325,
	369, 2325,
	370, 2325,
	371, 2325,
	372, 2325,
	373, 2325,
	374, 2325,
	375, 2325,
	376, 2325,
	377, 2325,
	378, 2325,
	379, 2325,
	380, 2325,
	381, 2325,
	382, 2325,
	383, 2325,
	384, 2325,
	385, 2325,
	386, 2325,
	388, 2325,
	389, 2325,
	390, 2325,
	391, 2325,
	392, 2325,
	393, 2325,
	395, 2325,
	396, 2325,
	397, 2325,
	398, 2325,
	399, 2325,
	400, 2325,
	401, 2325,
	402, 2325,
	403, 2325,
	404, 2325,
	405, 2325,
	406, 2325,
	407, 2325,
	409, 2325,
	411, 2325,
	412, 2325,
	413, 2325,
	414, 2325,
	415, 2325,
	416, 2325,
	417, 2325,
	418, 2325,
	419, 2325,
	420, 2325,
	421, 2325,
	422, 2325,
	423, 2325,
	425, 2325,
	426, 2325,
	428, 2325,
	430, 2325,
	431, 2325,
	432, 2325,
	433, 2325,
	434, 2325,
	435, 2325,
	436, 2325,
	437, 2325,
	439, 2325,
	440, 2325,
	441, 2325,
	442, 2325,
	443, 2325,
	445, 2325,
	447, 2325,
	448, 2325,
	449, 2325,
	450, 2325,
	451, 2325,
	453, 2325,
	454, 2325,
	455, 2325,
	457, 2325,
	458, 2325,
	461, 2325,
	462, 2325,
	463, 2325,
	464, 2325,
	465, 2325,
	466, 2325,
	467, 2325,
	469, 2325,
	472, 2325,
	473, 2325,
	474, 2325,
	475, 2325,
	476, 2325,
	477, 2325,
	479, 2325,
	480, 2325,
	481, 2325,
	486, 2325,
	487, 2325,
	488, 2325,
	489, 2325,
	490, 2325,
	491, 2325,
	492, 2325,
	493, 2325,
	496, 2325,
	497, 2325,
	498, 2325,
	499, 2325,
	500, 2325,
	501, 2325,
	503, 2325,
	504, 2325,
	505, 2325,
	506, 2325,
	507, 2325,
	508, 2325,
	509, 2325,
	510, 2325,
	511, 2325,
	513, 2325,
	516, 2325,
	517, 2325,
	519, 2325,
	520, 2325,
	-2, 0,
	-1, 1453,
	173, 2218,
	444, 2218,
	498, 2218,
	517, 2218,
	-2, 0,
	-1, 1502,
	338, 765,
	393, 765,
	-2, 0,
	-1, 1527,
	1, 760,
	514, 760,
	516, 760,
	518, 760,
	-2, 0,
	-1, 1528,
	1, 796,
	514, 796,
	516, 796,
	518, 796,
	-2, 0,
	-1, 1529,
	1, 767,
	514, 767,
	516, 767,
	518, 767,
	-2, 0,
	-1, 1531,
	1, 771,
	514, 771,
	516, 771,
	518, 771,
	-2, 0,
	-1, 1537,
	1, 778,
	514, 778,
	516, 778,
	518, 778,
	-2, 0,
	-1, 1565,
	1, 2272,
	514, 2272,
	516, 2272,
	517, 2272,
	518, 2272,
	-2, 825,
	-1, 1566,
	1, 2215,
	514, 2215,
	516, 2215,
	517, 2215,
	518, 2215,
	-2, 826,
	-1, 1581,
	1, 1191,
	518, 1191,
	-2, 1196,
	-1, 1584,
	157, 1322,
	170, 1322,
	250, 1322,
	294, 1322,
	-2, 1262,
	-1, 1678,
	139, 1283,
	157, 1283,
	170, 1283,
	217, 1283,
	250, 1283,
	294, 1283,
	304, 1283,
	459, 1283,
	-2, 1688,
	-1, 1738,
	516, 1838,
	-2, 0,
	-1, 1773,
	139, 1283,
	157, 1283,
	170, 1283,
	217, 1283,
	250, 1283,
	294, 1283,
	304, 1283,
	459, 1283,
	-2, 1403,
	-1, 1821,
	515, 1515,
	-2, 1503,
	-1, 1857,
	1, 600,
	518, 600,
	-2, 1196,
	-1, 2092,
	1, 762,
	514, 762,
	516, 762,
	518, 762,
	-2, 0,
	-1, 2093,
	1, 798,
	514, 798,
	516, 798,
	518, 798,
	-2, 0,
	-1, 2123,
	1, 780,
	514, 780,
	516, 780,
	518, 780,
	-2, 0,
	-1, 2169,
	373, 1349,
	374, 1349,
	-2, 1548,
	-1, 2200,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1568,
	-1, 2201,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1569,
	-1, 2202,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1570,
	-1, 2203,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1571,
	-1, 2204,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1572,
	-1, 2205,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1573,
	-1, 2206,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1574,
	-1, 2207,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1575,
	-1, 2219,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1587,
	-1, 2220,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1588,
	-1, 2221,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1589,
	-1, 2224,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1594,
	-1, 2230,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1598,
	-1, 2232,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1606,
	-1, 2233,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1607,
	-1, 2234,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1608,
	-1, 2235,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1609,
	-1, 2347,
	5, 1981,
	173, 1849,
	515, 1978,
	-2, 1969,
	-1, 2348,
	173, 1850,
	-2, 2276,
	-1, 2349,
	173, 1851,
	-2, 2132,
	-1, 2350,
	173, 1852,
	-2, 2042,
	-1, 2351,
	173, 1853,
	-2, 2086,
	-1, 2352,
	173, 1854,
	-2, 2127,
	-1, 2353,
	173, 1855,
	-2, 2213,
	-1, 2354,
	173, 1856,
	-2, 1671,
	-1, 2423,
	1, 1404,
	2, 1404,
	98, 1404,
	139, 1404,
	157, 1404,
	170, 1404,
	174, 1404,
	184, 1404,
	187, 1404,
	213, 1404,
	217, 1404,
	228, 1404,
	246, 1404,
	250, 1404,
	274, 1404,
	294, 1404,
	298, 1404,
	304, 1404,
	364, 1404,
	368, 1404,
	459, 1404,
	470, 1404,
	483, 1404,
	484, 1404,
	485, 1404,
	494, 1404,
	514, 1404,
	516, 1404,
	518, 1404,
	520, 1404,
	-2, 1403,
	-1, 2436,
	515, 1950,
	-2, 1964,
	-1, 2438,
	1, 271,
	-2, 1310,
	-1, 2462,
	515, 1514,
	-2, 1504,
	-1, 2584,
	1, 1090,
	514, 1090,
	516, 1090,
	518, 1090,
	-2, 1310,
	-1, 2755,
	299, 1352,
	-2, 2315,
	-1, 2756,
	299, 1353,
	-2, 2199,
	-1, 2760,
	373, 1915,
	374, 1915,
	-2, 1669,
	-1, 2761,
	373, 1919,
	374, 1919,
	-2, 1670,
	-1, 2762,
	373, 1916,
	374, 1916,
	-2, 1669,
	-1, 2763,
	373, 1920,
	374, 1920,
	-2, 1670,
	-1, 2776,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1596,
	-1, 2777,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1600,
	-1, 2783,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1602,
	-1, 2983,
	225, 1196,
	334, 1196,
	342, 1196,
	494, 1196,
	-2, 597,
	-1, 3114,
	1, 1090,
	514, 1090,
	516, 1090,
	518, 1090,
	-2, 1310,
	-1, 3222,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1604,
	-1, 3229,
	222, 0,
	224, 0,
	286, 0,
	-2, 1623,
	-1, 3296,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1652,
	-1, 3297,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1653,
	-1, 3298,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1654,
	-1, 3302,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1658,
	-1, 3303,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1659,
	-1, 3304,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1660,
	-1, 3350,
	515, 1951,
	-2, 1965,
	-1, 3481,
	517, 2431,
	-2, 1240,
	-1, 3539,
	222, 0,
	224, 0,
	286, 0,
	-2, 1624,
	-1, 3542,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1627,
	-1, 3543,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1629,
	-1, 3751,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1628,
	-1, 3752,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1630,
	-1, 3763,
	222, 0,
	-2, 1661,
	-1, 3912,
	222, 0,
	-2, 1662,
	-1, 4062,
	48, 0,
	197, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 2279,
}

const sqlPrivate = 57344

const sqlLast = 105578

var sqlAct = [...]int{

	242, 3955, 3798, 3795, 2674, 3676, 3934, 2910, 4072, 4061,
	4170, 4036, 4017, 4030, 3099, 4020, 4073, 3378, 4002, 4120,
	4074, 2644, 3261, 3840, 3783, 3847, 3100, 3916, 1116, 2911,
	3708, 2061, 3703, 3659, 3522, 1310, 4060, 939, 2179, 1436,
	3001, 3131, 3473, 3740, 3856, 3690, 3416, 3713, 2070, 3879,
	3608, 2045, 1808, 3126, 2247, 930, 2497, 3095, 3124, 3450,
	1468, 3433, 2559, 1293, 1593, 1910, 1431, 3085, 3435, 3214,
	671, 2769, 2187, 636, 3379, 1175, 1779, 2180, 2683, 3177,
	2633, 3768, 2379, 3179, 2696, 2615, 2606, 1268, 2006, 3352,
	1105, 2953, 2933, 2925, 671, 2685, 2893, 1510, 3521, 2693,
	2068, 2628, 3578, 2676, 2630, 2682, 2914, 1748, 2645, 1958,
	994, 1959, 3321, 2184, 2416, 2291, 1920, 2415, 1686, 2892,
	770, 2499, 2536, 1276, 3917, 938, 163, 2043, 2260, 1467,
	2916, 2418, 1953, 1944, 2753, 987, 37, 1724, 2573, 3841,
	666, 3020, 1096, 4, 1159, 1937, 1893, 101, 2289, 2616,
	1581, 236, 1896, 2960, 1749, 235, 2397, 2280, 2692, 1037,
	2168, 985, 1883, 2244, 983, 2151, 1446, 2149, 3097, 1432,
	2448, 990, 1422, 1995, 1809, 2535, 992, 2638, 672, 588,
	1435, 1273, 1363, 610, 673, 1148, 2686, 2488, 602, 2447,
	2283, 1719, 1099, 1768, 2405, 1758, 2387, 2261, 1078, 2343,
	2333, 1671, 1594, 1595, 1295, 172, 618, 1537, 2150, 668,
	2376, 1113, 163, 1994, 1444, 2152, 630, 2018, 743, 1305,
	1387, 677, 173, 716, 1909, 680, 2173, 968, 605, 42,
	764, 41, 39, 829, 1411, 30, 1076, 28, 1101, 2804,
	26, 613, 1600, 1580, 1316, 677, 848, 1608, 1609, 680,
	1641, 1642, 1643, 1651, 1652, 1653, 3335, 2800, 3336, 2912,
	2034, 934, 3141, 2034, 2034, 2034, 2034, 2981, 1644, 1639,
	2389, 1765, 934, 4233, 1095, 4227, 1611, 2396, 4212, 3158,
	2449, 4211, 2396, 4187, 1657, 2396, 4185, 3624, 4181, 4102,
	3624, 4096, 1969, 4103, 4094, 2396, 3140, 1132, 2396, 3158,
	4091, 2032, 2641, 785, 4092, 2865, 2866, 4088, 4083, 1610,
	4058, 4089, 1969, 989, 1969, 1969, 4057, 4056, 2768, 1630,
	1969, 2054, 935, 765, 4051, 4050, 4045, 1627, 2054, 2054,
	3624, 2396, 4043, 4015, 1079, 1079, 3624, 3624, 3996, 3989,
	3988, 1093, 2453, 2396, 2396, 1156, 3983, 3997, 3909, 68,
	3624, 768, 767, 3982, 3976, 3948, 3914, 3624, 1969, 3668,
	2453, 1156, 3896, 3893, 3897, 69, 3510, 1969, 966, 915,
	3890, 2069, 3849, 3815, 3624, 1111, 3850, 1969, 2054, 3814,
	1127, 73, 1108, 1969, 1530, 3325, 914, 3325, 1082, 234,
	1083, 2865, 2866, 2388, 1633, 1634, 1635, 1636, 3806, 3805,
	3702, 3668, 1969, 3624, 1616, 924, 3774, 3753, 3732, 3644,
	1969, 2453, 2054, 929, 3721, 3654, 3643, 79, 3158, 2396,
	2396, 3623, 3541, 3489, 3483, 3624, 2453, 3174, 3174, 1969,
	3448, 3345, 2813, 1648, 3449, 3346, 1658, 3343, 2814, 3510,
	1080, 3344, 1638, 1640, 3328, 3245, 3241, 3173, 2396, 1969,
	2396, 3174, 85, 3165, 2286, 2909, 1128, 3166, 1654, 2396,
	1655, 3166, 2871, 2880, 1608, 1609, 100, 1625, 1626, 2904,
	2903, 86, 97, 2396, 2396, 2856, 2854, 2396, 2846, 2857,
	2855, 2550, 2847, 2844, 2487, 1646, 1639, 2396, 2803, 1914,
	2815, 2699, 1863, 1611, 2396, 2054, 1631, 2672, 2033, 2865,
	2866, 2057, 2883, 2884, 2885, 2671, 2472, 2452, 2445, 2057,
	2396, 2453, 2396, 2612, 2439, 2395, 1608, 1609, 1969, 2396,
	87, 2056, 1656, 2049, 1107, 2057, 1610, 1968, 2567, 2485,
	1744, 1304, 2287, 3408, 1608, 1609, 3217, 3195, 1639, 1645,
	208, 1766, 1947, 3142, 1512, 1611, 2432, 2431, 2871, 2430,
	2429, 2428, 1318, 1084, 2881, 208, 1639, 1081, 1608, 1609,
	923, 2035, 3143, 1611, 2035, 2035, 2035, 2035, 922, 921,
	920, 2880, 919, 208, 918, 917, 2733, 3594, 1610, 1109,
	1639, 913, 210, 912, 911, 910, 909, 1611, 1630, 908,
	907, 1637, 906, 1480, 1466, 905, 1610, 210, 904, 903,
	902, 901, 900, 899, 898, 897, 879, 2288, 2285, 3140,
	827, 1632, 1309, 826, 1128, 210, 825, 2388, 824, 823,
	1610, 1616, 822, 821, 820, 819, 1309, 818, 209, 817,
	816, 815, 814, 813, 812, 992, 1649, 811, 202, 992,
	2881, 90, 3553, 209, 1128, 810, 203, 809, 808, 807,
	806, 805, 1476, 804, 1178, 803, 2871, 802, 1178, 1638,
	1640, 209, 1298, 1633, 1634, 1635, 1636, 801, 174, 2882,
	800, 202, 1158, 1616, 799, 798, 1163, 788, 787, 203,
	1152, 171, 93, 174, 96, 783, 992, 782, 992, 776,
	992, 1616, 775, 734, 733, 1298, 693, 692, 691, 683,
	682, 2640, 681, 650, 2865, 2866, 642, 641, 208, 640,
	1279, 1638, 1640, 1631, 624, 1616, 769, 3361, 1298, 2660,
	136, 2316, 2033, 2052, 2049, 2144, 1284, 2290, 1647, 1638,
	1640, 230, 1622, 1623, 1629, 1650, 1628, 1624, 229, 1621,
	1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 2881, 228,
	210, 227, 1308, 1638, 1640, 2882, 3561, 226, 225, 224,
	223, 1298, 992, 222, 1330, 1631, 221, 1298, 86, 208,
	220, 1298, 219, 218, 138, 217, 216, 215, 214, 992,
	213, 992, 1146, 1631, 1462, 1298, 1369, 1371, 175, 212,
	211, 992, 3339, 992, 3175, 1171, 209, 1265, 1270, 2875,
	2867, 2868, 2869, 2870, 2872, 2873, 202, 1631, 2956, 2826,
	2907, 210, 2809, 2593, 203, 1727, 1727, 2457, 2437, 1769,
	1318, 1726, 1726, 1315, 2422, 1322, 677, 1328, 1632, 1891,
	680, 2284, 2908, 1317, 1324, 1298, 766, 1443, 2624, 2302,
	2300, 1287, 1607, 1730, 1725, 3900, 1141, 1792, 1697, 1312,
	2064, 1165, 992, 1307, 1115, 992, 2466, 209, 4079, 1306,
	1637, 2871, 1688, 2882, 1532, 4059, 3962, 202, 3906, 3767,
	3898, 3722, 3717, 3793, 3701, 203, 3601, 3576, 1608, 1609,
	1632, 3575, 3569, 2876, 2874, 2875, 2867, 2868, 2869, 2870,
	2872, 2873, 3568, 163, 163, 3567, 1359, 174, 1632, 1442,
	3560, 3559, 2865, 2866, 1374, 3557, 3552, 1611, 3549, 3548,
	3453, 1449, 1451, 3447, 935, 1481, 1460, 3365, 1465, 3364,
	3363, 3406, 1632, 3349, 3316, 2865, 2866, 2063, 1474, 1428,
	1479, 3315, 1152, 3314, 3237, 1152, 3233, 3169, 2951, 1425,
	1610, 2900, 2891, 2864, 2861, 992, 992, 992, 992, 992,
	992, 992, 1318, 2881, 1546, 1329, 1621, 1619, 1620, 1612,
	1613, 1614, 1615, 1617, 1618, 2860, 2858, 2853, 2852, 1695,
	1585, 1447, 2851, 2848, 2845, 2825, 992, 2808, 208, 208,
	2801, 2673, 992, 2423, 2877, 2878, 2879, 1531, 2273, 1416,
	1419, 2876, 2874, 2875, 2867, 2868, 2869, 2870, 2872, 2873,
	1607, 1318, 1689, 2009, 1687, 208, 1092, 1390, 1621, 1619,
	1620, 1612, 1613, 1614, 1615, 1617, 1618, 136, 1976, 1974,
	210, 210, 1688, 1579, 1461, 1323, 1606, 1619, 1620, 1612,
	1613, 1614, 1615, 1617, 1618, 1616, 1475, 208, 2973, 2865,
	2866, 4226, 2626, 4179, 4178, 1271, 3454, 210, 1283, 1286,
	1677, 4112, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 2871,
	4110, 4101, 3778, 2905, 1486, 1117, 209, 209, 2882, 3263,
	3954, 3944, 3941, 3940, 937, 3939, 202, 202, 3933, 210,
	3926, 3894, 2871, 1503, 203, 203, 992, 992, 992, 3716,
	3878, 3877, 992, 209, 2250, 1533, 2865, 2866, 3865, 1113,
	3862, 1113, 3811, 202, 3789, 3765, 174, 174, 1746, 1286,
	1286, 203, 3748, 3747, 3729, 3728, 1178, 3693, 3669, 3918,
	2948, 3593, 3574, 935, 992, 209, 3511, 671, 3505, 3454,
	1582, 1826, 671, 174, 3502, 202, 3396, 3395, 2555, 1590,
	3382, 992, 3381, 203, 915, 1298, 1589, 3331, 1286, 208,
	3319, 2881, 3228, 1795, 1584, 1675, 3176, 3159, 3117, 1586,
	992, 914, 3058, 1805, 2256, 174, 1178, 3033, 1851, 208,
	3004, 3003, 2975, 1800, 1755, 1603, 1604, 2830, 2829, 1729,
	2824, 2792, 2605, 1733, 1732, 1731, 2521, 1608, 1609, 1728,
	1720, 210, 1152, 1718, 1752, 1753, 2871, 1889, 2464, 2867,
	2868, 2869, 2870, 2872, 2873, 2463, 1802, 2434, 1860, 1079,
	2427, 210, 1854, 2394, 2298, 1791, 1611, 2625, 208, 208,
	1747, 1742, 208, 1855, 1721, 1722, 1741, 1740, 163, 1739,
	1738, 1776, 1737, 1736, 3696, 2315, 1735, 209, 1734, 1783,
	1715, 1820, 1714, 1713, 3004, 1712, 1711, 202, 935, 1610,
	1710, 1709, 1708, 2871, 1707, 203, 1798, 209, 1706, 1705,
	210, 210, 1704, 1111, 210, 1111, 2882, 202, 1703, 2065,
	1108, 1702, 1108, 1701, 1690, 203, 1676, 174, 677, 1674,
	1880, 208, 680, 677, 1669, 1799, 1140, 680, 2881, 1130,
	1823, 1123, 1814, 1774, 1857, 1777, 3599, 174, 3597, 3545,
	1796, 3360, 3342, 1298, 1298, 3334, 209, 209, 1853, 2812,
	209, 1902, 2455, 1178, 1745, 2425, 202, 202, 3359, 1689,
	202, 2971, 1672, 210, 203, 203, 3646, 1787, 203, 208,
	3036, 4176, 1786, 3901, 1785, 1784, 1803, 1771, 1782, 1934,
	1781, 1849, 1936, 1780, 4169, 1941, 174, 174, 3942, 3127,
	174, 3852, 1162, 2301, 2299, 3851, 3720, 1806, 3899, 1608,
	1609, 2865, 2866, 1964, 1966, 1882, 3671, 1882, 1767, 209,
	1882, 210, 3670, 1612, 1613, 1614, 1615, 1617, 1618, 202,
	3645, 1639, 3596, 3514, 1885, 1875, 3792, 203, 1611, 3857,
	3513, 1710, 1710, 3512, 2876, 2874, 2875, 2867, 2868, 2869,
	2870, 2872, 2873, 2882, 1608, 1609, 1161, 3337, 1160, 174,
	3161, 3160, 1107, 1153, 1107, 1156, 1769, 209, 1919, 1945,
	2540, 1610, 2869, 2870, 2872, 2873, 1727, 202, 3457, 1577,
	3394, 1630, 1726, 1611, 1547, 203, 2850, 1156, 1156, 1627,
	2849, 2774, 2523, 1157, 1962, 895, 1858, 3102, 4055, 3101,
	1999, 1298, 2062, 1298, 1699, 1298, 677, 174, 1511, 208,
	680, 2084, 3848, 4099, 4084, 4071, 1610, 1109, 3086, 1109,
	2697, 1298, 1298, 1512, 1869, 2004, 1960, 3413, 3399, 1696,
	3192, 2010, 1298, 1307, 3769, 896, 2015, 3093, 2912, 1306,
	3265, 2281, 4080, 1502, 1298, 2462, 1298, 1298, 1298, 1743,
	2818, 210, 1723, 2003, 1940, 1147, 1633, 1634, 1635, 1636,
	2071, 1283, 1415, 1368, 1301, 1135, 1616, 671, 4093, 1091,
	4090, 2023, 1154, 3136, 1967, 3373, 2083, 943, 3935, 3704,
	1155, 4014, 2874, 2875, 2867, 2868, 2869, 2870, 2872, 2873,
	2561, 3080, 2985, 3923, 2972, 2012, 3007, 209, 3389, 1490,
	2680, 1914, 4081, 2637, 1638, 1640, 4137, 202, 4136, 3209,
	2564, 1616, 3831, 3634, 1987, 203, 1874, 1873, 1986, 1336,
	1882, 1884, 3975, 2088, 2473, 4221, 2491, 1302, 2067, 1625,
	1626, 3824, 3817, 3667, 893, 3422, 3421, 174, 891, 3415,
	2489, 2867, 2868, 2869, 2870, 2872, 2873, 992, 935, 992,
	935, 2072, 2017, 2021, 889, 1545, 992, 887, 1631, 1826,
	1826, 1178, 2129, 992, 992, 992, 992, 992, 992, 992,
	992, 992, 992, 992, 992, 992, 992, 992, 992, 992,
	992, 992, 992, 992, 992, 992, 992, 992, 992, 992,
	992, 992, 992, 992, 992, 992, 992, 992, 1162, 992,
	2037, 992, 992, 992, 992, 1447, 1390, 1447, 2020, 2161,
	2020, 2148, 2025, 2026, 1870, 2058, 2076, 2059, 677, 1153,
	1141, 729, 680, 992, 3035, 875, 992, 992, 1877, 1162,
	884, 3412, 1156, 2491, 992, 3426, 1346, 1618, 992, 2127,
	992, 992, 3410, 3370, 3369, 3083, 2075, 2489, 1178, 2967,
	2823, 2822, 1161, 1637, 992, 992, 992, 992, 2821, 992,
	992, 992, 992, 992, 992, 992, 992, 1488, 2039, 1820,
	1820, 2041, 1544, 1632, 2820, 2778, 2106, 2046, 1153, 2571,
	2048, 2987, 2570, 1161, 2051, 992, 992, 992, 992, 992,
	992, 992, 992, 992, 2566, 3425, 2062, 2123, 992, 2557,
	2549, 3974, 2002, 2548, 2329, 2527, 2159, 2501, 2262, 2263,
	1113, 2172, 2514, 730, 1347, 2446, 2231, 1178, 1823, 1823,
	1814, 1814, 2262, 2278, 1583, 2328, 1113, 2189, 1154, 2634,
	1879, 2736, 3746, 2185, 2186, 2525, 1155, 1985, 951, 2456,
	2145, 2138, 992, 1178, 2147, 2153, 2160, 2480, 2324, 2286,
	2157, 2146, 1303, 881, 3193, 933, 915, 4164, 2277, 915,
	915, 1543, 1283, 1401, 1380, 1878, 1379, 2346, 2346, 2360,
	1342, 2262, 935, 2176, 2380, 2382, 2177, 2178, 3376, 2410,
	2386, 935, 3647, 2142, 2080, 935, 2326, 1154, 1378, 1354,
	1377, 2327, 2544, 1911, 2330, 1155, 2331, 2332, 1628, 1624,
	2281, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618,
	2504, 2873, 1298, 2537, 2538, 2537, 2538, 2438, 2537, 2538,
	1560, 1487, 2258, 870, 2435, 1907, 1079, 2287, 1556, 2739,
	2143, 2513, 2133, 932, 1897, 2141, 2751, 2275, 1483, 1898,
	2402, 4165, 1178, 2246, 2246, 2424, 928, 2099, 4136, 1912,
	1913, 1614, 1615, 1617, 1618, 4048, 1776, 2512, 2766, 4077,
	3800, 1152, 3620, 1504, 3630, 2401, 1500, 1512, 1576, 2254,
	2984, 2158, 1826, 935, 1111, 1860, 2252, 1908, 2458, 2022,
	3200, 1108, 870, 163, 2342, 2355, 2371, 2096, 1156, 2290,
	1111, 1512, 2470, 2384, 3616, 3397, 2091, 1108, 1178, 2392,
	2393, 2450, 2288, 2285, 3666, 928, 2403, 2407, 2408, 2409,
	3199, 2414, 1298, 2563, 2420, 2421, 2159, 1588, 1774, 3411,
	934, 2730, 1787, 2560, 992, 992, 2493, 992, 1729, 871,
	3385, 1914, 3409, 2140, 4167, 3432, 3398, 2156, 2738, 1139,
	1539, 3617, 1899, 2562, 3050, 2100, 1484, 1156, 2558, 2471,
	3082, 648, 1120, 3745, 2565, 3043, 2524, 3254, 2362, 1901,
	2157, 2735, 2137, 732, 731, 2465, 3802, 1489, 796, 2545,
	1921, 2503, 1542, 2765, 3431, 4173, 2578, 1721, 1722, 2609,
	885, 2574, 1820, 3049, 885, 2622, 2529, 1118, 871, 600,
	2468, 2469, 1925, 727, 3042, 726, 2520, 2547, 2474, 2516,
	885, 4078, 2490, 886, 3251, 1298, 1298, 2128, 1298, 2586,
	4180, 2528, 1933, 2526, 595, 2588, 1364, 2590, 1886, 1887,
	1298, 1903, 2290, 1107, 2546, 2155, 1917, 2554, 2492, 2648,
	3133, 1823, 3628, 1814, 2496, 1298, 2506, 2509, 1757, 1107,
	2092, 1922, 2618, 1557, 2789, 2668, 2530, 4153, 2585, 647,
	2737, 1932, 2539, 2541, 2542, 2543, 2702, 2703, 4152, 2594,
	1362, 2444, 2597, 4190, 2599, 1916, 2663, 2709, 2710, 2711,
	677, 992, 2787, 2694, 680, 931, 885, 2290, 1109, 3252,
	2698, 2158, 2242, 1400, 2126, 1121, 4076, 1973, 1972, 2719,
	1341, 2720, 872, 4125, 1109, 2093, 4166, 1307, 2502, 2758,
	2759, 1527, 2717, 2591, 3527, 2639, 2650, 3526, 2639, 3612,
	2240, 1897, 1948, 3613, 1761, 992, 1898, 1955, 4203, 2603,
	2613, 992, 992, 2700, 1904, 2034, 2284, 2704, 1905, 2705,
	1344, 1905, 163, 3936, 2679, 3950, 1926, 2632, 3134, 3993,
	2741, 2576, 2743, 1897, 1286, 2714, 1957, 2156, 1898, 2643,
	2669, 872, 1558, 1764, 2139, 2721, 1528, 2723, 3615, 2725,
	1364, 1905, 2579, 2575, 2577, 1914, 2098, 2990, 1759, 3629,
	3061, 2664, 3618, 2666, 2670, 789, 992, 992, 2734, 2662,
	882, 3018, 992, 2665, 2681, 2228, 1762, 3801, 2784, 1956,
	1286, 4171, 2986, 1554, 3386, 992, 992, 1927, 1928, 2290,
	1943, 992, 992, 2582, 3133, 2785, 2727, 992, 763, 2790,
	1923, 4124, 1447, 873, 1760, 3024, 992, 992, 992, 1899,
	1954, 2654, 992, 1942, 2969, 2657, 2236, 2658, 2780, 2245,
	3017, 2716, 992, 1559, 2781, 2476, 1901, 2746, 2927, 2237,
	2722, 1555, 2724, 2238, 2726, 1924, 684, 2243, 3026, 992,
	2478, 1899, 2253, 2757, 3685, 1938, 1716, 4105, 2811, 874,
	1499, 1501, 1905, 2748, 2747, 1485, 4106, 649, 1901, 2802,
	646, 1271, 873, 2744, 3742, 2752, 4172, 2172, 3523, 1912,
	1913, 777, 2095, 2479, 1900, 3614, 1283, 797, 3758, 2655,
	4146, 2090, 4025, 3991, 3953, 2659, 1668, 2828, 1903, 2806,
	2807, 2406, 2477, 3025, 2810, 4191, 1119, 1939, 1763, 4174,
	2419, 1587, 596, 934, 2272, 992, 992, 992, 874, 3438,
	3621, 2491, 3267, 4201, 992, 992, 992, 3992, 3436, 992,
	1903, 3695, 3517, 1138, 2226, 2507, 3356, 2229, 1133, 992,
	1113, 1178, 2779, 3528, 3211, 992, 1929, 992, 935, 2749,
	2919, 2920, 3956, 4075, 4135, 1113, 2583, 4133, 3971, 3864,
	2767, 3471, 3524, 3120, 1993, 1754, 1131, 1126, 1515, 2786,
	1761, 4123, 587, 1178, 3305, 3452, 597, 1598, 2788, 2175,
	4196, 1597, 1915, 3572, 1871, 1113, 2225, 2817, 1178, 1286,
	1286, 3215, 2961, 3741, 1592, 3808, 3807, 2941, 3787, 790,
	791, 1904, 1951, 3922, 1826, 1905, 3633, 2239, 1178, 1764,
	2926, 2902, 3472, 3632, 1930, 3419, 2241, 3372, 598, 4204,
	599, 3957, 992, 3121, 2404, 3113, 2035, 2921, 2999, 3439,
	2995, 3686, 2966, 1904, 1935, 2623, 992, 1905, 2931, 2617,
	1283, 2955, 1762, 2607, 3028, 1949, 2016, 3438, 1826, 2005,
	1998, 1981, 623, 2979, 2950, 3250, 3436, 3320, 4003, 2982,
	2531, 3212, 1597, 2134, 992, 1298, 1597, 4104, 2398, 1864,
	685, 686, 1152, 2988, 1596, 2954, 1894, 2930, 1283, 3474,
	1283, 3709, 2939, 3029, 1950, 2929, 2604, 1403, 2942, 2943,
	2165, 2947, 3846, 2913, 3844, 2991, 2992, 2081, 3009, 2940,
	2959, 3014, 3015, 3788, 1111, 778, 779, 3743, 1178, 3010,
	2928, 1108, 3333, 3008, 1820, 1895, 3012, 1298, 1598, 1111,
	3006, 1868, 1298, 3005, 2996, 2772, 1108, 3038, 3021, 2976,
	2977, 3306, 2978, 1298, 2897, 2898, 2899, 2227, 2400, 3307,
	1298, 2935, 2924, 2399, 1178, 2963, 2964, 2965, 3573, 1111,
	2750, 671, 4195, 792, 793, 1596, 1108, 3439, 1820, 1596,
	3437, 1900, 1298, 1823, 1763, 1814, 3041, 2945, 3064, 2946,
	3059, 3067, 1298, 2923, 2983, 3072, 3074, 1902, 2970, 2508,
	3021, 3631, 688, 687, 1529, 3021, 3052, 1668, 1113, 3958,
	2989, 1866, 3107, 1900, 3129, 3529, 926, 3112, 870, 1598,
	3087, 2443, 2166, 2442, 3030, 3031, 1902, 1823, 3032, 1814,
	2441, 2440, 3098, 3027, 1372, 1867, 2532, 2533, 3034, 3443,
	3045, 928, 3000, 2994, 3434, 1386, 2936, 1373, 2611, 932,
	1298, 1298, 3929, 1384, 3054, 3138, 689, 690, 3055, 3056,
	1945, 3677, 3057, 795, 3081, 3048, 3170, 2694, 1945, 1799,
	3070, 2014, 1298, 1107, 3060, 3157, 2694, 3040, 3069, 780,
	781, 3077, 3150, 3076, 1516, 927, 3046, 3089, 1107, 3530,
	3047, 3796, 4143, 3726, 2934, 2962, 3842, 2701, 3051, 2589,
	3084, 3053, 1493, 2529, 3122, 4006, 1178, 4011, 3437, 1178,
	3194, 3091, 3062, 4000, 3130, 3785, 3068, 3579, 1107, 2938,
	3322, 3075, 677, 3930, 871, 2297, 680, 4029, 1109, 2341,
	2337, 4145, 622, 4095, 1680, 1574, 1572, 3943, 1685, 992,
	1551, 1549, 3764, 1109, 3137, 992, 992, 3571, 1526, 992,
	992, 992, 3786, 992, 3725, 3188, 3442, 1524, 935, 3151,
	3168, 3206, 992, 1826, 1522, 3110, 3172, 163, 163, 3135,
	2894, 992, 1111, 1109, 992, 2125, 3227, 240, 3144, 1108,
	1178, 3190, 4007, 3797, 3205, 3155, 3156, 3128, 2980, 992,
	3196, 1520, 3197, 2859, 3198, 2791, 2608, 1178, 2556, 2522,
	3931, 3189, 2335, 2467, 2937, 1794, 1790, 1826, 1826, 992,
	992, 1575, 992, 992, 992, 3230, 3213, 1518, 1509, 2339,
	2340, 2338, 1507, 1382, 2895, 1471, 3208, 3207, 1592, 3202,
	992, 3239, 3240, 2732, 992, 2731, 1826, 1826, 992, 992,
	992, 992, 992, 992, 992, 992, 992, 992, 992, 992,
	992, 992, 992, 992, 992, 992, 992, 3210, 992, 2707,
	3187, 3147, 1385, 2154, 2136, 992, 992, 1826, 1538, 3180,
	1383, 2103, 992, 1820, 3888, 1978, 1852, 2334, 2336, 1700,
	794, 1482, 1358, 992, 2296, 1283, 4070, 872, 3203, 3653,
	3642, 3999, 4147, 3707, 1113, 1113, 3658, 4121, 992, 3235,
	3063, 883, 1757, 3246, 3187, 3605, 1573, 1571, 2002, 3470,
	3257, 1550, 1548, 3180, 3462, 3247, 3424, 1820, 1820, 1525,
	3269, 1107, 1823, 3262, 1814, 3880, 3146, 1178, 1523, 3148,
	3149, 3125, 3392, 3276, 3152, 1521, 3153, 3881, 3154, 3338,
	3253, 3255, 3256, 2124, 3390, 3371, 1820, 1820, 3279, 3284,
	3280, 3116, 3282, 955, 3317, 3182, 3277, 1601, 992, 3309,
	3278, 3111, 1519, 3871, 3882, 3103, 1823, 1823, 1814, 1814,
	3181, 2661, 2656, 3355, 992, 992, 1109, 1820, 1761, 2635,
	2621, 2185, 3270, 3310, 2614, 3324, 3366, 3367, 1517, 1508,
	2601, 2587, 2055, 1506, 1381, 1823, 1823, 1814, 1814, 3182,
	2053, 163, 3326, 3327, 992, 992, 925, 2050, 873, 2047,
	2185, 3285, 2042, 2040, 3181, 2036, 2027, 1764, 1977, 3318,
	1283, 1283, 1975, 3884, 3329, 3330, 1823, 1961, 1814, 992,
	3340, 1946, 1759, 1931, 3341, 1918, 1000, 3178, 1906, 3883,
	1801, 3313, 3071, 888, 890, 892, 1088, 1955, 3354, 4137,
	1762, 1298, 2770, 4039, 874, 3731, 3885, 1602, 1111, 1111,
	3724, 3362, 3723, 3665, 2695, 1108, 1108, 1890, 1338, 1826,
	3873, 1089, 2511, 3405, 3407, 3482, 1914, 661, 1760, 3404,
	238, 238, 238, 1424, 590, 591, 3400, 606, 590, 606,
	616, 621, 2094, 3375, 2013, 639, 2169, 1298, 1423, 1283,
	645, 3420, 2491, 2120, 992, 2491, 238, 1569, 1570, 2101,
	2119, 3414, 1113, 992, 4038, 3635, 2489, 3484, 3660, 2510,
	1505, 3353, 3908, 3458, 774, 3580, 3441, 1608, 1609, 3558,
	238, 1298, 1298, 1298, 3493, 2529, 2534, 2771, 3183, 3184,
	3185, 3186, 3430, 2515, 3479, 1605, 4139, 1298, 4131, 3475,
	1954, 601, 3445, 3459, 4100, 3478, 1611, 717, 3440, 2600,
	3476, 1608, 1609, 760, 2122, 3497, 1178, 2648, 231, 3460,
	1861, 1090, 1763, 2561, 3418, 3465, 1424, 2569, 2568, 1820,
	1424, 2551, 3183, 3184, 3185, 3186, 3509, 2553, 1178, 1610,
	3998, 992, 992, 2519, 3463, 3417, 2517, 992, 992, 1826,
	2552, 2694, 992, 992, 612, 992, 2518, 1107, 1107, 992,
	3477, 3480, 3966, 584, 3963, 3928, 3860, 3839, 3486, 3485,
	992, 3461, 3464, 1610, 3451, 3348, 3115, 2642, 1823, 2385,
	1814, 1856, 3492, 3429, 1807, 2363, 992, 4168, 3794, 590,
	590, 3503, 3500, 3000, 3507, 3504, 2968, 238, 4031, 4194,
	3532, 3540, 4031, 4032, 3965, 3498, 3499, 4032, 3531, 1492,
	3515, 3886, 1109, 1109, 3506, 1491, 3887, 2865, 2866, 3520,
	1608, 1609, 4149, 2483, 2484, 3525, 1111, 1309, 1469, 2481,
	2482, 3550, 2292, 1108, 3391, 3358, 3393, 3544, 2483, 2481,
	2325, 1553, 3861, 3825, 1552, 3661, 1113, 3516, 3657, 3656,
	3546, 3468, 3357, 3258, 1113, 3065, 1694, 1693, 1178, 1820,
	1178, 4182, 4154, 3919, 3821, 3779, 3776, 1113, 3688, 3598,
	3508, 3488, 3446, 3444, 3388, 3383, 3145, 3119, 3118, 2729,
	2713, 2712, 1178, 2652, 2627, 2602, 2460, 3585, 2459, 2257,
	2121, 2118, 2117, 2116, 3423, 2115, 2030, 2029, 2028, 3570,
	2011, 1988, 992, 1984, 1983, 1982, 1980, 1979, 1823, 1568,
	1814, 1567, 1513, 1410, 1409, 1408, 1407, 1406, 1405, 3626,
	3588, 1404, 1402, 1397, 1396, 1395, 1394, 1393, 1353, 1178,
	1352, 1351, 1350, 1349, 1348, 1343, 1178, 1337, 3627, 1335,
	1334, 3591, 1169, 1168, 3584, 1167, 3602, 3603, 3587, 3582,
	3583, 3638, 3639, 3637, 1166, 1137, 1136, 2954, 3592, 1071,
	1862, 3595, 955, 1298, 1298, 163, 955, 3636, 894, 3490,
	3604, 880, 3625, 3491, 1286, 1107, 3581, 2255, 3799, 3619,
	1562, 1262, 84, 3577, 3586, 1262, 1345, 705, 78, 1952,
	3387, 1178, 1680, 853, 3675, 4028, 1298, 1331, 3655, 3662,
	3949, 3663, 3673, 712, 4013, 3016, 2572, 2102, 1514, 2104,
	1111, 2949, 3664, 2426, 3700, 3990, 3554, 1108, 1111, 3650,
	3652, 2002, 2827, 992, 3674, 1108, 3678, 3915, 3672, 3757,
	1109, 1111, 2295, 1298, 1298, 1298, 1698, 2906, 1108, 80,
	3727, 976, 1022, 3684, 1178, 3683, 2367, 3606, 3710, 3374,
	2684, 3681, 3680, 3705, 1811, 1813, 992, 992, 992, 3711,
	3719, 3730, 3694, 3714, 942, 3679, 3697, 1181, 1872, 982,
	1888, 3699, 1881, 2461, 1178, 2345, 999, 996, 3712, 992,
	1815, 1817, 992, 992, 998, 997, 1816, 1717, 995, 1810,
	3467, 3466, 992, 2610, 3736, 1826, 2646, 1389, 855, 3641,
	992, 992, 1876, 2251, 2279, 2816, 1691, 957, 3687, 978,
	3649, 3734, 3651, 2276, 3733, 1178, 1129, 1298, 3698, 3744,
	3738, 967, 956, 3754, 3749, 2932, 3132, 3347, 3715, 2164,
	1178, 721, 2862, 2282, 1122, 2368, 2361, 2357, 992, 2636,
	3718, 1578, 1670, 2647, 1164, 992, 960, 3766, 2249, 1682,
	2796, 2174, 3139, 992, 2952, 1826, 3760, 2454, 4035, 1107,
	3266, 1992, 1087, 992, 1086, 1085, 992, 1107, 3781, 4019,
	4016, 3501, 3096, 1865, 992, 2475, 1660, 3104, 972, 1124,
	1107, 1178, 1282, 3771, 3772, 3773, 3775, 2917, 3171, 1355,
	644, 1298, 1298, 984, 1659, 2581, 2580, 3925, 1151, 1150,
	1149, 2998, 3782, 3820, 3780, 1820, 4202, 1134, 3384, 207,
	2764, 1599, 2754, 1591, 1109, 3804, 639, 204, 3830, 3803,
	206, 205, 1109, 3689, 2413, 3351, 2958, 4098, 1178, 3854,
	3845, 1298, 3402, 3088, 3822, 1109, 21, 20, 3818, 238,
	19, 238, 238, 1274, 105, 238, 238, 1289, 3859, 992,
	992, 3835, 3837, 3827, 1823, 40, 1814, 3834, 3843, 18,
	119, 238, 3838, 1311, 3858, 1820, 3891, 3892, 992, 992,
	3098, 3853, 3872, 135, 3876, 3870, 3833, 134, 133, 132,
	131, 137, 130, 3867, 3895, 992, 1826, 3874, 1340, 129,
	3866, 3869, 2363, 2363, 3868, 3875, 3889, 124, 128, 127,
	1357, 126, 1289, 125, 3714, 123, 238, 238, 122, 1274,
	992, 121, 120, 992, 1823, 118, 1814, 117, 3903, 238,
	116, 115, 2002, 114, 3932, 113, 112, 1399, 111, 3810,
	3921, 110, 992, 3907, 109, 1286, 108, 107, 3913, 238,
	106, 238, 238, 635, 1274, 238, 1289, 632, 57, 3938,
	3904, 3905, 3920, 56, 104, 103, 639, 17, 238, 238,
	38, 14, 61, 62, 3937, 16, 13, 3832, 33, 83,
	95, 94, 992, 992, 34, 3952, 92, 91, 32, 15,
	89, 774, 88, 992, 31, 29, 992, 11, 1298, 9,
	8, 35, 3945, 1778, 12, 5, 1820, 168, 1298, 1298,
	3968, 167, 170, 3970, 166, 169, 82, 165, 164, 3960,
	3961, 81, 2363, 2363, 2363, 1298, 3959, 3981, 3947, 27,
	3964, 10, 160, 3855, 3858, 3456, 76, 162, 161, 992,
	992, 159, 3973, 158, 3977, 157, 3978, 3979, 3980, 77,
	74, 156, 155, 1262, 75, 1823, 154, 1814, 25, 6,
	238, 3972, 60, 7, 3984, 3986, 3739, 3987, 3812, 3813,
	4010, 3985, 992, 992, 3191, 992, 98, 238, 3995, 99,
	36, 72, 71, 2367, 4033, 70, 4008, 24, 59, 23,
	197, 3826, 196, 195, 3828, 3829, 194, 955, 4040, 4009,
	1290, 193, 192, 1262, 4018, 4021, 3951, 187, 186, 191,
	4023, 4027, 189, 188, 4052, 190, 185, 199, 198, 4053,
	201, 3994, 992, 992, 992, 184, 182, 3967, 178, 177,
	181, 183, 4044, 1333, 4047, 180, 4049, 179, 176, 200,
	4054, 4037, 4082, 152, 153, 992, 67, 151, 150, 149,
	148, 4069, 4087, 147, 4022, 4068, 1365, 4026, 146, 4066,
	4067, 145, 66, 2367, 2367, 22, 2, 1, 0, 0,
	0, 4085, 0, 0, 0, 0, 0, 0, 4111, 0,
	4109, 0, 0, 0, 0, 0, 4117, 0, 4116, 0,
	0, 0, 4118, 992, 4107, 0, 0, 4108, 0, 1439,
	4113, 0, 4122, 0, 0, 0, 0, 0, 0, 1455,
	0, 0, 4114, 4115, 0, 0, 4128, 4129, 4119, 0,
	4138, 4134, 0, 4141, 4132, 4130, 0, 0, 0, 0,
	4041, 0, 4142, 4042, 4140, 2648, 0, 0, 4144, 0,
	4156, 992, 4157, 992, 4148, 4151, 0, 4159, 0, 0,
	1262, 4161, 4155, 4163, 4018, 0, 0, 4021, 4158, 0,
	4160, 0, 3946, 0, 0, 0, 1283, 4150, 0, 0,
	4162, 0, 0, 1494, 590, 0, 0, 0, 4175, 4177,
	0, 0, 0, 2367, 2367, 2367, 0, 4183, 0, 0,
	4037, 0, 0, 4184, 0, 238, 0, 238, 0, 992,
	992, 238, 0, 0, 0, 0, 0, 992, 4192, 992,
	992, 4198, 0, 4186, 1311, 1274, 238, 4189, 238, 4188,
	4208, 0, 4206, 238, 1311, 606, 4209, 0, 238, 1311,
	0, 0, 0, 0, 0, 639, 4213, 0, 4205, 4216,
	0, 0, 0, 4207, 4218, 4217, 4210, 0, 4219, 4222,
	0, 1286, 4224, 4223, 0, 0, 0, 992, 0, 0,
	0, 0, 4215, 0, 0, 4220, 0, 4232, 0, 4234,
	0, 0, 4225, 0, 0, 0, 0, 0, 4228, 0,
	0, 0, 4229, 2793, 2794, 4231, 0, 4235, 0, 0,
	0, 4199, 4200, 0, 0, 0, 0, 3620, 0, 0,
	0, 0, 0, 2865, 2866, 0, 2883, 2884, 2885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3537, 0, 0, 0, 0, 3616,
	0, 0, 0, 3609, 0, 0, 0, 2363, 2363, 4230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3607,
	0, 0, 0, 0, 0, 0, 3611, 0, 0, 4097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2880, 3617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 1176, 0,
	0, 0, 1277, 0, 651, 0, 0, 0, 238, 0,
	0, 238, 69, 2888, 2889, 2890, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3610, 0, 73, 0,
	0, 0, 0, 0, 0, 2363, 2363, 2363, 2363, 2363,
	2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363,
	2363, 2363, 2363, 2363, 0, 2363, 0, 0, 1262, 0,
	0, 238, 0, 0, 79, 238, 0, 0, 0, 238,
	2871, 0, 1608, 1609, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 1609, 0, 238, 0,
	238, 0, 238, 0, 1639, 0, 590, 0, 0, 85,
	0, 1611, 0, 0, 0, 0, 0, 1639, 0, 0,
	2031, 0, 656, 100, 1611, 0, 0, 0, 86, 97,
	0, 0, 238, 0, 2886, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1262, 0, 1610, 0, 0,
	0, 0, 1627, 0, 3612, 0, 0, 0, 3613, 0,
	639, 0, 2881, 0, 774, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 238,
	0, 1274, 238, 0, 0, 0, 0, 0, 0, 3535,
	0, 0, 0, 3615, 0, 0, 639, 0, 2367, 2367,
	658, 0, 0, 238, 1262, 0, 0, 3618, 0, 1633,
	1634, 1635, 1636, 238, 238, 0, 238, 0, 238, 1616,
	238, 0, 238, 0, 0, 0, 0, 0, 1103, 0,
	1262, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2130, 0, 0, 2131, 0, 2132, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 1638, 1640, 238,
	0, 0, 0, 0, 0, 0, 0, 2882, 0, 0,
	1638, 1640, 233, 233, 586, 0, 0, 0, 90, 0,
	621, 0, 1625, 1626, 639, 0, 2367, 2367, 2367, 2367,
	2367, 2367, 2367, 2367, 2367, 2367, 2367, 2367, 2367, 2367,
	2367, 2367, 2367, 2367, 2367, 0, 2367, 0, 0, 653,
	0, 1631, 0, 0, 0, 0, 0, 0, 171, 93,
	3614, 96, 0, 0, 1631, 0, 0, 0, 0, 1262,
	0, 0, 657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 3621, 0, 136, 0, 0,
	0, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 1262, 0, 210, 2877, 2878,
	2879, 0, 0, 2060, 0, 2876, 2874, 2875, 2867, 2868,
	2869, 2870, 2872, 2873, 0, 0, 1637, 0, 0, 1439,
	2073, 138, 0, 0, 0, 0, 0, 0, 3223, 3224,
	2074, 652, 0, 0, 0, 175, 1632, 0, 0, 0,
	0, 0, 2082, 209, 2085, 2086, 2087, 0, 0, 1632,
	0, 590, 0, 202, 0, 0, 0, 659, 0, 0,
	1793, 203, 0, 0, 0, 0, 238, 0, 0, 0,
	665, 0, 0, 0, 0, 590, 0, 0, 0, 0,
	0, 654, 238, 174, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 238, 0, 0, 0, 0, 3286, 3287, 3288, 3289,
	3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299,
	3300, 3301, 3302, 3303, 3304, 0, 3308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 606,
	238, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613, 1614,
	1615, 1617, 1618, 0, 0, 0, 0, 0, 0, 0,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2500, 0, 0, 69, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 1970, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 238, 2592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 1639, 0, 0, 0, 0,
	1311, 0, 1611, 238, 0, 0, 0, 0, 100, 0,
	238, 0, 0, 86, 97, 0, 0, 0, 0, 2631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2500,
	0, 590, 0, 0, 2651, 1610, 0, 0, 0, 2363,
	238, 0, 0, 238, 0, 1630, 0, 238, 0, 238,
	0, 0, 0, 1627, 1274, 0, 238, 238, 0, 1289,
	1289, 0, 87, 0, 0, 0, 0, 0, 0, 2677,
	774, 0, 2500, 2500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2363, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3226, 0, 0, 0, 0, 238, 1274, 238, 0, 0,
	1311, 0, 1311, 0, 0, 1274, 0, 1274, 0, 1274,
	1633, 1634, 1635, 1636, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 238, 238, 238, 238, 1274, 238,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2451, 0, 0, 0, 0, 1638, 1640,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 90, 0, 1262, 0, 0, 1756, 0,
	238, 1173, 0, 1625, 1626, 0, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 0,
	2584, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 1631, 171, 93, 0, 96, 0, 0, 0,
	0, 0, 2363, 955, 0, 1608, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 2188, 0, 1639, 769, 0,
	0, 0, 136, 0, 1611, 0, 0, 0, 0, 0,
	0, 1391, 0, 0, 0, 0, 0, 0, 0, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 210, 1414, 1414, 0, 0, 1610, 0, 0,
	2367, 0, 0, 2667, 1439, 1262, 0, 1630, 0, 0,
	1456, 1457, 0, 0, 0, 1627, 138, 1637, 2865, 2866,
	0, 2883, 2884, 2885, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 2708, 0, 0, 0, 1632, 209, 3536,
	0, 1262, 2293, 0, 0, 0, 2367, 0, 202, 0,
	0, 0, 0, 0, 2865, 2866, 203, 2883, 2884, 2885,
	0, 0, 3221, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3232, 0, 0, 174, 0,
	0, 0, 1633, 1634, 1635, 1636, 0, 0, 0, 0,
	2880, 0, 1616, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 1561, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 590, 0, 0, 0,
	0, 590, 0, 0, 590, 0, 2880, 590, 590, 0,
	1638, 1640, 0, 590, 0, 0, 0, 2436, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 1625, 1626, 0, 0, 0,
	0, 0, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613,
	1614, 1615, 1617, 1618, 1311, 2871, 0, 0, 0, 0,
	0, 0, 0, 1262, 1631, 0, 1262, 0, 0, 0,
	0, 0, 0, 2367, 0, 2500, 2500, 238, 0, 1289,
	0, 0, 2500, 0, 0, 3002, 0, 0, 0, 0,
	0, 2871, 0, 2500, 3002, 0, 2500, 3002, 3002, 0,
	3763, 0, 0, 0, 0, 0, 0, 0, 0, 2886,
	0, 238, 238, 1289, 238, 0, 2486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1289, 238, 1274, 1262, 0, 0,
	0, 0, 0, 0, 0, 2886, 3790, 2881, 2500, 0,
	3066, 2500, 1289, 0, 1262, 2500, 2500, 1289, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 1632,
	0, 0, 0, 2881, 0, 0, 0, 238, 3092, 0,
	0, 3094, 2500, 0, 0, 238, 0, 0, 0, 238,
	0, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2631,
	0, 0, 1274, 1788, 238, 0, 0, 2500, 0, 590,
	0, 0, 0, 0, 0, 0, 2500, 0, 1797, 0,
	1281, 0, 0, 238, 0, 0, 0, 238, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 2631, 0, 0, 2631, 0,
	0, 0, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 3912, 0, 0, 0, 0, 2882, 0,
	0, 0, 0, 0, 1628, 1624, 0, 1621, 1619, 1620,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 0, 0,
	3201, 0, 0, 1274, 238, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651, 1652,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 1644, 1639, 0, 0, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 2877, 2878, 2879, 0, 0, 0, 0,
	2876, 2874, 2875, 2867, 2868, 2869, 2870, 2872, 2873, 0,
	0, 0, 0, 941, 1610, 0, 0, 941, 0, 0,
	0, 3078, 0, 0, 1630, 3264, 0, 0, 0, 2877,
	2878, 2879, 1627, 0, 0, 0, 2876, 2874, 2875, 2867,
	2868, 2869, 2870, 2872, 2873, 0, 0, 0, 0, 0,
	3108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3114, 0, 0, 0, 1313, 0, 1319, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1997, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 1633,
	1634, 1635, 1636, 0, 0, 0, 0, 0, 0, 1616,
	1391, 0, 2019, 0, 2019, 0, 0, 0, 3163, 3164,
	238, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 0, 0, 1648, 0,
	1440, 1658, 590, 590, 1414, 0, 0, 1638, 1640, 0,
	0, 1281, 0, 0, 0, 1262, 0, 1458, 0, 1463,
	0, 0, 0, 1654, 1311, 1655, 0, 0, 0, 1472,
	0, 1477, 1625, 1626, 0, 0, 0, 1311, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1997, 0, 0, 2078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2918, 0, 1656, 0, 0,
	1534, 0, 639, 1540, 0, 2097, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 2107, 0, 2109, 0,
	2111, 0, 2113, 0, 2114, 0, 0, 2944, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2957, 0, 0, 1262, 0, 1262, 0, 1289,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 2135, 2974, 0, 0, 0, 1637, 0, 0, 1262,
	238, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 238, 0, 0, 1632, 238, 0, 0,
	0, 0, 0, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	0, 0, 0, 0, 0, 0, 0, 2500, 238, 0,
	0, 1649, 0, 0, 0, 0, 1262, 0, 0, 0,
	0, 0, 0, 1262, 1679, 2677, 2677, 0, 0, 0,
	1692, 774, 774, 2500, 0, 0, 2631, 2631, 0, 0,
	774, 2500, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 69, 0, 0, 0, 0, 0, 0, 0, 2865,
	2866, 0, 2883, 2884, 2885, 0, 0, 73, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3231, 0, 0, 0, 0, 0, 0, 0, 2957, 0,
	0, 2865, 2866, 1647, 2883, 2884, 2885, 1622, 1623, 1629,
	1650, 1628, 1624, 79, 1621, 1619, 1620, 1612, 1613, 1614,
	1615, 1617, 1618, 0, 977, 102, 0, 4005, 0, 0,
	3555, 1262, 0, 0, 1750, 1750, 1750, 0, 0, 0,
	0, 2880, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 100, 0, 0, 0, 0, 86, 97, 0,
	0, 0, 0, 2880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2433, 3427,
	0, 0, 238, 0, 0, 0, 0, 0, 1311, 0,
	238, 0, 1262, 0, 0, 0, 0, 0, 941, 0,
	0, 102, 0, 238, 0, 0, 87, 1262, 0, 0,
	0, 0, 0, 0, 0, 0, 2871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2500, 2500, 2500, 0,
	1277, 0, 0, 1176, 0, 0, 0, 0, 0, 1311,
	0, 0, 2008, 955, 0, 0, 0, 2500, 2871, 3002,
	0, 0, 1311, 1311, 238, 1289, 0, 0, 1262, 3494,
	3495, 3496, 0, 0, 0, 0, 1289, 238, 1289, 238,
	2886, 0, 0, 0, 0, 1439, 0, 0, 916, 2500,
	2887, 2500, 238, 0, 0, 0, 0, 0, 0, 936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2886, 0, 3243, 1262, 2500, 0, 2881, 0,
	0, 3691, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 3259, 0, 0, 0, 1097, 0, 90, 238, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 0,
	2881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 0, 0, 0, 0, 171, 93, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1997, 0, 0, 0, 0,
	0, 0, 2008, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 769, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2653, 2882, 0, 1414, 0, 0, 0, 1414,
	0, 1414, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	955, 3350, 0, 0, 0, 2882, 0, 0, 0, 0,
	138, 0, 2500, 0, 3002, 0, 0, 3784, 0, 2706,
	0, 0, 0, 0, 175, 238, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 2715, 0, 2718,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	203, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 1289, 238, 0, 2740, 1281, 2742, 1281,
	0, 2745, 0, 0, 0, 0, 0, 0, 0, 0,
	955, 1439, 3784, 0, 2877, 2878, 2879, 0, 0, 0,
	2500, 2876, 2874, 2875, 2867, 2868, 2869, 2870, 2872, 2873,
	0, 3863, 0, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 2773, 1311, 0, 0, 2877, 2878, 2879, 0,
	0, 0, 0, 2876, 2874, 2875, 2867, 2868, 2869, 2870,
	2872, 2873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 238, 0, 0, 0, 0, 0, 0,
	0, 3735, 0, 3737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3264, 0, 0, 0,
	0, 0, 0, 0, 0, 2163, 0, 2167, 0, 0,
	0, 0, 3784, 0, 2181, 0, 0, 0, 0, 0,
	0, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 0, 2230, 238, 2232,
	2233, 2234, 2235, 0, 0, 3777, 0, 0, 0, 0,
	0, 0, 1608, 1609, 0, 0, 0, 3691, 0, 0,
	0, 2259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 1679, 0, 1639, 0, 2274, 0, 0, 0,
	3002, 1611, 0, 0, 2865, 2866, 0, 2883, 2884, 2885,
	0, 0, 2304, 2307, 2310, 2313, 0, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 0, 0, 1311, 0, 1311, 0,
	0, 0, 0, 0, 1610, 0, 0, 0, 0, 3836,
	0, 0, 0, 0, 1630, 2359, 0, 2370, 2372, 2377,
	0, 0, 1627, 4004, 0, 1608, 1609, 0, 0, 0,
	1311, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 102, 0, 102, 2880, 1639, 0, 0,
	238, 2500, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 3220,
	0, 0, 0, 0, 3590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 1633,
	1634, 1635, 1636, 0, 3264, 0, 3600, 1630, 0, 1616,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 2993,
	0, 936, 102, 102, 0, 0, 0, 0, 0, 0,
	0, 2871, 0, 0, 102, 0, 102, 1638, 1640, 0,
	0, 0, 0, 0, 0, 2500, 102, 0, 102, 0,
	0, 0, 2782, 3037, 3039, 0, 2008, 0, 0, 0,
	0, 0, 1625, 1626, 0, 0, 0, 3784, 0, 0,
	0, 0, 1633, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 2886, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 1311, 0,
	2500, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1439, 1439, 0, 0,
	1638, 1640, 0, 2881, 0, 0, 0, 0, 0, 0,
	0, 0, 1001, 1439, 0, 0, 0, 3105, 0, 0,
	0, 3109, 0, 0, 0, 1625, 1626, 0, 0, 0,
	0, 0, 2595, 2596, 0, 2598, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 239, 239, 239, 0,
	0, 0, 0, 0, 0, 1414, 1637, 0, 3755, 1281,
	1281, 0, 0, 916, 0, 0, 0, 0, 2677, 0,
	0, 0, 239, 0, 0, 0, 1632, 0, 0, 0,
	0, 2677, 0, 1673, 0, 0, 3167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 3755,
	1678, 0, 0, 0, 1684, 0, 0, 0, 2882, 0,
	0, 0, 0, 0, 2188, 0, 0, 0, 0, 0,
	1608, 1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0,
	0, 0, 0, 0, 0, 0, 3204, 0, 1281, 1637,
	0, 1644, 1639, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 1632,
	0, 0, 0, 0, 0, 2188, 0, 0, 0, 2728,
	0, 3216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	1627, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613, 1614,
	1615, 1617, 1618, 0, 0, 0, 0, 0, 0, 1661,
	1662, 0, 0, 1770, 0, 1773, 0, 102, 0, 2877,
	2878, 2879, 0, 0, 0, 0, 2876, 2874, 2875, 2867,
	2868, 2869, 2870, 2872, 2873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1634, 1635,
	1636, 0, 0, 0, 2776, 2777, 0, 1616, 0, 0,
	2783, 0, 0, 0, 1628, 1624, 0, 1621, 1619, 1620,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 0, 2797,
	2798, 0, 0, 0, 0, 2274, 1648, 0, 0, 1658,
	0, 0, 0, 0, 2805, 1638, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2819, 1654, 0, 1655, 0, 0, 0, 0, 0, 0,
	1625, 1626, 0, 0, 0, 0, 0, 2831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 0,
	988, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 237, 237, 0, 0, 0,
	0, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2377, 2377, 2377, 0, 0, 0, 0, 0,
	678, 0, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 2922, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 0, 1632, 0, 0, 0, 0, 1608,
	1609, 0, 2008, 0, 0, 1651, 1652, 1653, 0, 0,
	0, 0, 3455, 0, 0, 0, 0, 0, 0, 1649,
	0, 1639, 0, 0, 0, 2008, 0, 0, 1611, 3469,
	941, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 3019, 0, 0, 0, 0, 0, 0, 1627,
	0, 1110, 0, 0, 0, 936, 0, 936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3518, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 1622, 1623, 1629, 1650, 1628,
	1624, 0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617,
	1618, 0, 0, 0, 0, 3563, 0, 0, 0, 3562,
	0, 0, 0, 0, 0, 0, 1633, 1634, 1635, 1636,
	0, 0, 0, 0, 0, 0, 1616, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 1182, 239, 239, 0,
	1182, 239, 239, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 0, 239, 1658, 0,
	0, 0, 0, 0, 1638, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 239, 239, 0, 916, 0, 1646, 916, 916,
	0, 0, 0, 0, 0, 239, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 239, 239, 0,
	0, 239, 0, 1182, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 1182, 239, 239, 0, 0, 0, 0,
	0, 0, 0, 2248, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 3640, 0, 0, 936,
	0, 0, 0, 0, 0, 0, 0, 0, 1678, 2008,
	0, 0, 1678, 0, 0, 0, 0, 2181, 0, 0,
	0, 0, 0, 3218, 3219, 0, 0, 3222, 0, 0,
	0, 3225, 0, 1637, 0, 0, 0, 1182, 0, 0,
	3229, 0, 0, 0, 0, 0, 0, 0, 0, 3236,
	0, 0, 2922, 1632, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 239, 3248, 0, 0,
	3706, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	0, 0, 0, 239, 1097, 0, 0, 3271, 3272, 0,
	3273, 3274, 3275, 0, 0, 0, 0, 0, 0, 0,
	1773, 0, 0, 0, 0, 0, 0, 0, 3281, 0,
	0, 0, 3283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 0, 3311, 3312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 3323, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 3332, 1650, 1628, 1624,
	0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 237, 237, 3791, 0, 237,
	237, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 102, 678, 3368, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 86, 97, 0,
	0, 0, 3377, 3380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 2008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 237, 0, 3401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 87, 102, 1608, 1609,
	102, 0, 102, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 237, 0, 237, 237, 0, 1182, 237,
	1639, 0, 239, 239, 239, 0, 0, 1611, 0, 239,
	0, 0, 237, 237, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 3902, 1281, 102, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 102, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 3487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 0, 0, 237, 2775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 102, 1633, 1634, 1635, 1636, 0,
	0, 0, 0, 0, 0, 1616, 0, 171, 93, 0,
	96, 0, 0, 3969, 0, 0, 0, 0, 0, 3533,
	3534, 0, 0, 0, 0, 3538, 3539, 0, 0, 0,
	3542, 3543, 0, 0, 208, 0, 0, 3547, 0, 0,
	0, 0, 769, 1638, 1640, 0, 136, 0, 3551, 0,
	0, 0, 0, 0, 239, 1182, 1182, 239, 0, 0,
	0, 0, 0, 0, 3556, 1182, 0, 0, 1625, 1626,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 4012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	138, 0, 4034, 0, 2248, 0, 0, 239, 0, 0,
	0, 239, 0, 0, 175, 239, 0, 0, 0, 0,
	4046, 239, 209, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 202, 0, 239, 0, 239, 0, 239, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1450, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	3380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 0, 1182, 0, 1182, 0, 1772,
	0, 1110, 1632, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 1182, 1182, 0, 0, 0, 0, 0,
	237, 1772, 237, 0, 1182, 239, 0, 678, 239, 0,
	0, 0, 678, 0, 0, 0, 1182, 0, 1182, 1182,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 239,
	239, 0, 239, 0, 239, 0, 239, 0, 239, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3750, 3751, 3752, 1628, 1624, 0,
	1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 2181, 0, 0,
	3761, 3762, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 102, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 3380, 0, 0, 102, 102, 0, 0,
	102, 3809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3816, 0, 0, 941, 0, 0, 0, 0, 0,
	1182, 0, 3823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 237,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 237, 0, 237, 0, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 1024, 0,
	0, 0, 1097, 0, 0, 936, 0, 0, 0, 1182,
	0, 0, 0, 735, 0, 0, 237, 3380, 3380, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 1182, 102, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3924, 0,
	738, 3927, 0, 237, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 239, 757, 0, 0,
	3380, 0, 0, 0, 1182, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 739, 678, 237, 0,
	237, 0, 237, 0, 237, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 740,
	941, 941, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 3380, 0, 0, 3380, 0, 0, 0, 0, 741,
	695, 239, 742, 237, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 0, 0, 0, 0, 239,
	1182, 0, 0, 0, 0, 756, 0, 0, 2181, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 1114,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 697, 0, 714, 0, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 239, 698, 0, 753,
	0, 699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	102, 0, 0, 0, 700, 0, 239, 0, 0, 239,
	4065, 4065, 4065, 239, 0, 239, 0, 720, 1097, 1097,
	0, 0, 239, 239, 0, 0, 0, 1182, 1182, 0,
	1182, 744, 0, 4086, 0, 0, 0, 0, 0, 0,
	701, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 239, 745, 0, 0, 1182, 0, 0,
	702, 0, 0, 703, 0, 0, 0, 0, 724, 0,
	0, 239, 664, 239, 0, 0, 0, 0, 0, 0,
	0, 4065, 0, 0, 0, 0, 663, 0, 0, 0,
	1110, 0, 0, 746, 0, 0, 0, 761, 762, 759,
	0, 0, 0, 0, 0, 754, 1110, 0, 747, 0,
	239, 239, 239, 239, 0, 239, 0, 239, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 3380,
	0, 3380, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 723, 0, 0, 0, 748, 755, 0, 239, 0,
	718, 0, 0, 0, 749, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 758, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 237, 665, 0, 4065, 4193, 0,
	0, 704, 0, 0, 0, 4197, 752, 0, 0, 0,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 694, 0,
	715, 0, 0, 0, 0, 0, 0, 237, 0, 708,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 678,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 709, 0, 0, 727,
	0, 726, 0, 0, 0, 710, 0, 237, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 711, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 728, 0,
	725, 0, 0, 0, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 1182, 237, 0, 0, 237, 0, 0,
	0, 237, 0, 237, 0, 0, 0, 0, 0, 0,
	237, 237, 1114, 0, 0, 0, 1114, 0, 0, 0,
	1114, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 237, 0, 0, 102, 0, 0, 0, 0, 0,
	1097, 0, 0, 1114, 0, 0, 0, 0, 1097, 237,
	1182, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 237, 237,
	237, 237, 0, 237, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 1114,
	0, 0, 0, 0, 0, 1114, 0, 239, 239, 1114,
	239, 0, 0, 0, 0, 0, 237, 239, 0, 0,
	0, 0, 0, 1114, 237, 0, 0, 0, 0, 0,
	243, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 1182, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 102, 0, 0, 0,
	239, 0, 1182, 1114, 0, 0, 1182, 0, 0, 0,
	144, 0, 0, 239, 0, 0, 0, 68, 102, 44,
	43, 239, 0, 0, 1182, 239, 0, 0, 0, 0,
	670, 0, 0, 69, 1182, 0, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 0, 46, 0, 141, 239,
	0, 0, 0, 239, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 0, 79, 0, 0, 0, 0,
	0, 0, 1182, 1182, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 48, 64, 0,
	0, 0, 0, 0, 1182, 49, 0, 0, 0, 0,
	85, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 47, 0, 100, 0, 0, 0, 0, 86,
	97, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	239, 1182, 239, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 1110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2248, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 1114, 0, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 237, 0, 237, 1827,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 90,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 237,
	51, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 55, 0, 0,
	0, 0, 0, 65, 0, 0, 0, 0, 54, 171,
	93, 0, 96, 0, 0, 0, 52, 0, 237, 0,
	143, 0, 0, 0, 0, 0, 0, 53, 0, 1182,
	0, 678, 0, 0, 102, 0, 208, 0, 0, 237,
	0, 0, 0, 237, 58, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 140, 0, 0, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 237, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 237, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 1114, 1114, 0, 202, 0, 0, 239, 0, 0,
	0, 1114, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 0, 0, 239, 0, 102, 0,
	0, 102, 0, 0, 174, 0, 239, 3, 237, 0,
	237, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 239,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 1182, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 1182, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 1179, 1114,
	0, 1114, 1299, 1114, 0, 0, 0, 0, 0, 0,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1114, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 1114, 0, 1114, 1114, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 1110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 1299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	1182, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 993, 0, 0, 0,
	0, 0, 0, 0, 1182, 0, 0, 1827, 1827, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1182, 0, 239, 0, 239, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 1182, 1182, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 1114, 0, 0, 0,
	0, 0, 0, 0, 237, 239, 0, 0, 0, 0,
	0, 0, 237, 1182, 239, 0, 0, 237, 1182, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 1182, 1182, 1114, 0,
	0, 0, 0, 0, 0, 1114, 1182, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 237, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	1114, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 0, 0, 1179, 0, 0, 0,
	239, 0, 0, 1182, 1182, 0, 0, 670, 0, 0,
	1827, 0, 670, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 1110, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1114, 1772, 0, 0,
	1182, 0, 0, 1182, 0, 0, 1179, 0, 0, 0,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 1609, 0, 1641,
	1642, 1643, 1651, 1652, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 1114, 0, 1114, 1644, 1639, 0,
	0, 0, 0, 237, 0, 1611, 0, 0, 1114, 0,
	0, 0, 237, 1657, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 1299, 0, 0, 0, 1610, 0,
	0, 0, 0, 1179, 0, 0, 0, 239, 1630, 0,
	1182, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	1182, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 1633, 1634, 1635, 1636, 0, 0, 0,
	0, 0, 0, 1616, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 237,
	0, 0, 1648, 0, 0, 1658, 0, 0, 0, 0,
	0, 1638, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 0, 1299, 0, 1299, 0, 1654, 0, 1655,
	1180, 0, 0, 0, 1180, 0, 1625, 1626, 1300, 0,
	0, 1299, 1299, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 1299, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1299, 1631, 1299, 1299, 1299, 0,
	0, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 1656, 0, 0, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 0,
	0, 0, 0, 1300, 0, 0, 0, 1300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1637, 1300, 0, 0, 0, 0, 0, 0, 1114, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 1179, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 1649, 0, 0, 0, 0,
	0, 1300, 237, 1114, 0, 0, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 1609,
	0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 1179, 0,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 1644,
	1639, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	0, 0, 0, 1114, 0, 1657, 0, 1647, 0, 0,
	0, 1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619,
	1620, 1612, 1613, 1614, 1615, 1617, 1618, 237, 0, 0,
	1610, 2840, 0, 0, 0, 2841, 0, 0, 0, 0,
	1630, 0, 0, 0, 237, 0, 1114, 1179, 1627, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	1114, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 1179, 0, 0, 0, 0, 1114, 0,
	0, 0, 1114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1114, 0, 0, 0, 0, 1633, 1634, 1635, 1636, 0,
	0, 0, 0, 0, 0, 1616, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 1658, 0, 0,
	0, 0, 0, 1638, 1640, 0, 0, 0, 1114, 1114,
	0, 0, 1179, 0, 0, 0, 0, 0, 0, 1654,
	0, 1655, 0, 0, 0, 0, 0, 0, 1625, 1626,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1180, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 1114, 1179, 0,
	0, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 1180, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 1827, 0, 0, 0,
	0, 0, 1632, 0, 0, 1299, 1299, 0, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 0, 1827, 1827, 0, 1649, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1827, 0, 0, 0, 1300,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1114, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 1647,
	0, 0, 0, 1622, 1623, 1629, 1650, 1628, 1624, 0,
	1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 0,
	0, 0, 0, 2270, 0, 0, 0, 2271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1300,
	0, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 1300, 1300, 1300, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	1114, 1114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	0, 0, 0, 1179, 0, 0, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 1114, 0, 0, 0, 1114, 0, 1114, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 0,
	1114, 0, 1299, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 0, 1179, 0, 0, 0, 0, 1180,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 0, 0, 0, 1114, 0, 0,
	0, 0, 1299, 0, 1114, 1608, 1609, 0, 1641, 1642,
	1643, 1651, 1652, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 1639, 0, 0,
	0, 1114, 1114, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	1299, 1299, 0, 0, 1114, 0, 0, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 1180, 0,
	0, 0, 1299, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 1114, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 1114, 0, 0, 0, 1179, 0, 0, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 1114, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 1633, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 0, 1616, 1827, 0, 0, 1608, 1609, 0, 1641,
	1642, 1643, 1651, 1652, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 1114, 0, 1644, 1639, 0,
	1179, 1648, 0, 0, 1658, 1611, 0, 0, 1114, 0,
	1638, 1640, 0, 1657, 0, 0, 0, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 1655, 0,
	0, 0, 0, 1827, 0, 1625, 1626, 0, 1610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 1300, 1300, 1646, 1300, 0, 1627, 0, 0, 1114,
	0, 0, 0, 0, 1631, 0, 1300, 0, 0, 1114,
	1114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1114, 1645, 0, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 1634, 1635, 1636, 0, 0, 0,
	0, 0, 0, 1616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 1648, 0, 1827, 1658, 0, 0, 0, 0,
	0, 1638, 1640, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 1654, 0, 1655,
	0, 0, 0, 0, 0, 0, 1625, 1626, 0, 0,
	0, 0, 0, 0, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1114, 0, 1645, 0,
	0, 1299, 0, 0, 0, 0, 1114, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 1647, 0, 0, 0,
	1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619, 1620,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 1299, 0, 0,
	1637, 0, 0, 0, 3234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 1299, 1299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1179, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 1647, 0, 0,
	0, 1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619,
	1620, 1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 2843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0,
	0, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 1639, 0, 0, 0, 0, 0, 1179, 1611,
	1179, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1179, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 1610, 1300, 0, 0, 0, 0, 1300, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 1300,
	1627, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	1180, 0, 0, 0, 0, 0, 0, 0, 0, 1179,
	0, 0, 0, 0, 0, 0, 1179, 0, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1299, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1634, 1635,
	1636, 0, 0, 0, 0, 0, 0, 1616, 0, 0,
	0, 1179, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 1300, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 1658,
	0, 0, 0, 0, 0, 1638, 1640, 0, 1300, 0,
	0, 0, 0, 1299, 1299, 1299, 0, 0, 0, 0,
	0, 1654, 0, 1655, 1179, 0, 0, 0, 0, 0,
	1625, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1180, 0, 0, 1180, 0, 0, 1646, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1179, 0, 1299, 0, 0,
	0, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	1179, 0, 0, 0, 0, 0, 1180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1637, 0, 0, 0, 0, 0,
	0, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1299, 1299, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 1609, 0, 1641, 1642,
	1643, 1651, 1652, 1653, 0, 0, 0, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 1644, 1639, 1179, 0,
	0, 1299, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1180, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 1622, 1623, 1629, 1650, 1628,
	1624, 0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617,
	1618, 0, 0, 0, 0, 0, 0, 0, 0, 2842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 1608, 1609,
	0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1299, 1644,
	1639, 1648, 0, 0, 1658, 0, 0, 1611, 1299, 1299,
	1638, 1640, 0, 0, 0, 1657, 0, 1300, 0, 0,
	0, 0, 0, 0, 0, 1299, 1654, 0, 1655, 0,
	0, 0, 0, 0, 0, 1625, 1626, 0, 0, 0,
	1610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 1646, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 1300, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 1300, 1300, 1300,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1634, 1635, 1636, 0,
	0, 0, 1180, 0, 0, 1616, 0, 0, 0, 0,
	1608, 1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 1637,
	0, 1644, 1639, 0, 1648, 0, 0, 1658, 0, 1611,
	0, 0, 0, 1638, 1640, 0, 0, 1657, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1654,
	0, 1655, 0, 0, 0, 0, 0, 0, 1625, 1626,
	0, 0, 1610, 0, 1649, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 1646, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 1180, 0, 1180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1634, 1635,
	1636, 0, 0, 0, 0, 0, 1647, 1616, 1180, 0,
	1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619, 1620,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 0, 0,
	0, 0, 1637, 0, 2839, 0, 1648, 0, 0, 1658,
	0, 0, 0, 0, 0, 1638, 1640, 0, 0, 0,
	0, 0, 1632, 0, 0, 1180, 0, 0, 0, 0,
	0, 1654, 1180, 1655, 0, 0, 0, 0, 0, 0,
	1625, 1626, 0, 0, 0, 0, 0, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1300,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	0, 0, 1300, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	1300, 1300, 0, 0, 0, 0, 0, 0, 0, 1647,
	1180, 0, 0, 1622, 1623, 1629, 1650, 1628, 1624, 0,
	1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 0,
	0, 0, 0, 0, 1637, 0, 0, 2838, 0, 0,
	1180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1649,
	0, 1180, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 1622, 1623, 1629, 1650, 1628,
	1624, 0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617,
	1618, 0, 0, 0, 1180, 0, 0, 1300, 0, 2837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1177, 0, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 1300, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 1183, 253, 254, 1184, 1185,
	1186, 1300, 1187, 532, 1188, 1189, 1190, 1191, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 1192, 537, 265, 266, 267, 268, 269,
	1193, 1194, 0, 270, 538, 539, 540, 1195, 271, 272,
	541, 1196, 1263, 1197, 273, 274, 275, 276, 277, 278,
	279, 0, 1198, 281, 282, 283, 280, 1199, 284, 0,
	285, 286, 287, 288, 1200, 289, 1055, 290, 291, 1201,
	1202, 1204, 1203, 1205, 1206, 1207, 292, 293, 294, 295,
	0, 296, 542, 543, 1208, 300, 297, 298, 1209, 301,
	299, 1210, 302, 303, 304, 1211, 1212, 305, 306, 307,
	1213, 308, 309, 1214, 310, 311, 312, 1215, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 1216, 244, 1217, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 1218, 330,
	1219, 1220, 1056, 331, 332, 548, 549, 333, 334, 1221,
	335, 550, 1222, 551, 336, 1223, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 1058, 342, 343, 1224, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	1225, 1057, 350, 555, 556, 1226, 557, 1227, 352, 353,
	1059, 558, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 1228, 364, 366,
	365, 1229, 367, 559, 1062, 368, 369, 1063, 1230, 370,
	371, 372, 1231, 1232, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 1233, 246, 1066, 397, 1234, 560, 398, 561,
	400, 401, 1235, 0, 402, 0, 1236, 1237, 404, 405,
	406, 1238, 1239, 407, 408, 562, 1067, 409, 1068, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 1240, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 1241, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 1242, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 1243, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 1244, 469, 470, 468, 471,
	472, 473, 1245, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 1246, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 1247, 495, 496, 0, 494, 1248, 497, 498,
	499, 500, 501, 502, 320, 503, 1249, 504, 573, 574,
	575, 576, 1250, 511, 1251, 505, 506, 577, 507, 578,
	1252, 508, 509, 510, 0, 512, 513, 1253, 1254, 514,
	515, 516, 518, 519, 517, 520, 1255, 521, 1256, 0,
	522, 523, 524, 579, 580, 581, 1257, 526, 525, 582,
	1258, 1259, 1260, 1261, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 2411, 0, 0, 0, 0, 0, 0, 0, 2412,
	247, 248, 249, 250, 251, 252, 1183, 253, 254, 1184,
	1185, 1186, 0, 1187, 532, 1188, 1189, 1190, 1191, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 534, 0,
	263, 535, 264, 536, 1192, 537, 265, 266, 267, 268,
	269, 1193, 1194, 0, 270, 538, 539, 540, 1195, 271,
	272, 541, 1196, 1263, 1197, 273, 274, 275, 276, 277,
	278, 279, 0, 1198, 281, 282, 283, 280, 1199, 284,
	0, 285, 286, 287, 288, 1200, 289, 1055, 290, 291,
	1201, 1202, 1204, 1203, 1205, 1206, 1207, 292, 293, 294,
	295, 0, 296, 542, 543, 1208, 300, 297, 298, 1209,
	301, 299, 1210, 302, 303, 304, 1211, 1212, 305, 306,
	307, 1213, 308, 309, 1214, 310, 311, 312, 1215, 313,
	314, 544, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 545, 546, 1216, 244, 1217, 0, 0, 0,
	0, 326, 327, 328, 547, 0, 0, 0, 329, 1218,
	330, 1219, 1220, 1056, 331, 332, 548, 549, 333, 334,
	1221, 335, 550, 1222, 551, 336, 1223, 337, 338, 339,
	340, 341, 552, 553, 554, 399, 1058, 342, 343, 1224,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 1225, 1057, 350, 555, 556, 1226, 557, 1227, 352,
	353, 1059, 558, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 1228, 364,
	366, 365, 1229, 367, 559, 1062, 368, 369, 1063, 1230,
	370, 371, 372, 1231, 1232, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 1233, 246, 1066, 397, 1234, 560, 398,
	561, 400, 401, 1235, 0, 402, 0, 1236, 1237, 404,
	405, 406, 1238, 1239, 407, 408, 562, 1067, 409, 1068,
	563, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 1240, 420, 421, 564, 565, 566, 422, 567,
	423, 424, 1241, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 568, 434, 433, 435, 1242, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 1243, 446, 447, 448, 1069, 449, 450,
	451, 452, 569, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 1244, 469, 470, 468,
	471, 472, 473, 1245, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 570, 0, 483, 1246,
	484, 485, 486, 487, 460, 488, 493, 571, 489, 490,
	491, 492, 572, 1247, 495, 496, 0, 494, 1248, 497,
	498, 499, 500, 501, 502, 320, 503, 1249, 504, 573,
	574, 575, 576, 1250, 511, 1251, 505, 506, 577, 507,
	578, 1252, 508, 509, 510, 0, 512, 513, 1253, 1254,
	514, 515, 516, 518, 519, 517, 520, 1255, 521, 1256,
	0, 522, 523, 524, 579, 580, 581, 1257, 526, 525,
	582, 1258, 1259, 1260, 1261, 527, 528, 583, 529, 530,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1177, 0, 0, 0, 0, 3242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3244, 247,
	248, 249, 250, 251, 252, 1183, 253, 254, 1184, 1185,
	1186, 0, 1187, 532, 1188, 1189, 1190, 1191, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 1192, 537, 265, 266, 267, 268, 269,
	1193, 1194, 0, 270, 538, 539, 540, 1195, 271, 272,
	541, 1196, 1263, 1197, 273, 274, 275, 276, 277, 278,
	279, 0, 1198, 281, 282, 283, 280, 1199, 284, 0,
	285, 286, 287, 288, 1200, 289, 1055, 290, 291, 1201,
	1202, 1204, 1203, 1205, 1206, 1207, 292, 293, 294, 295,
	0, 296, 542, 543, 1208, 300, 297, 298, 1209, 301,
	299, 1210, 302, 303, 304, 1211, 1212, 305, 306, 307,
	1213, 308, 309, 1214, 310, 311, 312, 1215, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 1216, 244, 1217, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 1218, 330,
	1219, 1220, 1056, 331, 332, 548, 549, 333, 334, 1221,
	335, 550, 1222, 551, 336, 1223, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 1058, 342, 343, 1224, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	1225, 1057, 350, 555, 556, 1226, 557, 1227, 352, 353,
	1059, 558, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 1228, 364, 366,
	365, 1229, 367, 559, 1062, 368, 369, 1063, 1230, 370,
	371, 372, 1231, 1232, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 1233, 246, 1066, 397, 1234, 560, 398, 561,
	400, 401, 1235, 0, 402, 0, 1236, 1237, 404, 405,
	406, 1238, 1239, 407, 408, 562, 1067, 409, 1068, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 1240, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 1241, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 1242, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 1243, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 1244, 469, 470, 468, 471,
	472, 473, 1245, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 1246, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 1247, 495, 496, 0, 494, 1248, 497, 498,
	499, 500, 501, 502, 320, 503, 1249, 504, 573, 574,
	575, 576, 1250, 511, 1251, 505, 506, 577, 507, 578,
	1252, 508, 509, 510, 0, 512, 513, 1253, 1254, 514,
	515, 516, 518, 519, 517, 520, 1255, 521, 1256, 0,
	522, 523, 524, 579, 580, 581, 1257, 526, 525, 582,
	1258, 1259, 1260, 1261, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 1177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3589, 247, 248, 249, 250, 251, 252, 1183, 253,
	254, 1184, 1185, 1186, 0, 1187, 532, 1188, 1189, 1190,
	1191, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	534, 0, 263, 535, 264, 536, 1192, 537, 265, 266,
	267, 268, 269, 1193, 1194, 0, 270, 538, 539, 540,
	1195, 271, 272, 541, 1196, 1263, 1197, 273, 274, 275,
	276, 277, 278, 279, 0, 1198, 281, 282, 283, 280,
	1199, 284, 0, 285, 286, 287, 288, 1200, 289, 1055,
	290, 291, 1201, 1202, 1204, 1203, 1205, 1206, 1207, 292,
	293, 294, 295, 0, 296, 542, 543, 1208, 300, 297,
	298, 1209, 301, 299, 1210, 302, 303, 304, 1211, 1212,
	305, 306, 307, 1213, 308, 309, 1214, 310, 311, 312,
	1215, 313, 314, 544, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 545, 546, 1216, 244, 1217, 0,
	0, 0, 0, 326, 327, 328, 547, 0, 0, 0,
	329, 1218, 330, 1219, 1220, 1056, 331, 332, 548, 549,
	333, 334, 1221, 335, 550, 1222, 551, 336, 1223, 337,
	338, 339, 340, 341, 552, 553, 554, 399, 1058, 342,
	343, 1224, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 1225, 1057, 350, 555, 556, 1226, 557,
	1227, 352, 353, 1059, 558, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	1228, 364, 366, 365, 1229, 367, 559, 1062, 368, 369,
	1063, 1230, 370, 371, 372, 1231, 1232, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 1233, 246, 1066, 397, 1234,
	560, 398, 561, 400, 401, 1235, 0, 402, 0, 1236,
	1237, 404, 405, 406, 1238, 1239, 407, 408, 562, 1067,
	409, 1068, 563, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 1240, 420, 421, 564, 565, 566,
	422, 567, 423, 424, 1241, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 568, 434, 433, 435, 1242, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 1243, 446, 447, 448, 1069,
	449, 450, 451, 452, 569, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 1244, 469,
	470, 468, 471, 472, 473, 1245, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 570, 0,
	483, 1246, 484, 485, 486, 487, 460, 488, 493, 571,
	489, 490, 491, 492, 572, 1247, 495, 496, 0, 494,
	1248, 497, 498, 499, 500, 501, 502, 320, 503, 1249,
	504, 573, 574, 575, 576, 1250, 511, 1251, 505, 506,
	577, 507, 578, 1252, 508, 509, 510, 0, 512, 513,
	1253, 1254, 514, 515, 516, 518, 519, 517, 520, 1255,
	521, 1256, 0, 522, 523, 524, 579, 580, 581, 1257,
	526, 525, 582, 1258, 1259, 1260, 1261, 527, 528, 583,
	529, 530, 531, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3756,
	247, 248, 249, 250, 251, 252, 1183, 253, 254, 1184,
	1185, 1186, 0, 1187, 532, 1188, 1189, 1190, 1191, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 534, 0,
	263, 535, 264, 536, 1192, 537, 265, 266, 267, 268,
	269, 1193, 1194, 0, 270, 538, 539, 540, 1195, 271,
	272, 541, 1196, 1263, 1197, 273, 274, 275, 276, 277,
	278, 279, 0, 1198, 281, 282, 283, 280, 1199, 284,
	0, 285, 286, 287, 288, 1200, 289, 1055, 290, 291,
	1201, 1202, 1204, 1203, 1205, 1206, 1207, 292, 293, 294,
	295, 0, 296, 542, 543, 1208, 300, 297, 298, 1209,
	301, 299, 1210, 302, 303, 304, 1211, 1212, 305, 306,
	307, 1213, 308, 309, 1214, 310, 311, 312, 1215, 313,
	314, 544, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 545, 546, 1216, 244, 1217, 0, 0, 0,
	0, 326, 327, 328, 547, 0, 0, 0, 329, 1218,
	330, 1219, 1220, 1056, 331, 332, 548, 549, 333, 334,
	1221, 335, 550, 1222, 551, 336, 1223, 337, 338, 339,
	340, 341, 552, 553, 554, 399, 1058, 342, 343, 1224,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 1225, 1057, 350, 555, 556, 1226, 557, 1227, 352,
	353, 1059, 558, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 1228, 364,
	366, 365, 1229, 367, 559, 1062, 368, 369, 1063, 1230,
	370, 371, 372, 1231, 1232, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 1233, 246, 1066, 397, 1234, 560, 398,
	561, 400, 401, 1235, 0, 402, 0, 1236, 1237, 404,
	405, 406, 1238, 1239, 407, 408, 562, 1067, 409, 1068,
	563, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 1240, 420, 421, 564, 565, 566, 422, 567,
	423, 424, 1241, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 568, 434, 433, 435, 1242, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 1243, 446, 447, 448, 1069, 449, 450,
	451, 452, 569, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 1244, 469, 470, 468,
	471, 472, 473, 1245, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 570, 0, 483, 1246,
	484, 485, 486, 487, 460, 488, 493, 571, 489, 490,
	491, 492, 572, 1247, 495, 496, 0, 494, 1248, 497,
	498, 499, 500, 501, 502, 320, 503, 1249, 504, 573,
	574, 575, 576, 1250, 511, 1251, 505, 506, 577, 507,
	578, 1252, 508, 509, 510, 0, 512, 513, 1253, 1254,
	514, 515, 516, 518, 519, 517, 520, 1255, 521, 1256,
	0, 522, 523, 524, 579, 580, 581, 1257, 526, 525,
	582, 1258, 1259, 1260, 1261, 527, 528, 583, 529, 530,
	531, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3648, 247, 248,
	249, 250, 251, 252, 1183, 253, 254, 1184, 1185, 1186,
	0, 1187, 532, 1188, 1189, 1190, 1191, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 534, 0, 263, 535,
	264, 536, 1192, 537, 265, 266, 267, 268, 269, 1193,
	1194, 0, 270, 538, 539, 540, 1195, 271, 272, 541,
	1196, 1263, 1197, 273, 274, 275, 276, 277, 278, 279,
	0, 1198, 281, 282, 283, 280, 1199, 284, 0, 285,
	286, 287, 288, 1200, 289, 1055, 290, 291, 1201, 1202,
	1204, 1203, 1205, 1206, 1207, 292, 293, 294, 295, 0,
	296, 542, 543, 1208, 300, 297, 298, 1209, 301, 299,
	1210, 302, 303, 304, 1211, 1212, 305, 306, 307, 1213,
	308, 309, 1214, 310, 311, 312, 1215, 313, 314, 544,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	545, 546, 1216, 244, 1217, 0, 0, 0, 0, 326,
	327, 328, 547, 0, 0, 0, 329, 1218, 330, 1219,
	1220, 1056, 331, 332, 548, 549, 333, 334, 1221, 335,
	550, 1222, 551, 336, 1223, 337, 338, 339, 340, 341,
	552, 553, 554, 399, 1058, 342, 343, 1224, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 1225,
	1057, 350, 555, 556, 1226, 557, 1227, 352, 353, 1059,
	558, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 1228, 364, 366, 365,
	1229, 367, 559, 1062, 368, 369, 1063, 1230, 370, 371,
	372, 1231, 1232, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 1233, 246, 1066, 397, 1234, 560, 398, 561, 400,
	401, 1235, 0, 402, 0, 1236, 1237, 404, 405, 406,
	1238, 1239, 407, 408, 562, 1067, 409, 1068, 563, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	1240, 420, 421, 564, 565, 566, 422, 567, 423, 424,
	1241, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	568, 434, 433, 435, 1242, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 1243, 446, 447, 448, 1069, 449, 450, 451, 452,
	569, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 1244, 469, 470, 468, 471, 472,
	473, 1245, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 570, 0, 483, 1246, 484, 485,
	486, 487, 460, 488, 493, 571, 489, 490, 491, 492,
	572, 1247, 495, 496, 0, 494, 1248, 497, 498, 499,
	500, 501, 502, 320, 503, 1249, 504, 573, 574, 575,
	576, 1250, 511, 1251, 505, 506, 577, 507, 578, 1252,
	508, 509, 510, 0, 512, 513, 1253, 1254, 514, 515,
	516, 518, 519, 517, 520, 1255, 521, 1256, 0, 522,
	523, 524, 579, 580, 581, 1257, 526, 525, 582, 1258,
	1259, 1260, 1261, 527, 528, 583, 529, 530, 531, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3519, 247, 248, 249, 250,
	251, 252, 1183, 253, 254, 1184, 1185, 1186, 0, 1187,
	532, 1188, 1189, 1190, 1191, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 534, 0, 263, 535, 264, 536,
	1192, 537, 265, 266, 267, 268, 269, 1193, 1194, 0,
	270, 538, 539, 540, 1195, 271, 272, 541, 1196, 1263,
	1197, 273, 274, 275, 276, 277, 278, 279, 0, 1198,
	281, 282, 283, 280, 1199, 284, 0, 285, 286, 287,
	288, 1200, 289, 1055, 290, 291, 1201, 1202, 1204, 1203,
	1205, 1206, 1207, 292, 293, 294, 295, 0, 296, 542,
	543, 1208, 300, 297, 298, 1209, 301, 299, 1210, 302,
	303, 304, 1211, 1212, 305, 306, 307, 1213, 308, 309,
	1214, 310, 311, 312, 1215, 313, 314, 544, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 545, 546,
	1216, 244, 1217, 0, 0, 0, 0, 326, 327, 328,
	547, 0, 0, 0, 329, 1218, 330, 1219, 1220, 1056,
	331, 332, 548, 549, 333, 334, 1221, 335, 550, 1222,
	551, 336, 1223, 337, 338, 339, 340, 341, 552, 553,
	554, 399, 1058, 342, 343, 1224, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 1225, 1057, 350,
	555, 556, 1226, 557, 1227, 352, 353, 1059, 558, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 1228, 364, 366, 365, 1229, 367,
	559, 1062, 368, 369, 1063, 1230, 370, 371, 372, 1231,
	1232, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 1233,
	246, 1066, 397, 1234, 560, 398, 561, 400, 401, 1235,
	0, 402, 0, 1236, 1237, 404, 405, 406, 1238, 1239,
	407, 408, 562, 1067, 409, 1068, 563, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 1240, 420,
	421, 564, 565, 566, 422, 567, 423, 424, 1241, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 568, 434,
	433, 435, 1242, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 1243,
	446, 447, 448, 1069, 449, 450, 451, 452, 569, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 1244, 469, 470, 468, 471, 472, 473, 1245,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 570, 0, 483, 1246, 484, 485, 486, 487,
	460, 488, 493, 571, 489, 490, 491, 492, 572, 1247,
	495, 496, 0, 494, 1248, 497, 498, 499, 500, 501,
	502, 320, 503, 1249, 504, 573, 574, 575, 576, 1250,
	511, 1251, 505, 506, 577, 507, 578, 1252, 508, 509,
	510, 0, 512, 513, 1253, 1254, 514, 515, 516, 518,
	519, 517, 520, 1255, 521, 1256, 0, 522, 523, 524,
	579, 580, 581, 1257, 526, 525, 582, 1258, 1259, 1260,
	1261, 527, 528, 583, 529, 530, 531, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3260, 247, 248, 249, 250, 251, 252,
	1183, 253, 254, 1184, 1185, 1186, 0, 1187, 532, 1188,
	1189, 1190, 1191, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 534, 0, 263, 535, 264, 536, 1192, 537,
	265, 266, 267, 268, 269, 1193, 1194, 0, 270, 538,
	539, 540, 1195, 271, 272, 541, 1196, 1263, 1197, 273,
	274, 275, 276, 277, 278, 279, 0, 1198, 281, 282,
	283, 280, 1199, 284, 0, 285, 286, 287, 288, 1200,
	289, 1055, 290, 291, 1201, 1202, 1204, 1203, 1205, 1206,
	1207, 292, 293, 294, 295, 0, 296, 542, 543, 1208,
	300, 297, 298, 1209, 301, 299, 1210, 302, 303, 304,
	1211, 1212, 305, 306, 307, 1213, 308, 309, 1214, 310,
	311, 312, 1215, 313, 314, 544, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 545, 546, 1216, 244,
	1217, 0, 0, 0, 0, 326, 327, 328, 547, 0,
	0, 0, 329, 1218, 330, 1219, 1220, 1056, 331, 332,
	548, 549, 333, 334, 1221, 335, 550, 1222, 551, 336,
	1223, 337, 338, 339, 340, 341, 552, 553, 554, 399,
	1058, 342, 343, 1224, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 1225, 1057, 350, 555, 556,
	1226, 557, 1227, 352, 353, 1059, 558, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 1228, 364, 366, 365, 1229, 367, 559, 1062,
	368, 369, 1063, 1230, 370, 371, 372, 1231, 1232, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 1233, 246, 1066,
	397, 1234, 560, 398, 561, 400, 401, 1235, 0, 402,
	0, 1236, 1237, 404, 405, 406, 1238, 1239, 407, 408,
	562, 1067, 409, 1068, 563, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 1240, 420, 421, 564,
	565, 566, 422, 567, 423, 424, 1241, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 568, 434, 433, 435,
	1242, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 1243, 446, 447,
	448, 1069, 449, 450, 451, 452, 569, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	1244, 469, 470, 468, 471, 472, 473, 1245, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	570, 0, 483, 1246, 484, 485, 486, 487, 460, 488,
	493, 571, 489, 490, 491, 492, 572, 1247, 495, 496,
	0, 494, 1248, 497, 498, 499, 500, 501, 502, 320,
	503, 1249, 504, 573, 574, 575, 576, 1250, 511, 1251,
	505, 506, 577, 507, 578, 1252, 508, 509, 510, 0,
	512, 513, 1253, 1254, 514, 515, 516, 518, 519, 517,
	520, 1255, 521, 1256, 0, 522, 523, 524, 579, 580,
	581, 1257, 526, 525, 582, 1258, 1259, 1260, 1261, 527,
	528, 583, 529, 530, 531, 1177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3090, 247, 248, 249, 250, 251, 252, 1183, 253,
	254, 1184, 1185, 1186, 0, 1187, 532, 1188, 1189, 1190,
	1191, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	534, 0, 263, 535, 264, 536, 1192, 537, 265, 266,
	267, 268, 269, 1193, 1194, 0, 270, 538, 539, 540,
	1195, 271, 272, 541, 1196, 1263, 1197, 273, 274, 275,
	276, 277, 278, 279, 0, 1198, 281, 282, 283, 280,
	1199, 284, 0, 285, 286, 287, 288, 1200, 289, 1055,
	290, 291, 1201, 1202, 1204, 1203, 1205, 1206, 1207, 292,
	293, 294, 295, 0, 296, 542, 543, 1208, 300, 297,
	298, 1209, 301, 299, 1210, 302, 303, 304, 1211, 1212,
	305, 306, 307, 1213, 308, 309, 1214, 310, 311, 312,
	1215, 313, 314, 544, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 545, 546, 1216, 244, 1217, 0,
	0, 0, 0, 326, 327, 328, 547, 0, 0, 0,
	329, 1218, 330, 1219, 1220, 1056, 331, 332, 548, 549,
	333, 334, 1221, 335, 550, 1222, 551, 336, 1223, 337,
	338, 339, 340, 341, 552, 553, 554, 399, 1058, 342,
	343, 1224, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 1225, 1057, 350, 555, 556, 1226, 557,
	1227, 352, 353, 1059, 558, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	1228, 364, 366, 365, 1229, 367, 559, 1062, 368, 369,
	1063, 1230, 370, 371, 372, 1231, 1232, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 1233, 246, 1066, 397, 1234,
	560, 398, 561, 400, 401, 1235, 0, 402, 0, 1236,
	1237, 404, 405, 406, 1238, 1239, 407, 408, 562, 1067,
	409, 1068, 563, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 1240, 420, 421, 564, 565, 566,
	422, 567, 423, 424, 1241, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 568, 434, 433, 435, 1242, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 1243, 446, 447, 448, 1069,
	449, 450, 451, 452, 569, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 1244, 469,
	470, 468, 471, 472, 473, 1245, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 570, 0,
	483, 1246, 484, 485, 486, 487, 460, 488, 493, 571,
	489, 490, 491, 492, 572, 1247, 495, 496, 0, 494,
	1248, 497, 498, 499, 500, 501, 502, 320, 503, 1249,
	504, 573, 574, 575, 576, 1250, 511, 1251, 505, 506,
	577, 507, 578, 1252, 508, 509, 510, 0, 512, 513,
	1253, 1254, 514, 515, 516, 518, 519, 517, 520, 1255,
	521, 1256, 0, 522, 523, 524, 579, 580, 581, 1257,
	526, 525, 582, 1258, 1259, 1260, 1261, 527, 528, 583,
	529, 530, 531, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	247, 248, 249, 250, 251, 252, 1183, 253, 254, 1184,
	1185, 1186, 0, 1187, 532, 1188, 1189, 1190, 1191, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 534, 0,
	263, 535, 264, 536, 1192, 537, 265, 266, 267, 268,
	269, 1193, 1194, 0, 270, 538, 539, 540, 1195, 271,
	272, 541, 1196, 1263, 1197, 273, 274, 275, 276, 277,
	278, 279, 0, 1198, 281, 282, 283, 280, 1199, 284,
	0, 285, 286, 287, 288, 1200, 289, 1055, 290, 291,
	1201, 1202, 1204, 1203, 1205, 1206, 1207, 292, 293, 294,
	295, 0, 296, 542, 543, 1208, 300, 297, 298, 1209,
	301, 299, 1210, 302, 303, 304, 1211, 1212, 305, 306,
	307, 1213, 308, 309, 1214, 310, 311, 312, 1215, 313,
	314, 544, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 545, 546, 1216, 244, 1217, 0, 0, 0,
	0, 326, 327, 328, 547, 0, 0, 0, 329, 1218,
	330, 1219, 1220, 1056, 331, 332, 548, 549, 333, 334,
	1221, 335, 550, 1222, 551, 336, 1223, 337, 338, 339,
	340, 341, 552, 553, 554, 399, 1058, 342, 343, 1224,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 1225, 1057, 350, 555, 556, 1226, 557, 1227, 352,
	353, 1059, 558, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 1228, 364,
	366, 365, 1229, 367, 559, 1062, 368, 369, 1063, 1230,
	370, 371, 372, 1231, 1232, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 1233, 246, 1066, 397, 1234, 560, 398,
	561, 400, 401, 1235, 0, 402, 0, 1236, 1237, 404,
	405, 406, 1238, 1239, 407, 408, 562, 1067, 409, 1068,
	563, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 1240, 420, 421, 564, 565, 566, 422, 567,
	423, 424, 1241, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 568, 434, 433, 435, 1242, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 1243, 446, 447, 448, 1069, 449, 450,
	451, 452, 569, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 1244, 469, 470, 468,
	471, 472, 473, 1245, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 570, 0, 483, 1246,
	484, 485, 486, 487, 460, 488, 493, 571, 489, 490,
	491, 492, 572, 1247, 495, 496, 0, 494, 1248, 497,
	498, 499, 500, 501, 502, 320, 503, 1249, 504, 573,
	574, 575, 576, 1250, 511, 1251, 505, 506, 577, 507,
	578, 1252, 508, 509, 510, 0, 512, 513, 1253, 1254,
	514, 515, 516, 518, 519, 517, 520, 1255, 521, 1256,
	0, 522, 523, 524, 579, 580, 581, 1257, 526, 525,
	582, 1258, 1259, 1260, 1261, 527, 528, 583, 529, 530,
	531, 1275, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	247, 248, 249, 250, 251, 252, 1183, 253, 254, 1184,
	1185, 1186, 0, 1187, 532, 1188, 1189, 1190, 1191, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 534, 0,
	263, 535, 264, 536, 1192, 537, 265, 266, 267, 268,
	269, 1193, 1194, 0, 270, 538, 539, 540, 1195, 271,
	272, 541, 1196, 1263, 1197, 273, 274, 275, 276, 277,
	278, 279, 0, 1198, 281, 282, 283, 280, 1199, 284,
	0, 285, 286, 287, 288, 1200, 289, 1055, 290, 291,
	1201, 1202, 1204, 1203, 1205, 1206, 1207, 292, 293, 294,
	295, 0, 296, 542, 543, 1208, 300, 297, 298, 1209,
	301, 299, 1210, 302, 303, 304, 1211, 1212, 305, 306,
	307, 1213, 308, 309, 1214, 310, 311, 312, 1215, 313,
	314, 544, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 545, 546, 1216, 244, 1217, 0, 0, 0,
	0, 326, 327, 328, 547, 0, 0, 0, 329, 1218,
	330, 1219, 1220, 1056, 331, 332, 548, 549, 333, 334,
	1221, 335, 550, 1222, 551, 336, 1223, 337, 338, 339,
	340, 341, 552, 553, 554, 399, 1058, 342, 343, 1224,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 1225, 1057, 350, 555, 556, 1226, 557, 1227, 352,
	353, 1059, 558, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 1228, 364,
	366, 365, 1229, 367, 559, 1062, 368, 369, 1063, 1230,
	370, 371, 372, 1231, 1232, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 1233, 246, 1066, 397, 1234, 560, 398,
	561, 400, 401, 1235, 0, 402, 0, 1236, 1237, 404,
	405, 406, 1238, 1239, 407, 408, 562, 1067, 409, 1068,
	563, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 1240, 420, 421, 564, 565, 566, 422, 567,
	423, 424, 1241, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 568, 434, 433, 435, 1242, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 1243, 446, 447, 448, 1069, 449, 450,
	451, 452, 569, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 1244, 469, 470, 468,
	471, 472, 473, 1245, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 570, 0, 483, 1246,
	484, 485, 486, 487, 460, 488, 493, 571, 489, 490,
	491, 492, 572, 1247, 495, 496, 0, 494, 1248, 497,
	498, 499, 500, 501, 502, 320, 503, 1249, 504, 573,
	574, 575, 576, 1250, 511, 1251, 505, 506, 577, 507,
	578, 1252, 508, 509, 510, 0, 512, 513, 1253, 1254,
	514, 515, 516, 518, 519, 517, 520, 1255, 521, 1256,
	0, 522, 523, 524, 579, 580, 581, 1257, 526, 525,
	582, 1258, 1259, 1260, 1261, 527, 528, 583, 529, 530,
	531, 1174, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 1183, 253, 254, 1184,
	1185, 1186, 0, 1187, 532, 1188, 1189, 1190, 1191, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 534, 0,
	263, 535, 264, 536, 1192, 537, 265, 266, 267, 268,
	269, 1193, 1194, 0, 270, 538, 539, 540, 1195, 271,
	272, 541, 1196, 1263, 1197, 273, 274, 275, 276, 277,
	278, 279, 0, 1198, 281, 282, 283, 280, 1199, 284,
	0, 285, 286, 287, 288, 1200, 289, 1055, 290, 291,
	1201, 1202, 1204, 1203, 1205, 1206, 1207, 292, 293, 294,
	295, 0, 296, 542, 543, 1208, 300, 297, 298, 1209,
	301, 299, 1210, 302, 303, 304, 1211, 1212, 305, 306,
	307, 1213, 308, 309, 1214, 310, 311, 312, 1215, 313,
	314, 544, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 545, 546, 1216, 244, 1217, 0, 0, 0,
	0, 326, 327, 328, 547, 0, 0, 0, 329, 1218,
	330, 1219, 1220, 1056, 331, 332, 548, 549, 333, 334,
	1221, 335, 550, 1222, 551, 336, 1223, 337, 338, 339,
	340, 341, 552, 553, 554, 399, 1058, 342, 343, 1224,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 1225, 1057, 350, 555, 556, 1226, 557, 1227, 352,
	353, 1059, 558, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 1228, 364,
	366, 365, 1229, 367, 559, 1062, 368, 369, 1063, 1230,
	370, 371, 372, 1231, 1232, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 1233, 246, 1066, 397, 1234, 560, 398,
	561, 400, 401, 1235, 0, 402, 0, 1236, 1237, 404,
	405, 406, 1238, 1239, 407, 408, 562, 1067, 409, 1068,
	563, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 1240, 420, 421, 564, 565, 566, 422, 567,
	423, 424, 1241, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 568, 434, 433, 435, 1242, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 1243, 446, 447, 448, 1069, 449, 450,
	451, 452, 569, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 1244, 469, 470, 468,
	471, 472, 473, 1245, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 570, 0, 483, 1246,
	484, 485, 486, 487, 460, 488, 493, 571, 489, 490,
	491, 492, 572, 1247, 495, 496, 0, 494, 1248, 497,
	498, 499, 500, 501, 502, 320, 503, 1249, 504, 573,
	574, 575, 576, 1250, 511, 1251, 505, 506, 577, 507,
	578, 1252, 508, 509, 510, 0, 512, 513, 1253, 1254,
	514, 515, 516, 518, 519, 517, 520, 1255, 521, 1256,
	0, 522, 523, 524, 579, 580, 581, 1257, 526, 525,
	582, 1258, 1259, 1260, 1261, 527, 528, 583, 529, 530,
	531, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 1183, 253, 254, 1184, 1185, 1186,
	0, 1187, 532, 1188, 1189, 1190, 1191, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 534, 0, 263, 535,
	264, 536, 1192, 537, 265, 266, 267, 268, 269, 1193,
	1194, 0, 270, 538, 539, 540, 1195, 271, 272, 541,
	1196, 1263, 1197, 273, 274, 275, 276, 277, 278, 279,
	0, 1198, 281, 282, 283, 280, 1199, 284, 0, 285,
	286, 287, 288, 1200, 289, 1055, 290, 291, 1201, 1202,
	1204, 1203, 1205, 1206, 1207, 292, 293, 294, 295, 0,
	296, 542, 543, 1208, 300, 297, 298, 1209, 301, 299,
	1210, 302, 303, 304, 1211, 1212, 305, 306, 307, 1213,
	308, 309, 1214, 310, 311, 312, 1215, 313, 314, 544,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	545, 546, 1216, 244, 1217, 0, 0, 0, 0, 326,
	327, 328, 547, 0, 0, 0, 329, 1218, 330, 1219,
	1220, 1056, 331, 332, 548, 549, 333, 334, 1221, 335,
	550, 1222, 551, 336, 1223, 337, 338, 339, 340, 341,
	552, 553, 554, 399, 1058, 342, 343, 1224, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 1225,
	1057, 350, 555, 556, 1226, 557, 1227, 352, 353, 1059,
	558, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 1228, 364, 366, 365,
	1229, 367, 559, 1062, 368, 369, 1063, 1230, 370, 371,
	372, 1231, 1232, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 1233, 246, 1066, 397, 1234, 560, 398, 561, 400,
	401, 1235, 0, 402, 0, 1236, 1237, 404, 405, 406,
	1238, 1239, 407, 408, 562, 1067, 409, 1068, 563, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	1240, 420, 421, 564, 565, 566, 422, 567, 423, 424,
	1241, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	568, 434, 433, 435, 1242, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 1243, 446, 447, 448, 1069, 449, 450, 451, 452,
	569, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 1244, 469, 470, 468, 471, 472,
	473, 1245, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 570, 0, 483, 1246, 484, 485,
	486, 487, 460, 488, 493, 571, 489, 490, 491, 492,
	572, 1247, 495, 496, 0, 494, 1248, 497, 498, 499,
	500, 501, 502, 320, 503, 1249, 504, 573, 574, 575,
	576, 1250, 511, 1251, 505, 506, 577, 507, 578, 1252,
	508, 509, 510, 0, 512, 513, 1253, 1254, 514, 515,
	516, 518, 519, 517, 520, 1255, 521, 1256, 0, 522,
	523, 524, 579, 580, 581, 1257, 526, 525, 582, 1258,
	1259, 1260, 1261, 527, 528, 583, 529, 530, 531, 2269,
	0, 991, 963, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 2266, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 2267, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 2265, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 2268, 0, 0, 0, 0,
	0, 0, 975, 2264, 0, 937, 973, 991, 963, 964,
	965, 961, 962, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1015, 979,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 1028, 0, 263, 1035, 264, 1034, 0, 1045,
	265, 266, 267, 268, 269, 981, 1014, 948, 270, 1074,
	1075, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 1038, 296, 1032, 1031, 952,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 1023, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 958, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 970, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 1030, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	1043, 1044, 333, 334, 0, 335, 1053, 0, 980, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 1025, 1026,
	0, 986, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 949, 246, 1066,
	397, 971, 1019, 398, 1033, 400, 401, 0, 0, 402,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 1029, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 959, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	208, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	1027, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 1073, 489, 490, 491, 492, 1050, 0, 495, 496,
	947, 494, 210, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 1039, 1040, 1041, 1042, 0, 511, 0,
	505, 506, 1051, 507, 1052, 969, 508, 509, 510, 0,
	512, 513, 0, 953, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 1448, 1036,
	1072, 0, 526, 525, 582, 0, 0, 0, 202, 527,
	528, 583, 529, 530, 531, 950, 203, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 944,
	945, 991, 963, 964, 965, 961, 962, 974, 1683, 1681,
	0, 0, 973, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 208, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 210, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 1448, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 202, 527, 528, 583, 529, 530, 531, 950,
	203, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 991, 963, 964, 965, 961,
	962, 974, 1683, 2795, 0, 0, 973, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 208, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	210, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 1448, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 202, 527, 528, 583,
	529, 530, 531, 950, 203, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 991,
	963, 964, 965, 961, 962, 974, 1683, 1681, 0, 0,
	973, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	2373, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 2378, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 2374, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 2375, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 944, 945, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 2314, 973, 991, 963, 964, 965, 961,
	962, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 0,
	0, 0, 0, 0, 0, 0, 975, 2312, 0, 2311,
	973, 991, 963, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 0, 0, 0, 0, 0,
	0, 0, 975, 2309, 0, 2308, 973, 991, 963, 964,
	965, 961, 962, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1015, 979,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 1028, 0, 263, 1035, 264, 1034, 0, 1045,
	265, 266, 267, 268, 269, 981, 1014, 948, 270, 1074,
	1075, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 1038, 296, 1032, 1031, 952,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 1023, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 958, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 970, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 1030, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	1043, 1044, 333, 334, 0, 335, 1053, 0, 980, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 1025, 1026,
	0, 986, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 949, 246, 1066,
	397, 971, 1019, 398, 1033, 400, 401, 0, 0, 402,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 1029, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 959, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	0, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	1027, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 1073, 489, 490, 491, 492, 1050, 0, 495, 496,
	947, 494, 0, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 1039, 1040, 1041, 1042, 0, 511, 0,
	505, 506, 1051, 507, 1052, 969, 508, 509, 510, 0,
	512, 513, 0, 953, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 579, 1036,
	1072, 0, 526, 525, 582, 0, 0, 0, 0, 527,
	528, 583, 529, 530, 531, 950, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 944,
	945, 0, 0, 0, 0, 0, 0, 0, 975, 2306,
	0, 2305, 973, 991, 963, 964, 965, 961, 962, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1015, 979, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 1028, 0,
	263, 1035, 264, 1034, 0, 1045, 265, 266, 267, 268,
	269, 981, 1014, 948, 270, 1074, 1075, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 291,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 1038, 296, 1032, 1031, 952, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 1023,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 958, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 970, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 1030, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 1043, 1044, 333, 334,
	0, 335, 1053, 0, 980, 336, 0, 337, 338, 339,
	340, 341, 1016, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 1057, 350, 1025, 1026, 0, 986, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 949, 246, 1066, 397, 971, 1019, 398,
	1033, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 1029, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 959, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 1027, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 1073, 489, 490,
	491, 492, 1050, 0, 495, 496, 947, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 1039,
	1040, 1041, 1042, 0, 511, 0, 505, 506, 1051, 507,
	1052, 969, 508, 509, 510, 0, 512, 513, 0, 953,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 1036, 1072, 0, 526, 525,
	582, 0, 0, 0, 0, 527, 528, 583, 529, 530,
	531, 950, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 944, 945, 0, 0, 0,
	0, 0, 0, 0, 975, 2303, 0, 1536, 973, 991,
	963, 964, 965, 961, 962, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 1535, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 944, 945, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 940, 973, 991, 963, 964, 965, 961,
	962, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 954,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 991,
	963, 964, 965, 961, 962, 974, 975, 0, 0, 0,
	973, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 4024,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 954, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 944, 945, 991, 963, 964, 965, 961, 962, 974,
	975, 0, 0, 0, 973, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1015, 979, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 1028, 0,
	263, 1035, 264, 1034, 0, 1045, 265, 266, 267, 268,
	269, 981, 1014, 948, 270, 1074, 1075, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 291,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 1038, 296, 1032, 1031, 952, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 1023,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 958, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 970, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 1030, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 1043, 1044, 333, 334,
	0, 335, 1053, 0, 980, 336, 0, 337, 338, 339,
	340, 341, 1016, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 2183, 348, 349,
	351, 0, 1057, 350, 1025, 1026, 0, 986, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 949, 246, 1066, 397, 971, 1019, 398,
	1033, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 2182, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 1029, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 959, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 1027, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 1073, 489, 490,
	491, 492, 1050, 0, 495, 496, 947, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 1039,
	1040, 1041, 1042, 0, 511, 0, 505, 506, 1051, 507,
	1052, 969, 508, 509, 510, 0, 512, 513, 0, 953,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 1036, 1072, 0, 526, 525,
	582, 0, 0, 0, 0, 527, 528, 583, 529, 530,
	531, 950, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 944, 945, 991, 963, 964,
	965, 961, 962, 974, 975, 0, 0, 0, 973, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1015, 979,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 1028, 0, 263, 1035, 264, 1034, 0, 1045,
	265, 266, 267, 268, 269, 981, 1014, 948, 270, 1074,
	1075, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 1038, 296, 1032, 1031, 952,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 1023, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 958, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 970, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 1030, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	1043, 1044, 333, 334, 0, 335, 1053, 0, 980, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 1025, 1026,
	0, 986, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 949, 246, 1066,
	397, 971, 1019, 398, 1033, 400, 401, 0, 0, 402,
	0, 954, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 1029, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 959, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	0, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	1027, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 1073, 489, 490, 491, 492, 1050, 0, 495, 496,
	947, 494, 0, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 1039, 1040, 1041, 1042, 0, 511, 0,
	505, 506, 1051, 507, 1052, 969, 508, 509, 510, 0,
	512, 513, 0, 953, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 579, 1036,
	1072, 0, 526, 525, 582, 0, 0, 0, 0, 527,
	528, 583, 529, 530, 531, 950, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 944,
	945, 991, 963, 964, 965, 961, 962, 974, 975, 0,
	0, 0, 973, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 3819, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 954, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 991, 963, 964, 965, 961,
	962, 974, 975, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 3481, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 1751,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 0,
	973, 991, 963, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 3238, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 991, 963, 964, 965, 961,
	962, 974, 975, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 1751,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 0,
	973, 991, 963, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	2378, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 991, 963, 964, 965, 961,
	962, 974, 975, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 0,
	0, 0, 0, 0, 0, 0, 975, 1681, 0, 2383,
	973, 991, 963, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 2381, 973, 991, 963, 964,
	965, 961, 962, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1015, 979,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 1028, 0, 263, 1035, 264, 1034, 0, 1045,
	265, 266, 267, 268, 269, 981, 1014, 948, 270, 1074,
	1075, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 1038, 296, 1032, 1031, 952,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 1023, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 958, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 970, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 1030, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	1043, 1044, 333, 334, 0, 335, 1053, 0, 980, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 1025, 1026,
	0, 986, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 949, 246, 1066,
	397, 971, 1019, 398, 1033, 400, 401, 0, 0, 402,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 1029, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 959, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	0, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	1027, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 1073, 489, 490, 491, 492, 1050, 0, 495, 496,
	947, 494, 0, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 1039, 1040, 1041, 1042, 0, 511, 0,
	505, 506, 1051, 507, 1052, 969, 508, 509, 510, 0,
	512, 513, 0, 953, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 579, 1036,
	1072, 0, 526, 525, 582, 0, 0, 0, 0, 527,
	528, 583, 529, 530, 531, 950, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 944,
	945, 0, 0, 0, 0, 0, 0, 0, 975, 0,
	0, 2369, 973, 991, 963, 964, 965, 961, 962, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1015, 979, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 1028, 0,
	263, 1035, 264, 1034, 0, 1045, 265, 266, 267, 268,
	269, 981, 1014, 948, 270, 1074, 1075, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 291,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 1038, 296, 1032, 1031, 952, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 1023,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 958, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 970, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 1030, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 1043, 1044, 333, 334,
	0, 335, 1053, 0, 980, 336, 0, 337, 338, 339,
	340, 341, 1016, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 1057, 350, 1025, 1026, 0, 986, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 949, 246, 1066, 397, 971, 1019, 398,
	1033, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 1029, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 959, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 1027, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 1073, 489, 490,
	491, 492, 1050, 0, 495, 496, 947, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 1039,
	1040, 1041, 1042, 0, 511, 0, 505, 506, 1051, 507,
	1052, 969, 508, 509, 510, 0, 512, 513, 0, 953,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 1036, 1072, 0, 526, 525,
	582, 0, 0, 0, 0, 527, 528, 583, 529, 530,
	531, 950, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 944, 945, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 2358, 973, 991,
	963, 964, 965, 961, 962, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 944, 945, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 2356, 973, 2347, 2354, 964, 965, 961,
	962, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 2350, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 2351, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 2352, 2349, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 2353, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 2348, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 0,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 2344,
	973, 2347, 2354, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	2350, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 2351, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 2352, 2349, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 2353, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 2348, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 991, 963, 964, 965, 961,
	962, 974, 975, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 0,
	0, 0, 0, 0, 1689, 0, 975, 0, 0, 0,
	973, 991, 963, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 2162, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 1541, 973, 991, 963, 964,
	965, 961, 962, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1015, 979,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 1028, 0, 263, 1035, 264, 1034, 0, 1045,
	265, 266, 267, 268, 269, 981, 1014, 948, 270, 1074,
	1075, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 1038, 296, 1032, 1031, 952,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 1023, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 958, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 970, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 1030, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	1043, 1044, 333, 334, 0, 335, 1053, 0, 980, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 1025, 1026,
	0, 986, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 949, 246, 1066,
	397, 971, 1019, 398, 1033, 400, 401, 0, 0, 402,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 1029, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 959, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	0, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	1027, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 1073, 489, 490, 491, 492, 1050, 0, 495, 496,
	947, 494, 0, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 1039, 1040, 1041, 1042, 0, 511, 0,
	505, 506, 1051, 507, 1052, 969, 508, 509, 510, 0,
	512, 513, 0, 953, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 579, 1036,
	1072, 0, 526, 525, 582, 0, 0, 0, 0, 527,
	528, 583, 529, 530, 531, 950, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 944,
	945, 0, 0, 0, 0, 0, 0, 0, 975, 0,
	0, 1478, 973, 991, 963, 964, 965, 961, 962, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1015, 979, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 1028, 0,
	263, 1035, 264, 1034, 0, 1045, 265, 266, 267, 268,
	269, 981, 1014, 948, 270, 1074, 1075, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 291,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 1038, 296, 1032, 1031, 952, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 1023,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 958, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 970, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 1030, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 1043, 1044, 333, 334,
	0, 335, 1053, 0, 980, 336, 0, 337, 338, 339,
	340, 341, 1016, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 1057, 350, 1025, 1026, 0, 986, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 949, 246, 1066, 397, 971, 1019, 398,
	1033, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 1029, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 959, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 1027, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 1073, 489, 490,
	491, 492, 1050, 0, 495, 496, 947, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 1039,
	1040, 1041, 1042, 0, 511, 0, 505, 506, 1051, 507,
	1052, 969, 508, 509, 510, 0, 512, 513, 0, 953,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 1036, 1072, 0, 526, 525,
	582, 0, 0, 0, 0, 527, 528, 583, 529, 530,
	531, 950, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 944, 945, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 1473, 973, 991,
	963, 964, 965, 961, 962, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 944, 945, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 1464, 973, 991, 963, 964, 965, 961,
	962, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 0,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 1459,
	973, 991, 963, 964, 965, 961, 962, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 1441, 973, 991, 963, 964,
	965, 961, 962, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1015, 979,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 1028, 0, 263, 1035, 264, 1034, 0, 1045,
	265, 266, 267, 268, 269, 981, 1014, 948, 270, 1074,
	1075, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 1038, 296, 1032, 1031, 952,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 1023, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 958, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 970, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 1030, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	1043, 1044, 333, 334, 0, 335, 1053, 0, 980, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 1025, 1026,
	0, 986, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 949, 246, 1066,
	397, 971, 1019, 398, 1033, 400, 401, 0, 0, 402,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 1029, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 959, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	0, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	1027, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 1073, 489, 490, 491, 492, 1050, 0, 495, 496,
	947, 494, 0, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 1039, 1040, 1041, 1042, 0, 511, 0,
	505, 506, 1051, 507, 1052, 969, 508, 509, 510, 0,
	512, 513, 0, 953, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 579, 1036,
	1072, 0, 526, 525, 582, 0, 0, 0, 0, 527,
	528, 583, 529, 530, 531, 950, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 944,
	945, 0, 0, 0, 0, 0, 0, 0, 975, 0,
	0, 1327, 973, 991, 963, 964, 965, 961, 962, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1015, 979, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 1028, 0,
	263, 1035, 264, 1034, 0, 1045, 265, 266, 267, 268,
	269, 981, 1014, 948, 270, 1074, 1075, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 291,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 1038, 296, 1032, 1031, 952, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 1023,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 958, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 970, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 1030, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 1043, 1044, 333, 334,
	0, 335, 1053, 0, 980, 336, 0, 337, 338, 339,
	340, 341, 1326, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 1057, 350, 1025, 1026, 0, 986, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 949, 246, 1066, 397, 971, 1019, 398,
	1033, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 1029, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 959, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 1027, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 1073, 489, 490,
	491, 492, 1050, 0, 495, 496, 947, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 1039,
	1040, 1041, 1042, 0, 511, 0, 505, 506, 1051, 507,
	1052, 969, 508, 509, 510, 0, 512, 513, 0, 953,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 1036, 1072, 0, 526, 525,
	582, 0, 0, 0, 0, 527, 528, 583, 529, 530,
	531, 950, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 944, 945, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 1321, 973, 991,
	963, 964, 965, 961, 962, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1320, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 944, 945, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 1314, 973, 991, 963, 964, 965, 961,
	962, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 991,
	963, 964, 965, 961, 962, 974, 975, 0, 0, 0,
	973, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 944, 945, 991, 963, 964, 965, 961, 962, 974,
	975, 0, 0, 0, 973, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1015, 979, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 1028, 0,
	263, 1035, 264, 1034, 0, 1045, 265, 266, 267, 268,
	269, 981, 1014, 948, 270, 1074, 1075, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 4064,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 1038, 296, 1032, 1031, 952, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 1023,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 958, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 970, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 1030, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 1043, 1044, 333, 334,
	0, 335, 1053, 0, 980, 336, 0, 337, 338, 339,
	340, 341, 1016, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 1057, 350, 1025, 1026, 0, 986, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 949, 246, 1066, 397, 971, 1019, 398,
	1033, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 1029, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 959, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 1027, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 1073, 489, 490,
	491, 492, 1050, 0, 495, 496, 947, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 1039,
	1040, 1041, 1042, 0, 511, 0, 505, 506, 1051, 507,
	1052, 969, 508, 509, 510, 0, 4063, 513, 0, 953,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 1036, 1072, 0, 526, 525,
	582, 0, 0, 0, 0, 527, 528, 583, 529, 530,
	531, 950, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 944, 945, 991, 963, 964,
	965, 961, 962, 974, 975, 0, 0, 0, 973, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 1015, 979,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 4062, 1028, 0, 263, 1035, 264, 1034, 0, 1045,
	265, 266, 267, 268, 269, 981, 1014, 948, 270, 1074,
	1075, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 4064, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 1038, 296, 1032, 1031, 952,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 1023, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 958, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 970, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 1030, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	1043, 1044, 333, 334, 0, 335, 1053, 0, 980, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 1025, 1026,
	0, 986, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 949, 246, 1066,
	397, 971, 1019, 398, 1033, 400, 401, 0, 0, 402,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 1029, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 959, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	0, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	1027, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 1073, 489, 490, 491, 492, 1050, 0, 495, 496,
	947, 494, 0, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 1039, 1040, 1041, 1042, 0, 511, 0,
	505, 506, 1051, 507, 1052, 969, 508, 509, 510, 0,
	4063, 513, 0, 953, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 579, 1036,
	1072, 0, 526, 525, 582, 0, 0, 0, 0, 527,
	528, 583, 529, 530, 531, 950, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 944,
	945, 991, 963, 964, 965, 2762, 2763, 974, 975, 0,
	0, 0, 973, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 948, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 952, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 949, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	959, 453, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 947, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 953, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 950,
	0, 0, 0, 0, 0, 0, 946, 0, 0, 0,
	0, 0, 0, 944, 945, 991, 963, 964, 965, 2760,
	2761, 974, 975, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 0, 1015, 979, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	1028, 0, 263, 1035, 264, 1034, 0, 1045, 265, 266,
	267, 268, 269, 981, 1014, 948, 270, 1074, 1075, 540,
	0, 271, 272, 1021, 0, 1002, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 1055,
	290, 291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292,
	293, 294, 295, 1038, 296, 1032, 1031, 952, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 1023, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 958, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 1046, 1047, 970, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 1030, 0, 0, 0,
	329, 0, 330, 0, 0, 1056, 331, 332, 1043, 1044,
	333, 334, 0, 335, 1053, 0, 980, 336, 0, 337,
	338, 339, 340, 341, 1016, 1017, 1020, 399, 1058, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 1057, 350, 1025, 1026, 0, 986,
	0, 352, 353, 1059, 1018, 1060, 354, 355, 356, 1061,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 1054, 1062, 368, 369,
	1063, 0, 370, 371, 372, 1009, 1008, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 1064, 389, 390, 391, 395,
	394, 396, 393, 1065, 392, 949, 246, 1066, 397, 971,
	1019, 398, 1033, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 1067,
	409, 1068, 1048, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 1049,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 1029, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 1069,
	449, 450, 451, 452, 959, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 1012, 474, 458, 459, 475,
	476, 1070, 477, 478, 479, 480, 481, 482, 1027, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 1073,
	489, 490, 491, 492, 1050, 0, 495, 496, 947, 494,
	0, 497, 498, 499, 500, 501, 502, 320, 503, 0,
	504, 1039, 1040, 1041, 1042, 0, 511, 0, 505, 506,
	1051, 507, 1052, 969, 508, 509, 510, 0, 512, 513,
	0, 953, 514, 515, 516, 518, 519, 517, 520, 1013,
	521, 0, 0, 522, 523, 524, 579, 1036, 1072, 0,
	526, 525, 582, 0, 0, 0, 0, 527, 528, 583,
	529, 530, 531, 950, 0, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 944, 945, 991,
	963, 964, 965, 961, 962, 974, 975, 0, 0, 0,
	973, 0, 0, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 253, 254, 0, 0, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 533, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 1058, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 1059, 1018, 1060,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 1063, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 1066, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 1070, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 512, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 950, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 2170, 2171, 991, 963, 964, 965, 961, 962, 974,
	975, 0, 0, 0, 973, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 0, 1015, 979, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 1028, 0,
	263, 1035, 264, 1034, 0, 1045, 265, 266, 267, 268,
	269, 981, 1014, 0, 270, 1074, 1075, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 291,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 1038, 296, 1032, 1031, 0, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 1023,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 958, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 970, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 1030, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 1043, 1044, 333, 334,
	0, 335, 1053, 0, 980, 336, 0, 337, 338, 339,
	340, 341, 1016, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 1057, 350, 1025, 1026, 0, 986, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 0, 246, 1066, 397, 971, 1019, 398,
	1033, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 1029, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 959, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 1027, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 1073, 489, 490,
	491, 492, 1050, 0, 495, 496, 0, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 1039,
	1040, 1041, 1042, 0, 511, 0, 505, 506, 1051, 507,
	1052, 969, 508, 509, 510, 0, 512, 513, 0, 0,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 1036, 1072, 0, 526, 525,
	582, 0, 0, 0, 0, 527, 528, 583, 529, 530,
	531, 991, 963, 964, 965, 961, 962, 974, 2366, 0,
	0, 0, 0, 0, 0, 2364, 2365, 0, 247, 248,
	249, 250, 251, 252, 975, 253, 254, 0, 973, 0,
	0, 0, 1015, 979, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 1028, 0, 263, 1035,
	264, 1034, 0, 1045, 265, 266, 267, 268, 269, 981,
	1014, 0, 270, 1074, 1075, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 1038,
	296, 1032, 1031, 0, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 1023, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 958,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 970, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 1030, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 1043, 1044, 333, 334, 0, 335,
	1053, 0, 980, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 1025, 1026, 0, 986, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 0, 246, 1066, 397, 971, 1019, 398, 1033, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	1029, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	2755, 2756, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 1027, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 1073, 489, 490, 491, 492,
	1050, 0, 495, 496, 0, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 1039, 1040, 1041,
	1042, 0, 511, 0, 505, 506, 1051, 507, 1052, 969,
	508, 509, 510, 0, 512, 513, 0, 0, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 1036, 1072, 0, 526, 525, 582, 0,
	0, 0, 0, 527, 528, 583, 529, 530, 531, 991,
	963, 964, 965, 961, 962, 974, 0, 0, 0, 0,
	0, 0, 0, 1886, 1887, 0, 247, 248, 249, 250,
	251, 252, 975, 253, 254, 0, 973, 0, 0, 0,
	1015, 979, 0, 0, 0, 255, 256, 258, 257, 259,
	260, 261, 262, 0, 1028, 0, 263, 1035, 264, 1034,
	0, 1045, 265, 266, 267, 268, 269, 981, 1014, 948,
	270, 1074, 1075, 540, 0, 271, 272, 1021, 0, 1002,
	0, 273, 274, 275, 276, 277, 278, 279, 0, 0,
	281, 282, 283, 280, 0, 284, 0, 285, 286, 287,
	288, 0, 289, 1055, 290, 4064, 1005, 1003, 1004, 1011,
	1007, 1006, 1010, 292, 293, 294, 295, 1038, 296, 1032,
	1031, 952, 300, 297, 298, 0, 301, 299, 0, 302,
	303, 304, 0, 0, 305, 1023, 307, 0, 308, 309,
	0, 310, 311, 312, 0, 313, 314, 958, 315, 316,
	317, 319, 321, 318, 322, 323, 324, 325, 1046, 1047,
	970, 244, 0, 0, 0, 0, 0, 326, 327, 328,
	1030, 0, 0, 0, 329, 0, 330, 0, 0, 1056,
	331, 332, 1043, 1044, 333, 334, 0, 335, 1053, 0,
	980, 336, 0, 337, 338, 339, 340, 341, 1016, 1017,
	1020, 399, 0, 342, 343, 0, 344, 345, 346, 347,
	0, 0, 0, 245, 348, 349, 351, 0, 1057, 350,
	1025, 1026, 0, 986, 0, 352, 353, 0, 1018, 0,
	354, 355, 356, 1061, 357, 0, 0, 0, 358, 359,
	360, 361, 362, 363, 0, 364, 366, 365, 0, 367,
	1054, 1062, 368, 369, 0, 0, 370, 371, 372, 1009,
	1008, 373, 374, 375, 376, 0, 377, 378, 380, 382,
	379, 381, 386, 383, 384, 385, 388, 0, 387, 1064,
	389, 390, 391, 395, 394, 396, 393, 1065, 392, 949,
	246, 0, 397, 971, 1019, 398, 1033, 400, 401, 0,
	0, 402, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 408, 562, 1067, 409, 1068, 1048, 410, 411, 403,
	412, 413, 414, 415, 416, 417, 418, 419, 0, 420,
	421, 564, 565, 1049, 422, 567, 423, 424, 0, 425,
	0, 426, 427, 428, 429, 430, 431, 432, 1029, 434,
	433, 435, 0, 436, 0, 0, 0, 0, 0, 437,
	0, 439, 440, 441, 438, 442, 443, 444, 445, 0,
	446, 447, 448, 1069, 449, 450, 451, 452, 959, 453,
	0, 454, 455, 461, 462, 456, 457, 463, 464, 465,
	466, 467, 0, 469, 470, 468, 471, 472, 473, 1012,
	474, 458, 459, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 1027, 0, 483, 0, 484, 485, 486, 487,
	460, 488, 493, 1073, 489, 490, 491, 492, 1050, 0,
	495, 496, 947, 494, 0, 497, 498, 499, 500, 501,
	502, 320, 503, 0, 504, 1039, 1040, 1041, 1042, 0,
	511, 0, 505, 506, 1051, 507, 1052, 969, 508, 509,
	510, 0, 4063, 513, 0, 953, 514, 515, 516, 518,
	519, 517, 520, 1013, 521, 0, 0, 522, 523, 524,
	579, 1036, 1072, 0, 526, 525, 582, 0, 0, 0,
	0, 527, 528, 583, 529, 530, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 937, 0, 1112, 0,
	0, 944, 945, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 0, 973, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 1015,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 1014, 0, 270,
	538, 539, 540, 0, 271, 272, 1021, 0, 1002, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007,
	1006, 1010, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 1046, 1047, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 1056, 331,
	332, 548, 549, 333, 334, 0, 335, 1053, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 1016, 1017, 1020,
	399, 1058, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 245, 348, 349, 351, 0, 1057, 350, 555,
	556, 0, 557, 0, 352, 353, 1059, 1018, 1060, 354,
	355, 356, 1061, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 1098, 364, 366, 365, 0, 367, 1054,
	1062, 368, 369, 1063, 0, 370, 371, 372, 1009, 1008,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 1064, 389,
	390, 391, 395, 394, 396, 393, 1065, 392, 0, 246,
	1066, 397, 0, 1019, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 1104, 404, 405, 406, 0, 0, 407,
	408, 562, 1067, 409, 1068, 1048, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 1049, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 1069, 449, 450, 451, 452, 569, 1106, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 208, 469, 470, 468, 471, 472, 473, 1012, 474,
	458, 459, 475, 476, 1070, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 1050, 0, 495,
	496, 0, 494, 210, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 1051, 507, 1052, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 1013, 521, 0, 0, 522, 523, 524, 1448,
	580, 581, 0, 526, 525, 582, 0, 1112, 0, 202,
	527, 528, 583, 529, 530, 531, 0, 203, 0, 0,
	0, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 1102, 1015, 1775,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 534, 0, 263, 535, 264, 536, 0, 537,
	265, 266, 267, 268, 269, 0, 1014, 0, 270, 538,
	539, 540, 0, 271, 272, 1021, 0, 1002, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 1005, 1003, 1004, 1011, 1007, 1006,
	1010, 292, 293, 294, 295, 0, 296, 542, 543, 0,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 306, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 544, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 1046, 1047, 0, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 547, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	548, 549, 333, 334, 0, 335, 1053, 0, 551, 336,
	0, 337, 338, 339, 340, 341, 1016, 1017, 1020, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 245, 348, 349, 351, 0, 1057, 350, 555, 556,
	0, 557, 0, 352, 353, 1059, 1018, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 1098, 364, 366, 365, 0, 367, 1054, 1062,
	368, 369, 1063, 0, 370, 371, 372, 1009, 1008, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 0, 246, 1066,
	397, 0, 1019, 398, 561, 400, 401, 0, 0, 402,
	0, 0, 1104, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 1048, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 1049, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 568, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 569, 1106, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	208, 469, 470, 468, 471, 472, 473, 1012, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	570, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 571, 489, 490, 491, 492, 1050, 0, 495, 496,
	0, 494, 210, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 573, 574, 575, 576, 0, 511, 0,
	505, 506, 1051, 507, 1052, 0, 508, 509, 510, 0,
	512, 513, 0, 0, 514, 515, 516, 518, 519, 517,
	520, 1013, 521, 0, 0, 522, 523, 524, 1448, 580,
	581, 0, 526, 525, 582, 0, 0, 0, 202, 527,
	528, 583, 529, 530, 531, 0, 203, 0, 0, 0,
	2915, 0, 1112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 0, 1775, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 1015, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 1014, 0, 270, 538, 539, 540, 0, 271, 272,
	1021, 0, 1002, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 1055, 290, 291, 1005,
	1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 1046, 1047, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 1056, 331, 332, 548, 549, 333, 334, 0,
	335, 1053, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 1016, 1017, 1020, 399, 1058, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 1057, 350, 555, 556, 0, 557, 0, 352, 353,
	1059, 1018, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 1098, 364, 366,
	365, 0, 367, 1054, 1062, 368, 369, 1063, 0, 370,
	371, 372, 1009, 1008, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 0, 246, 1066, 397, 0, 1019, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 1104, 404, 405,
	406, 0, 0, 407, 408, 562, 1067, 409, 1068, 1048,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 1049, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 1106, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 1012, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 1050, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 1051, 507, 1052,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 1013, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	0, 1094, 0, 1112, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 1102, 0, 1100, 1015, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 534, 0,
	263, 535, 264, 536, 0, 537, 265, 266, 267, 268,
	269, 0, 1014, 0, 270, 538, 539, 540, 0, 271,
	272, 1021, 0, 1002, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 1055, 290, 291,
	1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294,
	295, 0, 296, 542, 543, 0, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 306,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 544, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 1046, 1047, 0, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 547, 0, 0, 0, 329, 0,
	330, 0, 0, 1056, 331, 332, 548, 549, 333, 334,
	0, 335, 1053, 0, 551, 336, 0, 337, 338, 339,
	340, 341, 1016, 1017, 1020, 399, 1058, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 1057, 350, 555, 556, 0, 557, 0, 352,
	353, 1059, 1018, 1060, 354, 355, 356, 1061, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 1098, 364,
	366, 365, 0, 367, 1054, 1062, 368, 369, 1063, 0,
	370, 371, 372, 1009, 1008, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 1064, 389, 390, 391, 395, 394, 396,
	393, 1065, 392, 0, 246, 1066, 397, 0, 1019, 398,
	561, 400, 401, 0, 0, 402, 0, 0, 1104, 404,
	405, 406, 0, 0, 407, 408, 562, 1067, 409, 1068,
	1048, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 1049, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 568, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 1069, 449, 450,
	451, 452, 569, 1106, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 1012, 474, 458, 459, 475, 476, 1070,
	477, 478, 479, 480, 481, 482, 570, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 571, 489, 490,
	491, 492, 1050, 0, 495, 496, 0, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 573,
	574, 575, 576, 0, 511, 0, 505, 506, 1051, 507,
	1052, 0, 508, 509, 510, 0, 512, 513, 0, 0,
	514, 515, 516, 518, 519, 517, 520, 1013, 521, 0,
	0, 522, 523, 524, 579, 580, 581, 0, 526, 525,
	582, 0, 1112, 0, 0, 527, 528, 583, 529, 530,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 1102, 1015, 1100, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 1014, 0, 270, 538, 539, 540, 0, 271, 272,
	1021, 0, 1002, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 1055, 290, 291, 1005,
	1003, 1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 1046, 1047, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 1056, 331, 332, 548, 549, 333, 334, 0,
	335, 1053, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 1016, 1017, 1020, 399, 1058, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 1057, 350, 555, 556, 0, 557, 0, 352, 353,
	1059, 1018, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 1098, 364, 366,
	365, 0, 367, 1054, 1062, 368, 369, 1063, 0, 370,
	371, 372, 1009, 1008, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 0, 246, 1066, 397, 0, 1019, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 1104, 404, 405,
	406, 0, 0, 407, 408, 562, 1067, 409, 1068, 1048,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 1049, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 1106, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 1012, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 1050, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 1051, 507, 1052,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 1013, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	0, 1112, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 253, 254, 0, 0, 0,
	0, 1102, 1015, 1100, 0, 0, 0, 255, 256, 258,
	257, 259, 260, 261, 262, 533, 534, 0, 263, 535,
	264, 536, 0, 537, 265, 266, 267, 268, 269, 0,
	1014, 0, 270, 538, 539, 540, 0, 271, 272, 1021,
	0, 1002, 0, 273, 274, 275, 276, 277, 278, 279,
	0, 0, 281, 282, 283, 280, 0, 284, 0, 285,
	286, 287, 288, 0, 289, 1055, 290, 291, 1005, 1003,
	1004, 1011, 1007, 1006, 1010, 292, 293, 294, 295, 0,
	296, 542, 543, 0, 300, 297, 298, 0, 301, 299,
	0, 302, 303, 304, 0, 0, 305, 306, 307, 0,
	308, 309, 0, 310, 311, 312, 0, 313, 314, 544,
	315, 316, 317, 319, 321, 318, 322, 323, 324, 325,
	1046, 1047, 0, 244, 0, 0, 0, 0, 0, 326,
	327, 328, 547, 0, 0, 0, 329, 0, 330, 0,
	0, 1056, 331, 332, 548, 549, 333, 334, 0, 335,
	1053, 0, 551, 336, 0, 337, 338, 339, 340, 341,
	1016, 1017, 1020, 399, 1058, 342, 343, 0, 344, 345,
	346, 347, 0, 0, 0, 245, 348, 349, 351, 0,
	1057, 350, 555, 556, 0, 557, 0, 352, 353, 1059,
	1018, 1060, 354, 355, 356, 1061, 357, 0, 0, 0,
	358, 359, 360, 361, 362, 363, 0, 364, 366, 365,
	0, 367, 1054, 1062, 368, 369, 1063, 0, 370, 371,
	372, 1009, 1008, 373, 374, 375, 376, 0, 377, 378,
	380, 382, 379, 381, 386, 383, 384, 385, 388, 0,
	387, 1064, 389, 390, 391, 395, 394, 396, 393, 1065,
	392, 0, 246, 1066, 397, 0, 1019, 398, 561, 400,
	401, 0, 0, 402, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 408, 562, 1067, 409, 1068, 1048, 410,
	411, 403, 412, 413, 414, 415, 416, 417, 418, 419,
	0, 420, 421, 564, 565, 1049, 422, 567, 423, 424,
	0, 425, 0, 426, 427, 428, 429, 430, 431, 432,
	568, 434, 433, 435, 0, 436, 0, 0, 0, 0,
	0, 437, 0, 439, 440, 441, 438, 442, 443, 444,
	445, 0, 446, 447, 448, 1069, 449, 450, 451, 452,
	569, 1106, 0, 454, 455, 461, 462, 456, 457, 463,
	464, 465, 466, 467, 0, 469, 470, 468, 471, 472,
	473, 1012, 474, 458, 459, 475, 476, 1070, 477, 478,
	479, 480, 481, 482, 570, 0, 483, 0, 484, 485,
	486, 487, 460, 488, 493, 571, 489, 490, 491, 492,
	1050, 0, 495, 496, 0, 494, 0, 497, 498, 499,
	500, 501, 502, 320, 503, 0, 504, 573, 574, 575,
	576, 0, 511, 0, 505, 506, 1051, 507, 1052, 0,
	508, 509, 510, 0, 512, 513, 0, 0, 514, 515,
	516, 518, 519, 517, 520, 1013, 521, 0, 0, 522,
	523, 524, 579, 580, 581, 0, 526, 525, 582, 0,
	937, 0, 1297, 527, 528, 583, 529, 530, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 1674, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 1263, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 1055, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 1056, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 1058, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 1057, 350, 555, 556, 0, 557, 0, 352, 353,
	1059, 558, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 1062, 368, 369, 1063, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 0, 0, 1066, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 1067, 409, 1068, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 208, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 210, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 1448, 580, 581, 0, 526, 525, 582,
	0, 0, 0, 202, 527, 528, 583, 529, 530, 531,
	0, 203, 0, 0, 0, 1445, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 247, 248, 249, 250, 251, 252,
	0, 253, 254, 0, 0, 0, 0, 0, 532, 0,
	0, 0, 0, 255, 256, 258, 257, 259, 260, 261,
	262, 533, 534, 0, 263, 535, 264, 536, 0, 537,
	265, 266, 267, 268, 269, 0, 0, 0, 270, 538,
	539, 540, 0, 271, 272, 541, 0, 1263, 0, 273,
	274, 275, 276, 277, 278, 279, 0, 0, 281, 282,
	283, 280, 0, 284, 0, 285, 286, 287, 288, 0,
	289, 1055, 290, 291, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 295, 0, 296, 542, 543, 0,
	300, 297, 298, 0, 301, 299, 0, 302, 303, 304,
	0, 0, 305, 306, 307, 0, 308, 309, 0, 310,
	311, 312, 0, 313, 314, 544, 315, 316, 317, 319,
	321, 318, 322, 323, 324, 325, 545, 546, 0, 244,
	0, 0, 0, 0, 0, 326, 327, 328, 547, 0,
	0, 0, 329, 0, 330, 0, 0, 1056, 331, 332,
	548, 549, 333, 334, 0, 335, 550, 0, 551, 336,
	0, 337, 338, 339, 340, 341, 552, 553, 554, 399,
	1058, 342, 343, 0, 344, 345, 346, 347, 0, 0,
	0, 0, 348, 349, 351, 0, 1057, 350, 555, 556,
	0, 557, 0, 352, 353, 1059, 558, 1060, 354, 355,
	356, 1061, 357, 0, 0, 0, 358, 359, 360, 361,
	362, 363, 0, 364, 366, 365, 0, 367, 559, 1062,
	368, 369, 1063, 0, 370, 371, 372, 0, 0, 373,
	374, 375, 376, 0, 377, 378, 380, 382, 379, 381,
	386, 383, 384, 385, 388, 0, 387, 1064, 389, 390,
	391, 395, 394, 396, 393, 1065, 392, 0, 0, 1066,
	397, 0, 560, 398, 561, 400, 401, 0, 0, 402,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 408,
	562, 1067, 409, 1068, 563, 410, 411, 403, 412, 413,
	414, 415, 416, 417, 418, 419, 0, 420, 421, 564,
	565, 566, 422, 567, 423, 424, 0, 425, 0, 426,
	427, 428, 429, 430, 431, 432, 568, 434, 433, 435,
	0, 436, 0, 0, 0, 0, 0, 437, 0, 439,
	440, 441, 438, 442, 443, 444, 445, 0, 446, 447,
	448, 1069, 449, 450, 451, 452, 569, 453, 0, 454,
	455, 461, 462, 456, 457, 463, 464, 465, 466, 467,
	208, 469, 470, 468, 471, 472, 473, 0, 474, 458,
	459, 475, 476, 1070, 477, 478, 479, 480, 481, 482,
	570, 0, 483, 0, 484, 485, 486, 487, 460, 488,
	493, 571, 489, 490, 491, 492, 572, 0, 495, 496,
	0, 494, 210, 497, 498, 499, 500, 501, 502, 320,
	503, 0, 504, 573, 574, 575, 576, 0, 511, 0,
	505, 506, 577, 507, 578, 0, 508, 509, 510, 0,
	512, 513, 0, 0, 514, 515, 516, 518, 519, 517,
	520, 0, 521, 0, 0, 522, 523, 524, 1448, 580,
	581, 0, 526, 525, 582, 0, 0, 0, 202, 527,
	528, 583, 529, 530, 531, 0, 203, 0, 0, 0,
	0, 0, 1297, 1296, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 1263, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 1055, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 1056, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 1058, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 1057, 350, 555, 556, 0, 557, 0, 352, 353,
	1059, 558, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 1062, 368, 369, 1063, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 0, 0, 1066, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 1067, 409, 1068, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	1297, 1296, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 1470, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	1263, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 1055, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	1056, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 1058, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 1057,
	350, 555, 556, 0, 557, 0, 352, 353, 1059, 558,
	1060, 354, 355, 356, 1061, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 1062, 368, 369, 1063, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	1064, 389, 390, 391, 395, 394, 396, 393, 1065, 392,
	0, 0, 1066, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 1067, 409, 1068, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 1069, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 1070, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 1297, 1296,
	0, 0, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 3162, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 1263, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 1055, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 1056, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 1058, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 1057, 350, 555,
	556, 0, 557, 0, 352, 353, 1059, 558, 1060, 354,
	355, 356, 1061, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 1965, 366, 365, 0, 367, 559,
	1062, 368, 369, 1063, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 1064, 389,
	390, 391, 395, 394, 396, 393, 1065, 392, 0, 0,
	1066, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 1067, 409, 1068, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 1069, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 1070, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 1297, 1296, 0, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 1470,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 1263, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	1055, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 1056, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 1058,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 1057, 350, 555, 556, 0,
	557, 0, 352, 353, 1059, 558, 1060, 354, 355, 356,
	1061, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 1062, 368,
	369, 1063, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 1064, 389, 390, 391,
	395, 394, 396, 393, 1065, 392, 0, 0, 1066, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	1067, 409, 1068, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	1069, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 1070, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1112, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 1015, 0, 1454, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 1014, 0, 270, 538, 539, 540, 0,
	271, 272, 1021, 0, 1002, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 1055, 290,
	291, 1005, 1003, 1004, 1011, 1007, 1006, 1010, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 1046, 1047, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 1056, 331, 332, 548, 549, 333,
	334, 0, 335, 1053, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 1016, 1017, 1020, 399, 1058, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 245, 348,
	349, 351, 0, 1057, 350, 555, 556, 0, 557, 0,
	352, 353, 1059, 1018, 1060, 354, 355, 356, 1061, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 1054, 1062, 368, 369, 1063,
	0, 370, 371, 372, 1009, 1008, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 1064, 389, 390, 391, 395, 394,
	396, 393, 1065, 392, 0, 246, 1066, 397, 0, 1019,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 1067, 409,
	1068, 1048, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 1049, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 1069, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 1012, 474, 458, 459, 475, 476,
	1070, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 1050, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 1051,
	507, 1052, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 1013, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 937, 0, 241, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 0, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 208, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 210,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 1448, 580, 581, 0, 526,
	525, 582, 241, 0, 0, 202, 527, 528, 583, 529,
	530, 531, 0, 203, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 174, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 246, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	0, 1388, 0, 241, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 253, 254, 0,
	0, 0, 0, 1789, 532, 0, 0, 0, 0, 255,
	256, 258, 257, 259, 260, 261, 262, 533, 534, 0,
	263, 535, 264, 536, 0, 537, 265, 266, 267, 268,
	269, 0, 0, 0, 270, 538, 539, 540, 0, 271,
	272, 541, 0, 0, 0, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 281, 282, 283, 280, 0, 284,
	0, 285, 286, 287, 288, 0, 289, 0, 290, 291,
	0, 0, 0, 0, 0, 0, 0, 292, 293, 294,
	295, 0, 296, 542, 543, 0, 300, 297, 298, 0,
	301, 299, 0, 302, 303, 304, 0, 0, 305, 306,
	307, 0, 308, 309, 0, 310, 311, 312, 0, 313,
	314, 544, 315, 316, 317, 319, 321, 318, 322, 323,
	324, 325, 545, 546, 0, 244, 0, 0, 0, 0,
	0, 326, 327, 328, 547, 0, 0, 0, 329, 0,
	330, 0, 0, 0, 331, 332, 548, 549, 333, 334,
	0, 335, 550, 0, 551, 336, 0, 337, 338, 339,
	340, 341, 552, 553, 554, 399, 0, 342, 343, 0,
	344, 345, 346, 347, 0, 0, 0, 245, 348, 349,
	351, 0, 0, 350, 555, 556, 0, 557, 0, 352,
	353, 0, 558, 0, 354, 355, 356, 0, 357, 0,
	0, 0, 358, 359, 360, 361, 362, 363, 0, 364,
	366, 365, 0, 367, 559, 0, 368, 369, 0, 0,
	370, 371, 372, 0, 0, 373, 374, 375, 376, 0,
	377, 378, 380, 382, 379, 381, 386, 383, 384, 385,
	388, 0, 387, 0, 389, 390, 391, 395, 394, 396,
	393, 0, 392, 0, 246, 0, 397, 0, 560, 398,
	561, 400, 401, 0, 0, 402, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 408, 562, 0, 409, 0,
	563, 410, 411, 403, 412, 413, 414, 415, 416, 417,
	418, 419, 0, 420, 421, 564, 565, 566, 422, 567,
	423, 424, 0, 425, 0, 426, 427, 428, 429, 430,
	431, 432, 568, 434, 433, 435, 0, 436, 0, 0,
	0, 0, 0, 437, 0, 439, 440, 441, 438, 442,
	443, 444, 445, 0, 446, 447, 448, 0, 449, 450,
	451, 452, 569, 453, 0, 454, 455, 461, 462, 456,
	457, 463, 464, 465, 466, 467, 0, 469, 470, 468,
	471, 472, 473, 0, 474, 458, 459, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 570, 0, 483, 0,
	484, 485, 486, 487, 460, 488, 493, 571, 489, 490,
	491, 492, 572, 0, 495, 496, 0, 494, 0, 497,
	498, 499, 500, 501, 502, 320, 503, 0, 504, 573,
	574, 575, 576, 0, 511, 0, 505, 506, 577, 507,
	578, 0, 508, 509, 510, 0, 512, 513, 0, 0,
	514, 515, 516, 518, 519, 517, 520, 0, 521, 0,
	0, 522, 523, 524, 579, 580, 581, 0, 526, 525,
	582, 0, 241, 2678, 0, 527, 528, 583, 529, 530,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 1392, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 0, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	241, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 4214, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 3106,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 245, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 246, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 1392, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 241, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 2649,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 241, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 3263, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 0, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 786, 0, 669, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 253,
	254, 0, 0, 0, 0, 2066, 532, 0, 0, 0,
	0, 255, 256, 258, 257, 259, 260, 261, 262, 533,
	534, 0, 263, 535, 264, 536, 0, 537, 265, 266,
	267, 268, 269, 0, 0, 0, 270, 538, 539, 540,
	0, 271, 272, 541, 0, 0, 0, 273, 274, 275,
	276, 277, 278, 279, 0, 0, 281, 282, 283, 280,
	0, 284, 0, 285, 286, 287, 288, 0, 289, 0,
	290, 291, 0, 0, 0, 0, 0, 0, 0, 292,
	293, 676, 295, 0, 296, 542, 543, 0, 300, 297,
	298, 0, 301, 299, 0, 302, 303, 304, 0, 0,
	305, 306, 307, 0, 308, 309, 0, 310, 311, 312,
	0, 313, 314, 544, 315, 316, 317, 319, 321, 318,
	322, 323, 324, 325, 545, 546, 0, 244, 0, 0,
	0, 0, 0, 326, 327, 328, 547, 0, 0, 0,
	329, 0, 330, 0, 784, 0, 331, 332, 548, 549,
	333, 334, 0, 335, 550, 0, 551, 336, 0, 337,
	338, 339, 340, 341, 552, 553, 554, 399, 0, 342,
	343, 0, 344, 345, 346, 347, 0, 0, 0, 245,
	348, 349, 351, 0, 0, 350, 555, 556, 0, 557,
	0, 352, 353, 0, 558, 0, 354, 355, 356, 0,
	357, 0, 0, 0, 358, 359, 360, 361, 362, 363,
	0, 364, 366, 365, 0, 367, 559, 0, 368, 369,
	0, 0, 370, 371, 372, 0, 0, 373, 374, 375,
	376, 0, 377, 378, 380, 382, 379, 381, 386, 383,
	384, 385, 388, 0, 387, 0, 389, 390, 391, 395,
	394, 396, 393, 0, 392, 0, 246, 0, 397, 0,
	560, 398, 561, 400, 401, 0, 0, 402, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 408, 562, 0,
	409, 0, 563, 410, 411, 403, 412, 413, 414, 415,
	416, 417, 418, 419, 0, 420, 421, 564, 565, 566,
	422, 567, 423, 424, 0, 425, 0, 426, 427, 428,
	429, 430, 431, 432, 568, 434, 433, 435, 0, 436,
	0, 0, 0, 0, 0, 437, 0, 439, 440, 441,
	438, 442, 443, 444, 445, 0, 446, 447, 448, 0,
	449, 450, 451, 452, 569, 453, 0, 454, 455, 461,
	462, 456, 457, 463, 464, 465, 466, 467, 0, 469,
	470, 468, 471, 472, 473, 0, 474, 458, 459, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 570, 0,
	483, 0, 484, 485, 486, 487, 460, 488, 493, 571,
	489, 490, 491, 492, 572, 0, 495, 496, 0, 494,
	674, 497, 498, 499, 500, 675, 502, 320, 503, 0,
	504, 573, 574, 575, 576, 0, 511, 0, 505, 506,
	577, 507, 578, 0, 508, 509, 510, 0, 512, 513,
	0, 0, 514, 515, 516, 518, 519, 517, 520, 0,
	521, 0, 0, 522, 523, 524, 579, 580, 581, 0,
	526, 525, 582, 0, 667, 0, 669, 527, 528, 583,
	529, 530, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 679,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 676, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 674, 497, 498, 499, 500, 675, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	669, 526, 525, 582, 0, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	679, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 676, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 674, 497, 498, 499, 500,
	675, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 669, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 679, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	676, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 245, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 246, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 2105,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 674,
	497, 498, 499, 500, 675, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 669, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 679, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 676, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 245, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 246,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 674, 497, 498, 499, 500, 675, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 1850,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 669, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 679, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 676, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 246, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 674, 497, 498,
	499, 500, 675, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 1804, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 1825, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 679, 0, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	0, 1831, 0, 263, 1821, 264, 1837, 0, 1844, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 1847, 1848,
	0, 0, 271, 272, 0, 0, 1263, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	1055, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 1038, 296, 1835, 1834, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 1023, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 0, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 1833, 0, 0,
	0, 329, 0, 330, 0, 0, 1056, 331, 332, 1842,
	1843, 333, 334, 0, 335, 0, 0, 0, 336, 0,
	337, 338, 339, 340, 341, 0, 0, 0, 399, 1058,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 1057, 350, 1828, 1829, 0,
	1824, 0, 352, 353, 1059, 0, 1060, 354, 355, 356,
	1061, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 0, 1062, 368,
	369, 1063, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 1064, 389, 390, 391,
	395, 394, 396, 393, 1065, 392, 0, 0, 1066, 397,
	0, 0, 398, 1836, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 0,
	1067, 409, 1068, 0, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 1818, 1819,
	0, 422, 0, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 1832, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	1069, 449, 450, 451, 452, 0, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 1070, 477, 478, 479, 480, 481, 482, 1830,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	1846, 489, 490, 491, 492, 0, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 1838, 1839, 1840, 1841, 0, 511, 0, 505,
	506, 0, 507, 0, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 0, 1822, 1845,
	0, 526, 525, 0, 0, 0, 0, 0, 527, 528,
	0, 529, 530, 531, 1297, 1296, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 1812, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 1263, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 1055, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 1056, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 1058, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 1057, 350, 555, 556, 0, 557, 0,
	352, 353, 1059, 558, 1060, 354, 355, 356, 1061, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 1062, 368, 369, 1063,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 1064, 389, 390, 391, 395, 394,
	396, 393, 1065, 392, 0, 0, 1066, 397, 3428, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 1067, 409,
	1068, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 1069, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	1070, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 1297, 1296, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 1263, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 1055, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 1056, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 1058, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 1057, 350, 555, 556, 0, 557, 0, 352, 353,
	1059, 558, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 1062, 368, 369, 1063, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 0, 0, 1066, 397, 3079, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 1067, 409, 1068, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	1297, 1296, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	1263, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 1055, 290, 291, 0, 0, 0,
	0, 0, 0, 3022, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	1056, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 1058, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 1057,
	350, 555, 556, 0, 557, 0, 352, 353, 1059, 558,
	1060, 354, 355, 356, 1061, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 1062, 368, 369, 1063, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	1064, 389, 390, 391, 395, 394, 396, 393, 1065, 392,
	0, 0, 1066, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 1067, 409, 1068, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 1069, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	3023, 474, 458, 459, 475, 476, 1070, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 245, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 246, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 1498, 0, 1297, 1296, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 1263, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 1055, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 1497, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 1056, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 1058, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 1057, 350, 555, 556, 0, 557, 0,
	352, 353, 1059, 558, 1060, 354, 355, 356, 1061, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 1062, 368, 369, 1063,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 1064, 389, 390, 391, 395, 394,
	396, 393, 1065, 392, 0, 0, 1066, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 1067, 409,
	1068, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 1496, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 1069, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 1495, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	1070, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 1438, 0, 1297, 1296, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 1263, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 1055, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 1056, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 1437, 553, 554, 399, 1058, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 1057, 350, 555, 556, 0, 557, 0,
	352, 353, 1059, 558, 1060, 354, 355, 356, 1061, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 1062, 368, 369, 1063,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 1064, 389, 390, 391, 395, 394,
	396, 393, 1065, 392, 0, 0, 1066, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 1067, 409,
	1068, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 1069, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	1070, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 1367, 0, 1297, 1296, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 1263, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 1055, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 1056, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 1366, 553, 554, 399, 1058, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 1057, 350, 555, 556, 0, 557, 0,
	352, 353, 1059, 558, 1060, 354, 355, 356, 1061, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 1062, 368, 369, 1063,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 1064, 389, 390, 391, 395, 394,
	396, 393, 1065, 392, 0, 0, 1066, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 1067, 409,
	1068, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 1069, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	1070, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 1332, 0, 1297, 1296, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 1263, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 1055, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 1056, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 1058, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 1057, 350, 555, 556, 0, 557, 0,
	352, 353, 1059, 558, 1060, 354, 355, 356, 1061, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 1062, 368, 369, 1063,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 1064, 389, 390, 391, 395, 394,
	396, 393, 1065, 392, 0, 0, 1066, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 1067, 409,
	1068, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 1069, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	1070, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 1292, 0, 1297, 1296, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 1263, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 1055, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 1056, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 1291, 553, 554, 399, 1058, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 1057, 350, 555, 556, 0, 557, 0,
	352, 353, 1059, 558, 1060, 354, 355, 356, 1061, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 1062, 368, 369, 1063,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 1064, 389, 390, 391, 395, 394,
	396, 393, 1065, 392, 0, 0, 1066, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 1067, 409,
	1068, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 1069, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	1070, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 0, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 1297, 1296, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 1263, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 1055, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 1056, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 1058, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 1057, 350, 555, 556, 0, 557, 0, 352, 353,
	1059, 558, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 1062, 368, 369, 1063, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 0, 0, 1066, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 1067, 409, 1068, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	1297, 1296, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	1263, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 1055, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 1859, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	1056, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 1058, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 1057,
	350, 555, 556, 0, 557, 0, 352, 353, 1059, 558,
	1060, 354, 355, 356, 1061, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 1062, 368, 369, 1063, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	1064, 389, 390, 391, 395, 394, 396, 393, 1065, 392,
	0, 0, 1066, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 1067, 409, 1068, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 1069, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 1070, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 1297, 1296,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 1263, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 1055, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 1056, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 1058, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 1057, 350, 555,
	556, 0, 557, 0, 352, 353, 1059, 558, 1060, 354,
	355, 356, 1061, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	1062, 368, 369, 1063, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 1064, 389,
	390, 391, 395, 394, 396, 393, 1065, 392, 0, 0,
	1066, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 1067, 409, 1068, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 1069, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 1070, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 1297, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 1263, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 1055, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 1056, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 1058, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 1057, 350, 555, 556, 0, 557, 0, 352, 353,
	1059, 558, 1060, 354, 355, 356, 1061, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 1062, 368, 369, 1063, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 1064, 389, 390, 391, 395, 394, 396, 393,
	1065, 392, 0, 0, 1066, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 1067, 409, 1068, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 1069, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 1070, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 241, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 2501, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 2498, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 2505, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 2691, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 2504, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	2688, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 2690, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 2687, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 2503, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 2689, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	241, 526, 525, 582, 0, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 2501, 271, 272, 541, 0,
	0, 2495, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 2498, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 2505, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 2504, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 2494,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 0, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 2503,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 2502, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 1563, 0,
	241, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 1566, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 1564, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 1565, 525, 582, 1267, 0,
	241, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 1269,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 1104, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 1264, 0,
	241, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 1266,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 1104, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 1170, 0,
	241, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 1172,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 1104, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 615, 0,
	241, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	614, 251, 252, 604, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 607, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 608, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 0, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 609, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 603, 0,
	241, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 604, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 607, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 608, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 0, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 609, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 245, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 246, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 1104,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 245, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 3044, 392, 0, 246,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 2620, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 2619, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 245, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 246,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 2079, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 245, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 246,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 241, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 246, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 1996, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	2001, 0, 241, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 2000, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 246, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	1989, 0, 241, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 1991, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 246, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 241, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 1963, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 1104, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1430, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 1429, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1421, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 1420, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1418, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 1417, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1413, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 1412, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1370, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1285, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 1278, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 1280, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 585, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 232, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	241, 526, 525, 582, 0, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 607, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 608, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 0, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 609, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 2112, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 245, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 246,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 241, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 2110, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 244, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 245, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 246, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 241, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 2108, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 244, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	245, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 246, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	241, 526, 525, 582, 0, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 244, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 2044,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 245, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 246, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 244, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 2038, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 245, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 246, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	244, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 2007, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 245, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 246,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 773, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 772, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 771, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 241, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 2691, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 0, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 3682, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	594, 0, 241, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 593, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 0, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 592,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 0, 526, 525, 582,
	241, 2678, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 0, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 0, 526, 525, 582, 241, 3692,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 241, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 3403, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 0, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 241, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 2417,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 241, 2678, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 0, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 2675, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 2089, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 2077, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 637, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 1144, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 1142, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 638, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 634, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 1145, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 633, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 637, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 627, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 638, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 634, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 1453, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 633, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 1434, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 1433, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 1427, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 1426, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 1376, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 1375, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 1361, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 1360, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 1356, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 1288, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 1272, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 637, 0, 241, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 1144, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 1142, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 638, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 634, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 1145, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 633, 574, 575, 576, 0, 511,
	0, 505, 1143, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 241, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 1125, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 0, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 241, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 643,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 637, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 627, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 625, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 626, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 638, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 628, 453, 0, 454, 455,
	461, 462, 456, 457, 634, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 629, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 633, 574, 575, 576, 0, 511, 0, 505,
	631, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 619, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	620, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 617, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 611, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	0, 526, 525, 582, 589, 0, 241, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 552, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	241, 526, 525, 582, 0, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 552,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 0, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 3123, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 0, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 3073, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 241, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 0, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 3013, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 0, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 474, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 241, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 3011, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	241, 526, 525, 582, 0, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 2997,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 0, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 2629, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 0, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 434, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	336, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 414, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 430, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 453, 0,
	454, 455, 620, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 241, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 253, 254, 0, 0,
	0, 0, 0, 532, 0, 2024, 0, 0, 255, 256,
	258, 257, 259, 260, 261, 262, 533, 534, 0, 263,
	535, 264, 536, 0, 537, 265, 266, 267, 268, 269,
	0, 0, 0, 270, 538, 539, 540, 0, 271, 272,
	541, 0, 0, 0, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 281, 282, 283, 280, 0, 284, 0,
	285, 286, 287, 288, 0, 289, 0, 290, 291, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 295,
	0, 296, 542, 543, 0, 300, 297, 298, 0, 301,
	299, 0, 302, 303, 304, 0, 0, 305, 306, 307,
	0, 308, 309, 0, 310, 311, 312, 0, 313, 314,
	544, 315, 316, 317, 319, 321, 318, 322, 323, 324,
	325, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	326, 327, 328, 547, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 548, 549, 333, 334, 0,
	335, 550, 0, 551, 336, 0, 337, 338, 339, 340,
	341, 552, 553, 554, 399, 0, 342, 343, 0, 344,
	345, 346, 347, 0, 0, 0, 0, 348, 349, 351,
	0, 0, 350, 555, 556, 0, 557, 0, 352, 353,
	0, 558, 0, 354, 355, 356, 0, 357, 0, 0,
	0, 358, 359, 360, 361, 362, 363, 0, 364, 366,
	365, 0, 367, 559, 0, 368, 369, 0, 0, 370,
	371, 372, 0, 0, 373, 374, 375, 376, 0, 377,
	378, 380, 382, 379, 381, 386, 383, 384, 385, 388,
	0, 387, 0, 389, 390, 391, 395, 394, 396, 393,
	0, 392, 0, 0, 0, 397, 0, 560, 398, 561,
	400, 401, 0, 0, 402, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 408, 562, 0, 409, 0, 563,
	410, 411, 403, 412, 413, 414, 415, 416, 417, 418,
	419, 0, 420, 421, 564, 565, 566, 422, 567, 423,
	424, 0, 425, 0, 426, 427, 428, 429, 430, 431,
	432, 568, 434, 433, 435, 0, 436, 0, 0, 0,
	0, 0, 437, 0, 439, 440, 441, 438, 442, 443,
	444, 445, 0, 446, 447, 448, 0, 449, 450, 451,
	452, 569, 453, 0, 454, 455, 461, 462, 456, 457,
	463, 464, 465, 466, 467, 0, 469, 470, 468, 471,
	472, 473, 0, 0, 458, 459, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 570, 0, 483, 0, 484,
	485, 486, 487, 460, 488, 493, 571, 489, 490, 491,
	492, 572, 0, 495, 496, 0, 494, 0, 497, 498,
	499, 500, 501, 502, 320, 503, 0, 504, 573, 574,
	575, 576, 0, 511, 0, 505, 506, 577, 507, 578,
	0, 508, 509, 510, 0, 512, 513, 0, 0, 514,
	515, 516, 518, 519, 517, 520, 0, 521, 0, 0,
	522, 523, 524, 579, 580, 581, 241, 526, 525, 582,
	0, 0, 0, 0, 527, 528, 583, 529, 530, 531,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	253, 254, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 255, 256, 258, 257, 259, 260, 261, 262,
	533, 534, 0, 263, 535, 264, 536, 0, 537, 265,
	266, 267, 268, 269, 0, 0, 0, 270, 538, 539,
	540, 0, 271, 272, 541, 0, 0, 0, 273, 274,
	275, 276, 277, 278, 279, 0, 0, 281, 282, 283,
	280, 0, 284, 0, 285, 286, 287, 288, 0, 289,
	0, 290, 291, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 295, 0, 296, 542, 543, 0, 300,
	297, 298, 0, 301, 299, 0, 302, 303, 304, 0,
	0, 305, 306, 307, 0, 308, 309, 0, 310, 311,
	312, 0, 313, 314, 544, 315, 316, 317, 319, 321,
	318, 322, 323, 324, 325, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 326, 327, 328, 547, 0, 0,
	0, 329, 0, 330, 0, 0, 0, 331, 332, 548,
	549, 333, 334, 0, 335, 550, 0, 551, 336, 0,
	337, 338, 339, 340, 341, 1398, 553, 554, 399, 0,
	342, 343, 0, 344, 345, 346, 347, 0, 0, 0,
	0, 348, 349, 351, 0, 0, 350, 555, 556, 0,
	557, 0, 352, 353, 0, 558, 0, 354, 355, 356,
	0, 357, 0, 0, 0, 358, 359, 360, 361, 362,
	363, 0, 364, 366, 365, 0, 367, 559, 0, 368,
	369, 0, 0, 370, 371, 372, 0, 0, 373, 374,
	375, 376, 0, 377, 378, 380, 382, 379, 381, 386,
	383, 384, 385, 388, 0, 387, 0, 389, 390, 391,
	395, 394, 396, 393, 0, 392, 0, 0, 0, 397,
	0, 560, 398, 561, 400, 401, 0, 0, 402, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 408, 562,
	0, 409, 0, 563, 410, 411, 403, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 420, 421, 564, 565,
	566, 422, 567, 423, 424, 0, 425, 0, 426, 427,
	428, 429, 430, 431, 432, 568, 434, 433, 435, 0,
	436, 0, 0, 0, 0, 0, 437, 0, 439, 440,
	441, 438, 442, 443, 444, 445, 0, 446, 447, 448,
	0, 449, 450, 451, 452, 569, 453, 0, 454, 455,
	461, 462, 456, 457, 463, 464, 465, 466, 467, 0,
	469, 470, 468, 471, 472, 473, 0, 474, 458, 459,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 570,
	0, 483, 0, 484, 485, 486, 487, 460, 488, 493,
	571, 489, 490, 491, 492, 572, 0, 495, 496, 0,
	494, 0, 497, 498, 499, 500, 501, 502, 320, 503,
	0, 504, 573, 574, 575, 576, 0, 511, 0, 505,
	506, 577, 507, 578, 0, 508, 509, 510, 0, 512,
	513, 0, 0, 514, 515, 516, 518, 519, 517, 520,
	0, 521, 0, 0, 522, 523, 524, 579, 580, 581,
	241, 526, 525, 582, 0, 0, 0, 0, 527, 528,
	583, 529, 530, 531, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 253, 254, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 255, 256, 258, 257,
	259, 260, 261, 262, 533, 534, 0, 263, 535, 264,
	536, 0, 537, 265, 266, 267, 268, 269, 0, 0,
	0, 270, 538, 539, 540, 0, 271, 272, 541, 0,
	0, 0, 273, 274, 275, 276, 277, 278, 279, 0,
	0, 281, 282, 283, 280, 0, 284, 0, 285, 286,
	287, 288, 0, 289, 0, 290, 291, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 295, 0, 296,
	542, 543, 0, 300, 297, 298, 0, 301, 299, 0,
	302, 303, 304, 0, 0, 305, 306, 307, 0, 308,
	309, 0, 310, 311, 312, 0, 313, 314, 544, 315,
	316, 317, 319, 321, 318, 322, 323, 324, 325, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 326, 327,
	328, 547, 0, 0, 0, 329, 0, 330, 0, 0,
	0, 331, 332, 548, 549, 333, 334, 0, 335, 550,
	0, 551, 336, 0, 337, 338, 339, 340, 341, 1339,
	553, 554, 399, 0, 342, 343, 0, 344, 345, 346,
	347, 0, 0, 0, 0, 348, 349, 351, 0, 0,
	350, 555, 556, 0, 557, 0, 352, 353, 0, 558,
	0, 354, 355, 356, 0, 357, 0, 0, 0, 358,
	359, 360, 361, 362, 363, 0, 364, 366, 365, 0,
	367, 559, 0, 368, 369, 0, 0, 370, 371, 372,
	0, 0, 373, 374, 375, 376, 0, 377, 378, 380,
	382, 379, 381, 386, 383, 384, 385, 388, 0, 387,
	0, 389, 390, 391, 395, 394, 396, 393, 0, 392,
	0, 0, 0, 397, 0, 560, 398, 561, 400, 401,
	0, 0, 402, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 408, 562, 0, 409, 0, 563, 410, 411,
	403, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	420, 421, 564, 565, 566, 422, 567, 423, 424, 0,
	425, 0, 426, 427, 428, 429, 430, 431, 432, 568,
	434, 433, 435, 0, 436, 0, 0, 0, 0, 0,
	437, 0, 439, 440, 441, 438, 442, 443, 444, 445,
	0, 446, 447, 448, 0, 449, 450, 451, 452, 569,
	453, 0, 454, 455, 461, 462, 456, 457, 463, 464,
	465, 466, 467, 0, 469, 470, 468, 471, 472, 473,
	0, 474, 458, 459, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 570, 0, 483, 0, 484, 485, 486,
	487, 460, 488, 493, 571, 489, 490, 491, 492, 572,
	0, 495, 496, 0, 494, 0, 497, 498, 499, 500,
	501, 502, 320, 503, 0, 504, 573, 574, 575, 576,
	0, 511, 0, 505, 506, 577, 507, 578, 0, 508,
	509, 510, 0, 512, 513, 0, 0, 514, 515, 516,
	518, 519, 517, 520, 0, 521, 0, 0, 522, 523,
	524, 579, 580, 581, 241, 526, 525, 582, 0, 0,
	0, 0, 527, 528, 583, 529, 530, 531, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 253, 254,
	0, 0, 0, 0, 0, 532, 0, 0, 0, 0,
	255, 256, 258, 257, 259, 260, 261, 262, 533, 534,
	0, 263, 535, 264, 536, 0, 537, 265, 266, 267,
	268, 269, 0, 0, 0, 270, 538, 539, 540, 0,
	271, 272, 541, 0, 0, 0, 273, 274, 275, 276,
	277, 278, 279, 0, 0, 281, 282, 283, 280, 0,
	284, 0, 285, 286, 287, 288, 0, 289, 0, 290,
	291, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 295, 0, 296, 542, 543, 0, 300, 297, 298,
	0, 301, 299, 0, 302, 303, 304, 0, 0, 305,
	306, 307, 0, 308, 309, 0, 310, 311, 312, 0,
	313, 314, 544, 315, 316, 317, 319, 321, 318, 322,
	323, 324, 325, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 547, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 548, 549, 333,
	334, 0, 335, 550, 0, 551, 336, 0, 337, 338,
	339, 340, 341, 552, 553, 554, 399, 0, 342, 343,
	0, 344, 345, 346, 347, 0, 0, 0, 0, 348,
	349, 351, 0, 0, 350, 555, 556, 0, 557, 0,
	352, 353, 0, 558, 0, 354, 355, 356, 0, 357,
	0, 0, 0, 358, 359, 360, 361, 362, 363, 0,
	364, 366, 365, 0, 367, 559, 0, 368, 369, 0,
	0, 370, 371, 372, 0, 0, 373, 374, 375, 376,
	0, 377, 378, 380, 382, 379, 381, 386, 383, 384,
	385, 388, 0, 387, 0, 389, 390, 391, 395, 394,
	396, 393, 0, 392, 0, 0, 0, 397, 0, 560,
	398, 561, 400, 401, 0, 0, 402, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 408, 562, 0, 409,
	0, 563, 410, 411, 403, 412, 413, 414, 415, 416,
	417, 418, 419, 0, 420, 421, 564, 565, 566, 422,
	567, 423, 424, 0, 425, 0, 426, 427, 428, 429,
	430, 431, 432, 568, 1077, 433, 435, 0, 436, 0,
	0, 0, 0, 0, 437, 0, 439, 440, 441, 438,
	442, 443, 444, 445, 0, 446, 447, 448, 0, 449,
	450, 451, 452, 569, 453, 0, 454, 455, 461, 462,
	456, 457, 463, 464, 465, 466, 467, 0, 469, 470,
	468, 471, 472, 473, 0, 474, 458, 459, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 570, 0, 483,
	0, 484, 485, 486, 487, 460, 488, 493, 571, 489,
	490, 491, 492, 572, 0, 495, 496, 0, 494, 0,
	497, 498, 499, 500, 501, 502, 320, 503, 0, 504,
	573, 574, 575, 576, 0, 511, 0, 505, 506, 577,
	507, 578, 0, 508, 509, 510, 0, 512, 513, 0,
	0, 514, 515, 516, 518, 519, 517, 520, 0, 521,
	0, 0, 522, 523, 524, 579, 580, 581, 241, 526,
	525, 582, 0, 0, 0, 0, 527, 528, 583, 529,
	530, 531, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 253, 254, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 0, 255, 256, 258, 257, 259, 260,
	261, 262, 533, 534, 0, 263, 535, 264, 536, 0,
	537, 265, 266, 267, 268, 269, 0, 0, 0, 270,
	538, 539, 540, 0, 271, 272, 541, 0, 0, 0,
	273, 274, 275, 276, 277, 278, 279, 0, 0, 281,
	282, 283, 280, 0, 284, 0, 285, 286, 287, 288,
	0, 289, 0, 290, 291, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 295, 0, 296, 542, 543,
	0, 300, 297, 298, 0, 301, 299, 0, 302, 303,
	304, 0, 0, 305, 306, 307, 0, 308, 309, 0,
	310, 311, 312, 0, 313, 314, 544, 315, 316, 317,
	319, 321, 318, 322, 323, 324, 325, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 547,
	0, 0, 0, 329, 0, 330, 0, 0, 0, 331,
	332, 548, 549, 333, 334, 0, 335, 550, 0, 551,
	0, 0, 337, 338, 339, 340, 341, 552, 553, 554,
	399, 0, 342, 343, 0, 344, 345, 346, 347, 0,
	0, 0, 0, 348, 349, 351, 0, 0, 350, 555,
	556, 0, 557, 0, 352, 353, 0, 558, 0, 354,
	355, 356, 0, 357, 0, 0, 0, 358, 359, 360,
	361, 362, 363, 0, 364, 366, 365, 0, 367, 559,
	0, 368, 369, 0, 0, 370, 371, 372, 0, 0,
	373, 374, 375, 376, 0, 377, 378, 380, 382, 379,
	381, 386, 383, 384, 385, 388, 0, 387, 0, 389,
	390, 391, 395, 394, 396, 393, 0, 392, 0, 0,
	0, 397, 0, 560, 398, 561, 400, 401, 0, 0,
	402, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	408, 562, 0, 409, 0, 563, 410, 411, 403, 412,
	413, 0, 415, 416, 417, 418, 419, 0, 420, 421,
	564, 565, 566, 422, 567, 423, 424, 0, 425, 0,
	426, 427, 428, 429, 0, 431, 432, 568, 434, 433,
	435, 0, 436, 0, 0, 0, 0, 0, 437, 0,
	439, 440, 441, 438, 442, 443, 444, 445, 0, 446,
	447, 448, 0, 449, 450, 451, 452, 569, 0, 0,
	454, 455, 461, 462, 456, 457, 463, 464, 465, 466,
	467, 0, 469, 470, 468, 471, 472, 473, 0, 474,
	458, 459, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 570, 0, 483, 0, 484, 485, 486, 487, 460,
	488, 493, 571, 489, 490, 491, 492, 572, 0, 495,
	496, 0, 494, 0, 497, 498, 499, 500, 501, 502,
	320, 503, 0, 504, 573, 574, 575, 576, 0, 511,
	0, 505, 506, 577, 507, 578, 0, 508, 509, 510,
	0, 512, 513, 0, 0, 514, 515, 516, 518, 519,
	517, 520, 0, 521, 0, 0, 522, 523, 524, 579,
	580, 581, 0, 526, 525, 582, 0, 0, 0, 0,
	527, 528, 583, 529, 530, 531, 1608, 1609, 0, 1641,
	1642, 1643, 1651, 1652, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 1639, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	1608, 1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 0,
	0, 1644, 1639, 0, 0, 0, 0, 0, 1630, 1611,
	0, 0, 0, 0, 0, 0, 1627, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1609, 0, 1641, 1642, 1643,
	1651, 1652, 1653, 1633, 1634, 1635, 1636, 0, 0, 0,
	0, 0, 0, 1616, 0, 1644, 1639, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1648, 0, 0, 1658, 0, 1633, 1634, 1635,
	1636, 1638, 1640, 0, 0, 0, 1610, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 1654, 0, 1655,
	0, 0, 0, 0, 1627, 0, 1625, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 1658,
	0, 0, 0, 0, 1646, 1638, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 1654, 0, 1655, 0, 0, 0, 0, 0, 0,
	1625, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 1633, 1634, 1635, 1636, 0, 0, 0, 1645, 1631,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	1648, 0, 0, 1658, 0, 0, 0, 0, 0, 1638,
	1640, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	1637, 0, 0, 0, 0, 1654, 0, 1655, 0, 0,
	0, 0, 0, 0, 1625, 1626, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 1637, 1649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 1637, 0,
	0, 1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619,
	1620, 1612, 1613, 1614, 1615, 1617, 1618, 0, 1632, 0,
	0, 0, 0, 0, 0, 2271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 1649, 0, 1622, 1623, 1629, 1650, 1628,
	1624, 0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617,
	1618, 0, 0, 0, 0, 4001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651,
	1652, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 1639, 0, 0, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 1622,
	1623, 1629, 1650, 1628, 1624, 1610, 1621, 1619, 1620, 1612,
	1613, 1614, 1615, 1617, 1618, 1630, 0, 0, 0, 3911,
	0, 0, 0, 1627, 0, 1608, 1609, 0, 1641, 1642,
	1643, 1651, 1652, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 1639, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 0,
	1633, 1634, 1635, 1636, 0, 0, 0, 1630, 0, 0,
	1616, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 1658, 0, 0, 0, 0, 0, 1638, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 1655, 0, 0, 0,
	0, 0, 0, 1625, 1626, 0, 0, 0, 0, 0,
	0, 0, 1633, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 1646, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 1658, 0, 0, 0, 1656, 0,
	1638, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 1654, 0, 1655, 0,
	0, 0, 0, 0, 0, 1625, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651,
	1652, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 1639, 0, 0, 0, 1637,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 1630, 0, 0, 0, 0,
	0, 0, 0, 1627, 1647, 0, 0, 0, 1622, 1623,
	1629, 1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613,
	1614, 1615, 1617, 1618, 0, 0, 0, 0, 3910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1634, 1635, 1636, 0, 0, 0, 0, 0, 0,
	1616, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619, 1620,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 0, 1648,
	3759, 0, 1658, 0, 0, 0, 0, 0, 1638, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 1655, 0, 0, 0,
	0, 0, 0, 1625, 1626, 0, 0, 0, 0, 1608,
	1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1639, 1631, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651,
	1652, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 1639, 0, 1637, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 1634, 1635, 1636,
	0, 0, 0, 0, 0, 1610, 1616, 0, 0, 0,
	0, 0, 1649, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 1658, 0,
	0, 0, 0, 0, 1638, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1654, 0, 1655, 0, 0, 0, 0, 0, 0, 1625,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	1633, 1634, 1635, 1636, 0, 0, 0, 0, 1631, 0,
	1616, 0, 0, 0, 1647, 0, 0, 0, 1622, 1623,
	1629, 1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613,
	1614, 1615, 1617, 1618, 1656, 0, 0, 0, 3622, 1648,
	0, 0, 1658, 0, 0, 0, 0, 0, 1638, 1640,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 1655, 0, 0, 0,
	0, 0, 0, 1625, 1626, 0, 0, 0, 0, 1608,
	1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1639, 1631, 1637, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 1645, 0, 0, 1649, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 1634, 1635, 1636,
	0, 0, 0, 0, 0, 0, 1616, 0, 0, 0,
	1647, 0, 1649, 0, 1622, 1623, 1629, 1650, 1628, 1624,
	0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618,
	0, 0, 0, 0, 3566, 1648, 0, 0, 1658, 0,
	0, 0, 0, 0, 1638, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1654, 0, 1655, 0, 0, 0, 0, 0, 0, 1625,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 1622, 1623,
	1629, 1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613,
	1614, 1615, 1617, 1618, 1656, 0, 0, 0, 3565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 1609, 0,
	1641, 1642, 1643, 1651, 1652, 1653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 1639,
	0, 0, 0, 1637, 0, 0, 1611, 0, 0, 0,
	0, 0, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 1608, 1609, 1632, 1641, 1642, 1643, 1651, 1652, 1653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1610,
	0, 0, 1644, 1639, 0, 0, 0, 0, 1649, 1630,
	1611, 0, 0, 0, 0, 0, 0, 1627, 1657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 1634, 1635, 1636, 0, 0,
	0, 0, 0, 0, 1616, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 1622, 1623, 1629, 1650, 1628, 1624,
	0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618,
	0, 0, 0, 1648, 3564, 0, 1658, 0, 1633, 1634,
	1635, 1636, 1638, 1640, 0, 0, 0, 0, 1616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	1655, 0, 0, 0, 0, 0, 0, 1625, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 1648, 0, 0,
	1658, 0, 0, 0, 0, 1646, 1638, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 1654, 0, 1655, 0, 0, 0, 0, 0,
	0, 1625, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1656, 0, 0, 0, 0, 0, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 1637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1608,
	1609, 1632, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1639, 0, 0, 0, 1637, 1649, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 1630, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651,
	1652, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 1639, 0, 0, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 1647, 0,
	1657, 0, 1622, 1623, 1629, 1650, 1628, 1624, 0, 1621,
	1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 0, 0,
	0, 0, 3268, 0, 0, 1610, 1633, 1634, 1635, 1636,
	0, 0, 0, 0, 0, 1630, 1616, 0, 0, 0,
	0, 0, 1647, 1627, 0, 0, 1622, 1623, 1629, 1650,
	1628, 1624, 0, 1621, 1619, 1620, 1612, 1613, 1614, 1615,
	1617, 1618, 0, 0, 0, 1648, 2835, 0, 1658, 0,
	0, 0, 0, 0, 1638, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1654, 0, 1655, 0, 0, 0, 0, 0, 0, 1625,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1634, 1635, 1636, 0, 0, 0, 1646, 0, 0,
	1616, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 1658, 0, 1656, 0, 0, 0, 1638, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 1654, 0, 1655, 0, 0, 0,
	0, 0, 0, 1625, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 1609, 0, 1641, 1642, 1643, 1651, 1652, 1653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 1639, 0, 0, 0, 1637, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	0, 0, 0, 0, 0, 1608, 1609, 1632, 1641, 1642,
	1643, 1651, 1652, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 0, 0, 1644, 1639, 0, 0,
	0, 0, 1649, 1630, 1611, 0, 0, 0, 0, 0,
	1647, 1627, 1657, 0, 1622, 1623, 1629, 1650, 1628, 1624,
	0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618,
	0, 0, 0, 0, 2834, 0, 0, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 1634,
	1635, 1636, 0, 0, 0, 0, 0, 0, 1616, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 1622, 1623,
	1629, 1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613,
	1614, 1615, 1617, 1618, 0, 0, 0, 1648, 2833, 0,
	1658, 0, 1633, 1634, 1635, 1636, 1638, 1640, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 1655, 0, 0, 0, 0, 0,
	0, 1625, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 1658, 0, 0, 0, 0, 1646,
	1638, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 1654, 0, 1655, 0,
	0, 0, 0, 0, 0, 1625, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 1632, 1641, 1642, 1643, 1651,
	1652, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 1639, 0, 0, 0, 1637,
	1649, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 1630, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 1622, 1623, 1629, 1650,
	1628, 1624, 0, 1621, 1619, 1620, 1612, 1613, 1614, 1615,
	1617, 1618, 0, 0, 0, 0, 2832, 0, 0, 0,
	1633, 1634, 1635, 1636, 0, 0, 0, 0, 0, 0,
	1616, 4127, 0, 0, 0, 0, 1647, 0, 0, 0,
	1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619, 1620,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 2799, 1648,
	0, 0, 1658, 0, 0, 0, 0, 0, 1638, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 1655, 0, 0, 0,
	0, 0, 0, 1625, 1626, 0, 0, 0, 0, 1608,
	1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1639, 1631, 0, 0, 0, 2770, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4126, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651,
	1652, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2771, 0, 0, 1644, 1639, 0, 1637, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 1634, 1635, 1636,
	0, 0, 0, 0, 0, 1610, 1616, 0, 0, 0,
	0, 0, 1649, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 1658, 0,
	0, 0, 0, 0, 1638, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1654, 0, 1655, 0, 0, 0, 0, 0, 0, 1625,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	1633, 1634, 1635, 1636, 0, 0, 0, 0, 1631, 0,
	1616, 0, 2895, 0, 1647, 2894, 0, 0, 1622, 1623,
	1629, 1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613,
	1614, 1615, 1617, 1618, 1656, 0, 0, 0, 0, 1648,
	0, 0, 1658, 0, 0, 0, 0, 0, 1638, 1640,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 1655, 0, 0, 0,
	0, 0, 2391, 1625, 1626, 0, 0, 0, 0, 1608,
	1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1639, 1631, 1637, 0, 2390, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 1645, 0, 0, 1649, 0,
	0, 1630, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 1634, 1635, 1636,
	0, 0, 0, 0, 0, 0, 1616, 0, 0, 0,
	1647, 0, 1649, 0, 1622, 1623, 1629, 1650, 1628, 1624,
	0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618,
	0, 0, 0, 0, 0, 1648, 0, 0, 1658, 0,
	0, 0, 0, 0, 1638, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1654, 0, 1655, 0, 0, 0, 0, 0, 0, 1625,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 1622, 1623,
	1629, 1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613,
	1614, 1615, 1617, 1618, 1656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 1609, 0, 1641, 1642,
	1643, 1651, 1652, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 1639, 0, 0,
	0, 0, 0, 1637, 1611, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 1649, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 1608, 1609,
	0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	1639, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 0, 1633, 1634, 1635, 1636, 0, 0, 0, 0,
	1630, 0, 1616, 0, 0, 0, 0, 0, 1627, 0,
	1647, 0, 0, 0, 1622, 1623, 1629, 1650, 1628, 1624,
	0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618,
	0, 1648, 0, 0, 1658, 0, 0, 0, 0, 0,
	1638, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 1655, 0,
	0, 0, 0, 0, 0, 1625, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 1634, 1635, 1636, 0,
	0, 0, 0, 1646, 0, 1616, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 1658, 0, 0,
	1656, 0, 0, 1638, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 934, 1654,
	0, 1655, 0, 0, 0, 0, 0, 0, 1625, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1609, 0, 1641, 1642, 1643,
	1651, 1652, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 1639, 0, 0, 0,
	0, 0, 1637, 1611, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 1649, 0, 0,
	0, 0, 0, 0, 1627, 0, 1647, 0, 0, 0,
	1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619, 1620,
	1612, 1613, 1614, 1615, 1617, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651, 1652,
	1653, 1633, 1634, 1635, 1636, 0, 0, 0, 0, 0,
	0, 1616, 0, 1644, 1639, 0, 2901, 0, 2896, 1647,
	0, 1611, 0, 1622, 1623, 1629, 1650, 1628, 1624, 1657,
	1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 0,
	1648, 0, 0, 1658, 0, 0, 0, 0, 0, 1638,
	1640, 0, 0, 0, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1654, 0, 1655, 0, 0,
	0, 0, 1627, 0, 1625, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	1634, 1635, 1636, 0, 0, 0, 1645, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 1658, 0, 0, 0, 0, 0, 1638, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 1654, 0, 1655, 0, 0, 0, 0,
	0, 0, 1625, 1626, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 1609,
	0, 1641, 1642, 1643, 1651, 1652, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	1639, 0, 0, 0, 0, 1647, 1637, 1611, 0, 1622,
	1623, 1629, 1650, 1628, 1624, 1657, 1621, 1619, 1620, 1612,
	1613, 1614, 1615, 1617, 1618, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 1649, 0, 0, 0, 0, 0, 0, 1627, 0,
	1608, 1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 1639, 0, 0, 0, 2836, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 0, 0, 1633, 1634, 1635, 1636, 0,
	0, 0, 1630, 0, 0, 1616, 0, 0, 0, 0,
	1627, 0, 0, 1647, 0, 0, 0, 1622, 1623, 1629,
	1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613, 1614,
	1615, 1617, 1618, 0, 1648, 0, 0, 1658, 0, 0,
	0, 0, 0, 1638, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1654,
	0, 1655, 0, 0, 0, 0, 0, 0, 1625, 1626,
	0, 0, 0, 0, 0, 0, 0, 1633, 1634, 1635,
	1636, 0, 0, 0, 0, 0, 1646, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 1658,
	0, 0, 0, 1656, 0, 1638, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 1654, 0, 1655, 0, 0, 0, 0, 0, 0,
	1625, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	2863, 0, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 1609, 0, 1641,
	1642, 1643, 1651, 1652, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 1639, 0,
	0, 0, 0, 0, 1637, 1611, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 1649,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 1647,
	0, 0, 0, 1622, 1623, 1629, 1650, 1628, 1624, 0,
	1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617, 1618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1609, 0, 1641, 1642, 1643,
	1651, 1652, 1653, 1633, 1634, 1635, 1636, 0, 0, 0,
	0, 0, 0, 1616, 0, 1644, 1639, 0, 0, 0,
	0, 1647, 0, 1611, 0, 1622, 1623, 1629, 1650, 1628,
	1624, 1657, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617,
	1618, 0, 1648, 0, 0, 1658, 0, 0, 0, 0,
	0, 1638, 1640, 0, 0, 0, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 1654, 0, 1655,
	0, 0, 0, 0, 1627, 0, 1625, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1634, 1635, 1636, 0, 0, 0, 1645, 0,
	0, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 1658, 0, 0, 0, 0, 0, 1638,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1637, 0, 0, 0, 0, 1654, 0, 1655, 0, 0,
	0, 0, 0, 0, 1625, 1626, 0, 0, 0, 0,
	1632, 0, 1608, 1609, 0, 1641, 1642, 1643, 1651, 1652,
	1653, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 1639, 1649, 0, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 1637, 0,
	0, 1622, 1623, 1629, 1650, 1628, 1624, 0, 1621, 1619,
	1620, 1612, 1613, 1614, 1615, 1617, 1618, 0, 1632, 0,
	1608, 1609, 0, 1641, 1642, 1643, 1651, 1652, 1653, 1633,
	1634, 1635, 1636, 0, 0, 0, 0, 0, 0, 1616,
	0, 0, 1639, 1649, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1648, 0,
	0, 1658, 0, 0, 0, 0, 0, 1638, 1640, 0,
	0, 0, 1610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 1654, 0, 1655, 0, 0, 0, 0,
	1627, 0, 1625, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 1647, 0, 0, 0, 1622,
	1623, 1629, 1650, 1628, 1624, 0, 1621, 1619, 1620, 1612,
	1613, 1614, 1615, 1617, 1618, 0, 0, 1656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 1634, 1635,
	1636, 0, 0, 0, 0, 0, 0, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 828, 1658,
	870, 0, 0, 0, 0, 1638, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 0, 0,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	1625, 1626, 0, 0, 0, 0, 1632, 0, 0, 849,
	834, 833, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 1649, 0, 0, 0, 0, 0, 835, 0, 0,
	0, 0, 838, 0, 0, 0, 0, 878, 0, 0,
	0, 0, 0, 0, 0, 846, 847, 0, 0, 0,
	0, 0, 863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 871, 840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 841, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 1637, 0, 0, 1622, 1623, 1629,
	1650, 1628, 1624, 0, 1621, 1619, 1620, 1612, 1613, 1614,
	1615, 1617, 1618, 0, 1632, 0, 0, 0, 842, 0,
	0, 0, 0, 0, 0, 0, 832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1649,
	0, 0, 0, 0, 843, 844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 851, 850, 0, 0, 0, 0, 0, 0,
	845, 0, 0, 0, 860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 1622, 1623, 1629, 1650, 1628,
	1624, 0, 1621, 1619, 1620, 1612, 1613, 1614, 1615, 1617,
	1618, 0, 0, 0, 839, 0, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 837, 0, 0, 0, 867, 868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 865, 0, 0, 0,
	0, 0, 0, 876, 861, 0, 854, 852, 0, 857,
	0, 0, 0, 0, 0, 858, 0, 0, 830, 0,
	873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 0, 0, 0, 0, 856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 0, 0, 862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 866,
}
var sqlPact = [...]int{

	9779, -1000, -1000, -1000, -1000, 272, -1000, -1000, 271, 262,
	260, 259, 258, 257, 255, 254, 252, -1000, -1000, -1000,
	-1000, -1000, -1000, 248, -1000, -1000, 245, -1000, 242, 241,
	240, -1000, -1000, 239, -1000, 233, -1000, -1000, -1000, -1000,
	231, 220, 213, 75962, 75482, 76436, 2124, 92672, 81188, 2037,
	67826, 92192, 67346, 91712, 91232, 2500, 196, -1000, 90752, 191,
	189, 188, -1000, 90272, -1000, 1891, -1000, 185, 4362, 55332,
	184, 182, 181, 2294, 180, -1000, 179, 178, -1000, 9118,
	1549, -1000, 176, 175, -1000, 8947, 321, 80234, 174, 171,
	2329, 169, 167, 54851, 160, 159, 2223, 2691, -1000, -1000,
	1953, -1000, -1000, 157, 156, 152, 149, 139, 137, 135,
	133, 132, 131, -1000, 130, 129, 127, 119, 116, 115,
	114, 113, -1000, 112, 111, 109, 107, 106, 105, 104,
	101, 100, 98, 95, 92, -1000, 105086, 88, 1801, 1678,
	1605, 1602, 1586, 1582, 997, 87, 86, 85, 84, 83,
	82, 81, 80, 77, -1000, 74, 72, 71, 68, 67,
	66, 65, 63, 168, 57, 56, 54, 52, 51, 50,
	42, 2644, -1000, 1666, 1072, 25921, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 98360, 93146, 39, -130, 35, -1000, 3074, 1004,
	45699, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 337, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 550, 1927, 776, -1000,
	-1000, -1000, 89798, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2119, -64, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	774, -1000, 2118, 124, 2087, -1000, -1000, -1000, -1000, -1000,
	93146, -1000, 1036, -1000, -1000, 3434, 3433, 1987, 771, 89324,
	-1000, 1503, -1000, 952, 27433, -1000, 1235, -1000, 27433, 334,
	-1000, -1000, -1000, -1000, -1000, -1000, 3432, 3423, 3421, 3420,
	-1000, -1000, 66866, 19819, 66386, 65906, 88844, 19329, 75002, 74522,
	88364, 62080, 1035, -1000, -1000, -1000, 1358, -1000, -1000, -1000,
	-1000, -1000, -1000, 11, 59630, 3299, 93146, -1000, 332, -1000,
	-1000, -1000, -1000, -1000, -1000, 39241, 831, 38725, 832, 38209,
	762, -1000, -1000, -1000, 61590, -1000, 3418, 3417, 1119, 3415,
	3005, 97886, 1711, 3413, 1822, 1310, 3412, 3411, 3410, 3409,
	3408, 3406, 1410, 87884, 2742, 87404, 1722, 61100, 1034, 74042,
	76436, 2456, 86924, 1407, 1383, -1000, -1000, -1000, -1000, 2851,
	2681, 2673, 51509, -1000, -1000, 3405, 3404, 3403, 3402, 3401,
	97412, 1704, 3400, 2300, 3399, 3396, 3395, 3394, 3393, 3392,
	3391, -1000, 73562, 1033, 73082, 72602, 3126, 86444, 72122, 85964,
	60610, 37693, 835, -1000, -1000, -1000, 47633, 8097, 6217, 85484,
	49592, 76436, 76436, -1000, -1000, -1000, -1000, -1000, 37177, 782,
	36661, 592, -1000, -1000, 48128, 2682, -1000, -1000, -1000, -1000,
	36145, 650, 35629, 591, 93146, -1000, 2741, 1886, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1869, 1547, 3287, 2532, 60120, 1914, 1422, 3079, 2850, 2846,
	1456, 3390, 2416, 2845, 2819, 2792, 2785, 2776, 1813, 2407,
	382, 25405, 2728, 1609, 35113, 1575, 1432, 2769, 2768, 3319,
	1904, 1876, 1868, 65426, 3389, 3387, 3052, 2764, 2763, 2668,
	-1000, -1000, -1000, -1000, 1427, -1000, -1000, -1000, -1000, -1000,
	68300, -1000, -1000, 1188, -1000, -1000, 1188, -1000, -1000, -1000,
	-1000, -1000, 1330, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1666, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1928, -1000, 1965, -1000, -1000,
	2274, 2960, 2960, 2960, 3117, 510, 484, -1000, 168, -1000,
	-1000, 104385, -1000, -1000, 39745, 39745, 39745, 39745, 39745, 39745,
	39745, 2036, -1000, 769, -1000, -1000, 809, -1000, 764, 640,
	-1000, -1000, -1000, -1000, -1000, -1000, 761, -1000, -1000, -1000,
	-1000, -1000, -1000, 3299, -1000, 22321, -1000, -1000, -1000, 489,
	759, 39745, -1000, -1000, 3332, 3331, 964, -1000, 331, 968,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2739, 758, 756, -1000, 753, 747, 744, 743,
	739, -1000, -1000, -1000, 737, 736, 735, 731, 730, 728,
	727, 725, -1000, 1976, -1000, -1000, -1000, -1000, -1000, -1000,
	678, 675, 675, 675, -1000, 1022, -1000, -1000, -1000, 329,
	674, 328, 670, 669, 668, -1000, 723, 721, 718, 717,
	715, 714, 712, 711, 706, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1019, -1000, -1000, -1000, -1000, 10, 93146, -1000, 550,
	10, -1000, -1000, 705, -1000, 29461, 29461, 29461, -1000, -1000,
	2117, 39745, -1000, 2834, -1000, 22, 22, 923, 46657, -1000,
	44723, 923, 618, 819, 51028, -1000, 2663, -1000, -1000, 700,
	330, -1000, -1000, -1000, -1000, 20307, 2662, 93146, 93146, 76436,
	76436, 76436, 2944, 39745, -1000, -1000, 57228, 93146, 76910, 3227,
	57702, 56754, 93146, 2736, -1000, 3029, -1000, -1000, 93146, -1000,
	39745, -1000, 3224, 1444, 63046, 3158, -28, -1000, -1000, -1000,
	-1000, -1000, -1000, 2271, 2382, 1175, 2142, 1562, -1000, 27433,
	2997, -1000, -1000, -1000, 312, 20307, -1000, -1000, -1000, -1000,
	-1000, 2170, 2926, 1464, -1000, 2140, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1720, 2923, -1000, 1983, 2921,
	1706, -1000, -1000, 2128, -1000, -1000, 3019, -1000, -1000, 1894,
	2919, 23, -1000, -1000, 2139, -1000, -1000, 1883, -1000, -1000,
	991, 2915, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 71642, 49104, 48128, 59630, 7, -1000, -1000, -1000, -1000,
	-91, -1000, 18839, 104385, -1000, -1000, -1000, -1000, 1757, 104385,
	877, -1000, -1000, 2910, -1000, 104385, 876, -1000, -1000, 2906,
	-1000, 2735, -1000, -1000, -1000, -1000, 3385, -1000, 3384, 2217,
	3383, 3382, 3381, -1000, 1612, 1923, 3379, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 71168, 2116, -1000, -1000, 70208, -1000,
	2216, -1000, 70688, 1024, -1000, 991, 2215, -1000, 79754, 966,
	-1000, 3378, 3122, 2493, 991, 2212, -1000, -1000, -1000, -1000,
	-1000, 52940, -1000, 52940, -1000, 52940, -1000, 1534, -1000, 96938,
	22, 22, 3299, -1000, -1000, -1000, -1000, -1000, 2904, 3376,
	3375, 3374, -1000, 93146, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 202, 2903, -1000, -1000, 79280, 202, 2901, -1000, 202,
	2900, -1000, 78806, -1000, -1000, 2114, 2897, -1000, 204, 2895,
	-1000, -1000, 203, 2888, -1000, -1000, -142, 2880, -1000, -1000,
	104385, -1000, -1000, -1000, 5, -1000, -1000, -1000, 1004, -1000,
	47138, -1000, 47138, 85004, 62568, 967, 754, 54370, 104385, -1000,
	-1000, -1000, -1000, 104385, -1000, -1000, -1000, -149, -1000, -1000,
	62568, 48128, 104385, -1000, -1000, -1000, -1000, 104385, -1000, -1000,
	-1000, 62568, 70208, -1000, 84524, 69734, -1000, -1000, 1405, 2318,
	-1000, -1000, -1000, 62568, 1261, 62568, 62568, 62568, -1000, 84044,
	-1000, -1000, 1944, 1752, 3036, 1935, 76436, -1000, 1787, -1000,
	-1000, -1000, 3062, -1000, 2731, -1000, 56280, 78332, -1000, 77858,
	-1000, 77384, -1000, 76436, -1000, 76436, -1000, 3373, 3371, 3370,
	-1000, 3369, 3058, -1000, 104385, 3051, -1000, 3368, 3150, 2728,
	104385, -1000, 2803, 1687, 1610, 93146, -1000, -1000, 93146, -1000,
	93146, -1000, -1000, -1000, 1468, -1000, -1000, 2265, -1000, -1000,
	-1000, -1000, 76436, -1000, -1000, -1000, -1000, -1000, -1000, 2724,
	-1000, 1583, -1000, 1775, -1000, 1404, -1000, -1000, 205, -1000,
	-1000, -28, -1000, 96464, -1000, 2274, -1000, 93146, -1000, 2355,
	2688, 2723, 1733, 2133, 2359, -1000, 34597, 2376, 42265, 2137,
	168, -1000, -1000, 168, 168, 26929, -1000, -1000, 57702, 57702,
	20307, 1337, 39745, 39745, 39745, 39745, 39745, 39745, 39745, 39745,
	39745, 39745, 39745, 39745, 39745, 39745, 39745, 39745, 39745, 39745,
	39745, 39745, 39745, 39745, 39745, 39745, 39745, 39745, 39745, 39745,
	39745, 39745, 39745, 39745, 39745, 39745, 39745, 2187, 39745, 1322,
	39745, 39745, 39745, 39745, 2005, -1000, -1000, 1855, 579, 1892,
	-1000, 3289, 3289, 3289, 867, 867, 104751, 104751, 649, 3367,
	809, -1000, 39745, -1000, 153, 39745, 20797, -1000, 484, 11427,
	2327, -1000, 472, 21313, -1000, -1000, -1000, 22321, 640, 34081,
	39745, 1009, 104385, -1000, -1000, 1686, 3304, 18351, 2751, 2571,
	699, 838, 837, 24889, 24373, 23857, 23341, 719, 39745, 39745,
	39745, 39745, 39745, 39745, 39745, 39745, -1000, -1000, 3312, -1000,
	3304, -1000, -1000, -1000, -1000, 3304, 1335, 1314, 3304, -1000,
	3304, 3304, 2581, 2581, 33577, 33061, 32545, 42769, 32029, 39745,
	22825, 31513, 30997, -1000, 93146, 10, 3222, 39745, 97, -1000,
	102818, -1000, 97, 97, 698, -1, 104385, 2330, 2330, 46178,
	2246, 2043, 2043, 2043, -1000, 923, 14418, 923, 83092, 2055,
	923, 923, 307, 326, 467, 44244, 2834, 83092, 801, 695,
	33, 32, 31, -1000, -1000, 29, 28, -1000, -1000, 76436,
	692, 20797, 20307, 301, 1451, -2, 2439, 2438, 2431, -1000,
	2429, 1737, -8, 1321, 76436, -205, -1000, 4923, -9, -1000,
	1276, 300, 3304, -1000, -1000, -1000, -1000, -1000, 3366, 3364,
	-1000, 1015, 690, 683, 341, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 678, 675, 675, 675, -1000, 329, 674,
	328, 670, 669, 668, -1000, -1000, -1000, -1000, -1000, 2660,
	76436, -91, 76910, 76436, 908, -10, 1126, -28, -1000, -1000,
	-1000, 63046, 1188, -1000, 1943, -1000, -1000, -1000, -1000, -1000,
	-1000, 1371, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 964,
	-1000, -1000, -1000, -1000, -1000, -1000, 3301, 3295, 9, -1000,
	-1000, 20307, -1000, -36, 1608, 1696, -1000, 64946, 2296, 3060,
	3013, 1512, -1000, 1467, 1318, 3115, 68300, 3186, 3196, 942,
	-1000, 2656, -1000, -1000, 951, 1577, 1681, 1311, 68300, 1983,
	-1000, 57702, -1000, 2402, 3108, 1359, 1362, 1359, 1359, 1357,
	-1000, 68300, 1665, 1309, -1000, 1306, -1000, -39, 3171, 3190,
	894, -1000, 2655, 1305, -1000, -1000, 76436, 20307, 1499, 1519,
	1622, 1300, 8, -1000, 3167, 3166, 1288, 1285, -1000, 1934,
	-1000, 62568, 1703, 2879, 921, 2529, 921, 7, 59630, 93146,
	296, -1000, 153, 39745, 39745, 153, 39745, 153, 3145, -1000,
	-1000, 2878, -1000, -1000, -1000, 3363, 1866, 2299, -1000, -1000,
	667, 2209, 2653, 93146, 2459, -7, 76436, -1000, 2872, 1983,
	2205, -1000, -1000, 69254, -1000, 2868, 550, 2201, -1000, 702,
	3362, -1000, 95990, -1000, 3029, 1347, 2867, 1083, 186, 3220,
	-1000, 186, 53414, -1000, 93146, -1000, -1000, 93146, -1000, -1000,
	-1000, 3361, -1000, 76436, -1000, -1000, 76436, 202, 2860, -1000,
	76436, -1000, 76436, 199, 2859, -1000, -1000, 93146, -1000, 76436,
	76436, -1000, 93146, 93146, 62568, 62568, 4328, 63998, -11, -19,
	465, -1000, 83570, 93146, 1080, 64472, 93146, 2985, 985, 48128,
	-1000, -25, -149, 2527, 967, 967, 921, -1000, 921, -1000,
	76436, 2719, -1000, -1000, 62568, 967, 967, 967, -1000, -1000,
	-1000, -1000, 3359, 3358, -1000, -1000, -1000, 988, 76436, 93146,
	76436, -1000, -1000, 93146, -1000, 93146, -1000, 988, 93146, 988,
	93146, 988, 93146, -1000, -1000, -1000, -1000, -1000, -1000, 153,
	39745, -1000, -1000, 3357, 1579, -1000, 2695, -1000, 2693, -1000,
	59, -1000, -1000, -1000, -1000, -1000, 1671, 76436, 76436, 76436,
	76436, 93146, 76436, -1000, 68300, -1000, 2355, 2688, -1000, -1000,
	-1000, -1000, -1000, -1000, 1523, 2100, -1000, 2367, -1000, 1488,
	-1000, -1000, -1000, 104385, 43257, -1000, -1000, 104385, 1776, -1000,
	41761, 41257, -1000, -1000, 1621, 76436, 2462, -1000, 2462, -202,
	-1000, 102498, 2342, 76436, -1000, -1000, -1000, -1000, -1000, 950,
	1393, 1393, 1176, 1176, 1176, 1176, 3146, 547, 4434, 523,
	7678, 7678, 505, 505, 505, 505, 505, 7678, 453, 867,
	867, 453, 453, 453, 453, 453, 867, 867, 867, 7678,
	7678, 7678, 104751, 104523, 8287, 39745, 39745, 1281, 1854, 579,
	6984, 39745, 1348, 1348, 1348, 1348, -1000, 1967, -1000, -1000,
	-1000, -1000, 2652, 666, 42769, 42769, -1000, -1000, -1000, -1000,
	21817, 39745, -1000, -1000, -1000, -1000, 30481, -1000, -1000, 101954,
	-266, 464, -189, -32, -1000, 39745, 39745, 39745, 461, -1000,
	295, 39745, 93146, -1000, 99315, 795, -82, -1000, -26, 1368,
	-1000, 39745, -1000, -1000, 1280, -1000, 1264, 1257, 1256, -1000,
	665, 459, -1000, 292, -1000, 2038, 663, 662, 39745, -1000,
	-1000, -1000, -1000, -1000, 101910, -1000, -1000, 101592, -1000, -1000,
	101508, -1000, -1000, 101190, -1000, -1000, -1000, 104069, 13749, 13587,
	13424, 10985, 13049, 12525, -33, 458, -38, 457, 949, 945,
	456, 452, 451, -40, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -41, 450, -1000, 2650, -189, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 449, -1000, 428, -1000, 103987,
	-189, 427, 6290, -1000, 42769, 42769, 42769, -1000, 426, -1000,
	102592, -1000, 103671, 29977, 29977, 29977, 425, 103533, 39745, -189,
	-46, -1000, -47, -1000, -1000, 548, -61, 1005, 29461, 45218,
	20307, -1000, 1005, 1005, 39745, -1000, 39745, 2395, -1000, -1000,
	-1000, 2364, 1990, 2330, 46178, -1000, -1000, -1000, -1000, 83092,
	-1000, 3299, 2553, -1000, 83092, -1000, -1000, 93146, 550, -1000,
	83092, 83092, 20307, 923, -1000, 923, 83092, 604, -1000, -1000,
	-1000, -1000, -1000, 422, 50070, -32, 291, 20307, 991, -1000,
	2437, 2437, 2437, 2437, -1000, -1000, 93146, 1255, 3, 3252,
	-1000, 1950, -1000, 57702, -1000, 808, 1030, 20307, -1000, -1000,
	-1000, 657, -1000, 3304, 3304, -1000, 3304, 93146, 2645, 94,
	-1000, 27433, -1000, 1188, -1000, -1000, 1462, -1000, 1900, -1000,
	1291, -1000, -1000, -1000, -1000, 27433, -1000, 1861, 93146, 93146,
	76436, -1000, 93146, -1000, 2196, 95516, 2194, 57702, 93146, -1000,
	-1000, 656, 655, 2340, 2337, 1076, 93146, 93146, 2326, 95042,
	94568, 93146, 1938, 39745, 59156, 2013, 2138, 153, 153, -1000,
	-1000, 153, 652, 1204, 76436, 76436, 93146, 76436, 1649, -1000,
	-1000, -1000, -1000, -1000, 68774, -1000, -1000, 3311, 3310, -1000,
	1359, -1000, -1000, -1000, 1359, 1983, 1638, 93146, 76436, 93146,
	1995, 153, 153, -1000, -1000, 153, 647, 20307, 1864, -1000,
	2737, 93146, 3330, 93146, 93146, 93146, 59156, 3049, 94094, 93146,
	93146, 59156, 1934, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 58678, 1075, 991, 1618, 1251, 68300, 983, 48128,
	2513, -1000, -1000, 17863, -1000, 104385, 104385, -1000, 104385, -1000,
	55806, 93146, -1000, 1008, 93146, 64472, 962, 2853, 52466, -91,
	967, 62568, 76436, -7, 93146, -1000, 1983, 2849, 550, 2191,
	-1000, 62568, 3219, 2839, 643, 3356, 3355, -1000, 2115, 2189,
	-1000, -1000, 93620, 2828, 851, 93146, 1005, 46178, 1890, -1000,
	50550, 1048, 93146, 1716, 89, -1000, -1000, -1000, 45, 93146,
	-1000, 3354, -1000, -1000, 202, -1000, 76436, 202, 202, -1000,
	76436, 76436, 2114, -1000, 204, -1000, 203, -1000, -142, -1000,
	-1000, 4328, 4328, 967, -221, 642, -1000, 913, 912, 48616,
	62568, -63, -1000, -1000, -1000, -1000, -1000, 76436, 93146, 729,
	2488, 93146, -69, -1000, 277, 641, -1000, 2765, -1000, -1000,
	985, 48128, 2638, -1000, -1000, 995, -1000, 1375, 967, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18, -91,
	-91, -1000, 988, -1000, 988, -1000, 988, -1000, 104385, -1000,
	-1000, 1568, 1538, 93146, -1000, 20307, 93146, 76436, 20307, 76436,
	2687, 2686, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1095, -1000, 1776, 2095, -1000, 640, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2255, -1000, -22, 26929, 2151,
	-1000, -1000, 76436, 17, 39745, 39745, 6901, 5284, 39745, 42769,
	42769, -1000, 39745, 5022, -1000, -1000, -1000, -1000, -1000, 2633,
	637, 39745, 57702, 6258, 5403, -1000, 420, 12364, 453, -1000,
	39745, -1000, 418, 28957, -1000, 103134, -43, -70, -1000, 14919,
	-189, -71, -1000, -1000, 806, -1000, 2810, -1000, 39745, 103217,
	2238, 1863, 1741, 1553, 3304, 3328, 17375, -1000, 53892, 1007,
	2068, 101146, -1000, -1000, -1000, -1000, 57702, 57702, 39745, 39745,
	-1000, 39745, 39745, 39745, -1000, -1000, -1000, 3304, 939, -1000,
	-1000, -1000, 939, -1000, -1000, 1359, -1000, 1359, -1000, 39745,
	-1000, -1000, 2627, 39745, -1000, 57702, 57702, 42769, 42769, 42769,
	42769, 42769, 42769, 42769, 42769, 42769, 42769, 42769, 42769, 42769,
	42769, 42769, 42769, 42769, 42769, 42769, 2297, 42769, 3286, 3286,
	3286, -1000, 2684, 2627, 39745, 39745, 57702, 417, 415, 408,
	-1000, 39745, -189, -1000, -1000, 4328, 635, -1000, 2245, -1000,
	2566, -1000, 39745, -1000, -133, -1000, 2834, -1000, -1000, 2566,
	2566, -72, 104385, 46178, 46178, -1000, 632, 39745, 2334, -1000,
	-1000, 791, -264, -1000, 909, -1000, -1000, -1000, -1000, -1000,
	550, -1000, -1000, -1000, 275, 83092, 83092, 788, -1000, -79,
	-1000, -1000, -85, -1000, 3218, 407, 20307, -1000, -1000, 3027,
	-1000, -1000, -1000, -1000, -1000, -1000, -91, 93146, 2085, 3327,
	-1000, 3307, 805, 787, 200, 3304, 404, 403, 401, -91,
	93146, 93146, -1000, -28, -1000, -1000, -1000, 39745, -1000, -1000,
	3057, 1250, 1249, -1000, -1000, 2833, -1000, 2183, -1000, 1053,
	-1000, 1688, -1000, 39745, 39745, 627, 625, 3353, 1849, 3352,
	1078, 2832, 2114, 2820, 2114, -1000, -1000, 941, -1000, 104385,
	-1000, -1000, -1000, -1000, 622, 621, -1000, -36, 1501, 1604,
	993, -1000, -1000, 39745, 39745, 82618, -1000, 402, 3019, 14,
	-1000, -1000, 1600, 1248, -1000, -1000, -1000, -1000, 1983, 1587,
	1237, -1000, -1000, -1000, -1000, 992, -1000, -1000, 39745, -1000,
	-39, 1145, 3179, 2181, 76436, 1142, -1000, 1141, -1000, -1000,
	-1000, 3162, 2114, 2804, 1290, -1000, -1000, -1000, -1000, -1000,
	58190, -1000, 93146, 76436, 1629, -1000, 2372, 921, 983, 2613,
	-1000, 2450, 3351, 76436, 3350, 397, -86, -59, 57702, 3217,
	-1000, 2129, 614, 76436, 943, -1000, 3299, -1000, -1000, -1000,
	-1000, 76436, 3214, 2802, 991, 153, 76436, 3326, -1000, -1000,
	76436, 2797, 2113, 2178, 2287, 851, 63524, -1000, 991, 2059,
	-135, -1000, 1716, 28441, 3017, -92, -1000, -1000, -1000, 1005,
	53414, 46178, 39745, 3349, -93, -1000, -1000, 202, -1000, -1000,
	-1000, 199, -1000, -1000, -1000, -1000, -1000, -1000, 81666, 81666,
	62568, 62568, 62568, 967, 93146, 93146, 64472, -1000, 619, 93146,
	93146, 613, -1000, 93146, 93146, 3348, 62568, -81, 611, -1000,
	895, 892, 885, -1000, -1000, -1000, -1000, -1000, -1000, -149,
	153, -1000, 2080, 76436, -1000, 16887, -1000, -1000, -1000, -1000,
	-1000, 988, -1000, -1000, 2011, 2120, 2011, 1784, 1781, -1000,
	2094, -1000, -1000, -1000, -1000, 2481, 3044, 20307, 3180, 1348,
	39745, 39745, 4421, 5367, 4262, 1348, 39745, 39745, 57702, 104889,
	-94, 39745, 39745, -1000, 39745, 785, 104385, 3325, 39745, 393,
	392, -1000, -1000, -1000, 3303, -1000, -1000, -1000, 104385, 39745,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 390, -1000, 125,
	-1000, -1000, -1000, 98834, -1000, 39745, 389, 3101, -1000, 385,
	384, 236, 7309, 100828, 100602, 100508, 379, -1000, -1000, 376,
	366, 104385, 2684, 104385, -1000, -1000, 914, 914, 1350, 1350,
	1350, 1350, 3286, 294, 693, 1028, 380, 380, 380, 891,
	1085, 1085, 380, 380, 380, 2604, 2306, 607, 6933, -1000,
	-1000, 104385, 104385, 365, -1000, -1000, -1000, -189, 361, 4328,
	-1000, 2560, 3097, 104385, -1000, 46178, 2560, 2560, -1000, -1000,
	1990, 93146, 104385, 46178, -1000, 2553, -1000, 15418, -1000, 20307,
	-1000, -1000, -1000, -1000, 3299, -1000, 50070, -1000, 606, -1000,
	60, 3027, -1000, 884, -1000, -91, -1000, -1000, 784, 3347,
	783, 20307, 360, -1000, -1000, -1000, -91, -91, 104385, 93146,
	93146, 93146, 2793, -1000, 4230, -1000, 1076, 100282, -95, -1000,
	102498, 39745, 93146, -1000, -1000, 1798, 2347, 1108, -1000, 3069,
	93146, -1000, 93146, -1000, -1000, 93146, 93146, 76436, 93146, 2771,
	-100, 104385, -111, -1000, 882, -1000, 1324, -1000, 16399, 93146,
	76436, 93146, 76436, 2770, -101, 20307, -1000, 3324, 3323, 2784,
	3075, 3320, 93146, -1000, 93146, 76436, 2984, -1000, -1000, -1000,
	-1000, 1572, 1139, -119, 603, -1000, 874, -1000, -1000, 868,
	983, -1000, 62568, 48128, -1000, 550, -1000, 2480, -1000, 80708,
	2148, 153, -1000, 3346, 82144, 602, -1000, 2079, -1000, 720,
	1983, 153, 76436, -1000, -1000, 550, 358, -120, -1000, 1059,
	20307, 76436, 2781, 2290, 851, 63524, -1000, 1347, 2359, -1000,
	-127, -1000, 574, 153, 2059, -1000, -135, 104385, -1000, 858,
	-1000, -1000, -1000, -102, -1000, -1000, 355, -1000, 2983, 2981,
	-1000, 2582, 39745, 600, 599, 93146, 2976, -1000, -1000, -108,
	2809, 2809, 62568, 48128, 62568, 985, -1000, 2235, -1000, -1000,
	-1000, -1000, -1000, 20307, 1574, -1000, 598, 597, -1000, -1000,
	-1000, -1000, 3044, 1348, 1348, 39745, 39745, 39745, 1348, 104889,
	-109, -1000, 1348, 1348, -189, -1000, -1000, 103134, -1000, -1000,
	-1000, 104385, -1000, 15911, 2021, -1000, 99964, -1000, 26929, -1000,
	-1000, 39745, 39745, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 42769, 2599, 590, 57702, -1000, -1000, 353, 1000, 39745,
	39745, 2834, 1000, 1000, -1000, -110, -1000, -1000, -1000, 3299,
	60, -1000, -1000, 3344, 20307, -1000, 62568, 549, -1000, 3343,
	-1000, -1000, -1000, -1000, -1000, 93146, -1000, 93146, -1000, 20307,
	93146, 2589, 2160, -1000, -1000, 2320, 589, 42769, 76436, 871,
	-1000, 3239, 2601, 1815, 39745, 2151, -117, -118, 2158, -1000,
	-1000, 2157, 39745, -1000, 57702, 587, 2114, 2114, -137, -143,
	-1000, -1000, 39745, 1138, 93146, 27937, -1000, 3342, 3019, -1000,
	-1000, -1000, -1000, 39745, 1137, -1000, -1000, -1000, 3318, 2114,
	20307, -1000, 2114, 2114, 3075, 1107, 93146, 76436, 2244, 2244,
	62568, 48128, -1000, -142, 983, 3210, 1995, 2526, -1000, -1000,
	-1000, -1000, 2311, -1000, -1000, 93146, 2309, 977, -1000, -144,
	-1000, 857, 853, 64472, 962, 944, -1000, -1000, -1000, 550,
	3209, -1000, 3317, 585, 93146, 2111, 583, 20307, -1000, 851,
	63524, -1000, 2828, 1716, -1000, 2865, 93146, 3011, -1000, 2359,
	579, -1000, 967, 576, 575, 2877, 2877, -146, 39745, 39745,
	-153, 566, 967, -1000, -154, -1000, -1000, -1000, -1000, -156,
	-1000, 843, 818, -1000, -1000, 76436, 76436, 39745, 39745, -1000,
	1348, 1348, 1348, -1000, 352, -1000, -1000, 2059, 3094, -1000,
	-172, 99882, 99453, 488, 42769, 57702, -160, -1000, -1000, 93146,
	104385, -189, -1000, -1000, -1000, 605, -1000, -1000, 3341, -1000,
	-1000, 1875, -1000, -1000, -1000, 93146, 2169, -1000, 1073, 39745,
	6933, 565, 39745, -1000, 3208, -1000, 2470, 2632, 2480, 563,
	-1000, -1000, -1000, -1000, -1000, 1058, 1836, -1000, -1000, 104385,
	3075, 39745, -1000, -1000, 560, 558, 104385, 557, 850, 2594,
	-1000, -1000, -1000, 104385, 556, 3179, -1000, -1000, -1000, -1000,
	2114, 76436, -1000, -1000, -1000, -161, -1000, -1000, 1840, 153,
	962, -1000, 2029, 2148, 555, -1000, -1000, 2104, 2362, -1000,
	82144, 27433, 27433, 350, 3207, 944, -1000, 3275, -1000, 3205,
	153, -1000, 39745, -1000, 76436, 39745, 2110, 63524, -1000, 2287,
	-1000, 1287, -162, 93146, 1716, -1000, -1000, 62568, 62568, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1058, -163, -170, -1000, 62568, -1000, -1000, 2235, -1000, 93146,
	-1000, 93146, -1000, -1000, -176, -177, -1000, 2003, 39745, 26929,
	-1000, -1000, 488, -178, -1000, -173, -1000, 3183, -1000, -1000,
	-1000, -1000, 2779, 2555, 99359, 2247, 93146, 5811, -1000, 2614,
	-1000, -1000, 1995, 93146, 2480, 2549, 76436, 1061, -183, 2011,
	2011, 39745, 26425, 2027, 39745, -1000, -1000, 3075, -1000, 2583,
	3277, -1000, 2104, 76436, 93146, -1000, 3065, -1000, 2974, -1000,
	-1000, -1000, 2480, 153, -1000, -1000, 153, -1000, -184, 1059,
	-190, 76436, -1000, 2290, 1510, -1000, 1005, -1000, -1000, -191,
	-192, 1815, 1058, 963, -199, -1000, -200, -206, -1000, -1000,
	349, 40753, 40753, 40753, -189, -202, -1000, 93146, 554, 2760,
	980, -1000, 2105, 1735, 342, 1071, -1000, -1000, 2601, -208,
	-1000, 979, 550, -1000, 39745, 1058, -209, -1000, 1045, -216,
	-1000, 1043, -222, -1000, 2590, -1000, -225, 2114, 978, 3140,
	-1000, -1000, -1000, -1000, 546, -227, -1000, -1000, 2185, -1000,
	1995, 977, -1000, 1058, 545, 1815, 536, -1000, 53414, -1000,
	967, 967, 2480, 1815, 1005, 531, 967, -1000, -1000, -1000,
	2787, -1000, 43745, 2092, 1770, 102272, 2787, 2787, -1000, -1000,
	93146, 3125, -1000, 2109, 2106, 1434, -1000, -1000, -1000, -1000,
	-1000, -1000, 1005, -1000, 3123, 2247, 104385, 2480, -1000, 2011,
	2522, -1000, 2011, 2588, -1000, 2025, -1000, -1000, -1000, 2777,
	3273, 93146, -1000, 93146, 1734, 1723, 3340, 962, 2104, 1815,
	39745, 2480, 39745, -224, -1000, -1000, 1995, 2480, -1000, -1000,
	-1000, 1707, 3235, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 846, -1000, 2957, -1000, 1094, 1964, 1964, -1000, 833,
	2105, -1000, -1000, 529, -1000, 528, -1000, 1680, -1000, -1000,
	-228, -1000, -1000, 3339, -1000, 2104, -1000, 2480, -230, 1995,
	-233, -1000, 963, 1995, 1740, -1000, -1000, 2049, 40249, 39745,
	-1000, 3257, -1000, -1000, 2314, -1000, 39745, 2601, 39745, 39745,
	2071, 2107, -1000, -1000, 1995, 1058, 963, 1815, 1005, 963,
	-1000, -1000, -1000, 104385, -1000, -1000, -1000, 104385, -1000, -235,
	-238, 51988, -1000, -1000, -1000, 963, 1815, 1005, 2480, -1000,
	1005, 1995, 1131, -221, 81666, 1005, 2480, -1000, 1995, -1000,
	-1000, 526, -241, -1000, 1995, 963, 39745, -1000, 963, 1005,
	-243, 1005, -1000, 1995, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4037, 4036, 4035, 4032, 4031, 4028, 4023, 4020, 4019,
	4018, 4017, 4016, 4014, 4013, 4009, 4008, 4007, 4005, 4001,
	4000, 3999, 3998, 3996, 3995, 3990, 3988, 3987, 3986, 3985,
	3983, 3982, 3979, 3978, 3977, 3972, 3971, 3966, 3963, 3962,
	3960, 3959, 3958, 3957, 3955, 3952, 3951, 3950, 3949, 3946,
	3944, 3936, 43, 3933, 3932, 3929, 3928, 3926, 3924, 3922,
	3921, 3920, 3919, 3915, 3913, 3911, 3908, 3907, 3906, 3905,
	3903, 44, 3902, 240, 3901, 3899, 3891, 3888, 3887, 3886,
	3885, 3884, 3882, 3881, 3877, 3875, 237, 3874, 143, 3873,
	3871, 3870, 3869, 3867, 235, 3865, 3864, 3862, 3860, 244,
	3859, 3858, 3857, 3856, 3854, 3851, 3850, 3849, 3848, 60,
	129, 3846, 3845, 136, 3843, 3842, 3841, 3840, 3837, 3835,
	3834, 3833, 3828, 3827, 216, 3823, 232, 3820, 3817, 3816,
	3814, 3811, 3808, 3806, 3805, 3803, 3801, 3800, 3797, 3795,
	3792, 3791, 3788, 3785, 3783, 3781, 3779, 3778, 3777, 3769,
	3762, 3761, 3760, 3759, 3758, 3757, 3753, 3740, 233, 153,
	3739, 3735, 231, 229, 3724, 3720, 3717, 3716, 3713, 103,
	4, 31, 3712, 3707, 67, 68, 61, 84, 83, 79,
	3706, 89, 3705, 120, 45, 3703, 14, 26, 147, 222,
	6324, 205, 3701, 3700, 3697, 215, 165, 3693, 203, 3691,
	3690, 3689, 3688, 71, 69, 152, 146, 133, 145, 301,
	3686, 3681, 80, 58, 42, 30, 3680, 3679, 3678, 3066,
	104, 3677, 228, 206, 138, 3676, 3675, 3674, 368, 3673,
	33, 3670, 181, 62, 101, 56, 99, 3669, 124, 24,
	3668, 131, 40, 3667, 123, 75, 72, 7560, 4598, 3662,
	87, 66, 88, 389, 155, 151, 170, 180, 169, 184,
	178, 135, 164, 3658, 217, 3657, 3198, 51, 127, 3656,
	3655, 3653, 57, 168, 86, 3652, 3651, 49, 1, 5,
	23, 139, 34, 98, 12, 3650, 15, 3649, 3645, 3644,
	3642, 28, 158, 3641, 239, 3640, 55, 38, 17, 3638,
	35, 188, 3637, 196, 106, 3634, 3632, 219, 173, 234,
	3631, 82, 197, 3630, 3629, 3628, 3626, 3624, 107, 21,
	108, 3623, 3622, 112, 208, 167, 3621, 41, 3619, 149,
	85, 116, 242, 97, 194, 93, 195, 156, 199, 3617,
	3616, 3615, 210, 3614, 3613, 190, 148, 3612, 3611, 172,
	246, 32, 64, 202, 47, 160, 134, 3609, 177, 3608,
	3607, 3606, 243, 150, 185, 6, 2, 78, 105, 29,
	7, 201, 128, 271, 92, 3605, 5248, 2008, 1527, 3602,
	3601, 119, 96, 54, 102, 118, 227, 52, 3596, 3593,
	1788, 3589, 3587, 3586, 3585, 157, 3584, 3583, 3582, 114,
	117, 193, 3578, 77, 74, 11, 130, 274, 238, 91,
	192, 142, 220, 3577, 154, 3576, 48, 100, 3573, 166,
	214, 3571, 3570, 174, 3569, 113, 161, 46, 137, 3568,
	191, 3567, 3566, 3565, 3564, 3561, 3560, 3557, 159, 200,
	3556, 3555, 3553, 122, 162, 3552, 226, 115, 175, 76,
	37, 3550, 73, 3704, 3549, 110, 204, 63, 141, 3548,
	3308, 39, 0, 10556, 8958, 7202, 9750, 3547, 2807, 3544,
	3535, 3534, 186, 121, 3532, 3531, 3530, 95, 3529, 59,
	3527, 3525, 50, 3523, 18, 8, 10, 20, 16, 313,
	171, 3522, 3521, 90, 111, 125, 3519, 236, 198, 3517,
	3516, 3512, 3509, 81, 3507, 27, 3502, 22, 3496, 3495,
	36, 9, 19, 3493, 3491, 209, 3489, 189, 213, 3488,
	140, 3487, 3181, 109, 3486, 3485, 224, 65, 3484, 223,
	3483, 3107, 3483, 3480, 3477, 13, 3475, 3473, 207, 144,
	187, 3470, 3469, 132, 3468, 3467, 3466, 218, 3462, 3460,
	25, 3459, 3, 3458, 3451, 182, 2931, 3448, 3440, 53,
	3439, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 39, 39, 9, 9, 9, 10, 10,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 16,
	16, 28, 28, 17, 17, 30, 30, 18, 18, 31,
	31, 526, 526, 21, 33, 22, 34, 15, 527, 527,
	527, 527, 27, 23, 35, 25, 25, 25, 25, 25,
	172, 172, 172, 172, 20, 20, 29, 29, 206, 206,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 525, 525, 208, 208, 207, 202, 202,
	528, 528, 209, 209, 209, 211, 211, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 427, 427, 427, 458,
	458, 458, 542, 542, 543, 543, 543, 543, 543, 112,
	112, 41, 41, 41, 41, 520, 520, 174, 174, 174,
	176, 176, 175, 175, 175, 175, 62, 62, 534, 534,
	535, 535, 533, 532, 532, 536, 536, 536, 173, 173,
	173, 108, 108, 108, 108, 109, 109, 110, 110, 177,
	177, 177, 179, 179, 178, 178, 178, 178, 178, 178,
	178, 178, 183, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 90, 90, 460, 460, 461, 461, 168, 168,
	169, 169, 169, 169, 170, 170, 171, 171, 171, 55,
	180, 180, 182, 182, 181, 181, 43, 43, 43, 43,
	43, 43, 43, 44, 44, 44, 44, 44, 45, 45,
	45, 45, 45, 45, 46, 46, 46, 46, 46, 46,
	53, 53, 53, 53, 159, 159, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 545, 545, 546, 546, 547, 547,
	548, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 548, 548, 548, 548, 548, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 68, 68, 293, 293,
	265, 265, 69, 69, 69, 70, 70, 71, 71, 57,
	57, 518, 518, 308, 308, 418, 418, 73, 73, 328,
	328, 74, 74, 74, 74, 74, 74, 75, 75, 75,
	75, 75, 75, 75, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 83, 83,
	83, 83, 83, 84, 84, 84, 81, 81, 81, 78,
	78, 78, 77, 77, 77, 82, 82, 82, 517, 256,
	256, 80, 80, 80, 258, 258, 79, 79, 79, 309,
	309, 85, 85, 85, 85, 266, 86, 86, 86, 86,
	86, 86, 86, 86, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 420, 420, 87,
	87, 87, 388, 388, 91, 91, 91, 343, 343, 92,
	92, 92, 92, 92, 93, 93, 93, 93, 93, 111,
	111, 111, 111, 111, 522, 522, 301, 301, 222, 222,
	222, 222, 101, 101, 101, 101, 102, 102, 102, 103,
	103, 164, 164, 118, 118, 118, 118, 118, 117, 117,
	117, 117, 117, 117, 47, 47, 47, 48, 48, 49,
	49, 50, 50, 51, 51, 52, 52, 52, 52, 52,
	120, 120, 539, 539, 122, 119, 119, 119, 121, 121,
	121, 121, 123, 124, 124, 124, 124, 124, 124, 124,
	124, 125, 125, 452, 452, 317, 317, 450, 450, 469,
	469, 451, 451, 270, 270, 270, 270, 270, 271, 271,
	271, 459, 459, 459, 459, 459, 459, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 165, 165, 166,
	167, 167, 167, 167, 146, 146, 146, 158, 158, 158,
	158, 158, 158, 158, 149, 149, 149, 136, 136, 127,
	127, 127, 127, 127, 127, 127, 131, 131, 131, 131,
	131, 131, 131, 131, 128, 128, 138, 138, 138, 138,
	138, 132, 132, 133, 133, 135, 135, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 129, 129, 129, 129,
	140, 140, 140, 140, 350, 350, 350, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 157, 157,
	157, 157, 157, 157, 537, 537, 538, 538, 153, 153,
	153, 153, 153, 153, 402, 402, 147, 147, 147, 147,
	152, 152, 152, 152, 333, 333, 144, 144, 144, 145,
	145, 145, 150, 150, 151, 148, 148, 154, 154, 154,
	154, 130, 130, 130, 549, 549, 549, 155, 155, 143,
	143, 156, 156, 156, 156, 156, 156, 156, 156, 142,
	142, 142, 141, 141, 141, 141, 134, 519, 519, 515,
	515, 515, 515, 515, 515, 515, 515, 516, 516, 521,
	521, 96, 96, 96, 96, 96, 104, 104, 104, 104,
	104, 97, 97, 97, 97, 97, 99, 99, 98, 98,
	98, 98, 63, 63, 63, 14, 14, 14, 64, 64,
	186, 186, 186, 187, 187, 278, 278, 278, 278, 184,
	184, 185, 185, 65, 65, 550, 550, 550, 529, 529,
	529, 530, 530, 530, 530, 530, 530, 272, 272, 273,
	273, 368, 368, 368, 368, 368, 276, 276, 276, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 279, 279,
	210, 210, 210, 282, 283, 283, 280, 280, 281, 281,
	281, 285, 285, 284, 287, 287, 286, 367, 478, 478,
	480, 480, 480, 480, 480, 480, 480, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 551, 551,
	476, 476, 476, 477, 472, 472, 473, 473, 473, 473,
	473, 274, 274, 275, 275, 275, 275, 474, 475, 299,
	299, 405, 479, 479, 481, 481, 483, 552, 552, 552,
	552, 552, 552, 553, 553, 553, 366, 366, 365, 365,
	291, 291, 484, 484, 484, 484, 485, 485, 485, 485,
	485, 488, 487, 486, 486, 486, 486, 486, 67, 67,
	67, 330, 330, 329, 329, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	161, 161, 225, 225, 61, 61, 61, 12, 12, 12,
	531, 531, 531, 66, 66, 66, 66, 66, 66, 224,
	224, 224, 224, 224, 224, 224, 224, 524, 524, 523,
	523, 226, 226, 555, 555, 72, 72, 72, 72, 72,
	72, 72, 421, 421, 422, 422, 60, 60, 60, 60,
	60, 351, 351, 349, 349, 348, 348, 298, 298, 404,
	230, 230, 203, 203, 203, 26, 19, 19, 24, 24,
	37, 37, 37, 37, 40, 40, 36, 36, 36, 36,
	38, 38, 32, 32, 540, 540, 541, 541, 100, 100,
	105, 105, 105, 105, 105, 106, 106, 106, 106, 107,
	107, 107, 107, 116, 116, 160, 160, 160, 160, 160,
	160, 160, 42, 42, 42, 42, 54, 54, 54, 54,
	114, 557, 557, 557, 115, 115, 115, 556, 556, 223,
	223, 362, 362, 363, 363, 558, 558, 364, 364, 364,
	364, 217, 216, 218, 218, 59, 59, 59, 212, 212,
	213, 213, 214, 214, 215, 215, 559, 559, 94, 94,
	94, 163, 163, 264, 264, 264, 358, 358, 358, 292,
	292, 236, 236, 361, 361, 359, 359, 359, 359, 327,
	327, 327, 162, 162, 306, 306, 319, 319, 320, 320,
	415, 415, 321, 113, 113, 190, 190, 188, 188, 188,
	188, 188, 188, 188, 188, 195, 195, 196, 196, 197,
	197, 198, 199, 199, 199, 199, 310, 310, 200, 200,
	200, 189, 189, 189, 191, 191, 191, 191, 191, 191,
	191, 194, 194, 194, 194, 201, 201, 201, 193, 193,
	495, 495, 495, 497, 497, 499, 499, 498, 498, 494,
	494, 496, 496, 554, 554, 332, 332, 332, 289, 290,
	288, 288, 296, 296, 294, 295, 295, 297, 297, 403,
	403, 403, 204, 204, 204, 324, 324, 324, 324, 325,
	325, 354, 354, 352, 352, 352, 352, 353, 353, 355,
	355, 355, 356, 356, 357, 357, 323, 323, 384, 384,
	192, 192, 192, 303, 303, 303, 304, 304, 374, 374,
	374, 374, 374, 374, 375, 375, 373, 373, 373, 373,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 407,
	408, 408, 305, 305, 409, 360, 360, 513, 513, 513,
	514, 514, 401, 401, 410, 410, 410, 410, 410, 410,
	399, 399, 400, 400, 416, 417, 417, 336, 336, 336,
	336, 334, 334, 337, 337, 337, 337, 335, 335, 411,
	411, 411, 411, 326, 326, 412, 412, 412, 412, 413,
	369, 370, 370, 423, 423, 423, 423, 425, 302, 302,
	302, 302, 302, 471, 470, 470, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 439, 439, 439, 439, 439,
	439, 439, 439, 440, 440, 440, 440, 440, 440, 440,
	426, 426, 426, 426, 426, 430, 430, 430, 429, 429,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 431,
	431, 436, 436, 437, 437, 437, 432, 433, 438, 438,
	438, 438, 560, 560, 442, 442, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 428, 428, 428, 435, 435,
	435, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 344, 344, 346, 346, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 378, 378, 378, 378, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 489, 489, 489, 489, 489, 489,
	489, 489, 380, 380, 492, 492, 493, 493, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 500, 500, 501,
	501, 503, 503, 504, 504, 505, 506, 506, 506, 507,
	508, 508, 502, 502, 509, 509, 509, 509, 510, 510,
	511, 511, 511, 511, 511, 512, 512, 512, 512, 512,
	390, 390, 391, 391, 397, 397, 397, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 227, 227, 227, 227, 227, 315, 315,
	313, 313, 313, 316, 316, 314, 314, 312, 312, 311,
	311, 387, 387, 385, 385, 389, 389, 338, 338, 441,
	441, 441, 441, 441, 441, 441, 441, 339, 339, 339,
	347, 340, 340, 341, 341, 341, 341, 341, 381, 382,
	342, 342, 342, 383, 383, 392, 396, 396, 395, 394,
	394, 393, 393, 371, 371, 372, 372, 322, 322, 561,
	561, 318, 318, 414, 414, 414, 414, 268, 268, 307,
	307, 267, 267, 259, 259, 260, 260, 260, 260, 300,
	300, 398, 398, 443, 443, 444, 444, 445, 445, 446,
	446, 447, 448, 449, 386, 386, 246, 245, 233, 234,
	244, 243, 242, 232, 235, 239, 240, 241, 237, 238,
	252, 251, 250, 257, 248, 249, 419, 231, 261, 261,
	262, 262, 262, 263, 263, 263, 263, 228, 228, 229,
	229, 253, 253, 254, 255, 255, 247, 247, 247, 219,
	219, 219, 220, 220, 221, 221, 457, 457, 454, 454,
	454, 455, 455, 455, 456, 456, 456, 456, 453, 453,
	453, 453, 453, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	463, 463, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 465,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	468, 468,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	6, 4, 6, 6, 9, 6, 9, 6, 5, 6,
	5, 1, 1, 5, 5, 6, 6, 4, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 6, 5, 6,
	6, 4, 8, 3, 4, 10, 3, 6, 4, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 3, 6, 4, 6, 7, 9, 5,
	2, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 1, 3, 12, 3, 1, 0,
	1, 1, 2, 2, 1, 3, 3, 0, 5, 7,
	0, 5, 6, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 6,
	2, 0, 1, 2, 3, 1, 1, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 3, 3, 4, 3, 4,
	7, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 1, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 2, 6,
	4, 7, 7, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 2, 3, 3, 1, 1, 1,
	1, 1, 2, 2, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 3, 2, 4,
	3, 3, 5, 3, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 3, 6, 6, 3, 11, 14,
	1, 2, 3, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 3,
	2, 0, 1, 1, 0, 6, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 2, 3, 2, 2, 8, 11, 3, 3, 0,
	3, 0, 3, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 8, 5, 3, 4, 3, 0, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 2,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 518, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -116, -100, -112, -118, -160, -165,
	-166, -167, -3, -41, -43, -56, -73, -75, -86, -95,
	-94, -96, -101, -108, -104, -90, -47, -113, -117, -126,
	-161, -162, -163, 31, 30, 94, 77, 143, 118, 126,
	181, 331, 367, 378, 359, 348, -121, -122, 395, -42,
	-54, -115, -114, 70, 119, 354, -4, -12, 28, 44,
	-44, -45, -46, 60, -61, -58, -68, -62, -544, 96,
	-496, -76, -79, -107, -548, 131, 150, 199, -97, -98,
	320, -102, -103, 361, -105, -106, 363, 151, -49, -48,
	145, -188, -190, -119, -120, -164, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -157,
	-140, -141, -142, -143, -148, -144, -145, -146, -147, -149,
	-150, -152, -153, -154, -155, -156, 399, -151, 453, 47,
	413, 79, 135, 371, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -57, -59, -60, -63, -64, -65,
	-72, -66, -67, -495, -77, -78, -81, -83, -84, -80,
	-82, 360, -191, -189, 515, 467, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -28, -33, -34, -30, -31,
	-29, -32, -35, -36, -37, -38, -39, -40, -26, -27,
	-15, -25, 485, 493, -194, -192, -193, -201, 387, 475,
	429, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, -266, 2, -248, -253, -254, -255, -247, -219, -465,
	-468, 4, -462, -466, 156, 208, 285, 21, 22, 23,
	24, 25, 26, 28, 29, 40, 41, 43, 42, 44,
	45, 46, 47, 51, 53, 57, 58, 59, 60, 61,
	65, 70, 71, 76, 77, 78, 79, 80, 81, 82,
	88, 85, 86, 87, 90, 92, 93, 94, 95, 97,
	99, 100, 108, 109, 110, 111, 113, 118, 119, 122,
	117, 121, 124, 125, 126, 129, 130, 131, 133, 134,
	136, 137, 138, 140, 141, 143, 144, 145, 148, 146,
	436, 147, 149, 150, 151, 152, 162, 163, 164, 169,
	171, 175, 176, 179, 180, 182, 186, 188, 189, 190,
	191, 192, 198, 199, 201, 202, 203, 204, 209, 210,
	214, 211, 220, 221, 225, 226, 227, 229, 233, 234,
	235, 236, 237, 238, 240, 242, 241, 244, 247, 248,
	251, 252, 253, 256, 257, 258, 259, 261, 262, 265,
	263, 266, 264, 268, 269, 270, 267, 273, 271, 275,
	276, 277, 283, 281, 279, 278, 280, 287, 290, 196,
	292, 293, 296, 314, 300, 301, 302, 305, 306, 309,
	312, 313, 315, 316, 317, 318, 319, 320, 321, 322,
	324, 325, 329, 331, 332, 334, 336, 337, 338, 339,
	340, 341, 342, 345, 344, 346, 348, 354, 359, 356,
	357, 358, 360, 361, 362, 363, 365, 366, 367, 369,
	370, 371, 372, 374, 376, 377, 380, 381, 396, 397,
	415, 378, 379, 382, 383, 384, 385, 386, 390, 388,
	389, 391, 392, 393, 395, 398, 399, 401, 402, 403,
	404, 405, 406, 409, 411, 412, 413, 414, 416, 419,
	420, 421, 422, 417, 428, 425, 426, 430, 431, 432,
	433, 434, 435, 437, 439, 447, 448, 450, 453, 454,
	455, 445, 457, 458, 461, 462, 463, 466, 464, 465,
	467, 469, 472, 473, 474, 480, 479, 486, 487, 489,
	490, 491, 35, 48, 49, 52, 54, 56, 66, 67,
	68, 72, 114, 115, 142, 153, 154, 165, 177, 178,
	183, 185, 193, 194, 195, 215, 216, 218, 223, 245,
	289, 291, 307, 311, 326, 327, 328, 330, 343, 373,
	407, 418, 423, 440, 441, 442, 443, 449, 451, 475,
	476, 477, 481, 488, -266, 2, -248, 298, -241, 2,
	-219, -219, 331, 27, 2, 27, 325, 389, 431, 433,
	2, -522, -301, 2, 27, -222, -219, 96, 181, 387,
	-241, 2, -522, -301, 24, 2, -219, 2, -223, 2,
	378, -219, 262, 2, 518, 90, 253, 71, 373, 392,
	-124, 448, -123, 440, 382, -125, -452, 2, 273, -219,
	518, 518, 518, 27, -231, -219, 429, 208, 110, 426,
	518, 2, 429, 317, 479, 388, 110, 340, 208, 455,
	382, -531, 262, 369, 184, 468, -520, 2, -515, 4,
	-466, -462, -260, -259, 429, 434, 110, -255, -247, 508,
	-254, 518, 518, 518, 2, 226, 227, 339, 338, 392,
	393, 518, 518, 518, 380, 2, 26, 63, 89, 93,
	116, 152, 172, 175, 303, -545, 314, 337, 391, 428,
	437, 450, -530, 414, 65, 382, -529, -531, 262, 455,
	129, -348, 110, 253, 180, 462, 433, 431, 460, 122,
	214, 465, 464, 518, 518, 26, 63, 74, 93, 129,
	152, 172, 175, -547, 314, 337, 376, 391, 428, 437,
	450, 2, 479, 262, 388, 429, 208, 110, 455, 382,
	-531, 380, 381, 335, -88, 2, 515, 31, 30, 395,
	-183, 429, 219, 2, -219, 518, 518, 2, 226, 227,
	380, 381, 518, 518, 173, -515, 2, 518, 518, 2,
	226, 227, 380, 381, 219, 2, 65, 384, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 2, -158,
	392, 414, 190, 45, 44, 71, 27, 336, 76, 318,
	111, 137, 182, 208, 209, 234, 89, 90, -350, 43,
	227, 226, 381, -537, 380, -402, 430, 383, 389, 425,
	238, 378, 448, 96, 469, 370, 491, 340, 341, 146,
	4, 110, 273, 394, 440, 253, 377, 321, 81, 518,
	-554, 2, 429, -556, 2, 448, 448, 2, -556, 2,
	-556, 2, -556, 2, -557, 448, 488, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, -189, -191, -190, 518, 518, 518,
	518, 518, 518, 518, -158, 392, 2, 71, 27, -294,
	-296, 459, 217, 139, 304, -188, -190, 2, -495, -450,
	2, -376, -469, -378, 506, 507, 499, 427, 64, 284,
	492, -390, 116, 460, 298, -468, -379, -392, 142, 373,
	-316, 8, 9, 5, 6, 7, -228, -380, -386, 452,
	155, 288, -263, 519, 10, 515, -492, -190, -391, 36,
	185, 62, -454, -262, -229, -426, 218, -261, -247, -489,
	-490, 4, -462, -463, -455, -429, -437, -433, -434, -440,
	-219, -465, 74, 102, 103, 101, 106, 105, 255, 254,
	107, 104, 394, 468, 63, 35, 193, 194, 223, 289,
	195, 72, -491, 130, -464, 215, 216, 407, 49, 343,
	165, 115, 114, 291, 54, 52, 476, -438, 112, 440,
	441, 442, 443, 177, 178, 56, 153, 154, 311, 328,
	423, 449, 451, 183, 245, 98, 174, 213, 197, 222,
	224, 228, 246, 249, 274, 282, 286, 308, 310, 368,
	400, -560, 477, 418, 66, 67, -497, 344, -498, -241,
	-497, 518, 518, 520, 518, -288, -289, -290, 2, 27,
	127, 515, 2, -406, 2, -407, -411, -190, 239, -410,
	515, -408, 513, -248, 299, -493, 374, -489, -490, -228,
	-247, -262, 4, -462, -464, 517, -291, 515, 110, 429,
	75, 208, -343, 515, -219, 27, 298, 444, 520, -388,
	515, 298, 173, 301, -219, 479, 2, 2, 396, 2,
	515, -124, 68, 448, 42, 392, -363, 2, -364, -216,
	-217, -218, -416, 225, 334, 342, 494, 491, -450, -539,
	173, 498, 444, -450, -317, 517, 2, 2, 2, 2,
	2, -411, 193, -248, 2, -245, -453, 4, -462, -466,
	-463, -467, -465, 27, 30, 31, 32, 34, 36, 37,
	38, 39, 55, 62, 63, 69, 73, 75, 84, 89,
	96, 101, 102, 104, 103, 105, 106, 107, 116, 120,
	123, 127, 128, 132, 135, 139, 155, 157, 170, 172,
	173, 181, 184, 187, 200, 212, 217, 219, 239, 243,
	250, 254, 255, 284, 288, 294, 298, 299, 303, 304,
	323, 333, 347, 364, 387, 394, 410, 424, 429, 438,
	444, 446, 452, 459, 460, 468, 470, 478, 482, 483,
	484, 485, -468, 74, 2, -411, 193, 2, -250, 193,
	-411, -253, 2, -232, -219, 2, -244, -453, 2, -267,
	193, -248, -249, -253, -251, 2, -253, -257, 2, -219,
	-460, 193, 2, -457, 10, -456, 5, 4, -462, -466,
	-463, 479, 219, 444, 520, -307, -259, -260, -449, 8,
	-300, -219, 517, -376, 2, -113, -99, 2, 170, -376,
	193, 2, -113, 193, 2, -376, 193, 2, -113, 193,
	2, -534, 2, -460, 2, 2, 450, 2, 93, 193,
	-219, 429, 109, 2, 358, -546, 376, 454, 2, 2,
	2, 2, 2, 2, 429, -237, 2, -219, 170, -257,
	193, 2, 388, -555, 344, -460, 193, 2, 479, -251,
	2, -251, 208, 221, -232, 193, 2, 433, 431, 433,
	431, 173, 2, 219, 2, 219, 2, -412, 2, -413,
	-407, -248, 513, 2, 2, 2, 2, 2, 193, -219,
	429, 109, 2, 237, 2, 2, 2, 2, 2, 2,
	2, -309, 193, 2, -248, 479, -309, 193, 2, -309,
	193, 2, -349, 2, 84, -232, 193, 2, -256, 193,
	2, -251, -258, 193, 2, -257, -461, 193, 2, -460,
	-376, 2, -113, 2, -420, 2, -419, -456, 475, -88,
	515, -88, 515, 392, 515, -460, -248, -248, -376, 2,
	-113, -99, 2, -376, 2, -113, 2, -110, -109, -460,
	515, 173, -376, 2, -113, -99, 2, -376, 2, -113,
	2, -183, 170, 2, 110, 429, -158, 2, 170, 470,
	2, 8, 2, 200, -460, 383, 341, 162, 2, 396,
	2, 397, 71, -350, 491, 71, 173, 2, 173, 2,
	-333, 2, 485, 2, -519, 2, 298, 173, 2, 173,
	2, 173, 2, 173, 2, 173, 2, 338, 393, 227,
	2, -113, 482, -99, -376, 482, 2, -538, 170, 381,
	-376, 2, 447, 236, 147, 173, -333, 2, 173, 2,
	173, 2, 5, 2, 339, 415, 2, 225, 334, 415,
	2, -248, -549, 2, 429, 479, 388, 2, 2, 85,
	86, 173, 2, 173, 2, 173, 491, 2, -326, -411,
	-362, -363, -362, 444, -294, -296, -158, 396, 2, -195,
	-324, -197, 170, -352, -353, -198, 250, 157, 294, -199,
	-332, 27, 127, -332, -332, 58, 516, 516, 11, 12,
	73, 40, 506, 507, 508, 509, 168, 510, 511, 504,
	505, 503, 496, 497, 501, 231, 232, 91, 500, 498,
	83, 260, 375, 158, 159, 160, 161, 355, 206, 33,
	207, 14, 15, 16, 32, 303, 249, 492, 197, 400,
	499, 17, 18, 19, 222, 224, 286, 48, 200, -227,
	-269, -376, -376, -376, -376, -376, -376, -376, 310, 515,
	-322, -371, 513, -190, 515, 515, 515, -449, -190, -376,
	-390, 516, -314, 515, -190, -390, -385, 515, 373, 513,
	515, -393, -376, 5, 5, 5, 515, 517, -500, 486,
	170, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 330, -431, 515, -430,
	515, -430, -430, 480, -428, 515, 493, 487, 515, -428,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 480, 520, -497, -291, 515, -318, -414,
	-376, 508, -318, -318, 298, -311, -376, 98, -336, 228,
	274, 174, 246, 368, 213, -373, 519, -373, -401, 493,
	-190, -408, -247, -190, -410, 515, -406, -401, -89, -449,
	-73, -86, -94, -113, -126, -162, -163, 508, -248, 515,
	173, 515, 517, -453, 173, -300, -232, -248, -261, -262,
	-267, 126, -311, -515, 455, -300, -222, 37, -387, -423,
	-424, -471, 519, -470, -426, -436, -432, -435, 326, 327,
	-455, 52, 476, -438, 218, 4, -462, -464, 215, 216,
	407, 49, 343, 165, 115, 114, 291, 54, 440, 441,
	442, 443, 177, 178, 56, 477, 418, 66, 67, -515,
	455, -300, 170, -349, -452, -311, 37, -363, 2, 116,
	-457, 42, -558, 520, 248, -271, 259, 283, 189, 299,
	489, 292, -459, 5, 4, -386, -398, 116, 253, 218,
	-443, -445, 8, -444, 9, -446, 506, 507, -451, -450,
	100, 517, -453, -206, 356, 395, -205, 23, 28, 131,
	473, 148, -281, 210, 313, 317, 142, 411, 463, -526,
	-527, 379, 435, 436, 87, 292, 395, 356, 142, -329,
	-331, 37, 108, 277, 312, 59, 203, 264, 265, 413,
	481, 142, 395, 356, -527, 356, -527, -208, 411, 463,
	-526, -527, 379, 356, -207, -281, 142, 519, 23, 356,
	395, 313, -542, -543, 131, 28, 356, 313, -523, -494,
	485, 142, -411, 193, -109, 240, -109, -307, 520, 520,
	-453, 508, 381, 380, 142, 142, 142, 142, 170, 2,
	2, 284, 2, 2, 2, 175, -529, -547, 2, 2,
	-248, 193, -293, 298, -518, -308, 429, -248, 284, -250,
	193, 2, -253, 479, -523, 284, -252, 193, -248, 37,
	515, 2, -349, 2, 208, -494, 284, -412, -264, -248,
	-407, -264, 395, -241, 37, -373, -373, 142, 2, 2,
	2, -219, -209, 520, 61, 362, 142, -309, 193, -209,
	142, -209, 142, -268, 193, -267, -209, 142, -209, 520,
	142, -209, 520, 142, 520, 142, 516, 520, -420, -420,
	-460, -171, 485, 173, 96, 515, 515, -183, -417, 520,
	-416, -461, -110, -460, -460, -518, -232, 2, -248, 2,
	429, 229, -460, -171, 200, -460, -460, -460, -452, 27,
	397, 2, 338, 393, 86, 397, 2, -248, 429, 110,
	208, 77, -521, 170, -516, 369, -515, -248, 110, -248,
	110, -248, 110, -248, -248, 2, 2, 2, 2, 82,
	82, 2, 44, -538, 170, 2, 447, 2, 447, 2,
	-219, -219, -219, 414, 248, -248, 170, 429, 208, 429,
	208, 110, 429, -209, 520, -223, -195, -324, -452, -325,
	-324, -196, -195, -198, 170, 342, 464, 277, 398, 233,
	-353, -352, 27, -376, -357, 164, 276, -376, -355, -378,
	506, 507, -444, -446, -310, 292, -189, -189, -189, -297,
	-403, -376, 333, 208, -425, -423, -423, -246, -453, 440,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, 249, 197, 400, 48, 200,
	-376, 444, -376, -376, -376, -376, 271, 284, 288, 452,
	155, 461, 127, 292, -561, 424, 39, -383, -190, -315,
	515, -397, 34, 410, 27, -390, 515, 2, -371, -376,
	-372, -312, -311, -311, 516, 478, 27, 127, 508, 2,
	516, 520, 37, 516, -376, -312, -389, -385, -311, -396,
	-395, 482, -344, -345, 490, 267, 113, 191, 266, -346,
	386, -447, 8, -453, 508, -501, 163, 184, 515, 516,
	2, 516, 2, 516, -376, 2, 516, -376, 2, 516,
	-376, 2, 516, -376, 2, 516, 2, -376, -376, -376,
	-376, -376, -376, -376, -311, 8, -447, -447, 440, 440,
	-447, -447, -447, -439, 326, 251, 327, 179, 270, 268,
	269, 178, -439, -338, 2, -441, -311, 4, 490, 267,
	113, 191, 266, 386, 5, -338, 2, -339, 2, -376,
	-311, -340, -377, -378, 506, 507, 499, -390, -341, 2,
	-376, -312, -376, 55, 243, 446, -342, -376, 173, -311,
	-311, 2, -311, 2, -498, 37, -311, -303, 520, 173,
	37, 4, -303, -303, 515, 516, 520, -337, 188, 263,
	258, -337, -406, -336, 228, -334, 308, -334, -334, -401,
	-233, 513, 521, -453, -401, -400, -399, 37, -241, 305,
	-401, -401, 517, 516, -400, 514, -513, 515, 518, 518,
	518, 518, 518, -248, 515, -311, -453, 517, 416, 516,
	222, 222, 222, 222, 374, 516, 444, -517, -256, 485,
	-88, 300, 516, 520, -302, 36, 513, 517, -447, 2,
	2, -442, 480, 515, 515, -345, 515, 173, -517, -301,
	-252, -539, 516, 448, -364, -270, 342, 409, 357, 390,
	426, 8, 9, 8, 9, 520, -453, 520, -540, 89,
	444, 75, 382, -367, 193, 75, -472, -235, 89, -473,
	-219, 69, 460, 333, 172, 140, -540, 89, 333, -540,
	89, 89, 395, 414, 444, 58, -411, 40, 40, 27,
	-113, 244, 173, 491, 429, 208, 382, 444, -411, -331,
	-423, 108, 264, 265, 58, -448, -443, 506, 507, -448,
	58, -448, -448, -448, 485, -250, -411, 382, 444, 444,
	520, 40, 40, 27, -113, 244, 173, 444, -267, -233,
	474, 41, 474, 444, 41, 382, 444, 520, 41, 41,
	444, 444, -524, -224, 97, 279, 257, 280, 92, 278,
	-225, -226, 319, 472, -460, 395, 356, 142, -417, 200,
	-417, -259, -219, 517, -113, -376, -376, -113, -376, -113,
	44, 142, 2, -555, 237, 515, -274, 284, 173, -300,
	-418, 219, 520, -308, 142, -330, -329, 284, -252, 193,
	2, 142, -291, 284, 136, 515, 340, 2, -234, 193,
	-220, -219, -349, -212, 432, 142, -328, 470, -358, -113,
	515, 116, 37, -358, -319, -320, -415, -321, -235, 515,
	-241, -219, 2, -248, -309, -209, 142, -309, -309, -209,
	520, 142, -232, -251, -256, -257, -258, -460, -461, -88,
	-419, 516, 516, 516, -170, 302, -169, -219, 5, -183,
	470, -273, -368, -367, -476, -477, -472, 249, 208, 460,
	221, 156, -292, -236, -235, 109, -177, 485, -109, 516,
	-417, 200, -171, -171, -417, -417, -248, 170, -460, -171,
	-171, -171, 2, 2, -333, -248, -232, -267, -248, -300,
	-300, -333, -232, -333, -232, -333, -232, -113, -376, 2,
	392, 170, 170, 517, -333, 340, 110, 429, 317, 208,
	-248, -267, -248, -267, -232, -248, -411, -325, -196, 299,
	233, 398, -355, -356, -378, 373, 374, -356, 373, 374,
	8, 9, 8, 9, -200, 402, 287, -309, 520, -203,
	38, 123, 233, -248, 491, 138, -376, -376, 444, -561,
	424, -383, 138, -376, 271, 288, 452, 155, 461, 127,
	292, 173, 515, -377, -377, 516, -313, -376, -376, 514,
	523, 516, -296, 520, -294, -376, -311, -311, 516, 517,
	-311, -300, 514, 514, 520, 516, -394, -395, 132, -376,
	444, 444, 444, 444, 515, 516, 517, -506, 309, 515,
	515, -376, 516, 516, 516, 516, 37, 520, 520, 520,
	516, 520, 520, 520, 516, 516, 516, 520, 516, 491,
	491, 516, 516, 516, 516, 520, 516, 520, 516, 173,
	516, 516, -347, 323, 516, 11, 12, 506, 507, 508,
	509, 168, 510, 511, 504, 505, 503, 496, 497, 498,
	83, 260, 375, 14, 15, 16, 222, 200, -377, -377,
	-377, 516, -381, -382, 173, 170, 37, -342, -342, -342,
	516, 173, -311, 516, 516, 515, -499, 262, 284, 516,
	-370, -369, 483, -414, -304, 2, -406, -243, -453, -370,
	-370, -311, -376, 228, 228, -335, 470, 298, -337, -406,
	-400, -449, -375, -374, 171, 38, 123, 281, 196, -400,
	-241, -291, -400, -400, -453, -401, -401, -399, 516, -514,
	-449, 516, -305, -409, -493, -296, 517, -453, -180, -494,
	-159, 5, 288, -159, -159, -159, -300, 444, 24, 324,
	-423, 513, 514, 8, -453, 515, -447, -447, -447, -300,
	173, 173, -450, -363, 458, 80, 342, 440, -450, -205,
	356, -235, -235, -248, -257, 284, -367, 193, -211, 284,
	-423, -242, -219, 515, 515, 233, 233, 470, -235, -242,
	233, 193, -235, 193, -242, -242, -525, 342, 293, -376,
	-458, -457, 107, 394, 252, 340, 285, -206, 356, 395,
	-113, -113, -113, 515, -539, 470, 126, -248, -267, -248,
	-257, -252, 395, 356, 282, -261, -448, -448, -329, 395,
	356, -257, -250, -232, -207, -113, -113, -113, 515, -233,
	-208, 356, 5, 193, -235, 5, -219, -235, -257, -458,
	-543, 23, -235, 193, -235, -257, -458, -224, -460, 288,
	466, -523, 382, 444, -411, -174, 485, -109, -168, 204,
	508, -520, -219, 479, -219, -272, -275, -273, -235, -186,
	-187, 487, 485, 142, -265, -248, 513, -171, -460, -248,
	-257, 142, -291, 284, -460, 37, 142, 515, 2, 2,
	298, 284, -234, 193, -213, 133, -559, 498, -232, -370,
	-304, -327, -361, 364, 298, -292, 475, -241, -327, -306,
	520, 173, 498, 517, -292, 2, -209, -309, -209, -209,
	-267, -268, -209, -209, -209, -88, -88, -171, 520, 515,
	498, 498, 515, -460, -460, 516, 520, -248, -234, 208,
	208, -240, -220, 516, 520, 517, 515, -179, 302, -178,
	134, 235, 220, 403, 404, 405, 406, 125, -177, -110,
	173, -50, 485, 429, -171, 519, -333, -333, -333, 392,
	392, -219, -244, -232, -248, -245, -267, 170, 170, 464,
	-356, 299, 256, -403, -204, 290, -248, 519, -376, -376,
	138, 138, -376, -377, -377, -376, 138, 173, 515, -376,
	-387, 32, 32, 516, 520, -372, -376, 516, 478, -296,
	-296, 516, 508, -453, 519, 516, -385, 135, -376, 438,
	267, 191, 266, -346, 266, -346, -346, -447, 5, -453,
	508, -507, -238, 515, -219, 483, -295, 304, 516, -425,
	-423, -376, -376, -376, -376, -376, -447, -428, -428, -443,
	-443, -376, -381, -376, -425, -423, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, 127, 284, 292, -377, -382,
	-381, -376, -376, -423, 516, 516, 516, -311, -88, 515,
	262, -323, 184, -376, -417, 520, -323, -323, 516, -406,
	-406, 515, -376, 228, 514, 520, 522, 498, -291, 517,
	-399, -400, 514, 516, 520, 516, 520, -360, 37, 516,
	-453, -182, -181, 124, 51, -300, 301, 5, 8, 513,
	514, 517, -447, 516, 516, 516, -300, -300, -376, 444,
	444, 142, 284, 472, -478, -473, 140, -376, -298, -404,
	-376, 515, 515, 2, -202, 131, 395, -541, 2, 470,
	142, -209, 142, -209, 489, 515, 515, 444, 382, 485,
	-311, -376, -172, 116, -452, -527, 519, -527, 519, 382,
	444, 382, 444, 485, -311, 444, -427, 46, 25, 284,
	-251, 444, 444, -209, 142, 455, 395, -460, 288, -257,
	-252, 395, 356, -176, 302, -175, 134, 366, 125, 235,
	-417, -174, 173, 219, 2, -252, 2, 516, 516, 520,
	-479, 37, 296, 296, 515, -248, -69, 485, -416, -449,
	-250, 37, 142, -523, -113, -252, -421, -422, 5, -248,
	142, 298, 284, -214, 242, -559, -457, -494, -296, -327,
	-318, 285, 88, 516, -370, -320, -304, -376, 2, 516,
	-209, -209, -169, -170, -460, -460, -460, -171, -183, -183,
	-368, -276, 515, -234, -220, 515, -183, -236, 2, -461,
	520, 515, 498, 498, 498, -417, -113, 302, -248, 508,
	-333, -283, -282, 317, 292, -283, 373, 373, 299, 164,
	238, -203, -233, -376, -376, 138, 32, 32, -376, -376,
	-387, 516, -376, -376, -311, 514, 5, -376, 516, 516,
	8, -376, 516, 517, -508, -219, -376, 516, 58, 516,
	516, 520, 520, 516, 516, 516, 516, 516, 516, 516,
	-382, 173, 127, 292, 515, 516, 516, -88, -384, 187,
	58, -406, -384, -384, -335, -300, -406, -374, -233, 513,
	-453, -449, -409, 515, 517, -181, 498, 514, 2, 513,
	-453, 516, -235, -235, -367, 142, -480, 89, -482, 73,
	156, 96, 284, 288, 460, 333, 69, 116, 347, -551,
	37, 495, 516, 516, 520, -203, -298, -300, 284, 421,
	116, 284, 116, 109, 455, 76, -235, -242, -300, -300,
	-248, -257, 149, 516, 520, 498, 2, 508, 508, -257,
	-252, -257, -250, 149, 516, -233, 5, 5, 142, -230,
	73, 5, -235, -235, -251, 109, 382, 444, 520, 515,
	498, 498, -174, -461, -109, -291, -279, 211, -235, -477,
	-474, -475, 333, -481, -483, 156, 333, -113, 2, -185,
	-184, -219, 5, 515, -274, 302, 514, -330, -113, -252,
	-291, 516, 520, -351, 470, -233, -248, 142, -215, 241,
	-559, -457, -212, -354, -352, -359, 515, 298, -113, -296,
	498, 516, 516, 109, 109, 202, 141, -298, 515, 515,
	-300, 109, 516, -178, -179, -460, -109, -460, -177, -51,
	-52, 208, 89, 322, -245, 429, 208, 515, 515, -203,
	-376, -376, -376, 516, -296, -453, 508, -502, 317, 516,
	-403, -376, -376, -377, 173, 515, -387, 516, -503, 484,
	-376, -311, -503, -503, 516, -449, 2, -460, 513, 2,
	-367, -242, -246, -239, -219, 156, 193, 288, 233, 515,
	-377, -248, 515, 2, 29, -552, 120, 212, -366, -553,
	95, 422, 201, -404, -204, 516, 516, 288, 288, -376,
	-423, 515, -209, -209, 516, 516, -376, 444, -452, 94,
	-450, 2, -527, -376, 444, 5, -209, -246, -209, -209,
	-230, 455, -257, -252, -175, -176, -460, -109, -174, 37,
	-280, -281, 200, -479, 233, -239, 233, -550, 485, 516,
	520, 498, 498, -272, -186, -70, -71, 445, -416, -291,
	37, 5, 515, -219, 298, 515, -233, -559, -457, -213,
	-327, 128, -300, 89, -354, -383, -171, 515, 515, -277,
	78, 90, 117, 192, 176, 209, 414, 419, 27, -277,
	516, -298, -298, 516, 515, -171, 516, 520, 27, 515,
	27, 515, -248, -267, -311, -311, 516, -296, 58, 520,
	516, 516, -377, -387, 516, -504, -505, -238, 514, 2,
	-482, -239, 284, 470, -376, -221, 515, -376, 37, 212,
	121, 198, -279, 515, -365, 470, 347, -230, -298, 515,
	515, 515, 498, 173, 515, -427, -209, -251, 516, -533,
	345, -113, -186, 315, 515, -278, 298, 109, 277, -184,
	-450, -450, 516, 37, -71, 9, 37, -113, -298, -248,
	-298, 298, -457, -214, 464, 285, 516, -242, -327, -461,
	-461, -365, 516, 516, -461, -52, -300, -300, 516, 516,
	-509, 340, 374, 186, -311, -297, 516, 520, 37, 142,
	188, 516, -484, 261, -219, 516, 121, 198, -280, -300,
	-279, 188, -248, -528, 470, 516, -285, -284, -282, -287,
	-286, -282, -311, -450, 94, 315, -311, -230, -536, 174,
	-535, 5, 10, -278, -248, -299, -405, -235, 79, 109,
	-279, -113, -113, 516, -351, 516, -248, -215, 395, -369,
	516, 516, -366, -365, -187, 485, 516, 516, 516, 516,
	-510, -511, 48, 457, 100, -376, -510, -510, -505, -507,
	156, 485, -485, -488, -487, 298, 401, 174, 316, 516,
	421, 481, -552, 516, 485, -291, -376, -365, 516, 520,
	475, 516, 520, 475, 516, 173, 516, -209, -173, 485,
	44, 515, 516, 520, 332, 122, 131, -280, -550, -365,
	515, -366, 515, -319, -171, -171, -279, -366, -370, -171,
	-512, 140, -511, 329, 169, 373, 329, 169, -512, -512,
	-239, 53, -487, 298, -488, 298, 464, 122, -370, 53,
	-484, -279, -284, 200, -286, 173, 315, 145, -535, 29,
	-300, -405, 374, 374, 2, -186, -278, -366, -298, -279,
	-298, -370, -280, -279, 100, 184, 439, 277, 32, 498,
	-486, 277, 362, 61, 395, -486, 498, -485, 515, 515,
	380, 516, 2, -278, -279, 516, -280, 516, -187, -280,
	373, 306, -511, -376, 22, 288, 116, -376, -552, -311,
	-311, 302, -210, 61, 362, -280, -365, -187, -366, -370,
	-187, 516, 516, -170, 515, -187, -366, -370, -279, -370,
	-280, 444, -170, -370, -279, -280, 515, 516, -280, -187,
	-311, -187, -370, 516, -370, -280,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 474, 475, 477, 478, 479, 481, 482, 484,
	486, 488, 489, 490, 492, 493, 495, 496, 497, 498,
	499, 501, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 565, 0, 1165,
	1167, 1169, 1171, 0, 699, 0, 32, 33, 0, -2,
	276, 278, 280, 0, 306, 308, 309, 311, 313, -2,
	0, 407, 408, 410, 412, -2, -2, 0, 861, 863,
	0, 552, 554, 0, 866, 868, 0, 0, 574, 575,
	0, 1253, -2, 568, 570, 572, 637, 639, 641, 643,
	645, 647, 649, 651, 652, 654, 656, 658, 660, 662,
	664, 666, 668, 669, 671, 673, 675, 677, 679, 681,
	683, 685, 687, 689, 691, 693, -2, 695, -2, -2,
	0, -2, -2, -2, 1183, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 358, 359, 361, 363, 365, 367,
	370, 372, 374, 1311, 414, 416, 418, 420, 422, 424,
	426, 0, -2, 1323, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 80, 81, 82, 83, 84,
	85, 86, 87, 66, 67, 69, 70, 71, 75, 76,
	78, 64, 0, 0, 1284, 1286, 1288, 1290, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 476, 480, 483, 485, 487, 491, 494, 500, 502,
	504, 461, 462, 465, 1944, 1961, 1962, 1963, 1966, 1967,
	1968, 1969, 1970, 1971, 2349, 2430, 2431, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 463, 464, 1021, 0, 528, 526,
	1937, 529, 2169, 531, 533, 401, 402, 403, 404, 405,
	406, 0, 545, 538, 544, 546, 548, 549, 550, 551,
	523, 521, 0, 545, 1996, 543, 1163, 1164, 1148, 1149,
	2207, 1190, 0, 190, 564, -2, -2, -2, 2315, -2,
	596, -2, 603, 2319, 2209, 608, 0, 610, -2, 613,
	1166, 1168, 1170, 697, 698, 1947, 0, 0, 0, 0,
	34, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1070, 1071, 1072, 0, 194, 196, -2,
	-2, -2, -2, 0, 0, 2247, 2040, 1905, 1963, 1908,
	1903, 277, 279, 281, 282, 0, 0, 0, 0, 0,
	0, 307, 310, 312, -2, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 916, 908, 909, 1115, 0,
	0, 0, 0, 409, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 338, 466, 467, 0, 1312, 1312, 0,
	0, 0, 0, 251, 242, 862, 864, 865, 0, 0,
	0, 0, 553, 555, 0, 0, 224, 867, 869, 870,
	0, 0, 0, 0, 0, 253, 0, 0, 569, 571,
	573, 638, 640, 642, 644, 646, 648, 650, 653, 655,
	657, 659, 661, 663, 665, 667, 670, 672, 674, 676,
	678, 680, 682, 684, 686, 688, 690, 692, 694, 704,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 786, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	707, 709, 710, 711, 0, 766, 784, 785, 794, 696,
	0, 1061, 1313, 1192, 1173, 1187, 1192, 1175, 1176, 1177,
	1178, 1179, 1184, 1186, 1180, 1181, 1182, 37, 39, 41,
	43, 45, 47, 49, 51, 53, 360, 362, 364, 366,
	368, 371, 373, 375, -2, 1282, 1283, 415, 417, 419,
	421, 423, 425, 427, 556, 0, 558, 0, 708, -2,
	0, 1317, 1317, 1317, 0, 0, 1283, 1281, 0, 561,
	562, 617, 618, 1548, 0, 0, 0, 0, 0, 0,
	0, 1802, 1634, 0, 619, -2, 1665, 1667, 2290, 2315,
	1801, 1669, 1670, 1671, 1672, 1673, 0, 1675, 1676, 1677,
	1678, 1679, 1680, 0, 1682, 0, 1687, 1688, 1689, 0,
	2297, 1882, 1957, -2, 0, 0, 2303, 1953, 0, 1768,
	1705, -2, -2, 1980, 1959, 1480, 1481, 1482, 1483, 1484,
	-2, -2, 2332, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 0, 2278, 2298, 2299, 2304, 2306,
	2300, 2287, 1730, 2052, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1507, 1516, -2,
	-2, -2, -2, -2, -2, -2, 2291, 2292, 2309, 2312,
	2318, 2323, 2324, 2296, 2305, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 1508, -2, -2, -2, -2, 1300, 2180, 1303, 1021,
	1301, 1285, 1287, 0, 1289, 0, 0, 0, 1294, 1320,
	1318, 0, 1361, 1298, 1299, 1379, 1379, 1403, 0, 1384,
	0, 1403, 1312, 1429, 0, 1390, 2199, 1706, 1707, 0,
	1963, 1958, -2, -2, 2330, 0, 0, 0, 0, 0,
	0, 0, 524, 0, 530, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 1189, 1114, 566, 567, 0, 591,
	0, 595, 2286, -2, 2004, 2218, -2, 599, 1193, 1197,
	1198, 1199, 1200, 0, 0, 0, 0, 0, 605, 0,
	0, 592, 593, 611, 614, 0, 700, 701, 702, 703,
	63, 0, 2298, 1429, 65, 0, 1927, 1988, 1989, 1990,
	1991, 1992, 2331, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2332, 68, 0, 2298, 72, 0, 2298,
	0, -2, 77, 0, 1933, 79, 0, 1930, 88, 0,
	2298, 0, 1902, -2, 0, 175, 1941, 0, 887, 1943,
	-2, 2298, 1069, 254, 255, 1976, 1977, 1984, 1985, 1986,
	1987, 0, 0, 0, 0, 854, 1899, 1904, 855, 1923,
	856, 1909, 0, 283, 284, 285, 286, 287, 0, 288,
	2298, 290, 291, 0, 293, 294, 2298, 296, 297, 0,
	299, 0, 207, 208, 315, 316, 0, 318, 0, 2298,
	0, 0, 0, 324, -2, 339, 0, 336, 327, 328,
	330, 331, 332, 333, 0, 379, 377, 1938, 0, 882,
	2298, 884, 0, 0, 1094, -2, 2298, 1066, 0, 1100,
	1096, 0, -2, 0, 1310, 2298, 1207, 912, 913, 914,
	915, 0, 398, 0, 1220, 0, 1222, 0, 1243, 1435,
	1379, 1379, 0, 340, 341, 342, 343, 344, 2298, 0,
	0, 0, 349, 0, 351, 352, 353, 354, 355, 356,
	357, 164, 2298, 432, 459, 0, 164, 2298, 435, 164,
	2298, 438, 0, 441, 1113, 164, 2298, 444, 164, 2298,
	447, 449, 164, 2298, 453, 454, 456, 2298, 458, 256,
	1159, 1160, 1161, 1162, 0, -2, 517, 1946, -2, 469,
	0, 470, 0, -2, 0, 268, 0, 0, 871, 872,
	873, 874, 875, 878, 879, 880, 881, 1416, 227, 225,
	0, 0, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 0, 0, 576, 0, 0, 705, 706, 0, 0,
	716, 717, 718, 0, 268, 2210, 2177, 2072, 725, 0,
	728, 731, -2, 0, 0, 0, 0, 735, 0, 740,
	741, 742, 0, 744, 860, 746, 0, 0, 748, 0,
	752, 0, 755, 0, 757, 0, 759, -2, -2, -2,
	770, -2, 0, 773, 775, 0, 777, -2, 0, 786,
	782, 783, 0, 0, 0, 0, 802, 803, 0, 808,
	0, 811, 812, 813, 0, 815, 816, 0, 818, 819,
	820, 821, 0, 823, 824, -2, -2, 828, 830, 0,
	837, 0, 841, 0, 845, 0, 712, 713, 164, 1433,
	1172, -2, 1174, 0, -2, 0, 557, 0, 560, 1340,
	1268, 1265, 0, 1337, 1338, 1269, 0, 0, 0, 1276,
	0, 1315, 1316, 0, 0, 0, 1255, 1256, 0, 0,
	0, 0, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1816,
	1813, 1814, 1817, 1818, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 1821, 1822, 0, 0, 1824, 0, 1826, 0,
	0, 0, 0, 0, 0, 1613, 1615, 1890, 0, 0,
	1823, 1553, 1554, 1555, 1556, 1557, 1592, 1593, 0, 0,
	1666, 1887, 1886, 1668, 0, 1838, 0, 1681, -2, 0,
	1802, 1833, 0, 0, 1690, 1691, 1692, 0, 0, 1838,
	0, 0, 1881, 1702, 1703, 1545, 0, 0, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 1493, 0, 1495,
	0, 1496, 1497, 1504, 1517, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 1862, -2, 0,
	0, 0, 0, 1509, 0, 1302, 0, 0, 1365, 1891,
	1895, 1896, 1365, 1365, 0, 0, 1839, 1426, 1426, 0,
	0, 1422, 1422, 1422, 1420, 1403, 0, 1403, 1413, 0,
	1403, 1403, 0, -2, 1384, 0, 0, 1413, 0, 1397,
	505, 507, 509, 511, 512, 513, 515, 1430, 1431, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 2256, 535, 547, 1312, 0, 1841,
	1452, 1456, 0, 1458, 1459, 1460, 1461, 1462, 0, 0,
	1453, -2, 1505, 1507, 1528, 1981, 1982, 1983, 1488, 1489,
	1490, 1491, 1492, 1500, 1487, 1487, 1487, 1498, 1527, 1519,
	1527, 1523, 1473, 1474, 1475, 1510, 1511, 1512, 1513, 0,
	2256, 540, 0, 0, 0, 0, 0, -2, 601, 606,
	607, 0, 0, 1195, 0, 1201, 628, 629, 630, 1203,
	1204, 0, 604, 631, 632, 633, 634, 635, 636, 0,
	1911, 1912, 1913, 1914, 1917, 1918, 0, 0, 602, 621,
	609, 0, 615, 89, 1145, 0, 128, 0, 1145, 1145,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	113, 124, 101, 102, 0, 0, 0, 0, 0, 73,
	1043, 0, 1046, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 0, 112, 0, 107, 91, 0, 0,
	0, 114, 126, 0, 155, 157, 0, 0, 0, 0,
	0, 0, 174, 182, 0, 0, 0, 0, 1067, 0,
	1309, 0, 0, 2298, 1416, 2110, 1416, 853, 0, 0,
	1964, 1907, 0, 0, 0, 0, 0, 0, 0, 317,
	319, 0, 321, 322, 323, 0, 1093, 0, 329, 369,
	992, 2298, 0, 0, 396, 391, 0, 393, 0, 1042,
	2298, 1040, 1942, 0, 1064, 0, 1021, 2298, 1940, 0,
	0, 1101, 1973, 1110, 1114, 1209, 0, 400, 0, 1223,
	1225, 0, 0, 1436, 0, 1438, 1439, 0, 346, 347,
	348, 0, 428, 0, 162, 163, 0, 164, 2298, 433,
	0, 436, 0, 164, 2298, 1897, 442, 0, 445, 0,
	0, 451, 0, 0, 0, 0, 1312, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 231, 0,
	1415, 0, 1416, 225, 268, 268, 1416, 578, 1416, 580,
	0, 0, 719, 720, 0, 268, 268, 268, 726, 727,
	729, 730, -2, -2, 838, 732, 733, 805, 0, 0,
	0, 804, 745, 0, 847, 2195, 858, 805, 2040, 805,
	2040, 805, 2040, 756, 758, 761, 797, 769, 774, 0,
	0, 779, 787, -2, 0, 789, 0, 791, 0, 793,
	805, 806, 809, 814, 817, 822, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 1185, 1340, 1268, 559, 1259,
	1339, 1260, 1267, 1270, 0, 0, 1272, 0, 1274, 0,
	1335, 1336, 1343, 1344, 0, 1354, 1355, 1347, 0, -2,
	0, 0, 1350, 1351, 1278, 0, 1295, 1296, 1297, 1324,
	1327, 1124, 0, 2430, 1549, 1447, 1550, 1551, 1926, 0,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	-2, -2, -2, -2, -2, -2, -2, -2, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, -2,
	-2, -2, 1590, 1591, -2, 1825, 1827, 0, 1890, 0,
	-2, 0, -2, -2, -2, -2, 1610, 0, 1612, 1617,
	1619, 1621, 0, 0, 0, 0, 1889, 1631, 1873, 1874,
	0, 0, 1804, 1805, 1806, 1616, 0, 1635, 1888, 1885,
	0, 0, 1837, 1323, 1694, 0, 0, 0, 0, 1701,
	1686, 1835, 0, 1834, 0, 0, 0, 1845, 0, 1880,
	1876, 0, 1924, 1544, 1531, 1532, 1533, 1534, 1535, 1536,
	1546, 0, 1921, 1950, 1956, 1778, 0, 0, 0, 1731,
	1732, 1733, 1734, 1735, 0, 1737, 1738, 0, 1740, 1741,
	0, 1743, 1744, 0, 1746, 1747, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 0, 0, 1750, 0, 1848, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1752, 0, 1754, 1839,
	1859, 0, 0, 1636, 0, 0, 0, 1802, 0, 1757,
	1839, 1867, 0, 0, 0, 0, 0, 1839, 0, 1872,
	0, 1764, 0, 1766, 1304, 0, 0, 1442, 0, 0,
	0, 1894, 1442, 1442, 0, 1360, 0, 0, 1423, 1424,
	1425, 0, 0, 1426, 0, 1417, 1421, 1418, 1419, 1413,
	1376, 0, 0, 1928, 1413, 1382, 1412, 0, 1021, 1402,
	1413, 1413, 0, -2, 1386, 1403, 0, 0, 506, 508,
	510, 514, 516, 0, 0, 1323, -2, 0, -2, 1020,
	0, 0, 0, 0, 525, 527, 0, 0, 448, 0,
	519, 0, 522, 0, 1443, 1446, 0, 0, 1457, 1463,
	1464, 0, -2, 0, 0, 1529, 0, 0, 0, 0,
	189, 0, 594, 0, 1194, 1202, 0, 625, 0, 627,
	0, 1915, 1919, 1916, 1920, 0, 616, 0, 0, 0,
	0, 1144, 0, 132, 2298, 0, 166, 0, 0, 985,
	1934, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 1044,
	1045, 1047, 1054, 1056, 0, 1050, 1922, 0, 0, 1051,
	0, 1053, 1055, 1057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 104, 0, 0, 0, 0, 1901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1089, 1087, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 0, 0, -2, 0, 0, 0, 199, 0,
	259, 1900, 1910, 0, 876, 877, 289, 292, 295, 298,
	195, 0, 325, 0, 0, 918, 893, 0, 0, 378,
	268, 0, 0, 392, 0, 1038, 1041, 0, 1021, 2298,
	1078, 0, 0, 0, 0, 0, 0, 1099, 0, 2298,
	1929, 1972, 1973, 1211, 1217, 0, 1442, 0, 1241, 1226,
	0, 0, 0, 1241, 1245, 1246, 1248, 1249, 0, 0,
	1437, 0, 350, 460, 164, 430, 0, 164, 164, 439,
	0, 0, 164, 450, 164, 455, 164, 257, 457, 468,
	518, 1312, 1312, 268, 266, 2152, 264, 261, 263, 0,
	0, 0, 919, 921, 922, 923, 924, 0, 1973, 0,
	2099, 1973, 0, 1229, 1231, 0, 221, 0, 228, 226,
	231, 0, 0, 390, 577, 582, 714, 0, 268, 722,
	723, 724, 763, 799, 734, 736, 737, 738, 0, 859,
	857, 747, 805, 750, 805, 753, 805, 772, 776, 781,
	788, 0, 0, 0, 801, 0, 0, 0, 0, 0,
	0, 0, 842, 843, 844, 846, 1434, 1263, 1264, 1266,
	0, 1275, 0, 0, 1349, -2, -2, 1348, 1352, 1353,
	-2, -2, -2, -2, 1271, 0, 1280, 1277, 0, 1334,
	1122, 1123, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1632, 0, -2, 1611, 1614, 1618, 1620, 1622, 0,
	0, 0, 0, 0, 0, 1828, 0, 1830, 1633, 1883,
	1886, 1800, 0, 0, 1322, 1323, 1323, 0, 1700, 0,
	1836, 0, 1843, 1844, 0, 1693, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 1736, 1739, 1742, 1745, 0, 0, 0, 0,
	1725, 0, 0, 0, 1729, 1499, 1485, 0, 1527, 1525,
	1526, 1520, 1527, 1524, 1477, 0, 1476, 0, 1749, 0,
	1751, 1753, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1640,
	1641, 1756, 1865, 1866, 0, 0, 0, 0, 0, 0,
	1762, 0, 1871, 1763, 1765, 1312, 0, 1305, 0, 1362,
	1357, 1441, 0, 1892, 1416, 1364, 1366, 1893, 1931, 1357,
	1357, 0, 1840, 0, 0, 1407, 0, 0, 0, 1409,
	1380, 0, 0, 1374, 0, 1370, 1371, 1372, 1373, 1381,
	1021, 1411, 1383, 1387, 1950, 0, 1413, 0, 1398, 0,
	1400, 1432, 0, 1392, 1395, 0, 0, 1965, 269, 0,
	300, 304, 305, 301, 302, 303, 534, 0, 0, 0,
	1842, 0, 1448, 0, 1454, 0, 0, 0, 0, 539,
	0, 0, 590, -2, 623, 624, 626, 0, 622, 129,
	1145, 0, 0, 1126, 1128, 0, 134, 2298, 143, 0,
	959, 0, 1932, 0, 0, 0, 0, 0, 1147, 0,
	0, 2298, 164, 2298, 164, 146, 149, 0, 154, 151,
	152, 179, 180, 181, 0, 0, 950, 90, 1145, 0,
	93, 97, 105, 0, 0, 0, 111, 0, 0, 0,
	1130, 1136, 0, 0, 1048, 1049, 1052, 1058, 74, 0,
	0, 1134, 1140, 1125, 156, 95, 99, 106, 0, 1142,
	92, 0, 178, 0, 0, 0, 170, 0, 171, 172,
	183, 0, 164, 2298, 0, 885, 886, 1088, 1062, 1063,
	0, 1068, 0, 0, 0, 191, 0, 1416, 199, 0,
	1906, 0, 0, 0, 0, 0, 0, 917, 1003, 0,
	890, 0, 0, 0, 384, 380, 0, 389, 395, 394,
	883, 0, 0, 0, -2, 0, 0, 1103, 1097, 1098,
	0, 0, 0, 2298, 1213, 1217, 0, 1216, 1310, 1323,
	399, 1218, 1241, 0, 0, 0, 1228, 1224, 1221, 1442,
	0, 0, 0, 0, 0, 345, 429, 164, 434, 437,
	1898, 164, 443, 446, 452, 471, 472, 243, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 928, 0, 1973,
	1973, 0, 1936, 0, 0, 0, 0, 229, 0, 232,
	0, 0, 0, 237, 238, 239, 240, 241, 222, 1416,
	0, 579, 0, 0, 721, 0, 749, 751, 754, 790,
	792, 805, 831, 832, 945, 0, 945, 0, 0, 1273,
	0, 1346, 1279, 1328, 1329, 0, 1124, 0, 1552, 1595,
	0, 0, -2, 0, 0, 1599, 0, 0, 0, -2,
	0, 0, 0, 1829, 1831, 0, 1885, 1695, 0, 0,
	0, 1699, 1683, 1684, 0, 1803, 1846, 1875, 1879, 0,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 0, 1925, 1951,
	1955, 1776, 1777, 1781, 1939, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1522, 0,
	0, 1847, 1858, 1860, 1637, 1638, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, -2, -2, -2, 1655,
	1656, 1657, -2, -2, -2, 0, 0, 0, 1861, 1863,
	1864, 1868, 1869, 0, 1759, 1760, 1761, 1870, 0, 1312,
	1306, 1359, 0, 1440, 1363, 0, 1359, 1359, 1319, 1405,
	0, 0, 1428, 0, 1377, 0, 1378, 0, 1410, 0,
	1385, 1388, 1389, 1399, 0, 1391, 0, 1394, 0, 1695,
	-2, 270, 272, 0, 275, 537, 536, 520, 0, 0,
	1450, 0, 0, 1502, 1506, 1530, 542, 541, 1414, 0,
	0, 0, 0, 165, 957, 984, 0, 0, 0, 1117,
	1124, 0, 0, 990, 136, 0, 0, 0, 144, 0,
	0, 141, 0, 148, 153, 0, 0, 0, 0, 0,
	0, 108, 109, 110, 0, 115, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	1121, 0, 0, 185, 0, 0, 0, 1091, 1092, 1131,
	1137, 0, 0, 197, 0, 200, 0, 203, 204, 0,
	199, 193, 0, 0, 320, 1021, 326, 939, 991, 0,
	993, 0, 891, 0, 0, 992, 376, 0, 383, 0,
	1042, 0, 0, 1065, 1076, 1021, 0, 1102, 1104, 1112,
	0, 0, 0, 1215, 1217, 0, 1208, 1209, 1342, 1219,
	1239, -2, 1238, 0, 1323, 1247, 1244, 1250, 1251, 0,
	431, 440, 265, 0, 260, 262, 0, 246, 0, 0,
	920, 925, 0, 0, 0, 0, 0, 1230, 1232, 0,
	0, 0, 0, 0, 0, 231, 252, 0, 715, 739,
	800, 833, 944, 0, 0, 835, 0, 0, 1345, 1332,
	1333, 1330, 1124, 1597, 1601, 0, 0, 0, 1603, -2,
	0, 1625, -2, -2, 1832, 1884, 1674, 1323, 1696, 1698,
	1685, 1878, 1547, 0, 1783, 1780, 0, 1767, 0, 1720,
	1721, 0, 0, 1724, 1726, 1727, 1728, 1486, 1479, 1478,
	1857, 0, 0, 0, 0, 1758, 1307, 0, 1772, 0,
	0, 1367, 1772, 1772, 1406, 0, 1408, 1375, 1368, 0,
	1951, 1401, 1393, 0, 0, 273, 0, 1444, 1449, 0,
	1455, 1501, 130, 131, 133, 0, 958, 0, 961, 0,
	0, 0, 0, 968, 969, 0, 0, 0, 0, 0,
	978, 0, 1007, 1017, 0, 1334, 0, 0, 0, 138,
	159, 0, 0, 1146, 0, 0, 164, 164, 0, 0,
	1127, 1129, 0, 0, 0, 0, 118, 0, 0, 1132,
	1138, 1135, 1141, 0, 0, 1143, 176, 177, 0, 164,
	0, 169, 164, 164, 1121, 0, 0, 0, 0, 0,
	0, 0, 192, 258, 199, 0, 947, 0, 1003, 995,
	996, 997, 0, 1002, 1004, 0, 0, 905, 892, 0,
	901, 0, 0, 918, 893, 0, 381, 1039, 1073, 1021,
	0, 1095, 0, 0, 0, 0, 0, 0, 1205, 1217,
	0, 1210, 1211, 1241, 1341, 0, 0, 0, 1227, 1342,
	0, 267, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 233, 0, 234, 235, 236, 223, 581,
	583, 0, 0, 589, 943, 0, 0, 0, 0, 1331,
	1605, -2, -2, 1626, 0, 1952, 1954, 1323, 0, 1769,
	1325, 0, 0, -2, 0, 0, 0, 1308, 1291, 0,
	1358, 1356, 1292, 1293, 1427, 0, 1396, 274, 0, 1451,
	135, 0, 962, 963, 1935, 965, 0, 967, 970, 0,
	973, 1975, 0, 977, 0, 986, 1008, 0, 939, 0,
	1013, 1014, 1015, 1118, 1119, 1019, 0, 137, 139, 158,
	1121, 0, 140, 147, 0, 0, 94, 0, 0, 2033,
	121, 119, 117, 96, 0, 178, 184, 1120, 173, 186,
	164, 0, 1133, 1139, 201, 0, 202, 205, 0, 0,
	893, 946, 0, 994, 0, 1005, 1006, 895, 0, 894,
	0, 0, 0, 0, 0, 382, 385, 0, 388, 0,
	0, 1105, 0, 1111, 0, 0, 0, 0, 1212, 1213,
	397, 0, 0, 0, 1241, 1252, 245, 0, 0, 926,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 927,
	1019, 0, 0, 983, 0, 250, 230, 0, 585, 0,
	587, 0, 834, 836, 0, 0, 1697, 1787, 0, 0,
	1722, 1723, -2, 0, 1663, 1771, 1773, 0, 1369, 1445,
	960, 964, 0, 0, 0, 1025, 0, 0, 979, 0,
	1011, 1012, 947, 0, 939, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 168, 187, 1121, 198, 217,
	0, 1074, 895, 0, 0, 903, 0, 906, 0, 902,
	899, 900, 939, 0, 386, 387, 0, 1077, 0, 1112,
	0, 0, 1214, 1215, 0, 1234, 1235, 1237, 1242, 0,
	0, 1017, 1019, 893, 0, 584, 0, 0, 839, 840,
	0, 0, 0, 0, 1782, 1326, 1664, 0, 0, 0,
	0, 972, 1030, 0, 0, 0, 1009, 1010, 1007, 0,
	988, 0, 1021, 142, 0, 1019, 0, 951, 0, 0,
	954, 0, 0, 122, 2033, 120, 0, 164, 220, 0,
	212, 210, 211, 888, 0, 0, 999, 1001, 0, 907,
	947, 905, 1075, 1019, 0, 1017, 0, 1206, 0, 1236,
	268, 268, 939, 1017, 1442, 0, 268, 586, 588, 1779,
	1799, 1788, -2, 2258, 2037, 0, 1799, 1799, 1774, 1775,
	0, 0, 974, 1026, 1027, 0, 1022, 1023, 1024, 1974,
	975, 976, 1442, 1016, 0, 1025, 160, 939, 948, 0,
	0, 949, 0, 0, 125, 0, 127, 188, 206, 0,
	0, 0, 998, 0, 0, 0, 0, 893, 895, 1017,
	0, 939, 0, 1442, 247, 248, 947, 939, 982, 249,
	1784, 0, 0, 1790, 1791, 1792, 1793, 1794, 1785, 1786,
	966, 0, 1028, 0, 1029, 0, 0, 0, 987, 0,
	1030, 145, 952, 0, 955, 0, 123, 0, 215, 216,
	0, 1000, 896, 0, 898, 895, 904, 939, 0, 947,
	0, 1233, 893, 947, 0, 1796, 1797, 0, 0, 0,
	1031, 0, 1034, 1035, 0, 1032, 0, 1007, 0, 0,
	0, 942, 897, 889, 947, 1019, 893, 1017, 1442, 893,
	1795, 1798, 1789, 971, 1033, 1036, 1037, 1018, 989, 0,
	0, 0, 938, 940, 941, 893, 1017, 1442, 939, 980,
	1442, 947, 0, 218, 0, 1442, 939, 1108, 947, 981,
	953, 0, 0, 1106, 947, 893, 0, 219, 893, 1442,
	0, 1442, 1109, 947, 1107, 956,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 504, 3, 510, 505, 3,
	515, 516, 508, 506, 520, 507, 517, 509, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 523, 3,
	496, 498, 497, 501, 519, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 513, 3, 514, 511, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 521, 503, 522, 499,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 500, 57839, 502,
	57840, 512, 57841, 518, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1209
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1234
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1367
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1371
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1375
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1389
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1408
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1440
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1444
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1454
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1458
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1464
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1473
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1488
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1544
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1556
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1563
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1571
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1585
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1591
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1599
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1620
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1630
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1639
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1650
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1656
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 123:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1682
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1687
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 145:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = nil
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = nil
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2008
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2012
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2016
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2123
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2131
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2288
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2437
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2517
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2526
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2542
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2547
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2552
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2575
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = nil
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2659
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2705
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2819
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2855
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2858
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2860
		{
			return helpWith(sqllex, "CREATE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplemented(sqllex, "create cast")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "create operator")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplemented(sqllex, "create publication")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "create rule")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "create server")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2885
		{
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2889
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2893
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			return unimplemented(sqllex, "drop server")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2920
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2921
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3005
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3033
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{

			sqlVAL.union.val = nil
		}
	case 397:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			return helpWith(sqllex, "DELETE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3096
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3121
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3122
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "DROP")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3128
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3180
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3397
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3429
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "DELETE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3451
		{
			return helpWith(sqllex, "INSERT")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "DELETE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "INSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3539
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3580
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3615
		{
			return helpWith(sqllex, "GRANT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3669
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "RESET")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "RESET")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "USE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "USE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3938
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return unimplemented(sqllex, "set from current")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3961
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3969
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3974
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = tree.Low
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = tree.Normal
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = tree.High
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4107
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4154
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4164
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.str = "client_encoding"
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.str = "timezone"
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4209
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4272
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4388
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = true
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = true
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = false
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4590
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = true
		}
	case 795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = false
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = true
		}
	case 805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = false
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4695
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4742
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4746
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4785
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4793
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4830
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4853
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4869
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5009
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5116
		{
			return helpWith(sqllex, "RESUME")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5223
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5265
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5280
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5298
		{

			sqlVAL.union.val = nil
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = nil
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5330
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 903:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5362
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5376
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5391
		{
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5476
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5479
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5482
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5483
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5489
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5505
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5510
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.str = ""
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 956:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5699
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5713
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5724
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5725
		{
		}
	case 980:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5823
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5834
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5851
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5861
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5941
		{
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5943
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5944
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5945
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5946
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6102
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6111
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6119
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6130
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6150
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6155
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6158
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = true
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6223
		{

			sqlVAL.union.val = true
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = false
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6238
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6252
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6264
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6276
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6286
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = nil
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6359
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6377
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6379
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6381
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6385
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6423
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6441
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6460
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6477
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6494
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6498
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = false
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = true
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = false
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = true
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = false
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.str = ""
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6599
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6605
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6675
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6681
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6693
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6699
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6713
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6719
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6737
		{
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6740
		{
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6752
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6770
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6808
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6878
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6905
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6906
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6907
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6927
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6971
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6975
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.str = ""
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.str = ""
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.str = ""
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.str = ""
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7084
		{
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7110
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7128
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7132
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7207
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7208
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7216
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7254
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7473
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7578
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7594
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = true
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = false
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7647
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7648
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = nil
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7662
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = true
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = false
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = false
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = true
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7691
		{
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7692
		{
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7754
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7759
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7788
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7877
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7880
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7881
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7934
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7936
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7951
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7973
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7978
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7983
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8025
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8064
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8074
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8120
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8150
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8183
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8185
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = nil
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = false
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.str = tree.AstFull
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.str = tree.AstRight
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.str = tree.AstInner
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8303
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.str = tree.AstHash
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.str = ""
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8388
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8452
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8460
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8479
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8489
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8509
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8558
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8570
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = types.Geography
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8596
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8604
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8638
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = nil
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = types.Int2
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = types.Int
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = types.Float4
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = types.Float
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8681
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8689
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = types.Bool
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = types.Float
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8730
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8736
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8758
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = types.String
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = true
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = false
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = types.Date
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8815
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8829
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8846
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8863
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = true
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = false
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = false
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = types.Interval
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8887
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = nil
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9016
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9394
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9615
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9665
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9695
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9706
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9707
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9797
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9922
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9927
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9973
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9978
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9993
		{
			return unimplemented(sqllex, "treat")
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10014
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10066
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.str = ""
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10155
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10168
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10265
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = tree.Any
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = tree.Some
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = tree.All
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = tree.Div
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.LT
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = tree.GT
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.LE
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = tree.GE
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = tree.NE
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = tree.Like
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10627
		{
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10780
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10796
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10845
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11036
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11043
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.str = ""
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
