// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:979
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15757

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1905,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	284, 577,
	-2, 0,
	-1, 75,
	8, 1047,
	29, 1047,
	650, 1047,
	651, 1047,
	-2, 0,
	-1, 76,
	8, 1047,
	29, 1047,
	650, 1047,
	651, 1047,
	-2, 0,
	-1, 78,
	1, 1752,
	140, 1752,
	271, 1752,
	359, 1752,
	422, 1752,
	432, 1752,
	631, 1752,
	663, 1752,
	-2, 0,
	-1, 79,
	1, 1752,
	663, 1752,
	-2, 0,
	-1, 85,
	264, 292,
	566, 292,
	-2, 0,
	-1, 99,
	205, 478,
	250, 1626,
	266, 1626,
	284, 478,
	424, 478,
	436, 1369,
	480, 478,
	497, 1369,
	550, 1369,
	579, 478,
	607, 1369,
	-2, 0,
	-1, 106,
	142, 1905,
	259, 1905,
	590, 1905,
	591, 1905,
	-2, 0,
	-1, 124,
	162, 1876,
	183, 1876,
	196, 1876,
	262, 1876,
	298, 1876,
	372, 1876,
	383, 1876,
	585, 1876,
	-2, 1847,
	-1, 167,
	170, 1183,
	282, 1183,
	427, 1144,
	502, 1144,
	549, 1144,
	569, 1183,
	571, 1144,
	-2, 0,
	-1, 172,
	4, 1907,
	21, 1907,
	22, 1907,
	23, 1907,
	24, 1907,
	25, 1907,
	26, 1907,
	27, 1907,
	28, 1907,
	30, 1907,
	31, 1907,
	37, 1907,
	41, 1907,
	43, 1907,
	44, 1907,
	45, 1907,
	47, 1907,
	48, 1907,
	49, 1907,
	50, 1907,
	51, 1907,
	52, 1907,
	53, 1907,
	54, 1907,
	55, 1907,
	57, 1907,
	58, 1907,
	59, 1907,
	60, 1907,
	62, 1907,
	63, 1907,
	64, 1907,
	65, 1907,
	66, 1907,
	67, 1907,
	68, 1907,
	69, 1907,
	73, 1907,
	74, 1907,
	75, 1907,
	76, 1907,
	78, 1907,
	79, 1907,
	80, 1907,
	84, 1907,
	85, 1907,
	86, 1907,
	87, 1907,
	88, 1907,
	89, 1907,
	90, 1907,
	91, 1907,
	94, 1907,
	95, 1907,
	96, 1907,
	97, 1907,
	98, 1907,
	99, 1907,
	101, 1907,
	103, 1907,
	104, 1907,
	105, 1907,
	106, 1907,
	107, 1907,
	108, 1907,
	109, 1907,
	111, 1907,
	112, 1907,
	113, 1907,
	115, 1907,
	116, 1907,
	117, 1907,
	125, 1907,
	126, 1907,
	127, 1907,
	128, 1907,
	129, 1907,
	131, 1907,
	132, 1907,
	133, 1907,
	134, 1907,
	136, 1907,
	137, 1907,
	138, 1907,
	139, 1907,
	141, 1907,
	142, 1907,
	143, 1907,
	144, 1907,
	146, 1907,
	147, 1907,
	148, 1907,
	151, 1907,
	152, 1907,
	153, 1907,
	155, 1907,
	156, 1907,
	157, 1907,
	159, 1907,
	160, 1907,
	161, 1907,
	163, 1907,
	164, 1907,
	165, 1907,
	166, 1907,
	167, 1907,
	168, 1907,
	169, 1907,
	170, 1907,
	171, 1907,
	172, 1907,
	173, 1907,
	174, 1907,
	175, 1907,
	176, 1907,
	177, 1907,
	178, 1907,
	179, 1907,
	180, 1907,
	182, 1907,
	188, 1907,
	189, 1907,
	190, 1907,
	191, 1907,
	195, 1907,
	197, 1907,
	198, 1907,
	199, 1907,
	201, 1907,
	202, 1907,
	205, 1907,
	206, 1907,
	207, 1907,
	208, 1907,
	209, 1907,
	210, 1907,
	211, 1907,
	212, 1907,
	213, 1907,
	214, 1907,
	215, 1907,
	216, 1907,
	217, 1907,
	218, 1907,
	220, 1907,
	221, 1907,
	223, 1907,
	224, 1907,
	226, 1907,
	227, 1907,
	228, 1907,
	229, 1907,
	230, 1907,
	231, 1907,
	232, 1907,
	233, 1907,
	234, 1907,
	235, 1907,
	236, 1907,
	238, 1907,
	239, 1907,
	240, 1907,
	242, 1907,
	243, 1907,
	244, 1907,
	245, 1907,
	246, 1907,
	250, 1907,
	251, 1907,
	252, 1907,
	253, 1907,
	256, 1907,
	257, 1907,
	258, 1907,
	259, 1907,
	260, 1907,
	261, 1907,
	263, 1907,
	265, 1907,
	266, 1907,
	267, 1907,
	269, 1907,
	271, 1907,
	272, 1907,
	273, 1907,
	275, 1907,
	279, 1907,
	280, 1907,
	281, 1907,
	282, 1907,
	283, 1907,
	284, 1907,
	285, 1907,
	287, 1907,
	288, 1907,
	289, 1907,
	291, 1907,
	292, 1907,
	293, 1907,
	295, 1907,
	296, 1907,
	299, 1907,
	300, 1907,
	301, 1907,
	302, 1907,
	303, 1907,
	304, 1907,
	305, 1907,
	308, 1907,
	309, 1907,
	310, 1907,
	311, 1907,
	313, 1907,
	314, 1907,
	315, 1907,
	316, 1907,
	317, 1907,
	318, 1907,
	319, 1907,
	320, 1907,
	321, 1907,
	322, 1907,
	323, 1907,
	324, 1907,
	325, 1907,
	326, 1907,
	327, 1907,
	328, 1907,
	329, 1907,
	330, 1907,
	331, 1907,
	332, 1907,
	333, 1907,
	334, 1907,
	335, 1907,
	337, 1907,
	339, 1907,
	340, 1907,
	341, 1907,
	342, 1907,
	343, 1907,
	344, 1907,
	345, 1907,
	346, 1907,
	347, 1907,
	348, 1907,
	349, 1907,
	350, 1907,
	351, 1907,
	352, 1907,
	353, 1907,
	354, 1907,
	355, 1907,
	357, 1907,
	358, 1907,
	360, 1907,
	362, 1907,
	363, 1907,
	364, 1907,
	365, 1907,
	367, 1907,
	368, 1907,
	369, 1907,
	370, 1907,
	371, 1907,
	374, 1907,
	376, 1907,
	378, 1907,
	379, 1907,
	380, 1907,
	381, 1907,
	384, 1907,
	385, 1907,
	386, 1907,
	388, 1907,
	390, 1907,
	391, 1907,
	392, 1907,
	393, 1907,
	394, 1907,
	395, 1907,
	396, 1907,
	397, 1907,
	398, 1907,
	399, 1907,
	400, 1907,
	401, 1907,
	402, 1907,
	403, 1907,
	405, 1907,
	406, 1907,
	407, 1907,
	408, 1907,
	409, 1907,
	410, 1907,
	411, 1907,
	412, 1907,
	413, 1907,
	414, 1907,
	415, 1907,
	416, 1907,
	417, 1907,
	418, 1907,
	419, 1907,
	421, 1907,
	422, 1907,
	423, 1907,
	425, 1907,
	426, 1907,
	427, 1907,
	428, 1907,
	429, 1907,
	430, 1907,
	431, 1907,
	432, 1907,
	433, 1907,
	434, 1907,
	435, 1907,
	436, 1907,
	437, 1907,
	438, 1907,
	440, 1907,
	442, 1907,
	443, 1907,
	444, 1907,
	450, 1907,
	451, 1907,
	452, 1907,
	454, 1907,
	455, 1907,
	456, 1907,
	457, 1907,
	458, 1907,
	459, 1907,
	460, 1907,
	461, 1907,
	462, 1907,
	463, 1907,
	464, 1907,
	466, 1907,
	467, 1907,
	468, 1907,
	469, 1907,
	470, 1907,
	472, 1907,
	473, 1907,
	474, 1907,
	475, 1907,
	476, 1907,
	477, 1907,
	478, 1907,
	480, 1907,
	481, 1907,
	482, 1907,
	483, 1907,
	484, 1907,
	485, 1907,
	486, 1907,
	487, 1907,
	488, 1907,
	489, 1907,
	490, 1907,
	491, 1907,
	492, 1907,
	493, 1907,
	494, 1907,
	495, 1907,
	497, 1907,
	498, 1907,
	499, 1907,
	500, 1907,
	501, 1907,
	502, 1907,
	504, 1907,
	505, 1907,
	506, 1907,
	507, 1907,
	508, 1907,
	509, 1907,
	510, 1907,
	512, 1907,
	513, 1907,
	514, 1907,
	515, 1907,
	516, 1907,
	517, 1907,
	518, 1907,
	519, 1907,
	521, 1907,
	523, 1907,
	524, 1907,
	525, 1907,
	526, 1907,
	527, 1907,
	528, 1907,
	529, 1907,
	530, 1907,
	531, 1907,
	532, 1907,
	533, 1907,
	534, 1907,
	535, 1907,
	536, 1907,
	537, 1907,
	538, 1907,
	539, 1907,
	540, 1907,
	541, 1907,
	542, 1907,
	543, 1907,
	545, 1907,
	546, 1907,
	548, 1907,
	549, 1907,
	551, 1907,
	552, 1907,
	553, 1907,
	554, 1907,
	555, 1907,
	556, 1907,
	558, 1907,
	559, 1907,
	561, 1907,
	562, 1907,
	563, 1907,
	564, 1907,
	565, 1907,
	567, 1907,
	569, 1907,
	570, 1907,
	571, 1907,
	572, 1907,
	573, 1907,
	574, 1907,
	575, 1907,
	576, 1907,
	578, 1907,
	579, 1907,
	580, 1907,
	581, 1907,
	582, 1907,
	583, 1907,
	584, 1907,
	587, 1907,
	588, 1907,
	589, 1907,
	590, 1907,
	591, 1907,
	592, 1907,
	593, 1907,
	594, 1907,
	596, 1907,
	599, 1907,
	600, 1907,
	601, 1907,
	602, 1907,
	603, 1907,
	604, 1907,
	606, 1907,
	607, 1907,
	608, 1907,
	609, 1907,
	610, 1907,
	611, 1907,
	612, 1907,
	613, 1907,
	614, 1907,
	615, 1907,
	616, 1907,
	617, 1907,
	622, 1907,
	623, 1907,
	624, 1907,
	625, 1907,
	626, 1907,
	627, 1907,
	-2, 0,
	-1, 174,
	1, 1752,
	663, 1752,
	666, 1752,
	-2, 0,
	-1, 175,
	1, 1752,
	566, 1752,
	663, 1752,
	666, 1752,
	-2, 0,
	-1, 211,
	162, 1875,
	183, 1875,
	196, 1875,
	262, 1875,
	298, 1875,
	372, 1875,
	383, 1875,
	585, 1875,
	-2, 1850,
	-1, 272,
	4, 1914,
	5, 1914,
	6, 1914,
	7, 1914,
	8, 1914,
	9, 1914,
	10, 1914,
	21, 1914,
	22, 1914,
	23, 1914,
	24, 1914,
	25, 1914,
	26, 1914,
	27, 1914,
	28, 1914,
	30, 1914,
	31, 1914,
	37, 1914,
	38, 1914,
	41, 1914,
	43, 1914,
	44, 1914,
	45, 1914,
	46, 1914,
	47, 1914,
	48, 1914,
	49, 1914,
	50, 1914,
	51, 1914,
	52, 1914,
	53, 1914,
	54, 1914,
	55, 1914,
	57, 1914,
	58, 1914,
	59, 1914,
	60, 1914,
	62, 1914,
	63, 1914,
	64, 1914,
	65, 1914,
	66, 1914,
	67, 1914,
	68, 1914,
	69, 1914,
	70, 1914,
	71, 1914,
	72, 1914,
	73, 1914,
	74, 1914,
	75, 1914,
	76, 1914,
	78, 1914,
	79, 1914,
	80, 1914,
	82, 1914,
	84, 1914,
	85, 1914,
	86, 1914,
	87, 1914,
	88, 1914,
	89, 1914,
	90, 1914,
	91, 1914,
	94, 1914,
	95, 1914,
	96, 1914,
	97, 1914,
	98, 1914,
	99, 1914,
	101, 1914,
	103, 1914,
	104, 1914,
	105, 1914,
	106, 1914,
	107, 1914,
	108, 1914,
	109, 1914,
	111, 1914,
	112, 1914,
	113, 1914,
	114, 1914,
	115, 1914,
	116, 1914,
	117, 1914,
	118, 1914,
	119, 1914,
	120, 1914,
	121, 1914,
	122, 1914,
	123, 1914,
	124, 1914,
	125, 1914,
	126, 1914,
	127, 1914,
	128, 1914,
	129, 1914,
	130, 1914,
	131, 1914,
	132, 1914,
	133, 1914,
	134, 1914,
	135, 1914,
	136, 1914,
	137, 1914,
	138, 1914,
	139, 1914,
	141, 1914,
	142, 1914,
	143, 1914,
	144, 1914,
	146, 1914,
	147, 1914,
	148, 1914,
	151, 1914,
	152, 1914,
	153, 1914,
	155, 1914,
	156, 1914,
	157, 1914,
	159, 1914,
	160, 1914,
	161, 1914,
	163, 1914,
	164, 1914,
	165, 1914,
	166, 1914,
	167, 1914,
	168, 1914,
	169, 1914,
	170, 1914,
	171, 1914,
	172, 1914,
	173, 1914,
	174, 1914,
	175, 1914,
	176, 1914,
	177, 1914,
	178, 1914,
	179, 1914,
	180, 1914,
	181, 1914,
	182, 1914,
	188, 1914,
	189, 1914,
	190, 1914,
	191, 1914,
	195, 1914,
	197, 1914,
	198, 1914,
	199, 1914,
	201, 1914,
	202, 1914,
	204, 1914,
	205, 1914,
	206, 1914,
	207, 1914,
	208, 1914,
	209, 1914,
	210, 1914,
	211, 1914,
	212, 1914,
	213, 1914,
	214, 1914,
	215, 1914,
	216, 1914,
	217, 1914,
	218, 1914,
	220, 1914,
	221, 1914,
	223, 1914,
	224, 1914,
	226, 1914,
	227, 1914,
	228, 1914,
	229, 1914,
	230, 1914,
	231, 1914,
	232, 1914,
	233, 1914,
	234, 1914,
	235, 1914,
	236, 1914,
	237, 1914,
	238, 1914,
	239, 1914,
	240, 1914,
	242, 1914,
	243, 1914,
	244, 1914,
	245, 1914,
	246, 1914,
	250, 1914,
	251, 1914,
	252, 1914,
	253, 1914,
	255, 1914,
	256, 1914,
	257, 1914,
	258, 1914,
	259, 1914,
	260, 1914,
	261, 1914,
	263, 1914,
	265, 1914,
	266, 1914,
	267, 1914,
	268, 1914,
	269, 1914,
	270, 1914,
	271, 1914,
	272, 1914,
	273, 1914,
	274, 1914,
	275, 1914,
	279, 1914,
	280, 1914,
	281, 1914,
	282, 1914,
	283, 1914,
	284, 1914,
	285, 1914,
	287, 1914,
	288, 1914,
	289, 1914,
	291, 1914,
	292, 1914,
	293, 1914,
	294, 1914,
	295, 1914,
	296, 1914,
	297, 1914,
	299, 1914,
	300, 1914,
	301, 1914,
	302, 1914,
	303, 1914,
	304, 1914,
	305, 1914,
	306, 1914,
	307, 1914,
	308, 1914,
	309, 1914,
	310, 1914,
	311, 1914,
	313, 1914,
	314, 1914,
	315, 1914,
	316, 1914,
	317, 1914,
	318, 1914,
	319, 1914,
	320, 1914,
	321, 1914,
	322, 1914,
	323, 1914,
	324, 1914,
	325, 1914,
	326, 1914,
	327, 1914,
	328, 1914,
	329, 1914,
	330, 1914,
	331, 1914,
	332, 1914,
	333, 1914,
	334, 1914,
	335, 1914,
	337, 1914,
	338, 1914,
	339, 1914,
	340, 1914,
	341, 1914,
	342, 1914,
	343, 1914,
	344, 1914,
	345, 1914,
	346, 1914,
	347, 1914,
	348, 1914,
	349, 1914,
	350, 1914,
	351, 1914,
	352, 1914,
	353, 1914,
	354, 1914,
	355, 1914,
	356, 1914,
	357, 1914,
	358, 1914,
	359, 1914,
	360, 1914,
	361, 1914,
	362, 1914,
	363, 1914,
	364, 1914,
	365, 1914,
	366, 1914,
	367, 1914,
	368, 1914,
	369, 1914,
	370, 1914,
	371, 1914,
	374, 1914,
	376, 1914,
	379, 1914,
	380, 1914,
	381, 1914,
	384, 1914,
	385, 1914,
	386, 1914,
	387, 1914,
	388, 1914,
	389, 1914,
	390, 1914,
	391, 1914,
	392, 1914,
	393, 1914,
	394, 1914,
	395, 1914,
	396, 1914,
	397, 1914,
	398, 1914,
	399, 1914,
	400, 1914,
	401, 1914,
	402, 1914,
	403, 1914,
	405, 1914,
	406, 1914,
	407, 1914,
	408, 1914,
	409, 1914,
	410, 1914,
	411, 1914,
	412, 1914,
	413, 1914,
	414, 1914,
	415, 1914,
	416, 1914,
	417, 1914,
	418, 1914,
	419, 1914,
	421, 1914,
	422, 1914,
	423, 1914,
	425, 1914,
	426, 1914,
	427, 1914,
	428, 1914,
	429, 1914,
	430, 1914,
	431, 1914,
	432, 1914,
	433, 1914,
	434, 1914,
	435, 1914,
	436, 1914,
	437, 1914,
	438, 1914,
	440, 1914,
	442, 1914,
	443, 1914,
	444, 1914,
	450, 1914,
	451, 1914,
	452, 1914,
	454, 1914,
	455, 1914,
	456, 1914,
	457, 1914,
	458, 1914,
	459, 1914,
	460, 1914,
	461, 1914,
	462, 1914,
	463, 1914,
	464, 1914,
	466, 1914,
	467, 1914,
	468, 1914,
	469, 1914,
	470, 1914,
	471, 1914,
	472, 1914,
	473, 1914,
	474, 1914,
	475, 1914,
	476, 1914,
	477, 1914,
	478, 1914,
	480, 1914,
	481, 1914,
	482, 1914,
	483, 1914,
	484, 1914,
	485, 1914,
	486, 1914,
	487, 1914,
	488, 1914,
	489, 1914,
	490, 1914,
	491, 1914,
	492, 1914,
	493, 1914,
	494, 1914,
	495, 1914,
	497, 1914,
	498, 1914,
	499, 1914,
	500, 1914,
	501, 1914,
	502, 1914,
	503, 1914,
	504, 1914,
	505, 1914,
	506, 1914,
	507, 1914,
	508, 1914,
	509, 1914,
	510, 1914,
	511, 1914,
	512, 1914,
	513, 1914,
	514, 1914,
	515, 1914,
	516, 1914,
	517, 1914,
	518, 1914,
	519, 1914,
	521, 1914,
	523, 1914,
	524, 1914,
	525, 1914,
	526, 1914,
	527, 1914,
	528, 1914,
	529, 1914,
	530, 1914,
	531, 1914,
	532, 1914,
	533, 1914,
	534, 1914,
	535, 1914,
	536, 1914,
	537, 1914,
	538, 1914,
	539, 1914,
	540, 1914,
	541, 1914,
	542, 1914,
	543, 1914,
	545, 1914,
	546, 1914,
	547, 1914,
	548, 1914,
	549, 1914,
	551, 1914,
	552, 1914,
	553, 1914,
	554, 1914,
	555, 1914,
	556, 1914,
	558, 1914,
	559, 1914,
	561, 1914,
	562, 1914,
	563, 1914,
	564, 1914,
	565, 1914,
	567, 1914,
	569, 1914,
	570, 1914,
	571, 1914,
	572, 1914,
	573, 1914,
	574, 1914,
	575, 1914,
	576, 1914,
	577, 1914,
	578, 1914,
	579, 1914,
	580, 1914,
	581, 1914,
	582, 1914,
	583, 1914,
	584, 1914,
	586, 1914,
	587, 1914,
	588, 1914,
	589, 1914,
	590, 1914,
	591, 1914,
	592, 1914,
	593, 1914,
	594, 1914,
	595, 1914,
	596, 1914,
	599, 1914,
	600, 1914,
	601, 1914,
	602, 1914,
	603, 1914,
	604, 1914,
	606, 1914,
	607, 1914,
	608, 1914,
	609, 1914,
	610, 1914,
	611, 1914,
	612, 1914,
	613, 1914,
	614, 1914,
	615, 1914,
	616, 1914,
	617, 1914,
	622, 1914,
	623, 1914,
	624, 1914,
	625, 1914,
	626, 1914,
	627, 1914,
	628, 1914,
	643, 1914,
	650, 1914,
	651, 1914,
	652, 1914,
	660, 1914,
	664, 1914,
	-2, 0,
	-1, 851,
	4, 1624,
	21, 1624,
	22, 1624,
	23, 1624,
	24, 1624,
	25, 1624,
	26, 1624,
	27, 1624,
	28, 1624,
	30, 1624,
	31, 1624,
	37, 1624,
	41, 1624,
	43, 1624,
	44, 1624,
	45, 1624,
	47, 1624,
	48, 1624,
	49, 1624,
	50, 1624,
	51, 1624,
	52, 1624,
	53, 1624,
	54, 1624,
	55, 1624,
	57, 1624,
	58, 1624,
	59, 1624,
	60, 1624,
	62, 1624,
	63, 1624,
	64, 1624,
	65, 1624,
	66, 1624,
	67, 1624,
	68, 1624,
	69, 1624,
	73, 1624,
	74, 1624,
	75, 1624,
	76, 1624,
	78, 1624,
	79, 1624,
	80, 1624,
	84, 1624,
	85, 1624,
	86, 1624,
	87, 1624,
	88, 1624,
	89, 1624,
	90, 1624,
	91, 1624,
	94, 1624,
	95, 1624,
	96, 1624,
	97, 1624,
	98, 1624,
	99, 1624,
	101, 1624,
	103, 1624,
	104, 1624,
	105, 1624,
	106, 1624,
	107, 1624,
	108, 1624,
	109, 1624,
	111, 1624,
	112, 1624,
	113, 1624,
	115, 1624,
	116, 1624,
	117, 1624,
	125, 1624,
	126, 1624,
	127, 1624,
	128, 1624,
	129, 1624,
	131, 1624,
	132, 1624,
	133, 1624,
	134, 1624,
	136, 1624,
	137, 1624,
	138, 1624,
	139, 1624,
	141, 1624,
	142, 1624,
	143, 1624,
	144, 1624,
	146, 1624,
	147, 1624,
	148, 1624,
	151, 1624,
	152, 1624,
	153, 1624,
	155, 1624,
	156, 1624,
	157, 1624,
	159, 1624,
	160, 1624,
	161, 1624,
	163, 1624,
	164, 1624,
	165, 1624,
	166, 1624,
	167, 1624,
	168, 1624,
	169, 1624,
	170, 1624,
	171, 1624,
	172, 1624,
	173, 1624,
	174, 1624,
	175, 1624,
	176, 1624,
	177, 1624,
	178, 1624,
	179, 1624,
	180, 1624,
	182, 1624,
	188, 1624,
	189, 1624,
	190, 1624,
	191, 1624,
	195, 1624,
	197, 1624,
	198, 1624,
	199, 1624,
	201, 1624,
	202, 1624,
	205, 1624,
	206, 1624,
	207, 1624,
	208, 1624,
	209, 1624,
	210, 1624,
	211, 1624,
	212, 1624,
	213, 1624,
	214, 1624,
	215, 1624,
	216, 1624,
	217, 1624,
	218, 1624,
	220, 1624,
	221, 1624,
	223, 1624,
	224, 1624,
	226, 1624,
	227, 1624,
	228, 1624,
	229, 1624,
	230, 1624,
	231, 1624,
	232, 1624,
	233, 1624,
	234, 1624,
	235, 1624,
	236, 1624,
	238, 1624,
	239, 1624,
	240, 1624,
	242, 1624,
	243, 1624,
	244, 1624,
	245, 1624,
	246, 1624,
	250, 1624,
	251, 1624,
	252, 1624,
	253, 1624,
	256, 1624,
	257, 1624,
	258, 1624,
	259, 1624,
	260, 1624,
	261, 1624,
	263, 1624,
	265, 1624,
	266, 1624,
	267, 1624,
	269, 1624,
	271, 1624,
	272, 1624,
	273, 1624,
	275, 1624,
	279, 1624,
	280, 1624,
	281, 1624,
	282, 1624,
	283, 1624,
	284, 1624,
	285, 1624,
	287, 1624,
	288, 1624,
	289, 1624,
	291, 1624,
	292, 1624,
	293, 1624,
	295, 1624,
	296, 1624,
	299, 1624,
	300, 1624,
	301, 1624,
	302, 1624,
	303, 1624,
	304, 1624,
	305, 1624,
	308, 1624,
	309, 1624,
	310, 1624,
	311, 1624,
	313, 1624,
	314, 1624,
	315, 1624,
	316, 1624,
	317, 1624,
	318, 1624,
	319, 1624,
	320, 1624,
	321, 1624,
	322, 1624,
	323, 1624,
	324, 1624,
	325, 1624,
	326, 1624,
	327, 1624,
	328, 1624,
	329, 1624,
	330, 1624,
	331, 1624,
	332, 1624,
	333, 1624,
	334, 1624,
	335, 1624,
	337, 1624,
	339, 1624,
	340, 1624,
	341, 1624,
	342, 1624,
	343, 1624,
	344, 1624,
	345, 1624,
	346, 1624,
	347, 1624,
	348, 1624,
	349, 1624,
	350, 1624,
	351, 1624,
	352, 1624,
	353, 1624,
	354, 1624,
	355, 1624,
	357, 1624,
	358, 1624,
	360, 1624,
	362, 1624,
	363, 1624,
	364, 1624,
	365, 1624,
	367, 1624,
	368, 1624,
	369, 1624,
	370, 1624,
	371, 1624,
	374, 1624,
	376, 1624,
	379, 1624,
	380, 1624,
	381, 1624,
	384, 1624,
	385, 1624,
	386, 1624,
	388, 1624,
	390, 1624,
	391, 1624,
	392, 1624,
	393, 1624,
	394, 1624,
	395, 1624,
	396, 1624,
	397, 1624,
	398, 1624,
	399, 1624,
	400, 1624,
	401, 1624,
	402, 1624,
	403, 1624,
	405, 1624,
	406, 1624,
	407, 1624,
	408, 1624,
	409, 1624,
	410, 1624,
	411, 1624,
	412, 1624,
	413, 1624,
	414, 1624,
	415, 1624,
	416, 1624,
	417, 1624,
	418, 1624,
	419, 1624,
	421, 1624,
	422, 1624,
	423, 1624,
	425, 1624,
	426, 1624,
	427, 1624,
	428, 1624,
	429, 1624,
	430, 1624,
	431, 1624,
	432, 1624,
	433, 1624,
	434, 1624,
	435, 1624,
	436, 1624,
	437, 1624,
	438, 1624,
	440, 1624,
	442, 1624,
	443, 1624,
	444, 1624,
	450, 1624,
	451, 1624,
	452, 1624,
	454, 1624,
	455, 1624,
	456, 1624,
	457, 1624,
	458, 1624,
	459, 1624,
	460, 1624,
	461, 1624,
	462, 1624,
	463, 1624,
	464, 1624,
	466, 1624,
	467, 1624,
	468, 1624,
	469, 1624,
	470, 1624,
	472, 1624,
	473, 1624,
	474, 1624,
	475, 1624,
	476, 1624,
	477, 1624,
	478, 1624,
	480, 1624,
	481, 1624,
	482, 1624,
	483, 1624,
	484, 1624,
	485, 1624,
	486, 1624,
	487, 1624,
	488, 1624,
	489, 1624,
	490, 1624,
	491, 1624,
	492, 1624,
	493, 1624,
	494, 1624,
	495, 1624,
	497, 1624,
	498, 1624,
	499, 1624,
	500, 1624,
	501, 1624,
	502, 1624,
	504, 1624,
	505, 1624,
	506, 1624,
	507, 1624,
	508, 1624,
	509, 1624,
	510, 1624,
	512, 1624,
	513, 1624,
	514, 1624,
	515, 1624,
	516, 1624,
	517, 1624,
	518, 1624,
	519, 1624,
	521, 1624,
	523, 1624,
	524, 1624,
	525, 1624,
	526, 1624,
	527, 1624,
	528, 1624,
	529, 1624,
	530, 1624,
	531, 1624,
	532, 1624,
	533, 1624,
	534, 1624,
	535, 1624,
	536, 1624,
	537, 1624,
	538, 1624,
	539, 1624,
	540, 1624,
	541, 1624,
	542, 1624,
	543, 1624,
	545, 1624,
	546, 1624,
	548, 1624,
	549, 1624,
	551, 1624,
	552, 1624,
	553, 1624,
	554, 1624,
	555, 1624,
	556, 1624,
	558, 1624,
	559, 1624,
	561, 1624,
	562, 1624,
	563, 1624,
	564, 1624,
	565, 1624,
	567, 1624,
	569, 1624,
	570, 1624,
	571, 1624,
	572, 1624,
	573, 1624,
	574, 1624,
	575, 1624,
	576, 1624,
	578, 1624,
	579, 1624,
	580, 1624,
	581, 1624,
	582, 1624,
	583, 1624,
	584, 1624,
	587, 1624,
	588, 1624,
	589, 1624,
	590, 1624,
	591, 1624,
	592, 1624,
	593, 1624,
	594, 1624,
	596, 1624,
	599, 1624,
	600, 1624,
	601, 1624,
	602, 1624,
	603, 1624,
	604, 1624,
	606, 1624,
	607, 1624,
	608, 1624,
	609, 1624,
	610, 1624,
	611, 1624,
	612, 1624,
	613, 1624,
	614, 1624,
	615, 1624,
	616, 1624,
	617, 1624,
	622, 1624,
	623, 1624,
	624, 1624,
	625, 1624,
	626, 1624,
	627, 1624,
	-2, 0,
	-1, 870,
	203, 2730,
	566, 2730,
	642, 2730,
	662, 2730,
	-2, 0,
	-1, 871,
	203, 2715,
	566, 2715,
	642, 2715,
	662, 2715,
	-2, 0,
	-1, 873,
	203, 3013,
	566, 3013,
	642, 3013,
	662, 3013,
	-2, 0,
	-1, 876,
	203, 2855,
	566, 2855,
	642, 2855,
	662, 2855,
	-2, 0,
	-1, 877,
	203, 3060,
	566, 3060,
	642, 3060,
	662, 3060,
	-2, 0,
	-1, 885,
	203, 2883,
	566, 2883,
	642, 2883,
	662, 2883,
	-2, 911,
	-1, 901,
	8, 1046,
	29, 1046,
	650, 1046,
	651, 1046,
	-2, 1051,
	-1, 905,
	1, 2788,
	663, 2788,
	666, 2788,
	-2, 1051,
	-1, 906,
	1, 2842,
	663, 2842,
	666, 2842,
	-2, 1051,
	-1, 909,
	1, 2888,
	663, 2888,
	666, 2888,
	-2, 1044,
	-1, 910,
	1, 2945,
	663, 2945,
	666, 2945,
	-2, 1045,
	-1, 911,
	1, 2793,
	663, 2793,
	666, 2793,
	-2, 1048,
	-1, 912,
	1, 2701,
	663, 2701,
	666, 2701,
	-2, 1049,
	-1, 952,
	662, 2658,
	665, 2658,
	-2, 1285,
	-1, 953,
	662, 2660,
	665, 2660,
	-2, 1286,
	-1, 954,
	662, 2659,
	665, 2659,
	-2, 1287,
	-1, 955,
	665, 2582,
	-2, 1288,
	-1, 981,
	196, 326,
	-2, 0,
	-1, 1003,
	46, 2631,
	-2, 0,
	-1, 1004,
	607, 1602,
	-2, 1370,
	-1, 1021,
	4, 2060,
	21, 2060,
	22, 2060,
	23, 2060,
	24, 2060,
	25, 2060,
	26, 2060,
	27, 2060,
	28, 2060,
	30, 2060,
	31, 2060,
	37, 2060,
	41, 2060,
	43, 2060,
	44, 2060,
	45, 2060,
	47, 2060,
	48, 2060,
	49, 2060,
	50, 2060,
	51, 2060,
	52, 2060,
	53, 2060,
	54, 2060,
	55, 2060,
	57, 2060,
	58, 2060,
	59, 2060,
	60, 2060,
	62, 2060,
	63, 2060,
	64, 2060,
	65, 2060,
	66, 2060,
	67, 2060,
	68, 2060,
	69, 2060,
	73, 2060,
	74, 2060,
	75, 2060,
	76, 2060,
	78, 2060,
	79, 2060,
	80, 2060,
	84, 2060,
	85, 2060,
	86, 2060,
	87, 2060,
	88, 2060,
	89, 2060,
	90, 2060,
	91, 2060,
	94, 2060,
	95, 2060,
	96, 2060,
	97, 2060,
	98, 2060,
	99, 2060,
	101, 2060,
	103, 2060,
	104, 2060,
	105, 2060,
	106, 2060,
	107, 2060,
	108, 2060,
	109, 2060,
	111, 2060,
	112, 2060,
	113, 2060,
	115, 2060,
	116, 2060,
	117, 2060,
	125, 2060,
	126, 2060,
	127, 2060,
	128, 2060,
	129, 2060,
	131, 2060,
	132, 2060,
	133, 2060,
	134, 2060,
	136, 2060,
	137, 2060,
	138, 2060,
	139, 2060,
	141, 2060,
	142, 2060,
	143, 2060,
	144, 2060,
	146, 2060,
	147, 2060,
	148, 2060,
	151, 2060,
	152, 2060,
	153, 2060,
	155, 2060,
	156, 2060,
	157, 2060,
	159, 2060,
	160, 2060,
	161, 2060,
	163, 2060,
	164, 2060,
	165, 2060,
	166, 2060,
	167, 2060,
	168, 2060,
	169, 2060,
	170, 2060,
	171, 2060,
	172, 2060,
	173, 2060,
	174, 2060,
	175, 2060,
	176, 2060,
	177, 2060,
	178, 2060,
	179, 2060,
	180, 2060,
	182, 2060,
	188, 2060,
	189, 2060,
	190, 2060,
	191, 2060,
	195, 2060,
	197, 2060,
	198, 2060,
	199, 2060,
	201, 2060,
	202, 2060,
	205, 2060,
	206, 2060,
	207, 2060,
	208, 2060,
	209, 2060,
	210, 2060,
	211, 2060,
	212, 2060,
	213, 2060,
	214, 2060,
	215, 2060,
	216, 2060,
	217, 2060,
	218, 2060,
	220, 2060,
	221, 2060,
	223, 2060,
	224, 2060,
	226, 2060,
	227, 2060,
	228, 2060,
	229, 2060,
	230, 2060,
	231, 2060,
	232, 2060,
	233, 2060,
	234, 2060,
	235, 2060,
	236, 2060,
	238, 2060,
	239, 2060,
	240, 2060,
	242, 2060,
	243, 2060,
	244, 2060,
	245, 2060,
	246, 2060,
	250, 2060,
	251, 2060,
	252, 2060,
	253, 2060,
	256, 2060,
	257, 2060,
	258, 2060,
	259, 2060,
	260, 2060,
	261, 2060,
	263, 2060,
	265, 2060,
	266, 2060,
	267, 2060,
	269, 2060,
	271, 2060,
	272, 2060,
	273, 2060,
	275, 2060,
	279, 2060,
	280, 2060,
	281, 2060,
	282, 2060,
	283, 2060,
	284, 2060,
	285, 2060,
	287, 2060,
	288, 2060,
	289, 2060,
	291, 2060,
	292, 2060,
	293, 2060,
	295, 2060,
	296, 2060,
	299, 2060,
	300, 2060,
	301, 2060,
	302, 2060,
	303, 2060,
	304, 2060,
	305, 2060,
	308, 2060,
	309, 2060,
	310, 2060,
	311, 2060,
	313, 2060,
	314, 2060,
	315, 2060,
	316, 2060,
	317, 2060,
	318, 2060,
	319, 2060,
	320, 2060,
	321, 2060,
	322, 2060,
	323, 2060,
	324, 2060,
	325, 2060,
	326, 2060,
	327, 2060,
	328, 2060,
	329, 2060,
	330, 2060,
	331, 2060,
	332, 2060,
	333, 2060,
	334, 2060,
	335, 2060,
	337, 2060,
	339, 2060,
	340, 2060,
	341, 2060,
	342, 2060,
	343, 2060,
	344, 2060,
	345, 2060,
	346, 2060,
	347, 2060,
	348, 2060,
	349, 2060,
	350, 2060,
	351, 2060,
	352, 2060,
	353, 2060,
	354, 2060,
	355, 2060,
	357, 2060,
	358, 2060,
	360, 2060,
	362, 2060,
	363, 2060,
	364, 2060,
	365, 2060,
	367, 2060,
	368, 2060,
	369, 2060,
	370, 2060,
	371, 2060,
	374, 2060,
	376, 2060,
	379, 2060,
	380, 2060,
	381, 2060,
	384, 2060,
	385, 2060,
	386, 2060,
	388, 2060,
	390, 2060,
	391, 2060,
	392, 2060,
	393, 2060,
	394, 2060,
	395, 2060,
	396, 2060,
	397, 2060,
	398, 2060,
	399, 2060,
	400, 2060,
	401, 2060,
	402, 2060,
	403, 2060,
	405, 2060,
	406, 2060,
	407, 2060,
	408, 2060,
	409, 2060,
	410, 2060,
	411, 2060,
	412, 2060,
	413, 2060,
	414, 2060,
	415, 2060,
	416, 2060,
	417, 2060,
	418, 2060,
	419, 2060,
	421, 2060,
	422, 2060,
	423, 2060,
	425, 2060,
	426, 2060,
	427, 2060,
	428, 2060,
	429, 2060,
	430, 2060,
	431, 2060,
	432, 2060,
	433, 2060,
	434, 2060,
	435, 2060,
	436, 2060,
	437, 2060,
	438, 2060,
	440, 2060,
	442, 2060,
	443, 2060,
	444, 2060,
	450, 2060,
	451, 2060,
	452, 2060,
	454, 2060,
	455, 2060,
	456, 2060,
	457, 2060,
	458, 2060,
	459, 2060,
	460, 2060,
	461, 2060,
	462, 2060,
	463, 2060,
	464, 2060,
	466, 2060,
	467, 2060,
	468, 2060,
	469, 2060,
	470, 2060,
	472, 2060,
	473, 2060,
	474, 2060,
	475, 2060,
	476, 2060,
	477, 2060,
	478, 2060,
	480, 2060,
	481, 2060,
	482, 2060,
	483, 2060,
	484, 2060,
	485, 2060,
	486, 2060,
	487, 2060,
	488, 2060,
	489, 2060,
	490, 2060,
	491, 2060,
	492, 2060,
	493, 2060,
	494, 2060,
	495, 2060,
	497, 2060,
	498, 2060,
	499, 2060,
	500, 2060,
	501, 2060,
	502, 2060,
	504, 2060,
	505, 2060,
	506, 2060,
	507, 2060,
	508, 2060,
	509, 2060,
	510, 2060,
	512, 2060,
	513, 2060,
	514, 2060,
	515, 2060,
	516, 2060,
	517, 2060,
	518, 2060,
	519, 2060,
	521, 2060,
	523, 2060,
	524, 2060,
	525, 2060,
	526, 2060,
	527, 2060,
	528, 2060,
	529, 2060,
	530, 2060,
	531, 2060,
	532, 2060,
	533, 2060,
	534, 2060,
	535, 2060,
	536, 2060,
	537, 2060,
	538, 2060,
	539, 2060,
	540, 2060,
	541, 2060,
	542, 2060,
	543, 2060,
	545, 2060,
	546, 2060,
	548, 2060,
	549, 2060,
	551, 2060,
	552, 2060,
	553, 2060,
	554, 2060,
	555, 2060,
	556, 2060,
	558, 2060,
	559, 2060,
	561, 2060,
	562, 2060,
	563, 2060,
	564, 2060,
	565, 2060,
	567, 2060,
	569, 2060,
	570, 2060,
	571, 2060,
	572, 2060,
	573, 2060,
	574, 2060,
	575, 2060,
	576, 2060,
	578, 2060,
	579, 2060,
	580, 2060,
	581, 2060,
	582, 2060,
	583, 2060,
	584, 2060,
	587, 2060,
	588, 2060,
	589, 2060,
	590, 2060,
	591, 2060,
	592, 2060,
	593, 2060,
	594, 2060,
	596, 2060,
	599, 2060,
	600, 2060,
	601, 2060,
	602, 2060,
	603, 2060,
	604, 2060,
	606, 2060,
	607, 2060,
	608, 2060,
	609, 2060,
	610, 2060,
	611, 2060,
	612, 2060,
	613, 2060,
	614, 2060,
	615, 2060,
	616, 2060,
	617, 2060,
	622, 2060,
	623, 2060,
	624, 2060,
	625, 2060,
	626, 2060,
	627, 2060,
	-2, 0,
	-1, 1032,
	284, 577,
	-2, 0,
	-1, 1111,
	203, 1091,
	-2, 0,
	-1, 1112,
	427, 1145,
	502, 1145,
	549, 1145,
	571, 1145,
	-2, 0,
	-1, 1113,
	427, 1144,
	502, 1144,
	549, 1144,
	571, 1144,
	-2, 1064,
	-1, 1117,
	1, 1197,
	659, 1197,
	661, 1197,
	663, 1197,
	666, 1197,
	-2, 0,
	-1, 1119,
	1, 1119,
	659, 1119,
	661, 1119,
	663, 1119,
	666, 1119,
	-2, 0,
	-1, 1120,
	1, 1123,
	659, 1123,
	661, 1123,
	663, 1123,
	666, 1123,
	-2, 0,
	-1, 1121,
	1, 1274,
	196, 1274,
	659, 1274,
	661, 1274,
	663, 1274,
	666, 1274,
	-2, 0,
	-1, 1129,
	1, 1150,
	659, 1150,
	661, 1150,
	663, 1150,
	666, 1150,
	-2, 0,
	-1, 1136,
	1, 1197,
	659, 1197,
	661, 1197,
	663, 1197,
	666, 1197,
	-2, 0,
	-1, 1137,
	1, 1199,
	659, 1199,
	661, 1199,
	663, 1199,
	666, 1199,
	-2, 0,
	-1, 1138,
	1, 1202,
	659, 1202,
	661, 1202,
	663, 1202,
	666, 1202,
	-2, 0,
	-1, 1146,
	1, 1237,
	659, 1237,
	661, 1237,
	663, 1237,
	666, 1237,
	-2, 0,
	-1, 1147,
	1, 1239,
	659, 1239,
	661, 1239,
	663, 1239,
	666, 1239,
	-2, 0,
	-1, 1152,
	1, 1267,
	659, 1267,
	661, 1267,
	663, 1267,
	666, 1267,
	-2, 0,
	-1, 1204,
	183, 1918,
	196, 1918,
	298, 1918,
	372, 1918,
	-2, 1854,
	-1, 1220,
	183, 1917,
	196, 1917,
	298, 1917,
	372, 1917,
	-2, 1851,
	-1, 1249,
	662, 2657,
	-2, 919,
	-1, 1278,
	5, 2649,
	660, 2647,
	-2, 2638,
	-1, 1286,
	5, 2670,
	660, 2667,
	-2, 2658,
	-1, 1287,
	5, 2671,
	660, 2668,
	-2, 2659,
	-1, 1295,
	662, 2655,
	-2, 2637,
	-1, 1296,
	660, 3174,
	-2, 2656,
	-1, 1319,
	5, 2672,
	38, 2672,
	135, 2672,
	642, 2672,
	658, 2672,
	661, 2672,
	662, 2672,
	665, 2672,
	-2, 3173,
	-1, 1320,
	5, 2135,
	-2, 3143,
	-1, 1321,
	5, 2136,
	-2, 3144,
	-1, 1322,
	5, 2137,
	-2, 3159,
	-1, 1323,
	5, 2138,
	-2, 3121,
	-1, 1324,
	5, 2139,
	-2, 3156,
	-1, 1325,
	5, 2147,
	-2, 3134,
	-1, 1326,
	5, 2134,
	-2, 3130,
	-1, 1327,
	5, 2134,
	-2, 3129,
	-1, 1328,
	5, 2134,
	-2, 3149,
	-1, 1329,
	5, 2145,
	-2, 3123,
	-1, 1330,
	5, 2150,
	-2, 3122,
	-1, 1331,
	5, 2152,
	-2, 3169,
	-1, 1334,
	5, 2174,
	-2, 3162,
	-1, 1335,
	5, 2166,
	-2, 3163,
	-1, 1336,
	5, 2174,
	-2, 3164,
	-1, 1337,
	5, 2170,
	-2, 3165,
	-1, 1338,
	5, 2120,
	-2, 3135,
	-1, 1339,
	5, 2121,
	-2, 3136,
	-1, 1340,
	5, 2122,
	-2, 3124,
	-1, 1368,
	5, 2157,
	-2, 3170,
	-1, 1369,
	5, 2158,
	-2, 3160,
	-1, 1370,
	5, 2159,
	608, 2159,
	-2, 3125,
	-1, 1371,
	5, 2160,
	608, 2160,
	-2, 3126,
	-1, 1409,
	660, 2667,
	-2, 2658,
	-1, 1410,
	660, 2668,
	-2, 2659,
	-1, 1519,
	203, 3060,
	566, 3060,
	642, 3060,
	662, 3060,
	-2, 0,
	-1, 1524,
	1, 895,
	663, 895,
	666, 895,
	-2, 1760,
	-1, 1571,
	1, 1755,
	663, 1755,
	666, 1755,
	-2, 1760,
	-1, 1673,
	392, 2632,
	454, 2632,
	504, 2632,
	652, 2632,
	-2, 2620,
	-1, 1679,
	203, 167,
	291, 167,
	357, 167,
	617, 167,
	-2, 3055,
	-1, 1680,
	203, 168,
	291, 168,
	357, 168,
	617, 168,
	-2, 2778,
	-1, 1681,
	203, 169,
	291, 169,
	357, 169,
	617, 169,
	-2, 2968,
	-1, 1687,
	664, 2632,
	-2, 2634,
	-1, 1690,
	25, 2992,
	241, 2992,
	-2, 0,
	-1, 1712,
	1, 1599,
	459, 1553,
	504, 1553,
	634, 1553,
	639, 1553,
	659, 1599,
	661, 1599,
	663, 1599,
	666, 1599,
	-2, 1903,
	-1, 1718,
	219, 1699,
	241, 1699,
	470, 1699,
	-2, 0,
	-1, 1786,
	46, 2630,
	-2, 1332,
	-1, 1793,
	1, 1599,
	659, 1599,
	661, 1599,
	663, 1599,
	666, 1599,
	-2, 1903,
	-1, 1796,
	436, 1369,
	607, 1369,
	-2, 477,
	-1, 1802,
	4, 1624,
	21, 1624,
	22, 1624,
	23, 1624,
	24, 1624,
	25, 1624,
	26, 1624,
	27, 1624,
	28, 1624,
	30, 1624,
	31, 1624,
	37, 1624,
	41, 1624,
	43, 1624,
	44, 1624,
	45, 1624,
	47, 1624,
	48, 1624,
	49, 1624,
	50, 1624,
	51, 1624,
	52, 1624,
	53, 1624,
	54, 1624,
	55, 1624,
	57, 1624,
	58, 1624,
	59, 1624,
	60, 1624,
	62, 1624,
	63, 1624,
	64, 1624,
	65, 1624,
	66, 1624,
	67, 1624,
	68, 1624,
	69, 1624,
	73, 1624,
	74, 1624,
	75, 1624,
	76, 1624,
	78, 1624,
	79, 1624,
	80, 1624,
	84, 1624,
	85, 1624,
	86, 1624,
	87, 1624,
	88, 1624,
	89, 1624,
	90, 1624,
	91, 1624,
	94, 1624,
	95, 1624,
	96, 1624,
	97, 1624,
	98, 1624,
	99, 1624,
	101, 1624,
	103, 1624,
	104, 1624,
	105, 1624,
	106, 1624,
	107, 1624,
	108, 1624,
	109, 1624,
	111, 1624,
	112, 1624,
	113, 1624,
	115, 1624,
	116, 1624,
	117, 1624,
	125, 1624,
	126, 1624,
	127, 1624,
	128, 1624,
	129, 1624,
	131, 1624,
	132, 1624,
	133, 1624,
	134, 1624,
	136, 1624,
	137, 1624,
	138, 1624,
	139, 1624,
	141, 1624,
	142, 1624,
	143, 1624,
	144, 1624,
	146, 1624,
	147, 1624,
	148, 1624,
	151, 1624,
	152, 1624,
	153, 1624,
	155, 1624,
	156, 1624,
	157, 1624,
	159, 1624,
	160, 1624,
	161, 1624,
	163, 1624,
	164, 1624,
	165, 1624,
	166, 1624,
	167, 1624,
	168, 1624,
	169, 1624,
	170, 1624,
	171, 1624,
	172, 1624,
	173, 1624,
	174, 1624,
	175, 1624,
	176, 1624,
	177, 1624,
	178, 1624,
	179, 1624,
	180, 1624,
	188, 1624,
	189, 1624,
	190, 1624,
	191, 1624,
	195, 1624,
	197, 1624,
	198, 1624,
	199, 1624,
	201, 1624,
	202, 1624,
	205, 1624,
	206, 1624,
	207, 1624,
	208, 1624,
	209, 1624,
	210, 1624,
	211, 1624,
	212, 1624,
	213, 1624,
	214, 1624,
	215, 1624,
	216, 1624,
	217, 1624,
	218, 1624,
	220, 1624,
	221, 1624,
	223, 1624,
	224, 1624,
	226, 1624,
	227, 1624,
	228, 1624,
	229, 1624,
	230, 1624,
	231, 1624,
	232, 1624,
	233, 1624,
	234, 1624,
	235, 1624,
	236, 1624,
	238, 1624,
	239, 1624,
	240, 1624,
	242, 1624,
	243, 1624,
	244, 1624,
	245, 1624,
	246, 1624,
	251, 1624,
	252, 1624,
	253, 1624,
	256, 1624,
	257, 1624,
	258, 1624,
	259, 1624,
	260, 1624,
	261, 1624,
	263, 1624,
	265, 1624,
	266, 1624,
	267, 1624,
	269, 1624,
	271, 1624,
	272, 1624,
	273, 1624,
	275, 1624,
	279, 1624,
	280, 1624,
	281, 1624,
	282, 1624,
	283, 1624,
	284, 1624,
	285, 1624,
	287, 1624,
	288, 1624,
	289, 1624,
	291, 1624,
	292, 1624,
	293, 1624,
	295, 1624,
	296, 1624,
	299, 1624,
	300, 1624,
	301, 1624,
	302, 1624,
	303, 1624,
	304, 1624,
	305, 1624,
	308, 1624,
	309, 1624,
	310, 1624,
	311, 1624,
	313, 1624,
	314, 1624,
	315, 1624,
	316, 1624,
	317, 1624,
	318, 1624,
	319, 1624,
	320, 1624,
	321, 1624,
	322, 1624,
	323, 1624,
	324, 1624,
	325, 1624,
	326, 1624,
	327, 1624,
	328, 1624,
	329, 1624,
	330, 1624,
	331, 1624,
	332, 1624,
	333, 1624,
	334, 1624,
	335, 1624,
	337, 1624,
	339, 1624,
	340, 1624,
	341, 1624,
	342, 1624,
	343, 1624,
	344, 1624,
	345, 1624,
	346, 1624,
	347, 1624,
	348, 1624,
	349, 1624,
	350, 1624,
	351, 1624,
	352, 1624,
	353, 1624,
	354, 1624,
	355, 1624,
	357, 1624,
	358, 1624,
	362, 1624,
	363, 1624,
	364, 1624,
	365, 1624,
	367, 1624,
	368, 1624,
	369, 1624,
	370, 1624,
	371, 1624,
	374, 1624,
	376, 1624,
	377, 1624,
	379, 1624,
	380, 1624,
	381, 1624,
	384, 1624,
	385, 1624,
	386, 1624,
	388, 1624,
	390, 1624,
	391, 1624,
	392, 1624,
	393, 1624,
	394, 1624,
	395, 1624,
	396, 1624,
	397, 1624,
	398, 1624,
	399, 1624,
	400, 1624,
	401, 1624,
	402, 1624,
	403, 1624,
	405, 1624,
	406, 1624,
	407, 1624,
	408, 1624,
	409, 1624,
	410, 1624,
	411, 1624,
	412, 1624,
	413, 1624,
	414, 1624,
	415, 1624,
	416, 1624,
	417, 1624,
	418, 1624,
	419, 1624,
	421, 1624,
	422, 1624,
	423, 1624,
	425, 1624,
	426, 1624,
	427, 1624,
	428, 1624,
	429, 1624,
	430, 1624,
	431, 1624,
	432, 1624,
	433, 1624,
	434, 1624,
	435, 1624,
	436, 1624,
	437, 1624,
	438, 1624,
	440, 1624,
	442, 1624,
	443, 1624,
	444, 1624,
	450, 1624,
	451, 1624,
	452, 1624,
	454, 1624,
	455, 1624,
	456, 1624,
	457, 1624,
	458, 1624,
	459, 1624,
	460, 1624,
	461, 1624,
	462, 1624,
	463, 1624,
	464, 1624,
	466, 1624,
	467, 1624,
	468, 1624,
	469, 1624,
	470, 1624,
	472, 1624,
	473, 1624,
	474, 1624,
	475, 1624,
	476, 1624,
	477, 1624,
	478, 1624,
	480, 1624,
	481, 1624,
	482, 1624,
	483, 1624,
	484, 1624,
	485, 1624,
	486, 1624,
	487, 1624,
	488, 1624,
	489, 1624,
	490, 1624,
	491, 1624,
	492, 1624,
	493, 1624,
	494, 1624,
	495, 1624,
	497, 1624,
	498, 1624,
	499, 1624,
	500, 1624,
	501, 1624,
	502, 1624,
	504, 1624,
	505, 1624,
	506, 1624,
	507, 1624,
	508, 1624,
	509, 1624,
	510, 1624,
	512, 1624,
	513, 1624,
	514, 1624,
	515, 1624,
	516, 1624,
	517, 1624,
	518, 1624,
	519, 1624,
	521, 1624,
	523, 1624,
	524, 1624,
	525, 1624,
	526, 1624,
	527, 1624,
	528, 1624,
	529, 1624,
	530, 1624,
	531, 1624,
	532, 1624,
	533, 1624,
	534, 1624,
	535, 1624,
	536, 1624,
	537, 1624,
	538, 1624,
	539, 1624,
	540, 1624,
	541, 1624,
	542, 1624,
	543, 1624,
	545, 1624,
	546, 1624,
	548, 1624,
	549, 1624,
	551, 1624,
	552, 1624,
	553, 1624,
	554, 1624,
	555, 1624,
	556, 1624,
	558, 1624,
	559, 1624,
	561, 1624,
	562, 1624,
	563, 1624,
	564, 1624,
	565, 1624,
	567, 1624,
	569, 1624,
	570, 1624,
	571, 1624,
	572, 1624,
	573, 1624,
	574, 1624,
	575, 1624,
	576, 1624,
	578, 1624,
	579, 1624,
	580, 1624,
	581, 1624,
	582, 1624,
	583, 1624,
	584, 1624,
	587, 1624,
	588, 1624,
	589, 1624,
	590, 1624,
	591, 1624,
	592, 1624,
	593, 1624,
	594, 1624,
	596, 1624,
	599, 1624,
	600, 1624,
	601, 1624,
	602, 1624,
	603, 1624,
	604, 1624,
	606, 1624,
	607, 1624,
	608, 1624,
	609, 1624,
	610, 1624,
	611, 1624,
	612, 1624,
	613, 1624,
	614, 1624,
	615, 1624,
	616, 1624,
	617, 1624,
	622, 1624,
	623, 1624,
	624, 1624,
	625, 1624,
	626, 1624,
	627, 1624,
	-2, 0,
	-1, 1825,
	1, 721,
	659, 721,
	661, 721,
	663, 721,
	666, 721,
	-2, 1874,
	-1, 1828,
	4, 3168,
	11, 3168,
	12, 3168,
	14, 3168,
	15, 3168,
	16, 3168,
	17, 3168,
	18, 3168,
	19, 3168,
	21, 3168,
	22, 3168,
	23, 3168,
	24, 3168,
	25, 3168,
	26, 3168,
	27, 3168,
	28, 3168,
	30, 3168,
	31, 3168,
	34, 3168,
	35, 3168,
	37, 3168,
	39, 3168,
	41, 3168,
	43, 3168,
	44, 3168,
	45, 3168,
	47, 3168,
	48, 3168,
	49, 3168,
	50, 3168,
	51, 3168,
	52, 3168,
	53, 3168,
	54, 3168,
	55, 3168,
	57, 3168,
	58, 3168,
	59, 3168,
	60, 3168,
	62, 3168,
	63, 3168,
	64, 3168,
	65, 3168,
	66, 3168,
	67, 3168,
	68, 3168,
	69, 3168,
	72, 3168,
	73, 3168,
	74, 3168,
	75, 3168,
	76, 3168,
	78, 3168,
	79, 3168,
	80, 3168,
	81, 3168,
	84, 3168,
	85, 3168,
	86, 3168,
	87, 3168,
	88, 3168,
	89, 3168,
	90, 3168,
	91, 3168,
	92, 3168,
	94, 3168,
	95, 3168,
	96, 3168,
	97, 3168,
	98, 3168,
	99, 3168,
	101, 3168,
	102, 3168,
	103, 3168,
	104, 3168,
	105, 3168,
	106, 3168,
	107, 3168,
	108, 3168,
	109, 3168,
	111, 3168,
	112, 3168,
	113, 3168,
	114, 3168,
	115, 3168,
	116, 3168,
	117, 3168,
	125, 3168,
	126, 3168,
	127, 3168,
	128, 3168,
	129, 3168,
	131, 3168,
	132, 3168,
	133, 3168,
	134, 3168,
	136, 3168,
	137, 3168,
	138, 3168,
	139, 3168,
	141, 3168,
	142, 3168,
	143, 3168,
	144, 3168,
	146, 3168,
	147, 3168,
	148, 3168,
	151, 3168,
	152, 3168,
	153, 3168,
	155, 3168,
	156, 3168,
	157, 3168,
	159, 3168,
	160, 3168,
	161, 3168,
	163, 3168,
	164, 3168,
	165, 3168,
	166, 3168,
	167, 3168,
	168, 3168,
	169, 3168,
	170, 3168,
	171, 3168,
	172, 3168,
	173, 3168,
	174, 3168,
	175, 3168,
	176, 3168,
	177, 3168,
	178, 3168,
	179, 3168,
	180, 3168,
	184, 3168,
	185, 3168,
	186, 3168,
	187, 3168,
	188, 3168,
	189, 3168,
	190, 3168,
	191, 3168,
	194, 3168,
	195, 3168,
	197, 3168,
	198, 3168,
	199, 3168,
	201, 3168,
	202, 3168,
	204, 3168,
	205, 3168,
	206, 3168,
	207, 3168,
	208, 3168,
	209, 3168,
	210, 3168,
	211, 3168,
	212, 3168,
	213, 3168,
	214, 3168,
	215, 3168,
	216, 3168,
	217, 3168,
	218, 3168,
	220, 3168,
	221, 3168,
	223, 3168,
	224, 3168,
	226, 3168,
	227, 3168,
	228, 3168,
	229, 3168,
	230, 3168,
	231, 3168,
	232, 3168,
	233, 3168,
	234, 3168,
	235, 3168,
	236, 3168,
	237, 3168,
	238, 3168,
	239, 3168,
	240, 3168,
	241, 3168,
	242, 3168,
	243, 3168,
	244, 3168,
	245, 3168,
	246, 3168,
	248, 3168,
	249, 3168,
	251, 3168,
	252, 3168,
	253, 3168,
	255, 3168,
	256, 3168,
	257, 3168,
	258, 3168,
	259, 3168,
	260, 3168,
	261, 3168,
	263, 3168,
	265, 3168,
	266, 3168,
	267, 3168,
	268, 3168,
	269, 3168,
	270, 3168,
	271, 3168,
	272, 3168,
	273, 3168,
	274, 3168,
	275, 3168,
	277, 3168,
	278, 3168,
	279, 3168,
	280, 3168,
	281, 3168,
	282, 3168,
	283, 3168,
	284, 3168,
	285, 3168,
	287, 3168,
	288, 3168,
	289, 3168,
	291, 3168,
	292, 3168,
	293, 3168,
	294, 3168,
	295, 3168,
	296, 3168,
	297, 3168,
	299, 3168,
	300, 3168,
	301, 3168,
	302, 3168,
	303, 3168,
	304, 3168,
	305, 3168,
	308, 3168,
	309, 3168,
	310, 3168,
	311, 3168,
	312, 3168,
	313, 3168,
	314, 3168,
	315, 3168,
	316, 3168,
	317, 3168,
	318, 3168,
	319, 3168,
	320, 3168,
	321, 3168,
	322, 3168,
	323, 3168,
	324, 3168,
	325, 3168,
	326, 3168,
	327, 3168,
	328, 3168,
	329, 3168,
	330, 3168,
	331, 3168,
	332, 3168,
	333, 3168,
	334, 3168,
	335, 3168,
	337, 3168,
	338, 3168,
	339, 3168,
	340, 3168,
	341, 3168,
	342, 3168,
	343, 3168,
	344, 3168,
	345, 3168,
	346, 3168,
	347, 3168,
	348, 3168,
	349, 3168,
	350, 3168,
	351, 3168,
	352, 3168,
	353, 3168,
	354, 3168,
	355, 3168,
	357, 3168,
	358, 3168,
	361, 3168,
	362, 3168,
	363, 3168,
	364, 3168,
	365, 3168,
	367, 3168,
	368, 3168,
	369, 3168,
	370, 3168,
	371, 3168,
	374, 3168,
	376, 3168,
	379, 3168,
	380, 3168,
	381, 3168,
	382, 3168,
	384, 3168,
	385, 3168,
	386, 3168,
	388, 3168,
	390, 3168,
	391, 3168,
	392, 3168,
	393, 3168,
	394, 3168,
	395, 3168,
	396, 3168,
	397, 3168,
	398, 3168,
	399, 3168,
	400, 3168,
	401, 3168,
	402, 3168,
	403, 3168,
	405, 3168,
	406, 3168,
	407, 3168,
	408, 3168,
	409, 3168,
	410, 3168,
	411, 3168,
	412, 3168,
	413, 3168,
	414, 3168,
	415, 3168,
	416, 3168,
	417, 3168,
	418, 3168,
	419, 3168,
	421, 3168,
	422, 3168,
	423, 3168,
	425, 3168,
	426, 3168,
	427, 3168,
	428, 3168,
	429, 3168,
	430, 3168,
	431, 3168,
	432, 3168,
	433, 3168,
	434, 3168,
	435, 3168,
	436, 3168,
	437, 3168,
	438, 3168,
	440, 3168,
	442, 3168,
	443, 3168,
	444, 3168,
	450, 3168,
	451, 3168,
	452, 3168,
	453, 3168,
	454, 3168,
	455, 3168,
	456, 3168,
	457, 3168,
	458, 3168,
	459, 3168,
	460, 3168,
	461, 3168,
	462, 3168,
	463, 3168,
	464, 3168,
	466, 3168,
	467, 3168,
	468, 3168,
	469, 3168,
	470, 3168,
	471, 3168,
	472, 3168,
	473, 3168,
	474, 3168,
	475, 3168,
	476, 3168,
	477, 3168,
	478, 3168,
	479, 3168,
	480, 3168,
	481, 3168,
	482, 3168,
	483, 3168,
	484, 3168,
	485, 3168,
	486, 3168,
	487, 3168,
	488, 3168,
	489, 3168,
	490, 3168,
	491, 3168,
	492, 3168,
	493, 3168,
	494, 3168,
	495, 3168,
	497, 3168,
	498, 3168,
	499, 3168,
	500, 3168,
	501, 3168,
	502, 3168,
	504, 3168,
	505, 3168,
	506, 3168,
	507, 3168,
	508, 3168,
	509, 3168,
	510, 3168,
	511, 3168,
	512, 3168,
	513, 3168,
	514, 3168,
	515, 3168,
	516, 3168,
	517, 3168,
	518, 3168,
	519, 3168,
	521, 3168,
	523, 3168,
	524, 3168,
	525, 3168,
	526, 3168,
	527, 3168,
	528, 3168,
	529, 3168,
	530, 3168,
	531, 3168,
	532, 3168,
	533, 3168,
	534, 3168,
	535, 3168,
	536, 3168,
	537, 3168,
	538, 3168,
	539, 3168,
	540, 3168,
	541, 3168,
	542, 3168,
	543, 3168,
	545, 3168,
	546, 3168,
	547, 3168,
	548, 3168,
	549, 3168,
	551, 3168,
	552, 3168,
	553, 3168,
	554, 3168,
	555, 3168,
	556, 3168,
	558, 3168,
	559, 3168,
	561, 3168,
	562, 3168,
	563, 3168,
	564, 3168,
	565, 3168,
	567, 3168,
	569, 3168,
	570, 3168,
	571, 3168,
	572, 3168,
	573, 3168,
	574, 3168,
	575, 3168,
	576, 3168,
	578, 3168,
	579, 3168,
	580, 3168,
	581, 3168,
	582, 3168,
	583, 3168,
	584, 3168,
	587, 3168,
	588, 3168,
	589, 3168,
	590, 3168,
	591, 3168,
	592, 3168,
	593, 3168,
	594, 3168,
	596, 3168,
	599, 3168,
	600, 3168,
	601, 3168,
	602, 3168,
	603, 3168,
	604, 3168,
	606, 3168,
	607, 3168,
	608, 3168,
	609, 3168,
	610, 3168,
	611, 3168,
	612, 3168,
	613, 3168,
	614, 3168,
	615, 3168,
	616, 3168,
	617, 3168,
	622, 3168,
	623, 3168,
	624, 3168,
	625, 3168,
	626, 3168,
	627, 3168,
	628, 3168,
	630, 3168,
	640, 3168,
	641, 3168,
	642, 3168,
	643, 3168,
	644, 3168,
	645, 3168,
	647, 3168,
	648, 3168,
	649, 3168,
	650, 3168,
	651, 3168,
	652, 3168,
	653, 3168,
	654, 3168,
	655, 3168,
	658, 3168,
	661, 3168,
	662, 3168,
	664, 3168,
	665, 3168,
	-2, 0,
	-1, 1833,
	203, 3013,
	566, 3013,
	642, 3013,
	662, 3013,
	-2, 0,
	-1, 1881,
	203, 1092,
	-2, 3003,
	-1, 1882,
	203, 1093,
	-2, 2786,
	-1, 1883,
	203, 1094,
	-2, 2954,
	-1, 1884,
	203, 1095,
	-2, 3082,
	-1, 1889,
	427, 1145,
	502, 1145,
	549, 1145,
	571, 1145,
	-2, 0,
	-1, 1900,
	1, 1699,
	241, 1699,
	659, 1699,
	661, 1699,
	663, 1699,
	666, 1699,
	-2, 0,
	-1, 1917,
	1, 1140,
	659, 1140,
	661, 1140,
	663, 1140,
	666, 1140,
	-2, 0,
	-1, 1918,
	1, 1184,
	659, 1184,
	661, 1184,
	663, 1184,
	666, 1184,
	-2, 0,
	-1, 1919,
	1, 1192,
	659, 1192,
	661, 1192,
	663, 1192,
	666, 1192,
	-2, 0,
	-1, 1922,
	1, 1149,
	659, 1149,
	661, 1149,
	663, 1149,
	666, 1149,
	-2, 0,
	-1, 1924,
	1, 1155,
	659, 1155,
	661, 1155,
	663, 1155,
	666, 1155,
	-2, 0,
	-1, 1927,
	1, 1151,
	659, 1151,
	661, 1151,
	663, 1151,
	666, 1151,
	-2, 0,
	-1, 1932,
	1, 1165,
	659, 1165,
	661, 1165,
	663, 1165,
	666, 1165,
	-2, 0,
	-1, 1967,
	1, 2992,
	659, 2992,
	661, 2992,
	662, 2992,
	663, 2992,
	666, 2992,
	-2, 0,
	-1, 1972,
	1, 1248,
	659, 1248,
	661, 1248,
	663, 1248,
	666, 1248,
	-2, 0,
	-1, 1992,
	183, 1917,
	196, 1917,
	298, 1917,
	372, 1917,
	-2, 1855,
	-1, 2094,
	162, 1876,
	183, 1876,
	196, 1876,
	262, 1876,
	298, 1876,
	372, 1876,
	383, 1876,
	585, 1876,
	-2, 2339,
	-1, 2155,
	661, 2514,
	-2, 0,
	-1, 2192,
	162, 1876,
	183, 1876,
	196, 1876,
	262, 1876,
	298, 1876,
	372, 1876,
	383, 1876,
	585, 1876,
	-2, 2017,
	-1, 2231,
	662, 2658,
	665, 2658,
	-2, 1275,
	-1, 2232,
	662, 2660,
	665, 2660,
	-2, 1276,
	-1, 2233,
	662, 2659,
	665, 2659,
	-2, 1277,
	-1, 2234,
	665, 2582,
	-2, 1278,
	-1, 2258,
	660, 2162,
	-2, 2150,
	-1, 2290,
	203, 3010,
	662, 3010,
	665, 3010,
	-2, 0,
	-1, 2341,
	1, 897,
	663, 897,
	666, 897,
	-2, 1760,
	-1, 2544,
	241, 320,
	-2, 2666,
	-1, 2545,
	241, 321,
	-2, 385,
	-1, 2662,
	1, 1142,
	659, 1142,
	661, 1142,
	663, 1142,
	666, 1142,
	-2, 0,
	-1, 2663,
	1, 1186,
	659, 1186,
	661, 1186,
	663, 1186,
	666, 1186,
	-2, 0,
	-1, 2664,
	1, 1194,
	659, 1194,
	661, 1194,
	663, 1194,
	666, 1194,
	-2, 0,
	-1, 2665,
	1, 1250,
	659, 1250,
	661, 1250,
	663, 1250,
	666, 1250,
	-2, 0,
	-1, 2706,
	1, 1167,
	659, 1167,
	661, 1167,
	663, 1167,
	666, 1167,
	-2, 0,
	-1, 2729,
	1, 1229,
	659, 1229,
	661, 1229,
	663, 1229,
	666, 1229,
	-2, 0,
	-1, 2779,
	477, 1944,
	478, 1944,
	-2, 2195,
	-1, 2812,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2215,
	-1, 2813,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2216,
	-1, 2814,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2217,
	-1, 2815,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2218,
	-1, 2816,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2219,
	-1, 2817,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2220,
	-1, 2818,
	102, 0,
	277, 0,
	278, 0,
	644, 0,
	645, 0,
	-2, 2221,
	-1, 2819,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2222,
	-1, 2831,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2234,
	-1, 2832,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2235,
	-1, 2833,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2236,
	-1, 2837,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2243,
	-1, 2843,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2247,
	-1, 2845,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2255,
	-1, 2846,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2256,
	-1, 2847,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2257,
	-1, 2848,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2258,
	-1, 3022,
	5, 2670,
	203, 2525,
	660, 2667,
	-2, 2658,
	-1, 3023,
	203, 2526,
	-2, 3098,
	-1, 3024,
	203, 2527,
	-2, 2881,
	-1, 3025,
	203, 2528,
	-2, 2749,
	-1, 3026,
	203, 2529,
	-2, 2814,
	-1, 3027,
	203, 2530,
	-2, 2866,
	-1, 3028,
	203, 2531,
	-2, 3006,
	-1, 3029,
	203, 2532,
	-2, 2322,
	-1, 3124,
	1, 2018,
	2, 2018,
	114, 2018,
	162, 2018,
	183, 2018,
	196, 2018,
	204, 2018,
	222, 2018,
	225, 2018,
	255, 2018,
	262, 2018,
	274, 2018,
	294, 2018,
	298, 2018,
	338, 2018,
	372, 2018,
	377, 2018,
	383, 2018,
	465, 2018,
	471, 2018,
	585, 2018,
	597, 2018,
	619, 2018,
	620, 2018,
	621, 2018,
	631, 2018,
	659, 2018,
	661, 2018,
	663, 2018,
	665, 2018,
	666, 2018,
	-2, 2017,
	-1, 3140,
	660, 2639,
	-2, 2653,
	-1, 3142,
	1, 402,
	619, 402,
	666, 402,
	-2, 1903,
	-1, 3180,
	660, 2161,
	-2, 2151,
	-1, 3211,
	38, 2670,
	135, 2670,
	642, 2670,
	658, 2670,
	661, 2670,
	662, 2670,
	665, 2670,
	-2, 2667,
	-1, 3212,
	38, 2671,
	135, 2671,
	642, 2671,
	658, 2671,
	661, 2671,
	662, 2671,
	665, 2671,
	-2, 2668,
	-1, 3442,
	1, 1599,
	459, 1553,
	504, 1553,
	634, 1553,
	639, 1553,
	659, 1599,
	661, 1599,
	663, 1599,
	666, 1599,
	-2, 1903,
	-1, 3602,
	1, 1233,
	659, 1233,
	661, 1233,
	663, 1233,
	666, 1233,
	-2, 0,
	-1, 3630,
	378, 1947,
	-2, 3157,
	-1, 3631,
	378, 1948,
	-2, 2989,
	-1, 3635,
	477, 2593,
	478, 2593,
	-2, 2320,
	-1, 3636,
	477, 2597,
	478, 2597,
	-2, 2321,
	-1, 3637,
	477, 2594,
	478, 2594,
	-2, 2320,
	-1, 3638,
	477, 2598,
	478, 2598,
	-2, 2321,
	-1, 3652,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2245,
	-1, 3653,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2249,
	-1, 3659,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2251,
	-1, 3908,
	1, 892,
	659, 892,
	661, 892,
	663, 892,
	666, 892,
	-2, 1760,
	-1, 4135,
	46, 2630,
	-2, 1333,
	-1, 4140,
	1, 1599,
	659, 1599,
	661, 1599,
	663, 1599,
	666, 1599,
	-2, 1903,
	-1, 4254,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2253,
	-1, 4261,
	268, 0,
	270, 0,
	361, 0,
	-2, 2272,
	-1, 4329,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2301,
	-1, 4330,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2302,
	-1, 4331,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2303,
	-1, 4335,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2307,
	-1, 4336,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2308,
	-1, 4337,
	14, 0,
	15, 0,
	16, 0,
	640, 0,
	641, 0,
	642, 0,
	-2, 2309,
	-1, 4389,
	660, 2640,
	-2, 2654,
	-1, 4634,
	662, 3275,
	-2, 1829,
	-1, 4693,
	268, 0,
	270, 0,
	361, 0,
	-2, 2273,
	-1, 4696,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2276,
	-1, 4697,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2278,
	-1, 4827,
	662, 2655,
	-2, 1634,
	-1, 5003,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2277,
	-1, 5004,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	237, 0,
	241, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 2279,
	-1, 5015,
	268, 0,
	-2, 2312,
	-1, 5219,
	268, 0,
	-2, 2313,
	-1, 5452,
	54, 0,
	237, 0,
	297, 0,
	511, 0,
	628, 0,
	643, 0,
	-2, 3120,
}

const sqlPrivate = 57344

const sqlLast = 161046

var sqlAct = [...]int16{
	314, 5649, 3400, 5383, 5670, 1500, 5500, 5582, 3517, 5273,
	3792, 5523, 5507, 1030, 6, 5641, 5451, 5080, 5465, 4,
	5382, 5438, 1031, 10, 5596, 5316, 5334, 5265, 5394, 4122,
	4121, 5466, 5397, 3345, 1229, 200, 1402, 4676, 5421, 5467,
	5164, 5187, 2401, 5373, 5532, 1728, 4606, 4823, 5151, 1413,
	1693, 2541, 1556, 4294, 5137, 5413, 5463, 4960, 4949, 4955,
	4918, 1285, 5223, 2372, 3935, 4990, 4881, 3865, 5085, 3486,
	5450, 5024, 4246, 1851, 4158, 2198, 4626, 2789, 4618, 5170,
	4049, 5301, 3054, 4526, 1490, 2635, 954, 4824, 807, 3204,
	3644, 4804, 2299, 3271, 2860, 4152, 4965, 3537, 3999, 1221,
	3938, 4589, 4106, 1392, 2245, 2584, 2633, 4574, 2001, 4572,
	3941, 4091, 3361, 2323, 2610, 954, 4379, 1577, 5020, 882,
	2799, 3506, 2790, 4111, 4187, 3474, 4185, 4113, 4103, 2597,
	4110, 3501, 1277, 3927, 2410, 3503, 4084, 3922, 4083, 3923,
	1670, 200, 3924, 1492, 3841, 4392, 2631, 3401, 3815, 819,
	3807, 3798, 4732, 3773, 4675, 3154, 3532, 3569, 3518, 2167,
	1034, 3796, 1849, 3449, 2528, 2439, 2490, 5508, 2530, 3374,
	3962, 4104, 2940, 1724, 3125, 2422, 2227, 3832, 3116, 1723,
	308, 4356, 2164, 3117, 2102, 2141, 3772, 2938, 3119, 5224,
	3848, 2796, 2072, 2873, 3210, 1495, 3628, 949, 1788, 1025,
	878, 2581, 3411, 2488, 2484, 2529, 2470, 2466, 2462, 1282,
	3487, 2321, 1897, 2389, 1497, 3203, 1287, 3531, 2393, 1466,
	3202, 1571, 1393, 3160, 3097, 3051, 2929, 2778, 2168, 2371,
	2857, 1469, 1476, 2761, 1539, 2759, 2368, 1554, 1558, 855,
	1695, 3155, 1826, 3511, 794, 1791, 1784, 2184, 817, 2187,
	2580, 2514, 5418, 3295, 3296, 4114, 3270, 307, 2361, 955,
	1106, 5335, 5650, 3256, 123, 956, 960, 1480, 1526, 2932,
	1443, 1446, 1472, 1431, 1396, 1410, 2177, 3066, 1375, 1232,
	1250, 2910, 3018, 3106, 2086, 2002, 2003, 211, 955, 863,
	1932, 898, 2136, 2984, 956, 960, 212, 2760, 2762, 2538,
	1917, 874, 1004, 1824, 1817, 838, 5524, 1551, 127, 1753,
	1678, 5583, 2519, 1263, 812, 50, 49, 47, 38, 36,
	1373, 2008, 34, 3682, 944, 1570, 1983, 1398, 4370, 3676,
	1127, 4371, 808, 2301, 821, 3794, 1405, 2301, 5659, 1005,
	1923, 5685, 1734, 963, 5673, 3096, 5461, 2301, 4064, 5657,
	2301, 5656, 5616, 3096, 3866, 3096, 5084, 2301, 176, 2301,
	5614, 5460, 113, 5052, 5084, 891, 894, 84, 5049, 52,
	51, 5554, 963, 5509, 5491, 2550, 5489, 5510, 3096, 1535,
	3096, 4167, 2018, 2019, 5486, 1483, 85, 5483, 5487, 5448,
	78, 5484, 5447, 2550, 5044, 5446, 2550, 5436, 2333, 3542,
	5048, 5084, 5043, 5434, 90, 5425, 2049, 5084, 5424, 5084,
	5047, 5042, 5084, 2632, 2021, 73, 5392, 1272, 124, 5356,
	5084, 5349, 54, 3171, 174, 3096, 1390, 5348, 5339, 4942,
	5315, 3096, 2550, 1861, 2550, 5312, 5294, 5221, 5201, 5084,
	4908, 3171, 4651, 2074, 53, 84, 5166, 99, 4168, 5103,
	4448, 3885, 2020, 2550, 5102, 1376, 1376, 5091, 2550, 5090,
	4768, 2550, 5083, 5084, 85, 5031, 5084, 2018, 2019, 2550,
	1214, 1225, 2585, 5005, 1535, 56, 74, 3171, 1226, 4975,
	4943, 3858, 90, 3542, 4064, 57, 3196, 1225, 1205, 1785,
	63, 2049, 4876, 2330, 4851, 79, 3096, 1204, 3096, 2021,
	4064, 2330, 4747, 55, 2333, 122, 4748, 2550, 4360, 4695,
	2330, 106, 119, 3171, 4642, 4636, 3479, 4586, 4180, 4180,
	75, 4587, 1428, 3879, 124, 99, 3743, 3744, 2074, 4479,
	3068, 4447, 2333, 4480, 1736, 4448, 1220, 2020, 4385, 4383,
	4363, 4278, 4386, 4384, 3096, 2550, 4274, 4179, 2040, 3888,
	3096, 4180, 1438, 3889, 3691, 3791, 58, 3789, 2037, 3096,
	3692, 3790, 2018, 2019, 1278, 2026, 3784, 3783, 1032, 3734,
	3096, 3096, 3732, 3735, 3724, 3722, 3733, 107, 3725, 3096,
	2330, 55, 3166, 122, 3643, 2333, 2049, 3693, 1377, 106,
	119, 3096, 3541, 3528, 2021, 1727, 3542, 2620, 3527, 3235,
	3170, 3152, 2620, 3096, 3171, 3096, 3144, 3095, 2619, 3096,
	2550, 3096, 2620, 1379, 5357, 1380, 5225, 4689, 1206, 2048,
	2050, 1429, 5216, 2074, 5204, 3542, 2333, 1736, 4360, 3067,
	1842, 1227, 2020, 272, 4953, 1748, 4908, 2330, 4852, 4651,
	2043, 2044, 2045, 2046, 4588, 4581, 3352, 3255, 2935, 2347,
	2026, 2415, 2549, 3246, 2327, 107, 3479, 2018, 2019, 76,
	4045, 2300, 3371, 3161, 2162, 2314, 1429, 1721, 3743, 3744,
	4497, 4249, 4217, 2185, 2477, 4169, 1899, 3136, 3135, 3134,
	3133, 3132, 272, 2041, 1381, 1378, 1213, 274, 1212, 2021,
	1211, 1210, 1394, 1209, 1208, 4170, 5476, 1207, 2886, 2887,
	2888, 2905, 2906, 2907, 2048, 2050, 1203, 1202, 1201, 3749,
	1200, 1199, 1198, 1197, 2018, 2019, 1196, 3595, 4752, 2908,
	1195, 1194, 1193, 1192, 1191, 1190, 2302, 2020, 1189, 1188,
	2302, 1187, 1186, 2035, 2036, 1185, 274, 111, 2049, 273,
	2302, 1184, 1742, 2302, 1183, 2026, 2021, 1170, 2936, 1104,
	2302, 4967, 2302, 3096, 1103, 59, 2074, 1102, 266, 1101,
	1100, 106, 1099, 1098, 2071, 1097, 1096, 267, 2041, 3681,
	1095, 1094, 62, 1093, 1092, 2074, 2898, 65, 1091, 1090,
	1089, 1088, 2698, 1087, 2020, 1086, 2894, 77, 273, 1085,
	1084, 1083, 1082, 1081, 1080, 64, 209, 213, 114, 2048,
	2050, 118, 1079, 1078, 1077, 1076, 4707, 60, 2330, 1075,
	1074, 175, 3743, 3744, 1073, 111, 1072, 1071, 1070, 61,
	1069, 3263, 1068, 2330, 1736, 2330, 1067, 3759, 1727, 1056,
	2330, 1055, 1054, 272, 272, 1049, 2937, 1048, 2934, 1408,
	2026, 68, 1041, 1040, 1039, 1024, 213, 167, 1023, 2071,
	2042, 3749, 1022, 980, 979, 978, 1502, 1287, 977, 976,
	5475, 967, 2330, 2041, 173, 966, 1747, 965, 2899, 2900,
	2901, 2902, 2330, 964, 209, 926, 114, 925, 2893, 118,
	889, 888, 1284, 1865, 1287, 1287, 1287, 274, 274, 4418,
	3479, 3067, 887, 869, 302, 301, 300, 2026, 1430, 299,
	298, 297, 296, 295, 294, 293, 292, 291, 2071, 2047,
	4167, 272, 1440, 1429, 290, 172, 289, 288, 2073, 1033,
	287, 286, 285, 284, 283, 167, 282, 272, 281, 2333,
	1580, 215, 280, 3222, 1287, 2042, 279, 1698, 278, 273,
	273, 1287, 1287, 2330, 2071, 1502, 2327, 1543, 1544, 1545,
	1712, 2048, 2050, 2300, 277, 2754, 1925, 276, 266, 266,
	275, 2903, 2904, 4375, 1735, 274, 4221, 267, 267, 3759,
	1287, 210, 1287, 1741, 1287, 4181, 214, 3844, 4969, 3704,
	3687, 274, 1698, 3678, 1530, 2330, 3572, 3459, 3496, 5472,
	3263, 3175, 3067, 172, 3760, 3749, 2896, 213, 213, 2967,
	3, 3141, 3514, 2073, 4485, 2144, 1502, 3123, 2965, 215,
	2939, 1793, 2143, 3787, 1429, 2041, 2188, 273, 2751, 1261,
	1688, 2022, 2023, 2024, 2025, 2027, 2028, 1530, 1698, 2374,
	2042, 2332, 2211, 273, 1725, 1698, 266, 2113, 1846, 2071,
	3743, 3744, 2147, 2951, 1287, 267, 1287, 2015, 1683, 210,
	2071, 1698, 266, 1984, 214, 2949, 1730, 1547, 3788, 1412,
	1287, 267, 1287, 200, 200, 2104, 5449, 5433, 3743, 3744,
	5320, 3761, 3762, 3763, 5213, 213, 5075, 1522, 2144, 5019,
	4973, 1475, 1479, 272, 4952, 2143, 4777, 4730, 4729, 4723,
	4722, 213, 4599, 1798, 1801, 1487, 2071, 167, 2073, 1524,
	2038, 2034, 5228, 2031, 2029, 2030, 2022, 2023, 2024, 2025,
	2027, 2028, 1698, 3759, 4721, 2142, 5207, 5205, 4714, 3743,
	3744, 3758, 4713, 4711, 272, 1820, 4706, 4703, 4702, 272,
	4585, 4580, 1287, 3743, 3744, 1287, 3760, 274, 960, 1710,
	4422, 1561, 1562, 2933, 4421, 1508, 4420, 4388, 4350, 3758,
	4349, 1573, 4348, 1667, 1672, 4270, 4265, 1404, 1736, 3839,
	3780, 3771, 3742, 2897, 3753, 3745, 3746, 3747, 3748, 3750,
	3751, 3739, 3738, 3261, 3736, 1516, 3260, 3184, 274, 3731,
	1228, 1722, 2042, 274, 3743, 3744, 3730, 3729, 3726, 273,
	3723, 1550, 3703, 3686, 2071, 3679, 3677, 3529, 3124, 1786,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 2922, 266, 1553,
	2111, 1703, 2104, 1563, 1564, 963, 2600, 267, 2015, 4495,
	1389, 2014, 1706, 3749, 1866, 5679, 5604, 5603, 1829, 1831,
	273, 2073, 2557, 2018, 2019, 273, 272, 2555, 1287, 1287,
	1287, 1287, 1287, 1287, 1287, 1287, 2105, 213, 2103, 266,
	2073, 3749, 5522, 5520, 266, 1414, 2106, 4296, 267, 3498,
	5384, 4968, 4600, 267, 5299, 2021, 5285, 5281, 1827, 5280,
	5279, 1287, 5259, 5258, 5256, 124, 272, 1287, 5227, 5226,
	3760, 1530, 5199, 2863, 5185, 5182, 5181, 5162, 213, 5161,
	274, 5099, 1226, 213, 1406, 5070, 2022, 2023, 2024, 2025,
	2027, 2028, 3749, 2020, 1993, 3752, 3753, 3745, 3746, 3747,
	3748, 3750, 3751, 5017, 5000, 4999, 3749, 5230, 1675, 4938,
	4934, 4931, 4909, 4728, 2883, 2884, 2885, 2909, 2895, 2889,
	274, 2891, 2892, 2890, 2877, 2878, 2879, 2880, 2881, 2882,
	4652, 3759, 273, 4483, 2093, 3260, 4482, 4463, 4462, 1941,
	2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 3785,
	4460, 266, 3260, 272, 3833, 2165, 4366, 3749, 1871, 3759,
	267, 4353, 4260, 2091, 4182, 4144, 4134, 272, 4600, 4025,
	3973, 3940, 273, 1287, 1287, 1287, 3873, 1841, 124, 1287,
	124, 3708, 124, 3707, 1989, 2869, 1410, 1804, 1410, 3702,
	213, 266, 3668, 1860, 3473, 3471, 3288, 2150, 3871, 2149,
	267, 2148, 2145, 1580, 2137, 2135, 2026, 274, 3182, 3181,
	3138, 3131, 2071, 3094, 2947, 1287, 2090, 2305, 2233, 1502,
	2210, 274, 2166, 2159, 200, 2158, 2263, 2233, 2157, 1502,
	213, 2156, 1502, 1698, 1890, 1227, 124, 124, 2155, 2154,
	2071, 3745, 3746, 3747, 3748, 3750, 3751, 1405, 272, 1405,
	2214, 5229, 124, 2153, 124, 2016, 2152, 2151, 2132, 273,
	2131, 2174, 1926, 2130, 2129, 2128, 1994, 2127, 124, 2126,
	124, 3836, 2125, 273, 2124, 3759, 2123, 2122, 266, 3497,
	2121, 1985, 2120, 2119, 2118, 2117, 2106, 267, 2092, 2089,
	1990, 2071, 266, 2084, 1515, 1435, 1424, 2226, 3760, 4941,
	1502, 267, 274, 1818, 4773, 4699, 1287, 1205, 4417, 1998,
	1997, 2221, 2146, 4382, 4369, 3690, 1204, 3513, 1992, 2018,
	2019, 3173, 272, 2220, 3129, 1226, 3760, 5045, 4775, 1823,
	1287, 213, 4416, 2171, 2172, 2011, 2012, 124, 1580, 2195,
	2105, 3869, 2087, 3743, 3744, 4173, 1557, 2367, 4854, 2312,
	1557, 2021, 1557, 1376, 273, 2317, 2071, 1557, 2206, 2319,
	4582, 1540, 3346, 1542, 1557, 5595, 2324, 2404, 5289, 1557,
	2326, 1555, 5282, 266, 4972, 2329, 274, 4892, 4891, 4890,
	4889, 2365, 267, 4888, 4853, 4754, 4659, 4658, 2339, 2020,
	4657, 2234, 4656, 4655, 5468, 4654, 4653, 2236, 960, 2452,
	2234, 4449, 2216, 2286, 4373, 4372, 2236, 960, 3314, 4184,
	2138, 2139, 213, 4183, 4066, 4065, 1530, 4054, 2218, 5550,
	2246, 5548, 4603, 2338, 1535, 5464, 5171, 2144, 273, 272,
	2188, 2186, 1535, 2241, 2143, 4247, 1889, 1206, 2196, 1541,
	4517, 1987, 3760, 2292, 3409, 3728, 2295, 266, 2966, 3727,
	3650, 3299, 1226, 2353, 1538, 4478, 267, 2964, 3942, 4124,
	2088, 4123, 2193, 4050, 272, 1536, 3754, 3752, 3753, 3745,
	3746, 3747, 3748, 3750, 3751, 963, 1181, 2474, 2094, 5251,
	2115, 2315, 2100, 274, 963, 2163, 213, 3755, 3756, 3757,
	1535, 4593, 2950, 5252, 3754, 3752, 3753, 3745, 3746, 3747,
	3748, 3750, 3751, 5252, 2948, 2205, 2204, 2203, 2201, 2200,
	1698, 1698, 2199, 2190, 2335, 4015, 2585, 2127, 274, 3976,
	2531, 1580, 2127, 4047, 5074, 4443, 2935, 4444, 1942, 5165,
	1182, 2341, 1898, 5021, 2242, 273, 5497, 5208, 5206, 4950,
	3538, 4092, 4046, 4896, 1899, 2532, 4579, 1698, 3745, 3746,
	3747, 3748, 3750, 3751, 266, 2652, 2486, 4523, 4514, 4488,
	4212, 3794, 3906, 267, 3747, 3748, 3750, 3751, 2719, 2337,
	273, 2629, 4298, 2565, 2451, 2930, 1698, 3696, 3180, 2450,
	5662, 3297, 2415, 2542, 2547, 5473, 3359, 2160, 3348, 266,
	2140, 2215, 4141, 213, 2593, 5642, 1532, 1797, 267, 1717,
	2447, 1511, 2456, 2189, 2458, 2192, 1471, 124, 2467, 1822,
	3754, 3752, 3753, 3745, 3746, 3747, 3748, 3750, 3751, 5094,
	5066, 1698, 3368, 1698, 5488, 1698, 2936, 2601, 213, 2342,
	5485, 4868, 4864, 2379, 4163, 2380, 4454, 5274, 3365, 2471,
	3363, 4956, 2360, 1698, 1698, 2387, 2388, 2461, 5391, 3945,
	4473, 3510, 2381, 2382, 2461, 2112, 1854, 1698, 2413, 2385,
	2386, 1166, 5474, 4075, 2024, 2025, 2027, 2028, 1388, 1698,
	2461, 2421, 1698, 1698, 1698, 1698, 2409, 2475, 1875, 1823,
	5552, 5551, 1018, 4838, 1537, 5097, 5093, 5072, 4241, 3910,
	1231, 4835, 960, 2017, 5126, 4840, 4052, 2233, 4536, 5587,
	2354, 5130, 1767, 3236, 5672, 1820, 3571, 2612, 2712, 2612,
	3451, 2534, 2535, 1179, 2937, 5290, 2934, 2710, 1177, 1287,
	2613, 2589, 5119, 2459, 1542, 5529, 5105, 2444, 1175, 1940,
	2536, 2624, 924, 1760, 4029, 2548, 4901, 4900, 2515, 4534,
	4533, 1719, 2650, 4525, 4051, 921, 2497, 1533, 2594, 4503,
	1408, 4502, 1408, 1939, 4500, 5202, 4785, 1534, 1287, 4499,
	2359, 2358, 3259, 2607, 1557, 2367, 4487, 1536, 4446, 963,
	4445, 1230, 2443, 2219, 4535, 4081, 2653, 2440, 2457, 3257,
	4080, 4017, 3857, 3701, 2465, 3700, 3699, 3698, 2627, 3654,
	3407, 3912, 3406, 1525, 3386, 1287, 2658, 1287, 2615, 1019,
	1541, 3384, 2980, 3370, 1287, 2521, 2637, 1287, 2521, 2263,
	2263, 1580, 2524, 1287, 1287, 1287, 1287, 1287, 1287, 1287,
	1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287,
	1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287,
	1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 3870,
	1287, 5643, 1287, 1287, 1287, 1287, 2562, 2568, 2617, 2520,
	2604, 1827, 2520, 1827, 3942, 1938, 2516, 4583, 5095, 5067,
	2234, 2753, 1873, 2683, 2979, 3259, 2236, 960, 1287, 2801,
	4048, 3358, 1287, 1287, 3350, 1226, 3339, 1226, 2939, 2596,
	1287, 2362, 3257, 2722, 1287, 2472, 1287, 1287, 1532, 861,
	2532, 2771, 3338, 861, 1580, 2758, 2609, 2460, 2643, 4013,
	1287, 1287, 1287, 1287, 2460, 4834, 1287, 1287, 1287, 1287,
	1287, 1287, 1287, 1287, 2621, 1516, 2622, 2769, 2730, 5588,
	2460, 1536, 3326, 4836, 2415, 2585, 3325, 1542, 2414, 3324,
	3304, 3174, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287,
	1287, 1224, 1287, 2769, 963, 5530, 1535, 1287, 3303, 1822,
	3264, 3507, 3153, 2028, 2911, 2912, 2844, 2243, 3975, 1410,
	2411, 1991, 2161, 1016, 5590, 1015, 1580, 3320, 2911, 2927,
	4796, 2662, 3318, 1172, 1891, 1410, 1537, 3751, 2369, 2370,
	2673, 2767, 1559, 1560, 1559, 1560, 4214, 1771, 4855, 1559,
	1560, 1287, 1580, 2797, 2798, 2975, 1559, 1560, 1762, 2407,
	2413, 1559, 1560, 1541, 1868, 2706, 3273, 2767, 1810, 2364,
	1809, 2933, 3190, 3159, 3021, 3021, 3035, 1808, 2911, 1807,
	1405, 3055, 3057, 2783, 1502, 2782, 2794, 4998, 1227, 3065,
	1227, 2930, 2795, 1720, 2412, 2644, 1405, 3301, 3168, 1533,
	2740, 1223, 2583, 4795, 2743, 1457, 2749, 1921, 2670, 1534,
	2363, 2855, 1532, 2648, 1982, 4819, 1986, 1921, 1404, 200,
	1404, 2755, 1779, 2875, 3163, 2408, 2763, 2770, 3243, 5591,
	2926, 2757, 2756, 3139, 2454, 1502, 1205, 2859, 3111, 1205,
	1205, 3337, 2859, 2853, 4014, 2786, 3212, 5129, 2787, 2788,
	2977, 4784, 4457, 4812, 3545, 2978, 2765, 1763, 2981, 2176,
	2982, 2983, 3743, 3744, 3143, 3761, 3762, 3763, 3590, 3287,
	3103, 2717, 2423, 2704, 1502, 1502, 2867, 5470, 5551, 3230,
	1021, 1020, 2663, 2865, 3626, 124, 2195, 806, 2206, 3276,
	1869, 1376, 1918, 3367, 1226, 3641, 3327, 1899, 2427, 860,
	1537, 1899, 1937, 860, 1226, 1958, 1952, 2768, 1226, 4832,
	2871, 4813, 5150, 3156, 801, 1580, 5620, 2525, 5589, 1887,
	3192, 4837, 1225, 2667, 2661, 3128, 2742, 2924, 3366, 1920,
	2671, 1514, 3375, 2768, 3286, 3909, 2614, 5267, 4226, 1920,
	3329, 5142, 3102, 3758, 3364, 1996, 3362, 2471, 3217, 2180,
	5593, 2664, 3225, 3606, 3221, 1406, 960, 1406, 960, 2424,
	4225, 1919, 3176, 1533, 2263, 3592, 1206, 2517, 3232, 1206,
	1206, 4133, 3187, 1534, 3110, 3030, 3115, 3046, 3209, 3121,
	3122, 3061, 3059, 3186, 3017, 2475, 3390, 2729, 2766, 3092,
	3093, 2726, 3331, 1530, 3328, 4484, 3104, 2849, 3167, 1226,
	2183, 3162, 1956, 2146, 1289, 3108, 3109, 3233, 1535, 2193,
	918, 960, 5651, 2939, 2766, 3228, 4470, 3201, 1580, 2178,
	5242, 2850, 862, 1874, 1065, 2711, 862, 2861, 2851, 1934,
	1698, 922, 2856, 963, 2709, 963, 922, 5241, 3330, 2181,
	2414, 4899, 2469, 3640, 45, 3749, 1174, 1227, 4501, 3195,
	922, 3165, 2727, 4498, 1872, 2518, 1157, 2094, 3265, 3665,
	1792, 2094, 4427, 922, 3189, 3157, 3227, 4426, 4425, 5471,
	5269, 3183, 2468, 3215, 1502, 3609, 3336, 2428, 2522, 3442,
	4287, 1218, 2728, 2179, 4411, 4410, 4564, 4997, 963, 3231,
	1475, 3663, 1479, 3220, 4409, 1287, 1287, 3300, 1287, 3262,
	2739, 1332, 2365, 2365, 3404, 2138, 2139, 3194, 3258, 3275,
	3226, 2463, 3197, 3234, 3198, 3321, 4218, 3188, 3158, 3765,
	3993, 1790, 3809, 2523, 1222, 2499, 3984, 4087, 3482, 1502,
	3360, 3219, 916, 4830, 3485, 4808, 1394, 3306, 4079, 4011,
	3385, 5599, 4809, 3369, 4468, 3323, 2412, 3302, 4565, 2429,
	2430, 4833, 2192, 4814, 3915, 3237, 2369, 2370, 3307, 2554,
	2553, 1698, 5563, 3759, 4197, 3477, 2478, 2509, 5592, 3291,
	1770, 2485, 1535, 1698, 2841, 1698, 2425, 2464, 2750, 4195,
	1158, 1698, 3994, 3305, 4284, 5469, 3334, 3494, 3985, 4188,
	3268, 3340, 1698, 1698, 200, 3376, 4811, 3322, 4563, 3278,
	3281, 5574, 124, 2472, 5573, 3312, 3313, 3315, 3316, 3317,
	3319, 5143, 3250, 3251, 3252, 4815, 2182, 3253, 3254, 1502,
	5353, 1502, 3608, 5622, 2426, 5141, 2741, 3151, 1456, 3454,
	2669, 5537, 3992, 5139, 3456, 3408, 2505, 4681, 3983, 2852,
	3443, 3444, 3446, 1287, 2071, 3660, 3539, 3332, 3333, 2854,
	4680, 3224, 3349, 3342, 2939, 3605, 2436, 3633, 3634, 3356,
	4219, 3239, 4088, 3489, 5501, 2418, 3555, 4197, 4085, 3457,
	960, 1953, 4285, 4914, 1698, 3274, 3661, 4160, 4199, 3599,
	3666, 1173, 4195, 1408, 3241, 3381, 5138, 1796, 3548, 3549,
	1057, 802, 4188, 2432, 2479, 3344, 968, 4190, 2502, 1408,
	3556, 3557, 3558, 3559, 3447, 3397, 3398, 3399, 3394, 3395,
	2301, 4831, 1870, 4189, 4009, 1287, 5140, 1058, 2437, 3452,
	1980, 1287, 1287, 975, 3543, 3567, 3530, 2419, 3242, 2527,
	3760, 3550, 4161, 3551, 4007, 5368, 1287, 3540, 5058, 3656,
	1163, 1162, 3808, 3546, 2858, 3523, 5275, 963, 2705, 3929,
	3240, 1280, 2507, 5440, 3445, 5441, 3249, 2839, 4008, 3525,
	2431, 2842, 4810, 4052, 1792, 3575, 5268, 3478, 2435, 2866,
	917, 3911, 4198, 4006, 2522, 3607, 4005, 2417, 4002, 1287,
	1287, 4199, 3493, 803, 3347, 1287, 3536, 3957, 3535, 1159,
	1950, 2526, 859, 3142, 3611, 3963, 3613, 3516, 1287, 1287,
	4190, 1827, 2498, 3526, 1287, 1287, 3524, 1900, 4820, 4821,
	1287, 3521, 1718, 4186, 3505, 5597, 4189, 2838, 2508, 2523,
	4160, 3564, 1954, 3533, 1886, 1888, 5351, 1433, 919, 2666,
	2660, 1957, 915, 3573, 1951, 3574, 1513, 3580, 804, 3582,
	805, 3584, 1066, 3586, 3587, 1157, 2939, 2433, 3956, 4928,
	1995, 2495, 3965, 2512, 3452, 1287, 1287, 1287, 4762, 2455,
	5536, 1287, 5515, 5310, 3579, 4763, 3596, 3259, 2133, 3867,
	1218, 1287, 2453, 5516, 5352, 4198, 4070, 3657, 4992, 2475,
	4677, 2405, 1042, 5010, 3279, 5561, 5402, 3662, 1287, 4870,
	5618, 3755, 3756, 3757, 2180, 4469, 827, 3664, 3754, 3752,
	3753, 3745, 3746, 3747, 3748, 3750, 3751, 3689, 2921, 1047,
	2083, 124, 3706, 2493, 124, 3632, 124, 3621, 3107, 4086,
	5302, 4201, 3964, 3894, 1160, 5623, 2500, 3120, 4761, 1225,
	1955, 3623, 3622, 2482, 5598, 5303, 4300, 2510, 3684, 3685,
	4010, 4904, 3627, 3688, 5606, 2183, 4196, 4191, 4192, 4193,
	4194, 2783, 3680, 2782, 2506, 1161, 4940, 1479, 3642, 4666,
	1059, 1060, 4543, 2494, 3105, 3649, 969, 970, 124, 1158,
	5304, 124, 4541, 4772, 4547, 3930, 5600, 124, 4412, 1439,
	1287, 1287, 1287, 1287, 2181, 2503, 1437, 4682, 4200, 1287,
	1287, 1287, 2501, 4243, 1287, 2480, 3566, 3624, 5317, 5408,
	2511, 1404, 1905, 5333, 5184, 4903, 4902, 4624, 1287, 1410,
	1580, 3581, 3655, 3583, 1165, 3585, 4148, 1404, 4598, 4060,
	4394, 2441, 4058, 3343, 4201, 3883, 2446, 3388, 4991, 3150,
	2579, 2840, 4543, 2173, 1164, 1287, 1436, 1287, 4202, 1427,
	793, 5306, 4541, 3801, 3802, 2481, 1410, 5133, 2005, 4196,
	4191, 4192, 4193, 4194, 2005, 124, 1216, 2006, 1157, 2716,
	4726, 4545, 4678, 1418, 1580, 2176, 5305, 2000, 1226, 3614,
	1405, 2785, 3616, 2416, 2355, 2504, 3782, 5502, 4395, 1410,
	1420, 5535, 1580, 1218, 5628, 5307, 3849, 4929, 4339, 5092,
	5038, 4200, 2415, 4552, 1502, 3695, 4544, 4059, 3389, 5193,
	3936, 5249, 2448, 2302, 4625, 4073, 4396, 1405, 1415, 4393,
	4074, 4529, 2263, 4504, 4455, 3842, 1580, 3803, 4404, 4453,
	4149, 972, 971, 4139, 4402, 2352, 1502, 3932, 3813, 1163,
	1162, 4545, 3495, 1217, 3488, 3475, 2608, 1502, 1406, 5514,
	1405, 4202, 3886, 3212, 2263, 2602, 2595, 3838, 2587, 2442,
	3863, 2564, 1043, 1044, 1406, 2180, 1421, 2561, 2775, 3379,
	4403, 2182, 1764, 2004, 5318, 4399, 4544, 5178, 4439, 2004,
	4283, 3308, 1448, 1061, 1062, 1287, 868, 4354, 1159, 3843,
	4993, 5374, 1158, 4244, 3098, 1422, 3263, 1287, 2005, 5336,
	4400, 2718, 2348, 3393, 4627, 973, 974, 3811, 4961, 2404,
	2861, 3472, 1458, 5157, 3280, 1502, 2183, 5155, 2350, 5069,
	3931, 2263, 4683, 3948, 3777, 3778, 3779, 3944, 2649, 3943,
	3647, 2094, 3884, 3625, 3101, 2178, 4368, 3806, 1287, 3812,
	1419, 3887, 3891, 3893, 3824, 2404, 3795, 2006, 3907, 3805,
	3827, 3828, 3826, 2006, 1502, 2181, 2641, 3825, 3896, 3981,
	3913, 3847, 3898, 3899, 3835, 2351, 3831, 3902, 2083, 3903,
	2630, 3904, 1928, 1927, 2559, 1502, 4573, 1502, 3100, 3810,
	3996, 1922, 3998, 3099, 4405, 3209, 3900, 3851, 3852, 3853,
	3854, 4727, 960, 1530, 4542, 3149, 3148, 3147, 4061, 2179,
	3391, 1287, 1287, 3146, 3874, 3875, 2474, 3876, 4340, 1580,
	3145, 1802, 1507, 2004, 2474, 1816, 3868, 4684, 3856, 4341,
	2776, 1502, 4578, 1160, 3830, 5627, 4040, 1803, 1783, 3834,
	3947, 4016, 1223, 3952, 2378, 3862, 3954, 1502, 1814, 4397,
	4898, 3933, 4057, 4551, 5081, 4919, 5262, 4398, 1064, 3284,
	3877, 4594, 1163, 1162, 1161, 4461, 2606, 4095, 1502, 5159,
	2415, 4450, 2491, 4068, 4542, 3978, 5558, 907, 3890, 963,
	3817, 3309, 3310, 5308, 3892, 1045, 1046, 5056, 4003, 5309,
	5054, 3960, 5053, 3570, 3982, 3901, 3980, 1906, 3897, 3450,
	5319, 4215, 4209, 5177, 4440, 3882, 1785, 3881, 2438, 3880,
	3037, 1159, 4401, 1502, 1698, 908, 1698, 3995, 3908, 2453,
	1580, 3861, 3860, 1165, 3859, 3939, 3997, 954, 1698, 1698,
	3544, 4026, 3212, 3455, 3916, 1733, 2455, 1740, 4062, 1746,
	3392, 3453, 2182, 1164, 2634, 2531, 1394, 1878, 5158, 4508,
	5380, 4071, 5263, 1502, 5077, 5064, 5076, 4790, 4140, 4789,
	5388, 4030, 5371, 4039, 4063, 3966, 4733, 3850, 5082, 4357,
	2449, 1410, 2946, 3919, 3920, 2452, 4413, 1977, 2735, 4056,
	4156, 3987, 5041, 1394, 5410, 3818, 4072, 4090, 1416, 4093,
	5562, 1698, 3991, 5560, 3974, 3946, 1979, 5490, 3950, 4138,
	4067, 4154, 1976, 1698, 5292, 1698, 5065, 5283, 867, 1840,
	4875, 1845, 3988, 5051, 2945, 4513, 3989, 5016, 3990, 4021,
	2445, 4781, 200, 200, 4725, 1859, 5462, 1864, 4028, 4027,
	4577, 4432, 1405, 3774, 4259, 4210, 4041, 4207, 3816, 3823,
	1974, 4053, 4018, 1236, 4129, 4147, 1160, 5381, 4451, 5264,
	1417, 4165, 1946, 3878, 3737, 3667, 1944, 3476, 2454, 1916,
	1914, 2377, 1912, 1910, 3209, 3357, 1580, 4077, 1908, 1580,
	3334, 1902, 1896, 4069, 1894, 1215, 3822, 1161, 1812, 3351,
	4032, 3298, 4034, 3185, 2748, 4038, 2744, 1815, 2489, 4044,
	2651, 2640, 2625, 1408, 1924, 4176, 2294, 4150, 2213, 2209,
	955, 4205, 1981, 1853, 1287, 4229, 956, 960, 4078, 2708,
	1813, 1287, 1287, 2675, 2540, 1287, 1287, 1287, 4213, 1287,
	1063, 4216, 5145, 3306, 4097, 4788, 3775, 4089, 1287, 2263,
	1408, 4082, 4157, 4238, 4237, 4228, 1165, 1287, 2000, 3594,
	4135, 4130, 1287, 4136, 3593, 3553, 2764, 4203, 1580, 1933,
	2451, 2678, 4132, 4208, 2560, 2450, 1164, 1287, 2293, 2291,
	2116, 1867, 1372, 1408, 4164, 1580, 4871, 4206, 4516, 4515,
	124, 124, 2737, 124, 4550, 2263, 2263, 1287, 1287, 2736,
	1287, 1287, 1287, 4236, 963, 4012, 4235, 4174, 4175, 4031,
	4109, 4162, 4850, 3819, 3820, 3821, 5370, 1978, 1287, 4413,
	4171, 4959, 1287, 1975, 2263, 2263, 1287, 1287, 1287, 1287,
	1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287,
	1287, 1287, 1287, 1287, 1287, 1287, 4245, 1287, 4880, 4866,
	3533, 124, 124, 4262, 124, 1287, 1287, 2263, 1226, 3533,
	920, 1973, 1287, 4272, 4273, 4863, 4312, 4801, 4313, 4800,
	4623, 4613, 4532, 1945, 4222, 1287, 4223, 1943, 4224, 4352,
	1915, 1913, 4506, 1911, 1909, 4476, 1410, 1410, 4474, 1907,
	1287, 4452, 1901, 1895, 4143, 1893, 2009, 5533, 4137, 1811,
	200, 4125, 3508, 3500, 4242, 3492, 3484, 4076, 3469, 3467,
	3448, 3223, 3218, 2558, 2556, 2533, 2476, 2434, 2420, 2406,
	2334, 2331, 2328, 2707, 2325, 1580, 2320, 2674, 2539, 2318,
	2313, 2307, 2303, 4954, 4280, 4153, 1385, 4390, 1502, 1502,
	923, 4042, 5528, 2246, 4351, 5445, 2485, 1405, 1405, 2225,
	4267, 4269, 3645, 3387, 5552, 4290, 2219, 4279, 2356, 1502,
	1502, 2344, 2345, 1386, 2233, 5261, 1502, 4286, 4288, 4289,
	3212, 2263, 2747, 2263, 4155, 3617, 4295, 3618, 4309, 3615,
	2257, 3441, 5427, 5327, 2202, 4974, 4302, 4887, 4787, 2797,
	4303, 3534, 4310, 1287, 3914, 2373, 4311, 1769, 951, 5195,
	3259, 3285, 3602, 3259, 4406, 5188, 4343, 4315, 1394, 3164,
	4635, 1227, 2733, 1756, 2415, 4317, 2010, 3257, 2797, 4318,
	3282, 1287, 2745, 4359, 1442, 124, 124, 1971, 1972, 2605,
	2665, 1404, 1482, 1481, 2702, 1176, 1178, 4364, 4365, 2697,
	4344, 5426, 4882, 2672, 4841, 3405, 2018, 2019, 2018, 2019,
	1217, 4347, 1892, 2394, 1287, 1287, 1552, 3646, 2395, 5215,
	4435, 896, 4436, 4361, 4362, 3289, 5079, 4734, 1404, 4043,
	4437, 2746, 4233, 4712, 4438, 3961, 3290, 2260, 2021, 3311,
	2013, 4239, 1509, 1387, 4240, 1441, 1549, 5498, 4374, 4377,
	4528, 5546, 2343, 4381, 4376, 303, 4546, 4387, 1287, 1287,
	3290, 1404, 3209, 3466, 4610, 2588, 1287, 1520, 3355, 3365,
	3363, 3128, 4456, 1051, 3372, 4527, 2020, 5566, 2020, 3353,
	1482, 4509, 3354, 4475, 1482, 4477, 4419, 1698, 1698, 3292,
	1949, 3294, 899, 899, 5379, 1698, 4489, 2234, 913, 5358,
	4428, 4434, 5325, 2236, 960, 3293, 1698, 1698, 790, 5321,
	5260, 5179, 4407, 4408, 5176, 1408, 1698, 5057, 4987, 4621,
	4612, 1502, 4597, 4142, 3515, 3481, 4561, 3468, 1406, 3062,
	2340, 2244, 5594, 4423, 4424, 4493, 5078, 4073, 4073, 3341,
	4433, 2396, 4074, 4074, 4548, 1716, 1715, 1709, 4524, 1219,
	2263, 3864, 4494, 4496, 2491, 4518, 5344, 4530, 5626, 2400,
	1727, 4539, 4556, 5565, 4893, 1406, 4073, 4531, 4549, 3743,
	3744, 4074, 4481, 5323, 1287, 5505, 4486, 4609, 2018, 2019,
	1727, 963, 2384, 3245, 4511, 4512, 2383, 3244, 2487, 1726,
	4704, 1877, 2941, 1727, 1727, 1698, 4540, 1876, 1406, 4415,
	3597, 1287, 2976, 2384, 2383, 1948, 4620, 3306, 1947, 1410,
	1287, 5180, 5120, 4884, 4566, 4567, 4879, 4637, 1698, 4590,
	4878, 4764, 4760, 1698, 1698, 1698, 4759, 4628, 4700, 4674,
	4414, 4291, 4036, 4033, 3600, 2110, 2109, 3620, 2752, 5611,
	2397, 2402, 5575, 124, 4605, 4629, 4576, 5431, 1698, 5362,
	1698, 4562, 4553, 4560, 5361, 4537, 1698, 5360, 1580, 5291,
	3376, 5235, 5231, 1394, 1394, 5153, 5109, 5046, 5040, 5039,
	1405, 4569, 5037, 4604, 4632, 5036, 4936, 4571, 4913, 4839,
	4575, 4774, 4758, 4757, 4559, 4647, 4641, 2251, 4592, 4584,
	1580, 4472, 4570, 1287, 1287, 4596, 4631, 4464, 4230, 1287,
	1287, 2263, 4146, 4145, 1287, 1287, 3953, 1287, 4648, 3895,
	3601, 4615, 1287, 4617, 3591, 3563, 3562, 3561, 4611, 3560,
	3499, 4662, 3470, 1287, 4644, 3283, 3214, 3178, 3177, 4668,
	2870, 2398, 2738, 4608, 2703, 2696, 2695, 3114, 2694, 1287,
	2693, 4660, 2692, 2603, 3939, 4614, 4663, 2574, 2573, 2572,
	2571, 2570, 2569, 2310, 2309, 2308, 2306, 2224, 2223, 1970,
	4633, 1969, 1903, 1778, 4630, 1777, 4638, 1776, 1775, 1774,
	4639, 1773, 1772, 1768, 1766, 1765, 1702, 4646, 1701, 4685,
	4645, 1569, 1568, 1567, 1566, 2405, 1565, 1512, 1465, 4698,
	1464, 1463, 4670, 4661, 1462, 1461, 1367, 1460, 1459, 1453,
	1452, 1410, 4686, 1451, 1450, 4694, 1449, 4731, 2346, 1410,
	1408, 1408, 4664, 1580, 1580, 1180, 1580, 4671, 1171, 2394,
	5266, 2263, 4818, 4817, 2395, 4816, 2734, 1410, 200, 2582,
	105, 4679, 1761, 1404, 3380, 98, 2483, 1698, 1698, 4471,
	5499, 5607, 3917, 5635, 2566, 2492, 5412, 2403, 5411, 5296,
	3199, 2304, 4739, 4102, 4101, 5504, 2496, 5149, 985, 1580,
	4986, 1133, 1405, 3842, 3521, 5409, 1751, 1000, 5390, 3955,
	1405, 3410, 2699, 1502, 2677, 1904, 5173, 3533, 2679, 3837,
	4673, 3130, 5350, 4708, 3705, 5222, 5009, 2944, 1405, 2114,
	1287, 3786, 3918, 1245, 100, 2246, 1271, 1317, 4927, 4926,
	4750, 1410, 4802, 1410, 4458, 4112, 4923, 4922, 2248, 4724,
	2250, 1235, 1583, 3070, 3072, 4766, 4767, 5439, 2357, 5617,
	2366, 3179, 1295, 2257, 2257, 4742, 4744, 3020, 1502, 1294,
	1291, 2252, 2254, 4849, 1293, 1292, 2253, 4825, 1580, 4825,
	1502, 2134, 1290, 1502, 2247, 4858, 4619, 2396, 4861, 4829,
	4828, 4131, 4735, 4794, 4736, 4737, 4738, 3519, 4172, 4741,
	4740, 1821, 1405, 1287, 1405, 2400, 1580, 1819, 4845, 4846,
	1406, 4751, 1135, 3126, 310, 310, 310, 4753, 796, 797,
	2864, 813, 796, 813, 825, 2928, 3694, 866, 2399, 2107,
	4797, 886, 1251, 4769, 4770, 4771, 893, 893, 893, 893,
	124, 1273, 2925, 1434, 1262, 3814, 3793, 4159, 310, 4778,
	4779, 4780, 3063, 4378, 4783, 4749, 4799, 4843, 1698, 1698,
	2260, 2260, 3212, 1287, 1287, 4782, 1394, 2774, 4793, 1010,
	1038, 3740, 2931, 1423, 3043, 3036, 4765, 310, 4894, 3032,
	3905, 3509, 1988, 5023, 2085, 4865, 2397, 2402, 4867, 3520,
	1546, 1502, 4869, 1255, 2862, 2098, 4944, 3672, 2784, 4848,
	4886, 4166, 3840, 4844, 1580, 3172, 5420, 4299, 124, 1698,
	4859, 3598, 4857, 2578, 1384, 4860, 1383, 1432, 4877, 1382,
	5396, 5393, 2473, 4930, 4862, 4107, 4108, 4786, 2349, 3238,
	2874, 4126, 4912, 1267, 1698, 1698, 1698, 1698, 1698, 1698,
	1698, 4962, 3576, 4911, 3577, 4948, 1686, 4951, 2723, 4231,
	3799, 4595, 1780, 5086, 1279, 2070, 3437, 3436, 1580, 4963,
	5255, 4945, 1531, 4907, 1529, 1528, 1527, 4910, 1404, 1404,
	1287, 1287, 1287, 5584, 3378, 4895, 3373, 2398, 2513, 4467,
	4466, 4465, 4791, 4792, 271, 3639, 2007, 4906, 1580, 4905,
	4915, 1999, 268, 1287, 3209, 4921, 1287, 1287, 270, 4925,
	269, 3959, 4391, 3846, 1879, 4932, 1287, 4939, 4979, 2263,
	4933, 4842, 4983, 1408, 1287, 1287, 4957, 4971, 4937, 5496,
	4966, 4491, 4094, 4947, 27, 900, 3969, 901, 902, 796,
	796, 2405, 4964, 1580, 3248, 1698, 2376, 310, 1548, 4985,
	4442, 26, 25, 24, 23, 128, 48, 29, 28, 5,
	2257, 124, 22, 4994, 4995, 171, 4976, 5001, 1394, 4977,
	169, 146, 1502, 166, 165, 138, 1394, 164, 163, 4883,
	162, 4885, 161, 160, 168, 4996, 159, 158, 153, 157,
	156, 5006, 155, 154, 152, 150, 1580, 151, 3967, 145,
	149, 4988, 148, 2403, 1287, 147, 312, 144, 143, 5032,
	142, 5033, 141, 140, 139, 1406, 1406, 1287, 137, 170,
	2251, 2251, 136, 5018, 135, 5012, 1287, 216, 134, 133,
	132, 2263, 131, 130, 4920, 129, 879, 880, 67, 66,
	125, 1287, 126, 5063, 1287, 5029, 5030, 21, 3968, 46,
	16, 71, 72, 20, 15, 5034, 41, 2260, 103, 117,
	116, 115, 42, 1287, 2546, 112, 1287, 40, 19, 18,
	17, 110, 109, 1580, 108, 39, 37, 13, 2257, 1698,
	1287, 11, 1698, 1698, 43, 2197, 5089, 14, 7, 208,
	205, 1502, 5060, 204, 5061, 207, 5135, 203, 206, 102,
	5112, 202, 104, 201, 5113, 101, 35, 5108, 12, 196,
	5169, 5068, 2404, 2246, 5059, 1408, 5062, 4602, 93, 199,
	198, 197, 1410, 1408, 195, 5100, 5101, 194, 193, 124,
	190, 94, 91, 192, 97, 96, 191, 92, 95, 33,
	8, 1408, 70, 5125, 2399, 9, 4989, 4211, 5144, 120,
	1580, 5152, 5111, 1698, 121, 5131, 5132, 44, 4825, 89,
	5168, 88, 5106, 87, 5121, 5156, 5123, 86, 5124, 5160,
	5163, 32, 69, 31, 265, 2260, 263, 264, 262, 261,
	186, 5110, 241, 1405, 240, 5189, 5050, 5175, 239, 238,
	1287, 1287, 237, 5122, 5114, 236, 235, 234, 233, 228,
	232, 230, 229, 5190, 5194, 124, 5146, 1287, 2263, 5147,
	231, 227, 5154, 257, 5148, 1408, 256, 1408, 255, 254,
	124, 5136, 1249, 5134, 253, 5098, 252, 251, 250, 244,
	5192, 5167, 243, 1502, 1502, 1502, 2612, 5172, 1502, 1502,
	1502, 1404, 1502, 1502, 124, 249, 248, 5174, 3460, 247,
	5191, 3463, 246, 3465, 245, 242, 260, 5197, 5196, 82,
	226, 1287, 5186, 1287, 225, 1287, 224, 222, 218, 5198,
	4966, 5200, 5211, 5212, 221, 1410, 5203, 223, 220, 219,
	217, 259, 258, 189, 83, 184, 185, 81, 1287, 5250,
	1410, 183, 182, 181, 180, 179, 178, 177, 80, 5214,
	188, 5248, 5210, 187, 30, 3512, 2, 2251, 3512, 1,
	0, 4825, 5220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 5278, 0, 0,
	2263, 0, 0, 5247, 5246, 5243, 0, 0, 0, 0,
	0, 1405, 1410, 1410, 0, 5277, 0, 0, 0, 0,
	0, 0, 5270, 0, 0, 0, 0, 5271, 0, 0,
	0, 0, 5298, 1410, 5324, 0, 1410, 5300, 1406, 0,
	1698, 0, 0, 0, 0, 4109, 0, 0, 4825, 4825,
	1698, 0, 3588, 0, 5286, 0, 124, 0, 0, 5313,
	5314, 5288, 2246, 0, 0, 0, 1287, 1287, 5287, 4825,
	0, 0, 4825, 1405, 1405, 0, 1287, 1578, 0, 5295,
	5330, 0, 0, 5332, 5293, 2251, 0, 0, 0, 5297,
	5337, 5311, 0, 1404, 1405, 0, 0, 1405, 0, 5322,
	0, 1404, 5346, 0, 5347, 0, 5115, 5232, 5233, 5234,
	5329, 0, 5236, 5237, 5238, 0, 5239, 5240, 5338, 1404,
	5345, 5341, 0, 0, 0, 0, 5172, 0, 5343, 0,
	0, 1425, 1287, 1287, 0, 5342, 1287, 0, 0, 0,
	1698, 1502, 813, 1502, 5355, 0, 5340, 5359, 5354, 0,
	5363, 5364, 5365, 5387, 0, 0, 813, 0, 0, 0,
	0, 5369, 310, 0, 0, 0, 0, 5395, 5398, 1455,
	0, 0, 5423, 0, 5419, 0, 0, 0, 5377, 5378,
	310, 0, 310, 310, 0, 1486, 310, 1496, 0, 0,
	0, 5386, 0, 1404, 5385, 1404, 5400, 0, 1510, 0,
	5444, 0, 1287, 1287, 1287, 5404, 886, 0, 0, 886,
	0, 0, 0, 5405, 5399, 0, 0, 0, 5403, 0,
	5442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 5428, 893, 0, 0, 5366, 5367, 5432, 1406, 0,
	2861, 5435, 1287, 0, 0, 1708, 5443, 0, 0, 0,
	5477, 0, 5482, 0, 0, 0, 1406, 0, 0, 0,
	0, 310, 5459, 310, 310, 1486, 1698, 310, 310, 0,
	5458, 0, 310, 5456, 5457, 0, 1496, 0, 0, 0,
	5478, 0, 2404, 0, 5512, 0, 0, 0, 0, 5480,
	310, 0, 1729, 0, 5519, 5479, 5513, 0, 0, 0,
	0, 5511, 0, 1287, 0, 0, 0, 0, 1749, 0,
	0, 1502, 1502, 5495, 5521, 0, 5506, 1758, 5503, 5534,
	5518, 5152, 0, 5525, 5493, 0, 0, 5517, 0, 0,
	1406, 0, 1406, 0, 1782, 5527, 1496, 0, 5553, 0,
	0, 310, 310, 5545, 1486, 5526, 1408, 5492, 0, 5549,
	5494, 5540, 5541, 1287, 0, 5406, 5547, 5407, 0, 5544,
	0, 0, 5556, 5557, 0, 0, 886, 0, 310, 310,
	5559, 1410, 5395, 1410, 5555, 5398, 0, 0, 0, 0,
	1847, 0, 5570, 0, 0, 124, 0, 0, 0, 5568,
	5571, 1855, 5580, 5572, 5577, 0, 1038, 5578, 5576, 5569,
	5564, 0, 5531, 0, 5586, 0, 5422, 4825, 0, 4825,
	0, 0, 0, 1502, 0, 0, 0, 0, 5579, 0,
	5581, 5585, 0, 0, 5602, 0, 0, 5601, 0, 0,
	0, 0, 1405, 5610, 1405, 0, 0, 0, 0, 0,
	2779, 0, 5609, 0, 124, 1287, 1287, 124, 5621, 5613,
	5608, 0, 5612, 0, 1287, 1287, 0, 0, 5619, 5633,
	5615, 5624, 0, 0, 5638, 0, 0, 0, 0, 5639,
	5629, 6, 0, 0, 5646, 5644, 5647, 5637, 310, 5654,
	10, 5653, 5655, 0, 0, 0, 2257, 5658, 0, 5640,
	0, 2394, 200, 5645, 5648, 0, 2395, 0, 0, 1408,
	0, 5661, 5652, 1502, 310, 5660, 5663, 0, 5667, 0,
	5671, 5668, 0, 5665, 1408, 5669, 0, 2257, 2257, 5666,
	5678, 0, 0, 0, 5664, 5542, 5543, 5674, 0, 5675,
	1287, 0, 0, 0, 0, 5676, 5630, 5631, 5681, 5671,
	5687, 5683, 0, 0, 0, 0, 5677, 5684, 5632, 5686,
	1249, 1249, 1249, 84, 0, 0, 5680, 0, 0, 0,
	2212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4819, 85, 0, 2096, 0, 1408, 1408, 2101, 0,
	0, 0, 0, 2260, 0, 2257, 0, 0, 3038, 124,
	90, 0, 0, 124, 0, 0, 1664, 1408, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 4812,
	0, 0, 5682, 4805, 2260, 2260, 0, 5422, 0, 2396,
	0, 0, 0, 0, 0, 0, 0, 5605, 0, 0,
	0, 0, 4803, 99, 0, 0, 0, 2400, 0, 0,
	0, 0, 4807, 0, 0, 0, 0, 3970, 3971, 0,
	3972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1691, 0, 0, 1404, 0, 0, 4813, 0, 0,
	0, 0, 0, 0, 0, 0, 1032, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 2375, 3521, 106, 119, 0,
	0, 0, 0, 0, 0, 0, 1754, 796, 4022, 4023,
	0, 4024, 0, 0, 4806, 0, 0, 0, 2397, 2402,
	0, 0, 0, 0, 0, 0, 0, 3521, 310, 0,
	310, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1729, 1486, 1496,
	310, 0, 310, 2222, 0, 0, 0, 0, 0, 1835,
	310, 0, 813, 107, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2257, 0, 0, 0,
	0, 2311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1406, 0, 0, 310, 0, 0, 0, 0, 2398,
	0, 0, 0, 310, 0, 0, 0, 1404, 0, 0,
	0, 0, 0, 5414, 0, 1026, 0, 0, 0, 0,
	0, 0, 1404, 2251, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	2499, 0, 0, 84, 0, 1029, 1028, 0, 2392, 0,
	0, 0, 0, 2405, 2251, 2251, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 124, 0, 0, 2551, 0,
	0, 0, 0, 2260, 893, 0, 893, 0, 0, 0,
	90, 4808, 2509, 0, 1404, 1404, 893, 893, 4809, 0,
	0, 0, 3169, 0, 0, 0, 0, 0, 0, 4814,
	0, 0, 0, 0, 0, 1404, 0, 0, 1404, 0,
	2390, 0, 0, 111, 0, 2403, 0, 0, 0, 0,
	0, 0, 2251, 99, 0, 1408, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4811, 0, 1406, 0, 0, 0, 0, 0,
	0, 2505, 0, 0, 0, 0, 0, 0, 0, 1406,
	2391, 4815, 0, 0, 0, 0, 1032, 0, 0, 0,
	0, 0, 209, 2257, 114, 0, 0, 118, 0, 55,
	0, 122, 0, 0, 0, 0, 0, 106, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 2502, 0, 0, 0, 1033, 0, 2257,
	2257, 1406, 1406, 167, 0, 0, 0, 0, 0, 2499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 1406, 0, 310, 1406, 0, 0, 2257, 2257,
	0, 0, 0, 107, 0, 0, 2399, 0, 5415, 0,
	0, 0, 0, 274, 0, 0, 0, 2507, 0, 1664,
	2260, 2509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2257, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 3743, 3744, 0, 3761,
	3762, 3763, 310, 0, 0, 0, 0, 215, 4810, 0,
	0, 0, 0, 310, 0, 273, 2260, 2260, 0, 4691,
	310, 0, 0, 2251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2508, 266, 0, 310, 0, 310, 0,
	2505, 0, 796, 267, 310, 2260, 2260, 210, 3669, 3670,
	0, 0, 214, 0, 4820, 4821, 886, 2297, 2800, 0,
	1038, 0, 0, 0, 0, 0, 0, 0, 2512, 0,
	0, 0, 0, 213, 0, 0, 0, 3758, 2260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1486, 310, 2257, 2257, 1249, 2257, 3629, 0,
	0, 0, 2502, 0, 1664, 0, 0, 0, 0, 886,
	0, 0, 0, 111, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 2676, 0, 0, 0, 0, 310,
	310, 0, 310, 0, 310, 0, 310, 0, 310, 0,
	0, 2500, 0, 1404, 0, 1404, 0, 0, 0, 0,
	0, 2942, 2510, 0, 0, 0, 2507, 0, 0, 0,
	0, 0, 0, 2713, 0, 0, 2714, 0, 2715, 2506,
	0, 0, 209, 0, 114, 0, 0, 118, 3383, 3749,
	0, 3038, 3038, 310, 310, 310, 310, 310, 0, 0,
	0, 2260, 2260, 0, 2260, 0, 0, 0, 0, 0,
	2503, 0, 0, 0, 0, 0, 0, 2501, 0, 272,
	0, 0, 0, 0, 866, 2511, 0, 1033, 886, 0,
	2251, 0, 2508, 167, 0, 0, 0, 0, 0, 0,
	3767, 3768, 3769, 3770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5416, 0, 3140,
	0, 0, 0, 3765, 0, 0, 0, 2512, 0, 0,
	0, 0, 0, 274, 0, 0, 2251, 2251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2868, 0, 0,
	1406, 0, 1406, 0, 0, 0, 0, 1664, 0, 0,
	2504, 172, 0, 2096, 5417, 2251, 2251, 3759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 0,
	0, 0, 0, 2876, 2257, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3382, 0, 0, 2251, 0,
	2500, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 2510, 0, 267, 0, 0, 0, 210, 1708, 0,
	0, 0, 214, 0, 0, 1708, 0, 0, 2506, 0,
	0, 0, 0, 3038, 3038, 3038, 3038, 3383, 0, 0,
	0, 1754, 0, 1027, 0, 0, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 796, 0, 4616, 3064, 2503,
	0, 0, 0, 0, 0, 0, 2501, 0, 0, 0,
	2586, 310, 0, 0, 2511, 0, 0, 0, 0, 0,
	796, 2260, 3247, 0, 0, 0, 0, 310, 0, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2251, 2251, 0, 2251, 0, 0, 0, 0, 2623,
	0, 310, 1496, 0, 0, 4665, 0, 0, 310, 0,
	310, 1729, 0, 310, 3760, 2257, 0, 2636, 2638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2504,
	0, 2642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2654, 2655, 2656, 2657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 1496, 0, 310, 813, 0, 813, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 310, 0, 0, 0,
	3213, 0, 2018, 2019, 0, 0, 310, 310, 2062, 2063,
	2064, 310, 0, 310, 0, 0, 0, 0, 1486, 0,
	310, 310, 0, 1496, 1496, 3229, 2049, 0, 0, 0,
	310, 0, 2260, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 2068, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 2257, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 893, 893, 0, 0, 893, 893,
	0, 0, 0, 2040, 0, 0, 0, 3272, 0, 0,
	0, 0, 0, 2037, 0, 3755, 3756, 3757, 0, 310,
	0, 0, 3754, 3752, 3753, 3745, 3746, 3747, 3748, 3750,
	3751, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 2251, 0, 0, 0, 0, 0, 0, 886, 0,
	1664, 0, 0, 886, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 2043, 2044, 2045, 2046, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3396, 0, 0, 0, 0, 0,
	3402, 1729, 1664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 2069, 0, 0, 0, 4873, 0, 1664, 2048,
	2050, 0, 310, 3458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 2036,
	0, 0, 1729, 0, 0, 310, 0, 1242, 3402, 0,
	0, 0, 2251, 0, 0, 0, 310, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 3504, 2018, 2019,
	0, 0, 0, 2041, 0, 0, 0, 3272, 0, 796,
	0, 0, 4935, 0, 0, 0, 4255, 4256, 1038, 3272,
	0, 0, 2049, 0, 0, 0, 0, 4946, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4970, 0, 2260, 0, 0, 0, 0, 0, 2074,
	0, 0, 310, 1486, 310, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 3578, 310, 0, 0, 1486, 2040,
	1486, 0, 1486, 0, 2071, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1664, 2251, 2257, 0, 0, 4319, 4320, 4321, 4322,
	4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332,
	4333, 4334, 4335, 4336, 4337, 4338, 0, 4342, 0, 0,
	0, 0, 310, 310, 310, 310, 1486, 0, 1708, 1486,
	0, 0, 310, 0, 2047, 0, 0, 310, 4258, 3038,
	3038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 2043, 2044, 2045, 2046, 0, 0, 0, 310, 0,
	0, 2026, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2260, 0, 2060, 5055, 1664, 2018, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 2257, 0, 0, 0, 0,
	0, 1708, 1708, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 2048, 2050, 2021, 2073, 3038,
	3038, 3038, 3038, 3038, 3038, 3038, 3038, 3038, 3038, 3038,
	3038, 3038, 3038, 3038, 3038, 3038, 3038, 3038, 3038, 0,
	3038, 0, 0, 0, 2035, 2036, 2074, 0, 0, 0,
	0, 0, 0, 0, 3377, 2020, 0, 3800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 306, 2251, 0, 0, 0, 0, 0, 0,
	0, 0, 2260, 0, 1729, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3829, 0, 0, 2061, 2038, 2034, 0, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 3845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 3872, 0, 0, 0, 0, 2026, 0,
	2018, 2019, 2257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 1708, 1708, 1708, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 3547, 0, 0, 0, 3743,
	3744, 0, 3761, 3762, 3763, 0, 3554, 0, 0, 0,
	2047, 0, 2048, 2050, 0, 0, 0, 0, 0, 0,
	2251, 2074, 4690, 0, 0, 0, 0, 0, 0, 0,
	2020, 310, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 2260,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 796, 0, 0, 2041, 0, 796, 0,
	3758, 796, 0, 0, 796, 796, 0, 0, 3603, 0,
	796, 0, 1249, 796, 2257, 0, 0, 0, 0, 0,
	0, 310, 5284, 0, 2073, 0, 0, 0, 0, 0,
	4253, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 1729, 0, 0,
	0, 0, 2251, 2043, 2044, 2045, 2046, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 813, 2071, 0, 0,
	0, 5326, 0, 0, 5328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 3749, 0, 0, 310, 310, 0, 0, 0,
	0, 2260, 0, 0, 0, 0, 0, 2048, 2050, 0,
	0, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024,
	2025, 2027, 2028, 0, 0, 0, 0, 0, 0, 3272,
	3272, 310, 0, 3925, 3928, 0, 2035, 2036, 0, 0,
	3272, 0, 2222, 0, 0, 0, 0, 3845, 0, 0,
	0, 3272, 2222, 2042, 3272, 2222, 0, 0, 2222, 0,
	0, 3925, 0, 0, 0, 0, 3765, 0, 0, 0,
	0, 2041, 0, 310, 310, 3928, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2018, 2019, 0, 3928, 0, 310, 0,
	4001, 0, 4001, 0, 0, 0, 0, 0, 0, 0,
	3759, 0, 1486, 0, 84, 0, 5429, 2049, 0, 2251,
	5430, 2073, 0, 0, 0, 2021, 0, 0, 0, 2018,
	2019, 0, 0, 85, 0, 0, 3272, 0, 3272, 0,
	4037, 3272, 3928, 0, 0, 3272, 0, 0, 0, 0,
	0, 90, 2071, 2049, 2074, 0, 0, 4055, 3928, 0,
	0, 2021, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 1664, 0, 0, 3928,
	0, 0, 886, 0, 2037, 0, 0, 0, 0, 0,
	2074, 2071, 0, 4232, 99, 0, 1578, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 2047, 0, 1486, 0, 0, 0, 0, 0,
	2037, 310, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028,
	1664, 0, 0, 0, 0, 0, 0, 1032, 2042, 310,
	0, 0, 4100, 4252, 0, 4105, 3272, 0, 1664, 310,
	55, 2251, 122, 0, 0, 0, 0, 1496, 106, 119,
	0, 0, 0, 0, 0, 0, 2043, 2044, 2045, 2046,
	0, 0, 0, 310, 0, 4276, 2026, 3760, 3504, 3658,
	0, 1486, 1664, 310, 0, 0, 3272, 0, 796, 0,
	0, 0, 4292, 0, 0, 3272, 0, 0, 0, 0,
	0, 0, 2043, 2044, 2045, 2046, 2073, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	2048, 2050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 4220, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 2035,
	2036, 0, 0, 0, 0, 0, 2048, 2050, 4227, 0,
	0, 0, 1729, 0, 0, 0, 0, 0, 0, 1486,
	310, 0, 310, 0, 0, 0, 0, 0, 1486, 0,
	0, 1486, 0, 0, 2041, 2035, 2036, 0, 0, 1708,
	1708, 0, 0, 2038, 2034, 0, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 4389, 0, 0, 0, 0, 84, 3755, 3756,
	3757, 0, 0, 0, 0, 3754, 3752, 3753, 3745, 3746,
	3747, 3748, 3750, 3751, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 1664, 5015, 0, 0, 0,
	0, 0, 0, 0, 90, 2071, 0, 0, 0, 4297,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 1708,
	1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708,
	1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 0,
	1708, 2071, 1447, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 2175, 0, 0, 0, 0, 0,
	1470, 0, 1470, 1470, 0, 2047, 1491, 0, 0, 0,
	0, 0, 0, 209, 0, 114, 0, 0, 118, 0,
	0, 0, 0, 0, 5071, 0, 0, 0, 0, 0,
	1032, 2042, 0, 4355, 0, 0, 1664, 0, 0, 0,
	0, 2047, 0, 55, 0, 122, 0, 0, 310, 310,
	272, 106, 119, 0, 0, 0, 0, 0, 1033, 0,
	0, 0, 2054, 0, 167, 0, 0, 2042, 0, 3038,
	0, 0, 0, 796, 0, 0, 4380, 796, 0, 0,
	0, 0, 0, 0, 1673, 796, 0, 1687, 1491, 0,
	0, 0, 1447, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 4098, 4099, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 172, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 273, 3038, 0, 0,
	0, 1491, 1491, 0, 0, 4178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 4204, 0, 0,
	0, 0, 1664, 0, 267, 1664, 0, 0, 210, 0,
	0, 0, 0, 214, 0, 0, 2038, 2034, 0, 2031,
	2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0,
	1234, 0, 0, 0, 1832, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 0, 0, 5219, 0, 0,
	0, 0, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 4505, 0, 0, 4507, 0,
	0, 4510, 0, 0, 0, 0, 2018, 2019, 0, 4001,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 111, 0, 0,
	2049, 1664, 0, 5254, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3402, 5276, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	0, 0, 3928, 0, 310, 0, 2020, 0, 813, 813,
	1496, 0, 0, 2054, 0, 0, 209, 2040, 114, 0,
	0, 118, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 3504,
	3038, 0, 3504, 2222, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 272, 0, 4607, 0, 3402, 0, 0,
	310, 1033, 0, 0, 310, 0, 310, 167, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3651, 0, 0, 0,
	3272, 310, 0, 0, 0, 0, 3038, 0, 0, 0,
	0, 1664, 1038, 3272, 0, 0, 0, 274, 0, 2043,
	2044, 2045, 2046, 4746, 0, 0, 0, 0, 0, 2026,
	0, 3038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 310, 0, 0,
	0, 3928, 0, 0, 3229, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 4776, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 2050, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 2054, 0, 267, 0, 0,
	0, 210, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 2035, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 1400, 0, 0, 0, 1830, 0, 4709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	927, 0, 0, 0, 0, 0, 0, 2041, 0, 2054,
	0, 0, 0, 0, 0, 2054, 0, 0, 0, 0,
	0, 2054, 1687, 0, 0, 0, 938, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 305, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 936, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 1729,
	0, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 1470, 0, 0, 0, 0, 310,
	0, 0, 0, 1687, 0, 0, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 1496, 1496, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 2054, 0, 1496, 1496,
	1496, 2054, 310, 1496, 0, 0, 932, 0, 85, 0,
	0, 4538, 0, 948, 0, 2054, 0, 0, 3272, 3272,
	2054, 3925, 0, 0, 4001, 3272, 90, 0, 2047, 937,
	4554, 4555, 0, 4827, 0, 4827, 1729, 0, 0, 0,
	4557, 0, 0, 0, 0, 0, 0, 3272, 0, 2222,
	0, 0, 0, 3925, 2042, 1729, 1729, 310, 3928, 0,
	0, 0, 0, 0, 0, 1578, 0, 0, 0, 99,
	0, 3928, 0, 310, 3928, 0, 310, 0, 0, 4001,
	0, 0, 4001, 939, 0, 0, 4001, 2054, 0, 0,
	0, 0, 0, 2054, 0, 5007, 0, 0, 0, 0,
	861, 0, 0, 0, 0, 3272, 0, 3272, 310, 0,
	3743, 3744, 1032, 3761, 3762, 3763, 0, 0, 0, 0,
	3402, 0, 2073, 4897, 1664, 0, 0, 122, 934, 0,
	0, 0, 0, 106, 119, 0, 0, 0, 0, 0,
	5007, 0, 4643, 0, 0, 0, 0, 2636, 4649, 4650,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	3272, 3272, 0, 0, 0, 0, 3504, 3504, 0, 0,
	0, 0, 0, 3925, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 3758, 947, 2800, 0, 0, 0, 310, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 1234,
	1234, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	2034, 0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027,
	2028, 0, 0, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
	2054, 0, 0, 2567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2054, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 0, 0, 1704, 2054, 0, 0, 1708,
	2800, 0, 0, 2592, 0, 929, 0, 0, 0, 1664,
	1664, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3749, 1731, 0, 1737, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 3042, 0, 0, 0, 0, 0, 0, 0,
	0, 4380, 0, 0, 0, 1664, 0, 2054, 0, 0,
	0, 0, 0, 2054, 0, 0, 0, 0, 0, 0,
	3766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	860, 0, 0, 0, 0, 0, 1249, 1708, 0, 111,
	0, 4755, 4756, 0, 0, 0, 943, 3765, 1838, 0,
	1843, 0, 0, 3272, 2222, 931, 2222, 0, 0, 4607,
	0, 0, 0, 0, 1857, 0, 1862, 0, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5087, 0,
	5087, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 3759, 0, 0, 0, 0, 0, 0, 209, 0,
	114, 0, 0, 118, 0, 886, 0, 0, 928, 0,
	0, 0, 1664, 0, 941, 0, 4001, 1729, 0, 0,
	0, 1729, 0, 1486, 0, 2592, 2724, 2725, 0, 0,
	0, 0, 0, 0, 0, 272, 1929, 0, 935, 1935,
	0, 0, 0, 1033, 0, 0, 0, 0, 0, 167,
	0, 0, 3928, 862, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 930, 0, 0, 0, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 4607, 0, 0, 4827, 0, 0, 1729, 0, 274,
	0, 3272, 0, 945, 946, 310, 942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5183,
	1664, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 1729, 2636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	1708, 273, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	310, 310, 0, 0, 0, 0, 0, 0, 3760, 0,
	266, 0, 0, 0, 1664, 0, 0, 0, 0, 267,
	0, 0, 0, 210, 4297, 2095, 0, 0, 214, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1664, 0, 1708, 0, 4978, 213,
	4980, 4981, 4982, 0, 4984, 0, 0, 0, 0, 4001,
	5245, 0, 0, 0, 0, 0, 0, 4607, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4827, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 2169, 2169, 2169,
	0, 1491, 1664, 0, 0, 0, 0, 0, 813, 5035,
	0, 0, 0, 1447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4827, 4827, 0, 0, 0, 3755,
	3756, 3757, 0, 0, 0, 0, 3754, 3752, 3753, 3745,
	3746, 3747, 3748, 3750, 3751, 4827, 0, 310, 4827, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 2222, 0,
	1491, 0, 0, 3428, 0, 0, 0, 0, 0, 1729,
	0, 1729, 0, 1447, 0, 0, 1447, 0, 0, 1664,
	0, 0, 1575, 0, 0, 0, 1470, 3216, 1685, 0,
	0, 1470, 0, 1470, 0, 0, 0, 0, 3418, 3416,
	1491, 1491, 0, 0, 1496, 1496, 3420, 3422, 3412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5087, 0, 0, 310, 0,
	0, 0, 0, 5127, 0, 0, 0, 0, 2054, 0,
	0, 3438, 0, 0, 1234, 0, 1664, 0, 0, 0,
	0, 0, 3272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	1837, 0, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4297, 2054, 0, 0, 0, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 1729, 0, 1687,
	2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
	2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
	2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
	2054, 2054, 2054, 2054, 2054, 2054, 0, 0, 0, 0,
	0, 2054, 0, 2054, 2054, 2054, 2054, 0, 0, 1959,
	0, 0, 0, 0, 3414, 3042, 3042, 0, 0, 0,
	0, 0, 0, 0, 0, 3430, 0, 0, 0, 0,
	2054, 0, 0, 0, 0, 4607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3429,
	3419, 3417, 3421, 3423, 3413, 3415, 3431, 3433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3425, 3427, 3435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2054, 0, 3272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4827, 0, 4827, 0, 0, 1729, 0,
	0, 0, 0, 0, 3439, 0, 0, 0, 0, 0,
	0, 2054, 0, 0, 2054, 0, 0, 2054, 0, 0,
	2054, 0, 0, 0, 0, 0, 2054, 2054, 2054, 2054,
	2054, 2054, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 2018,
	2019, 0, 3272, 0, 2636, 1491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3402,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 1249,
	0, 2021, 2054, 3272, 0, 3764, 0, 3042, 3042, 3042,
	3042, 0, 0, 2054, 0, 2054, 0, 3402, 0, 0,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 1687, 0, 1687, 0, 0, 0, 2020,
	3432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 3743, 3744, 0,
	3761, 3762, 3763, 2700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2207, 0, 0, 1470, 0,
	4264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 2731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3424, 3426, 0, 0, 3434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3758, 2773,
	0, 2777, 2043, 2044, 2045, 2046, 0, 0, 2791, 0,
	0, 1234, 2026, 0, 1685, 0, 0, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 0, 2843, 0, 2845, 2846, 2847, 2848,
	0, 0, 0, 0, 0, 0, 2048, 2050, 0, 0,
	0, 0, 0, 2018, 2019, 0, 0, 0, 0, 0,
	0, 0, 2872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2095, 0, 0, 2049, 2923, 0,
	3749, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 2953, 2956, 2959, 2962, 0, 0,
	2968, 2969, 2970, 2971, 2972, 2973, 2974, 0, 0, 0,
	2041, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 0, 3034, 0,
	3045, 3047, 3052, 0, 2040, 3071, 0, 0, 0, 0,
	0, 0, 2018, 2019, 2037, 2051, 2052, 2053, 2062, 2063,
	2064, 0, 0, 0, 3765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 2049, 0, 0, 0,
	3069, 0, 0, 0, 2021, 3073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 3074, 3759, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 2043, 2044, 2045, 2046,
	0, 0, 0, 2037, 0, 0, 2026, 0, 0, 3075,
	0, 0, 0, 3743, 3744, 0, 3761, 3762, 3763, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4263, 0, 3076, 2054,
	2054, 0, 2054, 0, 0, 3077, 0, 2042, 0, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2048, 2050, 0, 2576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3078, 0,
	0, 2599, 0, 0, 0, 2043, 2044, 2045, 2046, 2035,
	2036, 0, 0, 0, 3758, 2026, 0, 2611, 0, 2611,
	0, 0, 0, 0, 0, 2618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 1470, 0, 0, 2041, 1687, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 3760, 0, 0, 2059, 0,
	3079, 0, 2069, 0, 0, 0, 0, 0, 0, 2048,
	2050, 0, 0, 0, 2646, 0, 0, 0, 3080, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 3081, 2065,
	0, 2066, 0, 0, 0, 0, 0, 2668, 2035, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2684, 0, 2686, 3082, 2688, 3749, 2690, 2057, 2691,
	0, 0, 0, 0, 1687, 2071, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 0, 0, 0, 2592, 0,
	2054, 2054, 0, 3042, 3042, 0, 0, 2054, 0, 0,
	0, 0, 0, 0, 2720, 2721, 0, 3764, 3764, 0,
	0, 2054, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 2054, 2067, 0, 0, 2047, 0, 0, 0, 0,
	3765, 0, 0, 0, 0, 2054, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 2054, 0, 0,
	0, 2042, 0, 0, 2071, 3083, 3755, 3756, 3757, 3461,
	3462, 0, 3464, 3754, 3752, 3753, 3745, 3746, 3747, 3748,
	3750, 3751, 0, 0, 3759, 0, 0, 0, 0, 0,
	0, 0, 0, 3042, 3042, 3042, 3042, 3042, 3042, 3042,
	3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042,
	3042, 3042, 3042, 0, 3042, 3764, 3764, 3764, 3764, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 3084, 3085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 2054, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 3086, 0, 0, 0,
	0, 0, 0, 1491, 0, 0, 3091, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3087, 0, 0,
	0, 0, 0, 0, 0, 309, 309, 309, 0, 0,
	0, 0, 3088, 0, 0, 0, 0, 3589, 2073, 0,
	0, 0, 0, 0, 0, 0, 2038, 2034, 0, 2031,
	2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 961,
	0, 0, 0, 0, 3089, 0, 0, 0, 0, 0,
	0, 3760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3137, 0, 0, 0, 0, 0, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 3090, 0, 0,
	0, 0, 0, 0, 0, 2075, 2076, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 2054, 0, 0, 0,
	1234, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	52, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3652, 3653, 0, 0, 85, 0, 3659,
	0, 0, 0, 0, 0, 0, 0, 2054, 2054, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 3673, 3674,
	0, 0, 0, 0, 2923, 0, 73, 0, 0, 0,
	0, 2599, 0, 54, 0, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3755, 3756, 3757, 53, 0, 846, 99, 3754,
	3752, 3753, 3745, 3746, 3747, 3748, 3750, 3751, 1407, 3683,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 0, 831, 0, 3697, 56, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 63, 3709, 0, 0, 0, 5636, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 122, 0, 0, 0,
	0, 0, 106, 119, 0, 0, 832, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 0, 833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	834, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1319, 852, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3052, 3052, 3052, 835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2169, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 828, 0, 0, 0, 0, 0, 2054, 2054,
	0, 0, 2054, 3764, 3764, 2054, 0, 0, 0, 2054,
	0, 3804, 0, 0, 0, 837, 2054, 0, 0, 0,
	829, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	76, 0, 0, 0, 0, 0, 3480, 861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2599, 0, 0,
	0, 0, 2054, 2054, 2054, 2054, 2054, 0, 0, 0,
	0, 0, 2054, 0, 2054, 851, 0, 3764, 3764, 3764,
	3764, 3764, 3764, 3764, 3764, 3764, 3764, 3764, 3764, 3764,
	3764, 3764, 3764, 3764, 3764, 3764, 3764, 0, 0, 0,
	3764, 0, 0, 2054, 2054, 0, 0, 0, 0, 0,
	0, 0, 3552, 0, 0, 1491, 2054, 0, 111, 0,
	0, 0, 0, 0, 0, 2054, 0, 0, 0, 0,
	0, 0, 0, 3565, 0, 3568, 59, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 65, 1234,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 1234, 0, 0, 0, 0, 64, 209, 0, 114,
	0, 0, 118, 0, 5502, 0, 0, 0, 60, 0,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 2054,
	61, 0, 0, 3610, 1685, 3612, 1685, 0, 0, 0,
	0, 0, 3958, 3619, 272, 0, 858, 2054, 839, 0,
	2592, 0, 68, 0, 0, 0, 0, 1411, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 2054, 859,
	0, 840, 0, 0, 0, 0, 0, 3648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 4019, 4020, 2054, 2054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 860, 0, 0,
	0, 0, 0, 0, 0, 841, 0, 0, 0, 0,
	856, 857, 215, 854, 0, 0, 0, 0, 0, 0,
	273, 0, 849, 0, 0, 842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 210, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 843, 0, 850, 0, 0, 213, 0,
	0, 0, 0, 0, 844, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 2054, 0,
	845, 0, 0, 0, 0, 853, 0, 0, 0, 0,
	0, 309, 0, 309, 309, 0, 0, 309, 0, 0,
	862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2054, 2054, 0, 0, 0,
	2054, 2054, 0, 0, 2054, 2054, 0, 0, 0, 2054,
	0, 0, 0, 2054, 0, 0, 0, 0, 2054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3042, 0, 0, 0, 0, 0, 0,
	983, 0, 309, 0, 309, 309, 0, 0, 309, 309,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 986, 1491, 0, 0, 0, 987, 0, 0, 0,
	0, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 988,
	0, 1002, 0, 0, 0, 0, 0, 0, 2791, 0,
	0, 3042, 309, 309, 0, 4250, 4251, 0, 0, 4254,
	0, 0, 0, 4257, 0, 0, 2592, 0, 989, 0,
	0, 0, 4261, 990, 0, 0, 0, 0, 0, 309,
	309, 4268, 0, 0, 0, 0, 3804, 0, 0, 0,
	0, 0, 0, 0, 3855, 0, 1011, 0, 1491, 0,
	0, 4281, 0, 991, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 1009,
	0, 4304, 4305, 0, 4306, 4307, 4308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4314, 0, 984, 982, 4316, 0, 0, 0,
	0, 0, 0, 0, 2054, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1685, 1685, 992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4345,
	4346, 0, 0, 0, 0, 1013, 0, 0, 0, 309,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 4358,
	0, 0, 3921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4367, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2054, 2054, 2054, 0, 3977, 3979, 0, 0, 2599, 0,
	0, 2054, 2054, 3764, 3042, 0, 0, 0, 0, 0,
	2054, 0, 0, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 1012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3764,
	3042, 0, 0, 0, 0, 0, 0, 4441, 0, 0,
	0, 0, 0, 0, 0, 0, 2054, 0, 0, 0,
	0, 0, 0, 0, 2054, 3042, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 4459, 0, 0, 0, 0,
	1006, 0, 0, 0, 2054, 0, 2054, 0, 0, 0,
	0, 993, 1411, 0, 0, 0, 2054, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 2019, 0, 2051, 2052,
	2053, 2062, 2063, 2064, 1411, 0, 0, 0, 0, 0,
	4127, 0, 4519, 4520, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 2021, 0, 2191,
	860, 1407, 0, 0, 0, 309, 0, 0, 2068, 0,
	0, 0, 0, 981, 0, 0, 1003, 3764, 0, 0,
	1411, 309, 2191, 309, 0, 0, 2074, 1411, 995, 0,
	0, 961, 0, 0, 0, 2020, 0, 0, 0, 0,
	961, 0, 0, 1411, 0, 0, 2040, 0, 0, 0,
	0, 2054, 3764, 0, 0, 2054, 2037, 1001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3764, 309, 996, 0, 0, 0,
	997, 1016, 0, 1015, 309, 0, 0, 998, 0, 0,
	3013, 3014, 3015, 3016, 3009, 3010, 3011, 3012, 2169, 0,
	0, 0, 0, 999, 1411, 0, 0, 0, 1008, 0,
	0, 4234, 0, 1685, 1017, 0, 1014, 0, 0, 0,
	0, 1687, 0, 862, 0, 2169, 0, 0, 0, 0,
	0, 0, 0, 0, 4640, 0, 0, 0, 2043, 2044,
	2045, 2046, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 4248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2989, 2990, 2991, 2992, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 2048, 2050, 3001, 3002, 3003, 3004, 2997, 2998,
	2999, 3000, 3005, 3006, 3007, 3008, 0, 4687, 4688, 0,
	0, 0, 0, 4692, 4693, 0, 0, 0, 4696, 4697,
	0, 2035, 2036, 0, 0, 0, 4701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4705, 0, 1491,
	0, 2057, 0, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4710, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 2985, 2986,
	2987, 2988, 2993, 2994, 2995, 2996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 2054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 1411, 0,
	1411, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 1411, 0, 2047, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 309, 0, 309,
	0, 0, 0, 2054, 0, 309, 0, 0, 2264, 0,
	0, 0, 0, 2042, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	961, 309, 0, 309, 0, 309, 0, 309, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 4916, 4917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 309, 309, 309, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 2599, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034,
	0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2599, 0, 2599, 0, 0,
	0, 0, 4622, 0, 5002, 5003, 5004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2791, 0, 0,
	5013, 5014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5022, 5025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 1411, 0, 0, 0, 0, 4667, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2055, 2049, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 1407, 2068, 0, 0, 0, 0, 0, 0,
	0, 5088, 0, 0, 0, 0, 0, 0, 1407, 0,
	5096, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	2020, 0, 309, 0, 0, 5104, 0, 0, 1234, 0,
	0, 2040, 0, 1411, 0, 1411, 0, 1411, 0, 0,
	0, 2037, 309, 0, 0, 0, 0, 5116, 0, 961,
	5118, 961, 0, 0, 309, 1411, 1411, 0, 0, 0,
	0, 0, 0, 0, 5128, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 1411, 1411, 1411, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 309, 0, 0,
	0, 0, 0, 2043, 2044, 2045, 2046, 309, 309, 0,
	0, 0, 309, 2026, 309, 0, 0, 0, 0, 0,
	0, 309, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	2069, 0, 0, 0, 0, 0, 0, 2048, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4847, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 2066,
	0, 0, 0, 0, 2599, 0, 2035, 2036, 0, 0,
	309, 2264, 2264, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 5253, 0, 0, 309, 5257,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 2599, 0, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 4958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 2791, 2047, 0, 0, 0, 309, 1411, 0, 0,
	5025, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 1234, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 309, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 2019, 0, 2051, 2052,
	2053, 2062, 2063, 2064, 0, 0, 5455, 5455, 5455, 5073,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 2049,
	0, 0, 0, 0, 0, 0, 0, 2021, 0, 0,
	0, 0, 0, 309, 309, 309, 309, 0, 2068, 0,
	0, 0, 0, 309, 0, 0, 5481, 2058, 309, 0,
	0, 0, 0, 0, 0, 0, 2074, 1411, 0, 2032,
	2033, 2039, 2061, 2038, 2034, 2020, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 0, 2040, 0, 0, 309,
	4717, 0, 0, 0, 4716, 0, 2037, 309, 0, 0,
	0, 0, 0, 0, 0, 2599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2264, 5455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5567, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	2045, 2046, 1411, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5209, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2059, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 2048, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5455,
	5625, 0, 2065, 0, 2066, 0, 0, 0, 0, 0,
	0, 2035, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 1411, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 5331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2191, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 961, 0, 0, 0, 0,
	0, 0, 0, 2042, 0, 0, 0, 0, 0, 5389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 2055, 2049, 0, 0, 0, 0, 0, 0,
	0, 2021, 309, 0, 0, 0, 309, 309, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 5437, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 309, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 2191, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034,
	0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028,
	0, 0, 0, 0, 0, 3718, 0, 0, 0, 3719,
	0, 0, 2043, 2044, 2045, 2046, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 846, 0, 0, 2069,
	1296, 0, 0, 0, 0, 0, 2048, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 830, 0, 0,
	0, 0, 831, 0, 0, 0, 2065, 0, 2066, 0,
	0, 0, 309, 0, 0, 2035, 2036, 0, 0, 0,
	0, 1411, 1411, 0, 0, 0, 0, 0, 0, 0,
	961, 0, 311, 311, 311, 2057, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 832, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 833, 0, 1411, 0,
	0, 0, 0, 0, 309, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 1411, 0, 0, 834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 1411, 311, 0, 0, 0, 2067,
	0, 0, 852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 2264, 835, 0, 0, 1411, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	836, 828, 0, 0, 0, 0, 2264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 309, 837, 0, 0, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 0, 2042, 0, 0,
	0, 0, 0, 2264, 851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 2018, 2019, 0, 2051, 2052, 2053, 2062, 2063, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 2049, 0, 0, 0, 0,
	0, 0, 0, 2021, 0, 2073, 0, 0, 848, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 839, 0, 1407,
	1407, 0, 0, 0, 0, 0, 0, 0, 2032, 2033,
	2039, 2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 0, 0, 0, 859, 2919,
	840, 0, 0, 2920, 0, 0, 1411, 0, 1411, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	1411, 1411, 0, 0, 2043, 2044, 2045, 2046, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 860, 961, 0, 0,
	0, 0, 0, 0, 841, 0, 0, 0, 0, 856,
	857, 0, 854, 1411, 0, 0, 0, 0, 0, 0,
	0, 849, 0, 0, 842, 0, 0, 2059, 0, 0,
	0, 2069, 0, 1411, 0, 0, 0, 0, 2048, 2050,
	0, 0, 0, 0, 0, 1411, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	2066, 0, 0, 0, 0, 0, 0, 2035, 2036, 0,
	0, 0, 843, 0, 850, 0, 0, 0, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	0, 0, 2041, 0, 853, 0, 0, 0, 1411, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2264, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2264, 2264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 2047, 0, 0, 2264, 2264, 0, 0,
	0, 309, 0, 0, 0, 309, 0, 309, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 0, 2042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2264,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 0, 0, 0, 0, 0, 0, 1411, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	311, 311, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 2264, 0, 2264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 2033, 2039, 2061, 2038, 2034, 0, 2031, 2029, 2030,
	2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4715, 0, 0, 0, 311,
	1584, 311, 311, 0, 0, 311, 311, 1584, 0, 0,
	311, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	311, 0, 0, 309, 0, 0, 0, 0, 0, 1411,
	1411, 0, 0, 0, 0, 0, 0, 1411, 1584, 0,
	0, 0, 0, 0, 0, 1584, 311, 311, 1411, 1411,
	0, 0, 0, 0, 2191, 0, 2191, 0, 1411, 0,
	0, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2264, 0, 309, 0, 0, 309, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 311, 0, 0, 0,
	1411, 0, 0, 0, 0, 1411, 1411, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 953, 0, 0, 0, 0, 0,
	1411, 0, 1411, 0, 0, 0, 0, 0, 1411, 0,
	1411, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 1411, 1411, 0, 1411, 0,
	0, 0, 0, 2264, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 311, 311,
	311, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 1411, 0, 1411, 0, 311, 0, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 0,
	1411, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 1411, 1411, 1411,
	1411, 1411, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 2191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2264, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	1584, 1584, 311, 0, 0, 1411, 0, 1411, 0, 0,
	0, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2191, 2191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 0, 0,
	0, 311, 0, 0, 0, 0, 2191, 0, 309, 2191,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	311, 0, 1288, 0, 0, 0, 1584, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2264, 311, 0, 311, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 1584, 0, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 1584, 1411, 0, 0, 0, 309,
	0, 1411, 0, 0, 1411, 1411, 0, 1584, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 1584,
	0, 0, 1584, 1584, 1584, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 311, 311, 0,
	311, 0, 311, 0, 311, 0, 311, 309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 311, 311, 311, 311, 0, 0, 2018, 2019,
	0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2264, 2055, 2049, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 1581, 0,
	0, 1584, 0, 0, 0, 1699, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 2037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2191, 0, 2191, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 1699, 0, 0, 0,
	0, 0, 2264, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 1411, 0, 0, 0, 1699,
	0, 2043, 2044, 2045, 2046, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 1411, 0, 0, 1411, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 2069, 0,
	1699, 0, 0, 0, 0, 2048, 2050, 0, 0, 311,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 2066, 0, 311,
	0, 0, 0, 0, 2035, 2036, 311, 0, 311, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 311, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 311, 311, 0, 0, 2067, 311,
	0, 311, 0, 0, 0, 0, 0, 0, 311, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 1411, 0, 1411, 0, 0, 0, 0,
	0, 1581, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2232, 0, 0, 0,
	0, 0, 0, 0, 0, 2232, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 2032, 2033, 2039,
	2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024,
	2025, 2027, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 4266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 0, 1584, 1581, 0, 0, 2018,
	2019, 1584, 2051, 2052, 2053, 2062, 2063, 2064, 0, 311,
	0, 0, 1584, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 2055, 2049, 0, 0, 0, 0, 0, 0,
	311, 2021, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 1700,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 1584, 0, 0, 0, 0, 0,
	311, 311, 311, 311, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 1699,
	1700, 0, 2043, 2044, 2045, 2046, 0, 1700, 0, 1581,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 2069,
	0, 0, 0, 0, 1699, 0, 2048, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 2065, 0, 2066, 0,
	0, 0, 0, 0, 0, 2035, 2036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 1699, 0, 1699, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 1699, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	1699, 1699, 1699, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 2232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2042, 0, 1581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1582, 0, 0, 0, 0,
	0, 0, 1581, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 311, 311, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 2033,
	2039, 2061, 2038, 2034, 1581, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3721, 0, 0, 0, 0, 0, 0,
	1581, 311, 311, 0, 0, 311, 0, 0, 0, 0,
	2018, 2019, 311, 2051, 2052, 2053, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	1582, 0, 0, 2055, 2049, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 0, 1584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 1584, 0, 1584, 0, 0, 0,
	1584, 0, 0, 1581, 0, 0, 0, 311, 1584, 1584,
	0, 0, 1584, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 2043, 2044, 2045, 2046, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 311, 1700, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 0, 2059, 0, 0, 1700,
	2069, 0, 0, 1584, 0, 1584, 0, 2048, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1581, 2065, 1700, 2066,
	0, 0, 0, 0, 0, 0, 2035, 2036, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 311, 1584,
	311, 2041, 0, 1700, 0, 1700, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 1700, 0, 0, 1700, 1700, 1700, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 1699, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 2018, 2019, 0, 2051, 2052, 2053,
	2062, 2063, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 2073, 2055, 2049, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 2074, 0, 0, 0, 0,
	1584, 0, 0, 0, 2020, 0, 1582, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	2033, 2039, 2061, 2038, 2034, 0, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3720, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 2043, 2044, 2045,
	2046, 0, 0, 0, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 1584, 0,
	2059, 0, 0, 0, 2069, 1584, 0, 0, 0, 0,
	0, 2048, 2050, 0, 0, 0, 1584, 1584, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 2065, 311, 2066, 0, 0, 0, 0, 0, 0,
	2035, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 311, 0, 311, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 1584, 0, 1582, 1581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 1584, 0,
	0, 0, 0, 1584, 1584, 1584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 1584, 0,
	1584, 0, 1581, 0, 0, 311, 1584, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 0, 0, 0, 1581, 0, 2047, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 1584, 0, 1584, 0, 2018, 2019,
	0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1584, 1584, 0,
	0, 2055, 2049, 1700, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 1700, 0, 1700, 0, 1584,
	0, 2068, 0, 1700, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 1700, 1700, 0, 0, 0, 2074,
	0, 2058, 0, 0, 0, 0, 0, 1581, 2020, 0,
	0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034, 2040,
	2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 2037,
	0, 0, 0, 0, 0, 0, 0, 0, 3717, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 311, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 1699, 0, 1699, 0, 0, 0, 1581, 0,
	0, 2043, 2044, 2045, 2046, 953, 1699, 1699, 0, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 1584,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2059, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 311, 2048, 2050, 0, 0, 1699,
	0, 0, 0, 0, 1584, 311, 0, 0, 0, 1584,
	0, 1699, 0, 1699, 0, 2065, 0, 2066, 0, 0,
	0, 0, 0, 0, 2035, 2036, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1581, 0, 0, 1581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 1584, 0, 1584, 0, 0, 0, 0,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 1584,
	0, 0, 1584, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 1582, 0, 0, 0,
	0, 0, 2018, 2019, 2073, 2051, 2052, 2053, 2062, 2063,
	2064, 0, 0, 0, 1582, 0, 0, 0, 0, 0,
	0, 0, 0, 1581, 0, 2055, 2049, 0, 0, 0,
	0, 0, 0, 311, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 1582, 0,
	1584, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 2232, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 2058, 0, 0, 311, 311,
	0, 0, 0, 2037, 0, 0, 0, 2032, 2033, 2039,
	2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024,
	2025, 2027, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 2044, 2045, 2046, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 1699, 1699, 0, 2059, 0,
	0, 1582, 2069, 1699, 0, 0, 0, 0, 0, 2048,
	2050, 0, 0, 0, 1699, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 2065,
	0, 2066, 0, 0, 0, 0, 0, 0, 2035, 2036,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 1700, 0,
	0, 0, 1582, 1699, 0, 0, 0, 0, 0, 0,
	1700, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 1699, 0, 0, 0,
	0, 1699, 1699, 1699, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 2071, 0, 1699, 0, 1699, 0,
	0, 0, 0, 0, 1699, 0, 1581, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 1700, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 1581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 2018, 2019, 0, 2051, 2052, 2053, 2062,
	2063, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 2049, 2073, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 1581, 1581, 0, 1581, 0, 2068, 0, 0, 0,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 1699, 1699, 1582, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 1581, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2044, 2045, 2046,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 0,
	0, 0, 0, 0, 1581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	2048, 2050, 0, 0, 0, 0, 1699, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 2066, 0, 0, 0, 0, 0, 0, 2035,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 1581, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1581, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 1581, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	1700, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 1581, 0, 1699, 0, 0, 0, 0, 1700, 1700,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 0, 0, 1581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	1700, 0, 0, 0, 0, 1700, 1700, 1700, 0, 0,
	0, 1581, 0, 0, 0, 0, 0, 1699, 0, 0,
	1699, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 1700, 0, 0, 0, 0, 0, 1700, 0,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 0, 0, 1581, 0,
	0, 1699, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031,
	2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2920, 0, 2018,
	2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2055, 2049, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 0, 0, 1582, 1582, 0, 1582, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 1700,
	1700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 2045, 2046, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	1582, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 2018, 2019, 0, 2051,
	2052, 2053, 2062, 2063, 2064, 2059, 0, 0, 1582, 2069,
	0, 0, 0, 0, 0, 0, 2048, 2050, 0, 2055,
	2049, 0, 0, 0, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 2066, 2068,
	0, 0, 0, 0, 0, 2035, 2036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2074, 0, 0,
	1700, 1700, 0, 0, 0, 2057, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 1699, 0,
	2041, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 0, 1700, 1700, 1700, 1700,
	1700, 1700, 1700, 0, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 2071, 0, 0, 0, 0, 0, 0, 0, 2043,
	2044, 2045, 2046, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 2059, 0, 0, 0, 2069, 0, 0, 0,
	0, 0, 0, 2048, 2050, 1582, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2042, 0, 0,
	0, 0, 0, 2065, 0, 2066, 0, 0, 0, 0,
	0, 0, 2035, 2036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 2057, 0, 0, 0, 0, 0, 1582, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1582, 0, 2056, 0, 0,
	0, 1700, 0, 0, 1700, 1700, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 2033,
	2039, 2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 0, 0, 0, 0, 5376,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 1582, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 2033, 2039, 2061, 2038,
	2034, 0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027,
	2028, 0, 0, 0, 0, 0, 5372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 1585, 327, 328, 1586, 1587,
	1588, 0, 1589, 736, 1590, 1591, 1592, 329, 1593, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 1594, 741, 342,
	343, 344, 345, 346, 347, 348, 1595, 1596, 0, 349,
	742, 743, 744, 1597, 350, 351, 745, 1598, 1665, 1599,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 1600,
	361, 362, 363, 360, 364, 365, 1601, 366, 1700, 367,
	368, 369, 370, 371, 372, 373, 1602, 374, 375, 376,
	1351, 377, 378, 379, 1603, 1604, 1606, 1605, 1607, 1608,
	1609, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 1610, 390, 392, 386, 388, 1611, 391, 389, 393,
	394, 1612, 395, 396, 397, 1613, 1614, 398, 399, 400,
	1615, 401, 402, 403, 1616, 404, 405, 406, 1617, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 1618, 316, 1619,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 1620, 426, 427, 428, 1621, 429, 430, 1622,
	1352, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 1623, 443, 754, 1624, 755,
	444, 1625, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 1354, 452, 453, 454, 1626, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	1627, 1353, 759, 463, 546, 464, 760, 761, 1628, 762,
	1629, 465, 466, 468, 1355, 763, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 1630, 479, 481, 480, 1631, 483, 764, 482,
	1358, 484, 485, 1359, 1632, 486, 487, 488, 489, 490,
	491, 494, 1633, 1634, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 1635, 318, 1362, 540, 541,
	542, 543, 1636, 765, 544, 766, 547, 548, 1637, 0,
	549, 0, 550, 1638, 1639, 552, 553, 554, 1640, 1641,
	555, 556, 767, 1363, 557, 1364, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	1642, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 1643, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 1644, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 1645, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 1646, 646, 647, 645, 648, 649, 650, 1647,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 1648, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	1649, 683, 684, 0, 678, 669, 1650, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 1651, 693, 779, 780,
	781, 782, 1652, 705, 1653, 694, 696, 697, 698, 699,
	783, 700, 784, 1654, 701, 702, 703, 704, 695, 706,
	707, 1655, 1656, 708, 709, 711, 713, 714, 710, 712,
	715, 1657, 716, 1658, 0, 717, 718, 719, 785, 786,
	787, 1659, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1660, 1661, 1662, 1663, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 3112, 0, 0, 0, 0, 0,
	0, 0, 0, 3113, 319, 320, 322, 321, 323, 324,
	325, 326, 1585, 327, 328, 1586, 1587, 1588, 0, 1589,
	736, 1590, 1591, 1592, 329, 1593, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 1594, 741, 342, 343, 344, 345,
	346, 347, 348, 1595, 1596, 0, 349, 742, 743, 744,
	1597, 350, 351, 745, 1598, 1665, 1599, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 1600, 361, 362, 363,
	360, 364, 365, 1601, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 1602, 374, 375, 376, 1351, 377, 378,
	379, 1603, 1604, 1606, 1605, 1607, 1608, 1609, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 1610, 390,
	392, 386, 388, 1611, 391, 389, 393, 394, 1612, 395,
	396, 397, 1613, 1614, 398, 399, 400, 1615, 401, 402,
	403, 1616, 404, 405, 406, 1617, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 1618, 316, 1619, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 1620,
	426, 427, 428, 1621, 429, 430, 1622, 1352, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 1623, 443, 754, 1624, 755, 444, 1625, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1354, 452, 453, 454, 1626, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 1627, 1353, 759,
	463, 546, 464, 760, 761, 1628, 762, 1629, 465, 466,
	468, 1355, 763, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1630,
	479, 481, 480, 1631, 483, 764, 482, 1358, 484, 485,
	1359, 1632, 486, 487, 488, 489, 490, 491, 494, 1633,
	1634, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1635, 318, 1362, 540, 541, 542, 543, 1636,
	765, 544, 766, 547, 548, 1637, 0, 549, 0, 550,
	1638, 1639, 552, 553, 554, 1640, 1641, 555, 556, 767,
	1363, 557, 1364, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 1642, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 1643, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 1644, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 1645, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 1646,
	646, 647, 645, 648, 649, 650, 1647, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 1648, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 1649, 683, 684,
	0, 678, 669, 1650, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 1651, 693, 779, 780, 781, 782, 1652,
	705, 1653, 694, 696, 697, 698, 699, 783, 700, 784,
	1654, 701, 702, 703, 704, 695, 706, 707, 1655, 1656,
	708, 709, 711, 713, 714, 710, 712, 715, 1657, 716,
	1658, 0, 717, 718, 719, 785, 786, 787, 1659, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 1660, 1661, 1662, 1663, 731, 732, 789, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 0, 0, 0, 4275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4277, 319, 320,
	322, 321, 323, 324, 325, 326, 1585, 327, 328, 1586,
	1587, 1588, 0, 1589, 736, 1590, 1591, 1592, 329, 1593,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 1594, 741,
	342, 343, 344, 345, 346, 347, 348, 1595, 1596, 0,
	349, 742, 743, 744, 1597, 350, 351, 745, 1598, 1665,
	1599, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	1600, 361, 362, 363, 360, 364, 365, 1601, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 1602, 374, 375,
	376, 1351, 377, 378, 379, 1603, 1604, 1606, 1605, 1607,
	1608, 1609, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 1610, 390, 392, 386, 388, 1611, 391, 389,
	393, 394, 1612, 395, 396, 397, 1613, 1614, 398, 399,
	400, 1615, 401, 402, 403, 1616, 404, 405, 406, 1617,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 1618, 316,
	1619, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 1620, 426, 427, 428, 1621, 429, 430,
	1622, 1352, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 1623, 443, 754, 1624,
	755, 444, 1625, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1354, 452, 453, 454, 1626, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 1627, 1353, 759, 463, 546, 464, 760, 761, 1628,
	762, 1629, 465, 466, 468, 1355, 763, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 1630, 479, 481, 480, 1631, 483, 764,
	482, 1358, 484, 485, 1359, 1632, 486, 487, 488, 489,
	490, 491, 494, 1633, 1634, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1635, 318, 1362, 540,
	541, 542, 543, 1636, 765, 544, 766, 547, 548, 1637,
	0, 549, 0, 550, 1638, 1639, 552, 553, 554, 1640,
	1641, 555, 556, 767, 1363, 557, 1364, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 1642, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 1643, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 1644, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 1645, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 1646, 646, 647, 645, 648, 649, 650,
	1647, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 1648,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 1649, 683, 684, 0, 678, 669, 1650, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 1651, 693, 779,
	780, 781, 782, 1652, 705, 1653, 694, 696, 697, 698,
	699, 783, 700, 784, 1654, 701, 702, 703, 704, 695,
	706, 707, 1655, 1656, 708, 709, 711, 713, 714, 710,
	712, 715, 1657, 716, 1658, 0, 717, 718, 719, 785,
	786, 787, 1659, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 1660, 1661, 1662, 1663, 731,
	732, 789, 733, 734, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4745, 319, 320, 322, 321,
	323, 324, 325, 326, 1585, 327, 328, 1586, 1587, 1588,
	0, 1589, 736, 1590, 1591, 1592, 329, 1593, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 1594, 741, 342, 343,
	344, 345, 346, 347, 348, 1595, 1596, 0, 349, 742,
	743, 744, 1597, 350, 351, 745, 1598, 1665, 1599, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 1600, 361,
	362, 363, 360, 364, 365, 1601, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 1602, 374, 375, 376, 1351,
	377, 378, 379, 1603, 1604, 1606, 1605, 1607, 1608, 1609,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	1610, 390, 392, 386, 388, 1611, 391, 389, 393, 394,
	1612, 395, 396, 397, 1613, 1614, 398, 399, 400, 1615,
	401, 402, 403, 1616, 404, 405, 406, 1617, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 1618, 316, 1619, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 1620, 426, 427, 428, 1621, 429, 430, 1622, 1352,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 1623, 443, 754, 1624, 755, 444,
	1625, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 1354, 452, 453, 454, 1626, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 1627,
	1353, 759, 463, 546, 464, 760, 761, 1628, 762, 1629,
	465, 466, 468, 1355, 763, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 1630, 479, 481, 480, 1631, 483, 764, 482, 1358,
	484, 485, 1359, 1632, 486, 487, 488, 489, 490, 491,
	494, 1633, 1634, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 1635, 318, 1362, 540, 541, 542,
	543, 1636, 765, 544, 766, 547, 548, 1637, 0, 549,
	0, 550, 1638, 1639, 552, 553, 554, 1640, 1641, 555,
	556, 767, 1363, 557, 1364, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 1642,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 1643, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 1644, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	1645, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 774, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 1646, 646, 647, 645, 648, 649, 650, 1647, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 1648, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 1649,
	683, 684, 0, 678, 669, 1650, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 1651, 693, 779, 780, 781,
	782, 1652, 705, 1653, 694, 696, 697, 698, 699, 783,
	700, 784, 1654, 701, 702, 703, 704, 695, 706, 707,
	1655, 1656, 708, 709, 711, 713, 714, 710, 712, 715,
	1657, 716, 1658, 0, 717, 718, 719, 785, 786, 787,
	1659, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 1660, 1661, 1662, 1663, 731, 732, 789,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4743, 319, 320, 322, 321, 323, 324,
	325, 326, 1585, 327, 328, 1586, 1587, 1588, 0, 1589,
	736, 1590, 1591, 1592, 329, 1593, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 1594, 741, 342, 343, 344, 345,
	346, 347, 348, 1595, 1596, 0, 349, 742, 743, 744,
	1597, 350, 351, 745, 1598, 1665, 1599, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 1600, 361, 362, 363,
	360, 364, 365, 1601, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 1602, 374, 375, 376, 1351, 377, 378,
	379, 1603, 1604, 1606, 1605, 1607, 1608, 1609, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 1610, 390,
	392, 386, 388, 1611, 391, 389, 393, 394, 1612, 395,
	396, 397, 1613, 1614, 398, 399, 400, 1615, 401, 402,
	403, 1616, 404, 405, 406, 1617, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 1618, 316, 1619, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 1620,
	426, 427, 428, 1621, 429, 430, 1622, 1352, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 1623, 443, 754, 1624, 755, 444, 1625, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1354, 452, 453, 454, 1626, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 1627, 1353, 759,
	463, 546, 464, 760, 761, 1628, 762, 1629, 465, 466,
	468, 1355, 763, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1630,
	479, 481, 480, 1631, 483, 764, 482, 1358, 484, 485,
	1359, 1632, 486, 487, 488, 489, 490, 491, 494, 1633,
	1634, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1635, 318, 1362, 540, 541, 542, 543, 1636,
	765, 544, 766, 547, 548, 1637, 0, 549, 0, 550,
	1638, 1639, 552, 553, 554, 1640, 1641, 555, 556, 767,
	1363, 557, 1364, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 1642, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 1643, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 1644, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 1645, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 1646,
	646, 647, 645, 648, 649, 650, 1647, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 1648, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 1649, 683, 684,
	0, 678, 669, 1650, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 1651, 693, 779, 780, 781, 782, 1652,
	705, 1653, 694, 696, 697, 698, 699, 783, 700, 784,
	1654, 701, 702, 703, 704, 695, 706, 707, 1655, 1656,
	708, 709, 711, 713, 714, 710, 712, 715, 1657, 716,
	1658, 0, 717, 718, 719, 785, 786, 787, 1659, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 1660, 1661, 1662, 1663, 731, 732, 789, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5008, 319, 320, 322, 321,
	323, 324, 325, 326, 1585, 327, 328, 1586, 1587, 1588,
	0, 1589, 736, 1590, 1591, 1592, 329, 1593, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 1594, 741, 342, 343,
	344, 345, 346, 347, 348, 1595, 1596, 0, 349, 742,
	743, 744, 1597, 350, 351, 745, 1598, 1665, 1599, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 1600, 361,
	362, 363, 360, 364, 365, 1601, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 1602, 374, 375, 376, 1351,
	377, 378, 379, 1603, 1604, 1606, 1605, 1607, 1608, 1609,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	1610, 390, 392, 386, 388, 1611, 391, 389, 393, 394,
	1612, 395, 396, 397, 1613, 1614, 398, 399, 400, 1615,
	401, 402, 403, 1616, 404, 405, 406, 1617, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 1618, 316, 1619, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 1620, 426, 427, 428, 1621, 429, 430, 1622, 1352,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 1623, 443, 754, 1624, 755, 444,
	1625, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 1354, 452, 453, 454, 1626, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 1627,
	1353, 759, 463, 546, 464, 760, 761, 1628, 762, 1629,
	465, 466, 468, 1355, 763, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 1630, 479, 481, 480, 1631, 483, 764, 482, 1358,
	484, 485, 1359, 1632, 486, 487, 488, 489, 490, 491,
	494, 1633, 1634, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 1635, 318, 1362, 540, 541, 542,
	543, 1636, 765, 544, 766, 547, 548, 1637, 0, 549,
	0, 550, 1638, 1639, 552, 553, 554, 1640, 1641, 555,
	556, 767, 1363, 557, 1364, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 1642,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 1643, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 1644, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	1645, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 774, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 1646, 646, 647, 645, 648, 649, 650, 1647, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 1648, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 1649,
	683, 684, 0, 678, 669, 1650, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 1651, 693, 779, 780, 781,
	782, 1652, 705, 1653, 694, 696, 697, 698, 699, 783,
	700, 784, 1654, 701, 702, 703, 704, 695, 706, 707,
	1655, 1656, 708, 709, 711, 713, 714, 710, 712, 715,
	1657, 716, 1658, 0, 717, 718, 719, 785, 786, 787,
	1659, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 1660, 1661, 1662, 1663, 731, 732, 789,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4856, 319, 320,
	322, 321, 323, 324, 325, 326, 1585, 327, 328, 1586,
	1587, 1588, 0, 1589, 736, 1590, 1591, 1592, 329, 1593,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 1594, 741,
	342, 343, 344, 345, 346, 347, 348, 1595, 1596, 0,
	349, 742, 743, 744, 1597, 350, 351, 745, 1598, 1665,
	1599, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	1600, 361, 362, 363, 360, 364, 365, 1601, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 1602, 374, 375,
	376, 1351, 377, 378, 379, 1603, 1604, 1606, 1605, 1607,
	1608, 1609, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 1610, 390, 392, 386, 388, 1611, 391, 389,
	393, 394, 1612, 395, 396, 397, 1613, 1614, 398, 399,
	400, 1615, 401, 402, 403, 1616, 404, 405, 406, 1617,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 1618, 316,
	1619, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 1620, 426, 427, 428, 1621, 429, 430,
	1622, 1352, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 1623, 443, 754, 1624,
	755, 444, 1625, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1354, 452, 453, 454, 1626, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 1627, 1353, 759, 463, 546, 464, 760, 761, 1628,
	762, 1629, 465, 466, 468, 1355, 763, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 1630, 479, 481, 480, 1631, 483, 764,
	482, 1358, 484, 485, 1359, 1632, 486, 487, 488, 489,
	490, 491, 494, 1633, 1634, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1635, 318, 1362, 540,
	541, 542, 543, 1636, 765, 544, 766, 547, 548, 1637,
	0, 549, 0, 550, 1638, 1639, 552, 553, 554, 1640,
	1641, 555, 556, 767, 1363, 557, 1364, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 1642, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 1643, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 1644, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 1645, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 1646, 646, 647, 645, 648, 649, 650,
	1647, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 1648,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 1649, 683, 684, 0, 678, 669, 1650, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 1651, 693, 779,
	780, 781, 782, 1652, 705, 1653, 694, 696, 697, 698,
	699, 783, 700, 784, 1654, 701, 702, 703, 704, 695,
	706, 707, 1655, 1656, 708, 709, 711, 713, 714, 710,
	712, 715, 1657, 716, 1658, 0, 717, 718, 719, 785,
	786, 787, 1659, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 1660, 1661, 1662, 1663, 731,
	732, 789, 733, 734, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4669,
	319, 320, 322, 321, 323, 324, 325, 326, 1585, 327,
	328, 1586, 1587, 1588, 0, 1589, 736, 1590, 1591, 1592,
	329, 1593, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	1594, 741, 342, 343, 344, 345, 346, 347, 348, 1595,
	1596, 0, 349, 742, 743, 744, 1597, 350, 351, 745,
	1598, 1665, 1599, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 1600, 361, 362, 363, 360, 364, 365, 1601,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 1602,
	374, 375, 376, 1351, 377, 378, 379, 1603, 1604, 1606,
	1605, 1607, 1608, 1609, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 1610, 390, 392, 386, 388, 1611,
	391, 389, 393, 394, 1612, 395, 396, 397, 1613, 1614,
	398, 399, 400, 1615, 401, 402, 403, 1616, 404, 405,
	406, 1617, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 749, 750, 421,
	1618, 316, 1619, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 1620, 426, 427, 428, 1621,
	429, 430, 1622, 1352, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 1623, 443,
	754, 1624, 755, 444, 1625, 445, 446, 447, 448, 449,
	450, 451, 756, 757, 758, 545, 1354, 452, 453, 454,
	1626, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 1627, 1353, 759, 463, 546, 464, 760,
	761, 1628, 762, 1629, 465, 466, 468, 1355, 763, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1630, 479, 481, 480, 1631,
	483, 764, 482, 1358, 484, 485, 1359, 1632, 486, 487,
	488, 489, 490, 491, 494, 1633, 1634, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 1635, 318,
	1362, 540, 541, 542, 543, 1636, 765, 544, 766, 547,
	548, 1637, 0, 549, 0, 550, 1638, 1639, 552, 553,
	554, 1640, 1641, 555, 556, 767, 1363, 557, 1364, 768,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 1642, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 771, 578, 772, 579, 580, 1643,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 1644, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 1645, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 774, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 1646, 646, 647, 645, 648,
	649, 650, 1647, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 1648, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 778, 679,
	680, 681, 682, 1649, 683, 684, 0, 678, 669, 1650,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 1651,
	693, 779, 780, 781, 782, 1652, 705, 1653, 694, 696,
	697, 698, 699, 783, 700, 784, 1654, 701, 702, 703,
	704, 695, 706, 707, 1655, 1656, 708, 709, 711, 713,
	714, 710, 712, 715, 1657, 716, 1658, 0, 717, 718,
	719, 785, 786, 787, 1659, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 1660, 1661, 1662,
	1663, 731, 732, 789, 733, 734, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4293, 319, 320, 322, 321, 323, 324, 325, 326,
	1585, 327, 328, 1586, 1587, 1588, 0, 1589, 736, 1590,
	1591, 1592, 329, 1593, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 1594, 741, 342, 343, 344, 345, 346, 347,
	348, 1595, 1596, 0, 349, 742, 743, 744, 1597, 350,
	351, 745, 1598, 1665, 1599, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 1600, 361, 362, 363, 360, 364,
	365, 1601, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 1602, 374, 375, 376, 1351, 377, 378, 379, 1603,
	1604, 1606, 1605, 1607, 1608, 1609, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 1610, 390, 392, 386,
	388, 1611, 391, 389, 393, 394, 1612, 395, 396, 397,
	1613, 1614, 398, 399, 400, 1615, 401, 402, 403, 1616,
	404, 405, 406, 1617, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 1618, 316, 1619, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 1620, 426, 427,
	428, 1621, 429, 430, 1622, 1352, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	1623, 443, 754, 1624, 755, 444, 1625, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 1354, 452,
	453, 454, 1626, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 1627, 1353, 759, 463, 546,
	464, 760, 761, 1628, 762, 1629, 465, 466, 468, 1355,
	763, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 1630, 479, 481,
	480, 1631, 483, 764, 482, 1358, 484, 485, 1359, 1632,
	486, 487, 488, 489, 490, 491, 494, 1633, 1634, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	1635, 318, 1362, 540, 541, 542, 543, 1636, 765, 544,
	766, 547, 548, 1637, 0, 549, 0, 550, 1638, 1639,
	552, 553, 554, 1640, 1641, 555, 556, 767, 1363, 557,
	1364, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 1642, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 1643, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	1644, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 1645, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 1646, 646, 647,
	645, 648, 649, 650, 1647, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 1648, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 1649, 683, 684, 0, 678,
	669, 1650, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 1651, 693, 779, 780, 781, 782, 1652, 705, 1653,
	694, 696, 697, 698, 699, 783, 700, 784, 1654, 701,
	702, 703, 704, 695, 706, 707, 1655, 1656, 708, 709,
	711, 713, 714, 710, 712, 715, 1657, 716, 1658, 0,
	717, 718, 719, 785, 786, 787, 1659, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 1660,
	1661, 1662, 1663, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4096, 319, 320, 322, 321, 323, 324,
	325, 326, 1585, 327, 328, 1586, 1587, 1588, 0, 1589,
	736, 1590, 1591, 1592, 329, 1593, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 1594, 741, 342, 343, 344, 345,
	346, 347, 348, 1595, 1596, 0, 349, 742, 743, 744,
	1597, 350, 351, 745, 1598, 1665, 1599, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 1600, 361, 362, 363,
	360, 364, 365, 1601, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 1602, 374, 375, 376, 1351, 377, 378,
	379, 1603, 1604, 1606, 1605, 1607, 1608, 1609, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 1610, 390,
	392, 386, 388, 1611, 391, 389, 393, 394, 1612, 395,
	396, 397, 1613, 1614, 398, 399, 400, 1615, 401, 402,
	403, 1616, 404, 405, 406, 1617, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 1618, 316, 1619, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 1620,
	426, 427, 428, 1621, 429, 430, 1622, 1352, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 1623, 443, 754, 1624, 755, 444, 1625, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1354, 452, 453, 454, 1626, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 1627, 1353, 759,
	463, 546, 464, 760, 761, 1628, 762, 1629, 465, 466,
	468, 1355, 763, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1630,
	479, 481, 480, 1631, 483, 764, 482, 1358, 484, 485,
	1359, 1632, 486, 487, 488, 489, 490, 491, 494, 1633,
	1634, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1635, 318, 1362, 540, 541, 542, 543, 1636,
	765, 544, 766, 547, 548, 1637, 0, 549, 0, 550,
	1638, 1639, 552, 553, 554, 1640, 1641, 555, 556, 767,
	1363, 557, 1364, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 1642, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 1643, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 1644, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 1645, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 1646,
	646, 647, 645, 648, 649, 650, 1647, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 1648, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 1649, 683, 684,
	0, 678, 669, 1650, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 1651, 693, 779, 780, 781, 782, 1652,
	705, 1653, 694, 696, 697, 698, 699, 783, 700, 784,
	1654, 701, 702, 703, 704, 695, 706, 707, 1655, 1656,
	708, 709, 711, 713, 714, 710, 712, 715, 1657, 716,
	1658, 0, 717, 718, 719, 785, 786, 787, 1659, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 1660, 1661, 1662, 1663, 731, 732, 789, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2943, 319, 320, 322, 321,
	323, 324, 325, 326, 1585, 327, 328, 1586, 1587, 1588,
	0, 1589, 736, 1590, 1591, 1592, 329, 1593, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 1594, 741, 342, 343,
	344, 345, 346, 347, 348, 1595, 1596, 0, 349, 742,
	743, 744, 1597, 350, 351, 745, 1598, 1665, 1599, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 1600, 361,
	362, 363, 360, 364, 365, 1601, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 1602, 374, 375, 376, 1351,
	377, 378, 379, 1603, 1604, 1606, 1605, 1607, 1608, 1609,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	1610, 390, 392, 386, 388, 1611, 391, 389, 393, 394,
	1612, 395, 396, 397, 1613, 1614, 398, 399, 400, 1615,
	401, 402, 403, 1616, 404, 405, 406, 1617, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 1618, 316, 1619, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 1620, 426, 427, 428, 1621, 429, 430, 1622, 1352,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 1623, 443, 754, 1624, 755, 444,
	1625, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 1354, 452, 453, 454, 1626, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 1627,
	1353, 759, 463, 546, 464, 760, 761, 1628, 762, 1629,
	465, 466, 468, 1355, 763, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 1630, 479, 481, 480, 1631, 483, 764, 482, 1358,
	484, 485, 1359, 1632, 486, 487, 488, 489, 490, 491,
	494, 1633, 1634, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 1635, 318, 1362, 540, 541, 542,
	543, 1636, 765, 544, 766, 547, 548, 1637, 0, 549,
	0, 550, 1638, 1639, 552, 553, 554, 1640, 1641, 555,
	556, 767, 1363, 557, 1364, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 1642,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 1643, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 1644, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	1645, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 774, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 1646, 646, 647, 645, 648, 649, 650, 1647, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 1648, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 1649,
	683, 684, 0, 678, 669, 1650, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 1651, 693, 779, 780, 781,
	782, 1652, 705, 1653, 694, 696, 697, 698, 699, 783,
	700, 784, 1654, 701, 702, 703, 704, 695, 706, 707,
	1655, 1656, 708, 709, 711, 713, 714, 710, 712, 715,
	1657, 716, 1658, 0, 717, 718, 719, 785, 786, 787,
	1659, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 1660, 1661, 1662, 1663, 731, 732, 789,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 1576,
	0, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2552, 319, 320,
	322, 321, 323, 324, 325, 326, 1585, 327, 328, 1586,
	1587, 1588, 0, 1589, 736, 1590, 1591, 1592, 329, 1593,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 1594, 741,
	342, 343, 344, 345, 346, 347, 348, 1595, 1596, 0,
	349, 742, 743, 744, 1597, 350, 351, 745, 1598, 1665,
	1599, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	1600, 361, 362, 363, 360, 364, 365, 1601, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 1602, 374, 375,
	376, 1351, 377, 378, 379, 1603, 1604, 1606, 1605, 1607,
	1608, 1609, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 1610, 390, 392, 386, 388, 1611, 391, 389,
	393, 394, 1612, 395, 396, 397, 1613, 1614, 398, 399,
	400, 1615, 401, 402, 403, 1616, 404, 405, 406, 1617,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 1618, 316,
	1619, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 1620, 426, 427, 428, 1621, 429, 430,
	1622, 1352, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 1623, 443, 754, 1624,
	755, 444, 1625, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1354, 452, 453, 454, 1626, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 1627, 1353, 759, 463, 546, 464, 760, 761, 1628,
	762, 1629, 465, 466, 468, 1355, 763, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 1630, 479, 481, 480, 1631, 483, 764,
	482, 1358, 484, 485, 1359, 1632, 486, 487, 488, 489,
	490, 491, 494, 1633, 1634, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1635, 318, 1362, 540,
	541, 542, 543, 1636, 765, 544, 766, 547, 548, 1637,
	0, 549, 0, 550, 1638, 1639, 552, 553, 554, 1640,
	1641, 555, 556, 767, 1363, 557, 1364, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 1642, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 1643, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 1644, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 1645, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 1646, 646, 647, 645, 648, 649, 650,
	1647, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 1648,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 1649, 683, 684, 0, 678, 669, 1650, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 1651, 693, 779,
	780, 781, 782, 1652, 705, 1653, 694, 696, 697, 698,
	699, 783, 700, 784, 1654, 701, 702, 703, 704, 695,
	706, 707, 1655, 1656, 708, 709, 711, 713, 714, 710,
	712, 715, 1657, 716, 1658, 0, 717, 718, 719, 785,
	786, 787, 1659, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 1660, 1661, 1662, 1663, 731,
	732, 789, 733, 734, 735, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	1585, 327, 328, 1586, 1587, 1588, 0, 1589, 736, 1590,
	1591, 1592, 329, 1593, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 1594, 741, 342, 343, 344, 345, 346, 347,
	348, 1595, 1596, 0, 349, 742, 743, 744, 1597, 350,
	351, 745, 1598, 1665, 1599, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 1600, 361, 362, 363, 360, 364,
	365, 1601, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 1602, 374, 375, 376, 1351, 377, 378, 379, 1603,
	1604, 1606, 1605, 1607, 1608, 1609, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 1610, 390, 392, 386,
	388, 1611, 391, 389, 393, 394, 1612, 395, 396, 397,
	1613, 1614, 398, 399, 400, 1615, 401, 402, 403, 1616,
	404, 405, 406, 1617, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 1618, 316, 1619, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 1620, 426, 427,
	428, 1621, 429, 430, 1622, 1352, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	1623, 443, 754, 1624, 755, 444, 1625, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 1354, 452,
	453, 454, 1626, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 1627, 1353, 759, 463, 546,
	464, 760, 761, 1628, 762, 1629, 465, 466, 468, 1355,
	763, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 1630, 479, 481,
	480, 1631, 483, 764, 482, 1358, 484, 485, 1359, 1632,
	486, 487, 488, 489, 490, 491, 494, 1633, 1634, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	1635, 318, 1362, 540, 541, 542, 543, 1636, 765, 544,
	766, 547, 548, 1637, 0, 549, 0, 550, 1638, 1639,
	552, 553, 554, 1640, 1641, 555, 556, 767, 1363, 557,
	1364, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 1642, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 1643, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	1644, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 1645, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 1646, 646, 647,
	645, 648, 649, 650, 1647, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 1648, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 1649, 683, 684, 0, 678,
	669, 1650, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 1651, 693, 779, 780, 781, 782, 1652, 705, 1653,
	694, 696, 697, 698, 699, 783, 700, 784, 1654, 701,
	702, 703, 704, 695, 706, 707, 1655, 1656, 708, 709,
	711, 713, 714, 710, 712, 715, 1657, 716, 1658, 0,
	717, 718, 719, 785, 786, 787, 1659, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 1660,
	1661, 1662, 1663, 731, 732, 789, 733, 734, 735, 2918,
	0, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 2915, 327, 328, 0,
	0, 0, 0, 0, 1310, 1274, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 1323, 0, 340, 1330, 341, 1329, 0, 1340,
	342, 343, 344, 345, 346, 347, 348, 1276, 1309, 1241,
	349, 1370, 1371, 744, 0, 350, 351, 1316, 0, 1297,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302,
	1301, 1305, 380, 381, 382, 383, 384, 1333, 385, 387,
	1327, 1326, 1246, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 2916, 0, 398, 1318,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1252, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1341, 1342, 421, 1265, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1325, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 1338, 1339, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1348, 0,
	1275, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1311, 1312, 1315, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 1320, 1321, 0,
	1281, 0, 465, 466, 468, 1355, 1313, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1349,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 1304, 1303, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1243, 318, 1362, 540,
	541, 542, 543, 1266, 1314, 544, 1328, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 1343, 558, 559,
	1253, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1344, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1324, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 1254, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1307, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 1322, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1369, 672, 673, 674, 675, 1345, 679, 680, 681,
	682, 0, 683, 684, 1240, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1334,
	1335, 1336, 1337, 0, 705, 0, 694, 696, 697, 698,
	699, 1346, 700, 1347, 1264, 701, 702, 703, 704, 695,
	706, 707, 0, 1247, 708, 709, 711, 713, 714, 710,
	712, 715, 1308, 716, 0, 0, 717, 718, 719, 785,
	1331, 1368, 2914, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 1237, 1238, 2917,
	0, 0, 0, 0, 0, 0, 0, 1270, 2913, 0,
	1228, 1268, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 1310, 1274, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 1323, 0, 340, 1330, 341, 1329, 0,
	1340, 342, 343, 344, 345, 346, 347, 348, 1276, 1309,
	1241, 349, 1370, 1371, 744, 0, 350, 351, 1316, 0,
	1297, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306,
	1302, 1301, 1305, 380, 381, 382, 383, 384, 1333, 385,
	387, 1327, 1326, 1246, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1318, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1252, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1341, 1342, 421, 1265,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1325,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 1338, 1339, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1348,
	0, 1275, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1311, 1312, 1315, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 1320, 1321,
	0, 1281, 0, 465, 466, 468, 1355, 1313, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1349, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 1304, 1303, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 1243, 318, 1362,
	540, 541, 542, 543, 1266, 1314, 544, 1328, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 1343, 558,
	559, 1253, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1344, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1324, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 1254, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 272, 646, 647, 645, 648, 649,
	650, 1307, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 1322, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1369, 672, 673, 674, 675, 1345, 679, 680,
	681, 682, 0, 683, 684, 1240, 678, 669, 274, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1334, 1335, 1336, 1337, 0, 705, 0, 694, 696, 697,
	698, 699, 1346, 700, 1347, 1264, 701, 702, 703, 704,
	695, 706, 707, 0, 1247, 708, 709, 711, 713, 714,
	710, 712, 715, 1308, 716, 0, 0, 717, 718, 719,
	1828, 1331, 1368, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 266,
	731, 732, 789, 733, 734, 735, 1244, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1239, 0, 0, 0, 0, 0, 0, 1237, 1238,
	1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 2099, 2097,
	0, 0, 1268, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 1310, 1274, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 1323, 0, 340, 1330, 341, 1329, 0, 1340, 342,
	343, 344, 345, 346, 347, 348, 1276, 1309, 1241, 349,
	1370, 1371, 744, 0, 350, 351, 1316, 0, 1297, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301,
	1305, 380, 381, 382, 383, 384, 1333, 385, 387, 1327,
	1326, 1246, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1318, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1252, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1341, 1342, 421, 1265, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1325, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 1338, 1339, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1348, 0, 1275,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1311,
	1312, 1315, 545, 1354, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1353, 759, 463, 546, 464, 1320, 1321, 0, 1281,
	0, 465, 466, 468, 1355, 1313, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1349, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 1304, 1303, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 1243, 318, 1362, 540, 541,
	542, 543, 1266, 1314, 544, 1328, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1363, 557, 1364, 1343, 558, 559, 1253,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1344, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1324,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 1254, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 272, 646, 647, 645, 648, 649, 650, 1307,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 1322, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1369, 672, 673, 674, 675, 1345, 679, 680, 681, 682,
	0, 683, 684, 1240, 678, 669, 274, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1334, 1335,
	1336, 1337, 0, 705, 0, 694, 696, 697, 698, 699,
	1346, 700, 1347, 1264, 701, 702, 703, 704, 695, 706,
	707, 0, 1247, 708, 709, 711, 713, 714, 710, 712,
	715, 1308, 716, 0, 0, 717, 718, 719, 1828, 1331,
	1368, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 266, 731, 732,
	789, 733, 734, 735, 1244, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 0, 0, 0, 0, 1237, 1238, 1286, 1258,
	1259, 1260, 1256, 1257, 1269, 0, 2099, 3671, 0, 0,
	1268, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 1310, 1274, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 737, 1323,
	0, 340, 1330, 341, 1329, 0, 1340, 342, 343, 344,
	345, 346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371,
	744, 0, 350, 351, 1316, 0, 1297, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380,
	381, 382, 383, 384, 1333, 385, 387, 1327, 1326, 1246,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1318, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1252,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1341, 1342, 421, 1265, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1325, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 1338, 1339, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1348, 0, 1275, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1311, 1312, 1315,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 1320, 1321, 0, 1281, 0, 465,
	466, 468, 1355, 1313, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1349, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	1304, 1303, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 1243, 318, 1362, 540, 541, 542, 543,
	1266, 1314, 544, 1328, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 1343, 558, 559, 1253, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1344,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1324, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 1254, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	272, 646, 647, 645, 648, 649, 650, 1307, 651, 775,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 1322, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1369, 672,
	673, 674, 675, 1345, 679, 680, 681, 682, 0, 683,
	684, 1240, 678, 669, 274, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1334, 1335, 1336, 1337,
	0, 705, 0, 694, 696, 697, 698, 699, 1346, 700,
	1347, 1264, 701, 702, 703, 704, 695, 706, 707, 0,
	1247, 708, 709, 711, 713, 714, 710, 712, 715, 1308,
	716, 0, 0, 717, 718, 719, 1828, 1331, 1368, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 266, 731, 732, 789, 733,
	734, 735, 1244, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 1237, 1238, 1286, 1258, 1259, 1260,
	1256, 1257, 1269, 0, 2099, 2097, 0, 0, 1268, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 1310,
	1274, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 1323, 0, 340,
	1330, 341, 1329, 3048, 1340, 342, 343, 344, 345, 346,
	347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0,
	350, 351, 1316, 0, 1297, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382,
	383, 384, 1333, 385, 387, 1327, 1326, 1246, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1252, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1341, 1342, 421, 1265, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1325, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 3053, 1352, 431, 432, 433,
	1338, 1339, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1348, 0, 1275, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1311, 1312, 1315, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 1320, 1321, 0, 1281, 0, 465, 466, 468,
	1355, 1313, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 3049, 483, 1349, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 1304, 1303,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 1243, 318, 1362, 540, 541, 542, 543, 1266, 1314,
	544, 1328, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 1343, 558, 559, 1253, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1344, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1324, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 1254,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1307, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 1322, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1369, 672, 673, 674,
	675, 1345, 679, 680, 681, 682, 0, 683, 684, 1240,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1334, 1335, 1336, 1337, 0, 705,
	3050, 694, 696, 697, 698, 699, 1346, 700, 1347, 1264,
	701, 702, 703, 704, 695, 706, 707, 0, 1247, 708,
	709, 711, 713, 714, 710, 712, 715, 1308, 716, 0,
	0, 717, 718, 719, 785, 1331, 1368, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1244, 0, 0, 0, 0, 2963, 0, 1286, 1258, 1259,
	1260, 1256, 1257, 1269, 0, 1239, 0, 0, 0, 0,
	0, 0, 1237, 1238, 319, 320, 322, 321, 323, 324,
	325, 326, 1270, 327, 328, 0, 1268, 0, 0, 0,
	1310, 1274, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 1323, 0,
	340, 1330, 341, 1329, 0, 1340, 342, 343, 344, 345,
	346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 1333, 385, 387, 1327, 1326, 1246, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1318, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1252, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 1265, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1325, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 1338, 1339, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 1275, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 1320, 1321, 0, 1281, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1243, 318, 1362, 540, 541, 542, 543, 1266,
	1314, 544, 1328, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 1253, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1324, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	1254, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 1322, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1369, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	1240, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1334, 1335, 1336, 1337, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	1264, 701, 702, 703, 704, 695, 706, 707, 0, 1247,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 1331, 1368, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1239, 0, 0, 0,
	0, 0, 0, 1237, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 2961, 0, 2960, 1268, 1286, 1258,
	1259, 1260, 1256, 1257, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 1310, 1274, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 737, 1323,
	0, 340, 1330, 341, 1329, 0, 1340, 342, 343, 344,
	345, 346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371,
	744, 0, 350, 351, 1316, 0, 1297, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380,
	381, 382, 383, 384, 1333, 385, 387, 1327, 1326, 1246,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1318, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1252,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1341, 1342, 421, 1265, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1325, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 1338, 1339, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1348, 0, 1275, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1311, 1312, 1315,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 1320, 1321, 0, 1281, 0, 465,
	466, 468, 1355, 1313, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1349, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	1304, 1303, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 1243, 318, 1362, 540, 541, 542, 543,
	1266, 1314, 544, 1328, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 1343, 558, 559, 1253, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1344,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1324, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 1254, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1307, 651, 775,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 1322, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1369, 672,
	673, 674, 675, 1345, 679, 680, 681, 682, 0, 683,
	684, 1240, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1334, 1335, 1336, 1337,
	0, 705, 0, 694, 696, 697, 698, 699, 1346, 700,
	1347, 1264, 701, 702, 703, 704, 695, 706, 707, 0,
	1247, 708, 709, 711, 713, 714, 710, 712, 715, 1308,
	716, 0, 0, 717, 718, 719, 785, 1331, 1368, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 1237, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 2958, 0, 2957, 1268, 1286,
	1258, 1259, 1260, 1256, 1257, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 320, 322, 321,
	323, 324, 325, 326, 0, 327, 328, 0, 0, 0,
	0, 0, 1310, 1274, 0, 0, 329, 0, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	1323, 0, 340, 1330, 341, 1329, 0, 1340, 342, 343,
	344, 345, 346, 347, 348, 1276, 1309, 1241, 349, 1370,
	1371, 744, 0, 350, 351, 1316, 0, 1297, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1351,
	377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305,
	380, 381, 382, 383, 384, 1333, 385, 387, 1327, 1326,
	1246, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1318, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1252, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1341, 1342, 421, 1265, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1325, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1352,
	431, 432, 433, 1338, 1339, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1348, 0, 1275, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1311, 1312,
	1315, 545, 1354, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1353, 759, 463, 546, 464, 1320, 1321, 0, 1281, 0,
	465, 466, 468, 1355, 1313, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1349, 482, 1358,
	484, 485, 1359, 0, 486, 487, 488, 489, 490, 491,
	494, 1304, 1303, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 1243, 318, 1362, 540, 541, 542,
	543, 1266, 1314, 544, 1328, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1363, 557, 1364, 1343, 558, 559, 1253, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1344, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1324, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 1254, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1307, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 1322, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1369,
	672, 673, 674, 675, 1345, 679, 680, 681, 682, 0,
	683, 684, 1240, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1334, 1335, 1336,
	1337, 0, 705, 0, 694, 696, 697, 698, 699, 1346,
	700, 1347, 1264, 701, 702, 703, 704, 695, 706, 707,
	0, 1247, 708, 709, 711, 713, 714, 710, 712, 715,
	1308, 716, 0, 0, 717, 718, 719, 785, 1331, 1368,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	0, 0, 0, 0, 0, 1237, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 2955, 0, 2954, 1268,
	1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 1310, 1274, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 1323, 0, 340, 1330, 341, 1329, 0, 1340, 342,
	343, 344, 345, 346, 347, 348, 1276, 1309, 1241, 349,
	1370, 1371, 744, 0, 350, 351, 1316, 0, 1297, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301,
	1305, 380, 381, 382, 383, 384, 1333, 385, 387, 1327,
	1326, 1246, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1318, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1252, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1341, 1342, 421, 1265, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1325, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 1338, 1339, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1348, 0, 1275,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1311,
	1312, 1315, 545, 1354, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1353, 759, 463, 546, 464, 1320, 1321, 0, 1281,
	0, 465, 466, 468, 1355, 1313, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1349, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 1304, 1303, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 1243, 318, 1362, 540, 541,
	542, 543, 1266, 1314, 544, 1328, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1363, 557, 1364, 1343, 558, 559, 1253,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1344, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1324,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 1254, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1307,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 1322, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1369, 672, 673, 674, 675, 1345, 679, 680, 681, 682,
	0, 683, 684, 1240, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1334, 1335,
	1336, 1337, 0, 705, 0, 694, 696, 697, 698, 699,
	1346, 700, 1347, 1264, 701, 702, 703, 704, 695, 706,
	707, 0, 1247, 708, 709, 711, 713, 714, 710, 712,
	715, 1308, 716, 0, 0, 717, 718, 719, 785, 1331,
	1368, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 0, 0, 0, 0, 1237, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 2952, 0, 1931,
	1268, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 0, 1310, 1274, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 1323, 0, 340, 1330, 341, 1329, 0, 1340,
	342, 343, 344, 345, 346, 347, 348, 1276, 1309, 1241,
	349, 1370, 1371, 744, 0, 350, 351, 1316, 0, 1297,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302,
	1301, 1305, 380, 381, 382, 383, 384, 1333, 385, 387,
	1327, 1326, 1246, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1318,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1252, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1341, 1342, 421, 1265, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1325, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 1338, 1339, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1348, 0,
	1275, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1311, 1312, 1315, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 1320, 1321, 0,
	1281, 0, 465, 466, 468, 1355, 1313, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1349,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 1304, 1303, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1243, 318, 1362, 540,
	541, 542, 543, 1266, 1314, 544, 1328, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 1343, 558, 559,
	1253, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1344, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1324, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 1254, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1307, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 1322, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1369, 672, 673, 674, 675, 1345, 679, 680, 681,
	682, 0, 683, 684, 1240, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1334,
	1335, 1336, 1337, 0, 705, 0, 694, 696, 697, 698,
	699, 1346, 700, 1347, 1264, 701, 702, 703, 704, 695,
	706, 707, 0, 1247, 708, 709, 711, 713, 714, 710,
	712, 715, 1308, 716, 0, 0, 717, 718, 719, 785,
	1331, 1368, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 1930, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1244, 0, 0, 0, 0,
	1233, 0, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0,
	1239, 0, 0, 0, 0, 0, 0, 1237, 1238, 319,
	320, 322, 321, 323, 324, 325, 326, 1270, 327, 328,
	0, 1268, 0, 0, 0, 1310, 1274, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 1323, 0, 340, 1330, 341, 1329, 0,
	1340, 342, 343, 344, 345, 346, 347, 348, 1276, 1309,
	1241, 349, 1370, 1371, 744, 0, 350, 351, 1316, 0,
	1297, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306,
	1302, 1301, 1305, 380, 381, 382, 383, 384, 1333, 385,
	387, 1327, 1326, 1246, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1318, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1252, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1341, 1342, 421, 1265,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1325,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 1338, 1339, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1348,
	0, 1275, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1311, 1312, 1315, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 1320, 1321,
	0, 1281, 0, 465, 466, 468, 1355, 1313, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1349, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 1304, 1303, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 1243, 318, 1362,
	540, 541, 542, 543, 1266, 1314, 544, 1328, 547, 548,
	0, 0, 549, 0, 550, 1248, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 1343, 558,
	559, 1253, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1344, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1324, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 1254, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1307, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 1322, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1369, 672, 673, 674, 675, 1345, 679, 680,
	681, 682, 0, 683, 684, 1240, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1334, 1335, 1336, 1337, 0, 705, 0, 694, 696, 697,
	698, 699, 1346, 700, 1347, 1264, 701, 702, 703, 704,
	695, 706, 707, 0, 1247, 708, 709, 711, 713, 714,
	710, 712, 715, 1308, 716, 0, 0, 717, 718, 719,
	785, 1331, 1368, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1244, 0, 0, 0,
	0, 0, 0, 1286, 1258, 1259, 1260, 1256, 1257, 1269,
	0, 1239, 0, 0, 0, 0, 0, 0, 1237, 1238,
	319, 320, 322, 321, 323, 324, 325, 326, 1270, 327,
	328, 0, 1268, 0, 0, 0, 1310, 1274, 0, 0,
	329, 0, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 1323, 0, 340, 1330, 341, 1329,
	0, 1340, 342, 343, 344, 345, 346, 347, 348, 1276,
	1309, 1241, 349, 1370, 1371, 744, 0, 350, 351, 1316,
	0, 1297, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 5401, 372, 373, 0,
	374, 375, 376, 1351, 377, 378, 379, 1300, 1298, 1299,
	1306, 1302, 1301, 1305, 380, 381, 382, 383, 384, 1333,
	385, 387, 1327, 1326, 1246, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1318, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1252, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1341, 1342, 421,
	1265, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1325, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1352, 431, 432, 433, 1338, 1339, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1348, 0, 1275, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1311, 1312, 1315, 545, 1354, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1353, 759, 463, 546, 464, 1320,
	1321, 0, 1281, 0, 465, 466, 468, 1355, 1313, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1349, 482, 1358, 484, 485, 1359, 0, 486, 487,
	488, 489, 490, 491, 494, 1304, 1303, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 1243, 318,
	1362, 540, 541, 542, 543, 1266, 1314, 544, 1328, 547,
	548, 0, 0, 549, 0, 550, 1248, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1363, 557, 1364, 1343,
	558, 559, 1253, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1344, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1324, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 1254, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1307, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 1322, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1369, 672, 673, 674, 675, 1345, 679,
	680, 681, 682, 0, 683, 684, 1240, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1334, 1335, 1336, 1337, 0, 705, 0, 694, 696,
	697, 698, 699, 1346, 700, 1347, 1264, 701, 702, 703,
	704, 695, 706, 707, 0, 1247, 708, 709, 711, 713,
	714, 710, 712, 715, 1308, 716, 0, 0, 717, 718,
	719, 785, 1331, 1368, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1244, 0, 0,
	0, 0, 0, 0, 1286, 1258, 1259, 1260, 1256, 1257,
	1269, 0, 1239, 0, 0, 0, 0, 0, 0, 1237,
	1238, 319, 320, 322, 321, 323, 324, 325, 326, 1270,
	327, 328, 0, 1268, 0, 0, 0, 1310, 1274, 0,
	0, 329, 0, 330, 331, 332, 1350, 333, 334, 335,
	336, 337, 338, 339, 737, 1323, 0, 340, 1330, 341,
	1329, 0, 1340, 342, 343, 344, 345, 346, 347, 348,
	1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350, 351,
	1316, 0, 1297, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1351, 377, 378, 379, 1300, 1298,
	1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383, 384,
	1333, 385, 387, 1327, 1326, 1246, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1318, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1252, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1341, 1342,
	421, 1265, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1325, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1352, 431, 432, 433, 1338, 1339,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1348, 0, 1275, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1311, 1312, 1315, 545, 1354, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	2793, 460, 461, 462, 0, 1353, 759, 463, 546, 464,
	1320, 1321, 0, 1281, 0, 465, 466, 468, 1355, 1313,
	1356, 467, 469, 470, 1357, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1349, 482, 1358, 484, 485, 1359, 0, 486,
	487, 488, 489, 490, 491, 494, 1304, 1303, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1360, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1361, 538, 526, 1243,
	318, 1362, 540, 541, 542, 543, 1266, 1314, 544, 1328,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1363, 557, 1364,
	1343, 558, 559, 1253, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1344, 578, 772, 579, 580,
	2792, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1324, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1365, 620, 621, 622, 623, 624, 1254, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1307, 651, 775, 652, 632, 633, 653,
	654, 1366, 655, 656, 657, 658, 659, 660, 661, 1322,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1369, 672, 673, 674, 675, 1345,
	679, 680, 681, 682, 0, 683, 684, 1240, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1334, 1335, 1336, 1337, 0, 705, 0, 694,
	696, 697, 698, 699, 1346, 700, 1347, 1264, 701, 702,
	703, 704, 695, 706, 707, 0, 1247, 708, 709, 711,
	713, 714, 710, 712, 715, 1308, 716, 0, 0, 717,
	718, 719, 785, 1331, 1368, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1244, 0,
	0, 0, 0, 0, 0, 1286, 1258, 1259, 1260, 1256,
	1257, 1269, 0, 1239, 0, 0, 0, 0, 0, 0,
	1237, 1238, 319, 320, 322, 321, 323, 324, 325, 326,
	1270, 327, 328, 0, 1268, 0, 0, 0, 1310, 1274,
	0, 0, 329, 0, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 1323, 0, 340, 1330,
	341, 1329, 0, 1340, 342, 343, 344, 345, 346, 347,
	348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350,
	351, 1316, 0, 1297, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 5107, 372,
	373, 0, 374, 375, 376, 1351, 377, 378, 379, 1300,
	1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383,
	384, 1333, 385, 387, 1327, 1326, 1246, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1318, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1252, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1341,
	1342, 421, 1265, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1325, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1352, 431, 432, 433, 1338,
	1339, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1348, 0, 1275, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1311, 1312, 1315, 545, 1354, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1353, 759, 463, 546,
	464, 1320, 1321, 0, 1281, 0, 465, 466, 468, 1355,
	1313, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1349, 482, 1358, 484, 485, 1359, 0,
	486, 487, 488, 489, 490, 491, 494, 1304, 1303, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	1243, 318, 1362, 540, 541, 542, 543, 1266, 1314, 544,
	1328, 547, 548, 0, 0, 549, 0, 550, 1248, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1363, 557,
	1364, 1343, 558, 559, 1253, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1344, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1324, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 1254, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1307, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	1322, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1369, 672, 673, 674, 675,
	1345, 679, 680, 681, 682, 0, 683, 684, 1240, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1334, 1335, 1336, 1337, 0, 705, 0,
	694, 696, 697, 698, 699, 1346, 700, 1347, 1264, 701,
	702, 703, 704, 695, 706, 707, 0, 1247, 708, 709,
	711, 713, 714, 710, 712, 715, 1308, 716, 0, 0,
	717, 718, 719, 785, 1331, 1368, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1244,
	0, 0, 0, 0, 0, 0, 1286, 1258, 1259, 1260,
	1256, 1257, 1269, 0, 1239, 0, 0, 0, 0, 0,
	0, 1237, 1238, 319, 320, 322, 321, 323, 324, 325,
	326, 1270, 327, 328, 0, 1268, 0, 0, 0, 1310,
	1274, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 1323, 0, 340,
	1330, 341, 1329, 0, 1340, 342, 343, 344, 345, 346,
	347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0,
	350, 351, 1316, 0, 1297, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382,
	383, 384, 1333, 385, 387, 1327, 1326, 1246, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1252, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1341, 1342, 421, 1265, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1325, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	1338, 1339, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1348, 0, 1275, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1311, 1312, 1315, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 1320, 1321, 0, 1281, 0, 465, 466, 468,
	1355, 1313, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1349, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 1304, 1303,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 1243, 318, 1362, 540, 541, 542, 543, 1266, 1314,
	544, 1328, 547, 548, 0, 0, 549, 0, 550, 1248,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 1343, 558, 559, 1253, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1344, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1324, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 1254,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1307, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 1322, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1369, 672, 673, 674,
	675, 1345, 679, 680, 681, 682, 0, 683, 684, 1240,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1334, 1335, 1336, 1337, 0, 705,
	0, 694, 696, 697, 698, 699, 1346, 700, 1347, 1264,
	701, 702, 703, 704, 695, 706, 707, 0, 1247, 708,
	709, 711, 713, 714, 710, 712, 715, 1308, 716, 0,
	0, 717, 718, 719, 785, 1331, 1368, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1244, 0, 0, 0, 0, 0, 0, 1286, 1258, 1259,
	1260, 1256, 1257, 1269, 0, 1239, 0, 0, 0, 0,
	0, 0, 1237, 1238, 319, 320, 322, 321, 323, 324,
	325, 326, 1270, 327, 328, 0, 1268, 0, 0, 0,
	1310, 1274, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 1323, 0,
	340, 1330, 341, 1329, 0, 1340, 342, 343, 344, 345,
	346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 1333, 385, 387, 1327, 1326, 1246, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1318, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1252, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 1265, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1325, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 1338, 1339, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 1275, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 1320, 1321, 0, 1281, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1243, 4634, 1362, 540, 541, 542, 543, 1266,
	1314, 544, 1328, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 1253, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1324, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	1254, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 1322, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1369, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	1240, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1334, 1335, 1336, 1337, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	1264, 701, 702, 703, 704, 695, 706, 707, 0, 1247,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 1331, 1368, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1239, 0, 0, 0,
	0, 0, 0, 1237, 1238, 2170, 1286, 1258, 1259, 1260,
	1256, 1257, 1269, 1270, 0, 0, 0, 1268, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 1310,
	1274, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 1323, 0, 340,
	1330, 341, 1329, 0, 1340, 342, 343, 344, 345, 346,
	347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0,
	350, 351, 1316, 0, 1297, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382,
	383, 384, 1333, 385, 387, 1327, 1326, 1246, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1252, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1341, 1342, 421, 1265, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1325, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	1338, 1339, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1348, 0, 1275, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1311, 1312, 1315, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 1320, 1321, 0, 1281, 0, 465, 466, 468,
	1355, 1313, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1349, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 1304, 1303,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 1243, 318, 1362, 540, 541, 542, 543, 1266, 1314,
	544, 1328, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 1343, 558, 559, 1253, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1344, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1324, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 1254,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1307, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 1322, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1369, 672, 673, 674,
	675, 1345, 679, 680, 681, 682, 0, 683, 684, 1240,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1334, 1335, 1336, 1337, 0, 705,
	0, 694, 696, 697, 698, 699, 1346, 700, 1347, 1264,
	701, 702, 703, 704, 695, 706, 707, 0, 1247, 708,
	709, 711, 713, 714, 710, 712, 715, 1308, 716, 0,
	0, 717, 718, 719, 785, 1331, 1368, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1239, 0, 0, 0, 0,
	0, 0, 1237, 1238, 2170, 1286, 1258, 1259, 1260, 1256,
	1257, 1269, 1270, 0, 0, 0, 1268, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 0, 1310, 1274,
	0, 0, 329, 0, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 1323, 0, 340, 1330,
	341, 1329, 0, 1340, 342, 343, 344, 345, 346, 347,
	348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350,
	351, 1316, 0, 1297, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1351, 377, 378, 379, 1300,
	1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383,
	384, 1333, 385, 387, 1327, 1326, 1246, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1318, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1252, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1341,
	1342, 421, 1265, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1325, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1352, 431, 432, 433, 1338,
	1339, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1348, 0, 1275, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1311, 1312, 1315, 545, 1354, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1353, 759, 463, 546,
	464, 1320, 1321, 0, 1281, 0, 465, 466, 468, 1355,
	1313, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1349, 482, 1358, 484, 485, 1359, 0,
	486, 487, 488, 489, 490, 491, 494, 1304, 1303, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	1243, 318, 1362, 540, 541, 542, 543, 1266, 1314, 544,
	1328, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1363, 557,
	1364, 1343, 558, 559, 1253, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1344, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1324, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 1254, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1307, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	1322, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1369, 672, 673, 674, 675,
	1345, 679, 680, 681, 682, 0, 683, 684, 1240, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1334, 1335, 1336, 1337, 0, 705, 0,
	694, 696, 697, 698, 699, 1346, 700, 1347, 1264, 701,
	702, 703, 704, 695, 706, 707, 0, 1247, 708, 709,
	711, 713, 714, 710, 712, 715, 1308, 716, 0, 0,
	717, 718, 719, 785, 1331, 1368, 4271, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1244,
	0, 0, 0, 0, 0, 0, 1286, 1258, 1259, 1260,
	1256, 1257, 1269, 0, 1239, 0, 0, 0, 0, 0,
	0, 1237, 1238, 319, 320, 322, 321, 323, 324, 325,
	326, 1270, 327, 328, 0, 1268, 0, 0, 0, 1310,
	1274, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 1323, 0, 340,
	1330, 341, 1329, 0, 1340, 342, 343, 344, 345, 346,
	347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0,
	350, 351, 1316, 0, 1297, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382,
	383, 384, 1333, 385, 387, 1327, 1326, 1246, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1252, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1341, 1342, 421, 1265, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1325, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 3053, 1352, 431, 432, 433,
	1338, 1339, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1348, 0, 1275, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1311, 1312, 1315, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 1320, 1321, 0, 1281, 0, 465, 466, 468,
	1355, 1313, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1349, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 1304, 1303,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 1243, 318, 1362, 540, 541, 542, 543, 1266, 1314,
	544, 1328, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 1343, 558, 559, 1253, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1344, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1324, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 1254,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1307, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 1322, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1369, 672, 673, 674,
	675, 1345, 679, 680, 681, 682, 0, 683, 684, 1240,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1334, 1335, 1336, 1337, 0, 705,
	0, 694, 696, 697, 698, 699, 1346, 700, 1347, 1264,
	701, 702, 703, 704, 695, 706, 707, 0, 1247, 708,
	709, 711, 713, 714, 710, 712, 715, 1308, 716, 0,
	0, 717, 718, 719, 785, 1331, 1368, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1244, 0, 0, 0, 0, 0, 0, 1286, 1258, 1259,
	1260, 1256, 1257, 1269, 0, 1239, 0, 0, 0, 0,
	0, 0, 1237, 1238, 319, 320, 322, 321, 323, 324,
	325, 326, 1270, 327, 328, 0, 1268, 0, 0, 0,
	1310, 1274, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 1323, 0,
	340, 1330, 341, 1329, 0, 1340, 342, 343, 344, 345,
	346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 1333, 385, 387, 1327, 1326, 1246, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1318, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1252, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 1265, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1325, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 1338, 1339, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 1275, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 1320, 1321, 0, 1281, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1243, 318, 1362, 540, 541, 542, 543, 1266,
	1314, 544, 1328, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 1253, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1324, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	1254, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 1322, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1369, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	1240, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1334, 1335, 1336, 1337, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	1264, 701, 702, 703, 704, 695, 706, 707, 0, 1247,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 1331, 1368, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1239, 0, 0, 0,
	0, 0, 0, 1237, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 2097, 0, 3058, 1268, 1286, 1258,
	1259, 1260, 1256, 1257, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 1310, 1274, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 737, 1323,
	0, 340, 1330, 341, 1329, 0, 1340, 342, 343, 344,
	345, 346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371,
	744, 0, 350, 351, 1316, 0, 1297, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380,
	381, 382, 383, 384, 1333, 385, 387, 1327, 1326, 1246,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1318, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1252,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1341, 1342, 421, 1265, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1325, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 1338, 1339, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1348, 0, 1275, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1311, 1312, 1315,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 1320, 1321, 0, 1281, 0, 465,
	466, 468, 1355, 1313, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1349, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	1304, 1303, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 1243, 318, 1362, 540, 541, 542, 543,
	1266, 1314, 544, 1328, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 1343, 558, 559, 1253, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1344,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1324, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 1254, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1307, 651, 775,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 1322, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1369, 672,
	673, 674, 675, 1345, 679, 680, 681, 682, 0, 683,
	684, 1240, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1334, 1335, 1336, 1337,
	0, 705, 0, 694, 696, 697, 698, 699, 1346, 700,
	1347, 1264, 701, 702, 703, 704, 695, 706, 707, 0,
	1247, 708, 709, 711, 713, 714, 710, 712, 715, 1308,
	716, 0, 0, 717, 718, 719, 785, 1331, 1368, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1244, 0, 0, 0, 0, 3056, 0, 1286,
	1258, 1259, 1260, 1256, 1257, 1269, 0, 1239, 0, 0,
	0, 0, 0, 0, 1237, 1238, 319, 320, 322, 321,
	323, 324, 325, 326, 1270, 327, 328, 0, 1268, 0,
	0, 0, 1310, 1274, 0, 0, 329, 0, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	1323, 0, 340, 1330, 341, 1329, 0, 1340, 342, 343,
	344, 345, 346, 347, 348, 1276, 1309, 1241, 349, 1370,
	1371, 744, 0, 350, 351, 1316, 0, 1297, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1351,
	377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305,
	380, 381, 382, 383, 384, 1333, 385, 387, 1327, 1326,
	1246, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1318, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1252, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1341, 1342, 421, 1265, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1325, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1352,
	431, 432, 433, 1338, 1339, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1348, 0, 1275, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1311, 1312,
	1315, 545, 1354, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1353, 759, 463, 546, 464, 1320, 1321, 0, 1281, 0,
	465, 466, 468, 1355, 1313, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1349, 482, 1358,
	484, 485, 1359, 0, 486, 487, 488, 489, 490, 491,
	494, 1304, 1303, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 1243, 318, 1362, 540, 541, 542,
	543, 1266, 1314, 544, 1328, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1363, 557, 1364, 1343, 558, 559, 1253, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1344, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1324, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 1254, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1307, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 1322, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1369,
	672, 673, 674, 675, 1345, 679, 680, 681, 682, 0,
	683, 684, 1240, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1334, 1335, 1336,
	1337, 0, 705, 0, 694, 696, 697, 698, 699, 1346,
	700, 1347, 1264, 701, 702, 703, 704, 695, 706, 707,
	0, 1247, 708, 709, 711, 713, 714, 710, 712, 715,
	1308, 716, 0, 0, 717, 718, 719, 785, 1331, 1368,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1244, 0, 0, 0, 0, 3044, 0,
	1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 1239, 0,
	0, 0, 0, 0, 0, 1237, 1238, 319, 320, 322,
	321, 323, 324, 325, 326, 1270, 327, 328, 0, 1268,
	0, 0, 0, 1310, 1274, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 1323, 0, 340, 1330, 341, 1329, 0, 1340, 342,
	343, 344, 345, 346, 347, 348, 1276, 1309, 1241, 349,
	1370, 1371, 744, 0, 350, 351, 1316, 0, 1297, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301,
	1305, 380, 381, 382, 383, 384, 1333, 385, 387, 1327,
	1326, 1246, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1318, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1252, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1341, 1342, 421, 1265, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1325, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 1338, 1339, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1348, 0, 1275,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1311,
	1312, 1315, 545, 1354, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1353, 759, 463, 546, 464, 1320, 1321, 0, 1281,
	0, 465, 466, 468, 1355, 1313, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1349, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 1304, 1303, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 1243, 318, 1362, 540, 541,
	542, 543, 1266, 1314, 544, 1328, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1363, 557, 1364, 1343, 558, 559, 1253,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1344, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1324,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 1254, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1307,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 1322, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1369, 672, 673, 674, 675, 1345, 679, 680, 681, 682,
	0, 683, 684, 1240, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1334, 1335,
	1336, 1337, 0, 705, 0, 694, 696, 697, 698, 699,
	1346, 700, 1347, 1264, 701, 702, 703, 704, 695, 706,
	707, 0, 1247, 708, 709, 711, 713, 714, 710, 712,
	715, 1308, 716, 0, 0, 717, 718, 719, 785, 1331,
	1368, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1244, 0, 0, 0, 0, 3033,
	0, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 1239,
	0, 0, 0, 0, 0, 0, 1237, 1238, 319, 320,
	322, 321, 323, 324, 325, 326, 1270, 327, 328, 0,
	1268, 0, 0, 0, 1310, 1274, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 1323, 0, 340, 1330, 341, 1329, 0, 1340,
	342, 343, 344, 345, 346, 347, 348, 1276, 1309, 1241,
	349, 1370, 1371, 744, 0, 350, 351, 1316, 0, 1297,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302,
	1301, 1305, 380, 381, 382, 383, 384, 1333, 385, 387,
	1327, 1326, 1246, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1318,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1252, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1341, 1342, 421, 1265, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1325, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 1338, 1339, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1348, 0,
	1275, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1311, 1312, 1315, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 1320, 1321, 0,
	1281, 0, 465, 466, 468, 1355, 1313, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1349,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 1304, 1303, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1243, 318, 1362, 540,
	541, 542, 543, 1266, 1314, 544, 1328, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 1343, 558, 559,
	1253, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1344, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1324, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 1254, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1307, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 1322, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1369, 672, 673, 674, 675, 1345, 679, 680, 681,
	682, 0, 683, 684, 1240, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1334,
	1335, 1336, 1337, 0, 705, 0, 694, 696, 697, 698,
	699, 1346, 700, 1347, 1264, 701, 702, 703, 704, 695,
	706, 707, 0, 1247, 708, 709, 711, 713, 714, 710,
	712, 715, 1308, 716, 0, 0, 717, 718, 719, 785,
	1331, 1368, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1244, 0, 0, 0, 0,
	3031, 0, 3022, 3029, 1259, 1260, 1256, 1257, 1269, 0,
	1239, 0, 0, 0, 0, 0, 0, 1237, 1238, 319,
	320, 322, 321, 323, 324, 325, 326, 1270, 327, 328,
	0, 1268, 0, 0, 0, 1310, 1274, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 1323, 0, 340, 1330, 341, 1329, 0,
	1340, 342, 343, 344, 345, 346, 347, 348, 1276, 1309,
	1241, 349, 1370, 1371, 744, 0, 350, 351, 1316, 0,
	1297, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306,
	1302, 1301, 1305, 380, 381, 382, 383, 384, 1333, 3025,
	387, 1327, 1326, 1246, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1318, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1252, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1341, 1342, 421, 1265,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1325,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 1338, 1339, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1348,
	0, 1275, 444, 0, 445, 446, 447, 448, 449, 3026,
	451, 1311, 1312, 1315, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 1320, 1321,
	0, 1281, 0, 465, 466, 468, 1355, 1313, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1349, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 1304, 1303, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 3027, 504, 3024,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 1243, 318, 1362,
	540, 541, 542, 543, 1266, 1314, 544, 1328, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 1343, 558,
	559, 1253, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1344, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1324, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 1254, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 3028, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1307, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 1322, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1369, 672, 673, 674, 675, 1345, 679, 680,
	681, 682, 0, 683, 684, 1240, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1334, 1335, 1336, 1337, 0, 705, 0, 694, 696, 697,
	698, 699, 1346, 700, 1347, 1264, 701, 702, 703, 704,
	695, 706, 707, 0, 1247, 708, 709, 711, 713, 714,
	710, 712, 715, 1308, 716, 0, 0, 717, 718, 719,
	785, 1331, 1368, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 3023, 735, 1244, 0, 0, 0,
	0, 3019, 0, 3022, 3029, 1259, 1260, 1256, 1257, 1269,
	0, 1239, 0, 0, 0, 0, 0, 0, 1237, 1238,
	319, 320, 322, 321, 323, 324, 325, 326, 1270, 327,
	328, 0, 1268, 0, 0, 0, 1310, 1274, 0, 0,
	329, 0, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 1323, 0, 340, 1330, 341, 1329,
	0, 1340, 342, 343, 344, 345, 346, 347, 348, 1276,
	1309, 1241, 349, 1370, 1371, 744, 0, 350, 351, 1316,
	0, 1297, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1351, 377, 378, 379, 1300, 1298, 1299,
	1306, 1302, 1301, 1305, 380, 381, 382, 383, 384, 1333,
	3025, 387, 1327, 1326, 1246, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1318, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1252, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1341, 1342, 421,
	1265, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1325, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1352, 431, 432, 433, 1338, 1339, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1348, 0, 1275, 444, 0, 445, 446, 447, 448, 449,
	3026, 451, 1311, 1312, 1315, 545, 1354, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1353, 759, 463, 546, 464, 1320,
	1321, 0, 1281, 0, 465, 466, 468, 1355, 1313, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1349, 482, 1358, 484, 485, 1359, 0, 486, 487,
	488, 489, 490, 491, 494, 1304, 1303, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 3027, 504,
	3024, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 1243, 318,
	1362, 540, 541, 542, 543, 1266, 1314, 544, 1328, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1363, 557, 1364, 1343,
	558, 559, 1253, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1344, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1324, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 1254, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 3028, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1307, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 1322, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1369, 672, 673, 674, 675, 1345, 679,
	680, 681, 682, 0, 683, 684, 1240, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1334, 1335, 1336, 1337, 0, 705, 0, 694, 696,
	697, 698, 699, 1346, 700, 1347, 1264, 701, 702, 703,
	704, 695, 706, 707, 0, 1247, 708, 709, 711, 713,
	714, 710, 712, 715, 1308, 716, 0, 0, 717, 718,
	719, 785, 1331, 1368, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 3023, 735, 1244, 0, 0,
	0, 0, 0, 0, 1286, 1258, 1259, 1260, 1256, 1257,
	1269, 0, 1239, 0, 0, 0, 0, 0, 0, 1237,
	1238, 319, 320, 322, 321, 323, 324, 325, 326, 1270,
	327, 328, 0, 1268, 0, 0, 0, 1310, 1274, 0,
	0, 329, 0, 330, 331, 332, 1350, 333, 334, 335,
	336, 337, 338, 339, 737, 1323, 0, 340, 1330, 341,
	1329, 0, 1340, 342, 343, 344, 345, 346, 347, 348,
	1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350, 351,
	1316, 0, 1297, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1351, 377, 378, 379, 1300, 1298,
	1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383, 384,
	1333, 385, 387, 1327, 1326, 1246, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1318, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1252, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1341, 1342,
	421, 1265, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1325, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1352, 431, 432, 433, 1338, 1339,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1348, 0, 1275, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1311, 1312, 1315, 545, 1354, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1353, 759, 463, 546, 464,
	1320, 1321, 0, 1281, 0, 465, 466, 468, 1355, 1313,
	1356, 467, 469, 470, 1357, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1349, 482, 1358, 484, 485, 1359, 0, 486,
	487, 488, 489, 490, 491, 494, 1304, 1303, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1360, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1361, 538, 526, 1243,
	318, 1362, 540, 541, 542, 543, 1266, 1314, 544, 1328,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1363, 557, 1364,
	1343, 558, 559, 1253, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1344, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1324, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1365, 620, 621, 622, 623, 624, 1254, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1307, 651, 775, 652, 632, 633, 653,
	654, 1366, 655, 656, 657, 658, 659, 660, 661, 1322,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1369, 672, 673, 674, 675, 1345,
	679, 680, 681, 682, 0, 683, 684, 1240, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1334, 1335, 1336, 1337, 0, 705, 0, 694,
	696, 697, 698, 699, 1346, 700, 1347, 1264, 701, 702,
	703, 704, 695, 706, 707, 0, 1247, 708, 709, 711,
	713, 714, 710, 712, 715, 1308, 716, 0, 0, 717,
	718, 719, 785, 1331, 1368, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1239, 0, 0, 0, 0, 0, 0,
	1237, 1238, 0, 0, 0, 0, 0, 0, 2105, 0,
	1270, 0, 0, 0, 1268, 1286, 1258, 1259, 1260, 1256,
	1257, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	2772, 327, 328, 0, 0, 0, 0, 0, 1310, 1274,
	0, 0, 329, 0, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 1323, 0, 340, 1330,
	341, 1329, 0, 1340, 342, 343, 344, 345, 346, 347,
	348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350,
	351, 1316, 0, 1297, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1351, 377, 378, 379, 1300,
	1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383,
	384, 1333, 385, 387, 1327, 1326, 1246, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1318, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1252, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1341,
	1342, 421, 1265, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1325, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1352, 431, 432, 433, 1338,
	1339, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1348, 0, 1275, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1311, 1312, 1315, 545, 1354, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1353, 759, 463, 546,
	464, 1320, 1321, 0, 1281, 0, 465, 466, 468, 1355,
	1313, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1349, 482, 1358, 484, 485, 1359, 0,
	486, 487, 488, 489, 490, 491, 494, 1304, 1303, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	1243, 318, 1362, 540, 541, 542, 543, 1266, 1314, 544,
	1328, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1363, 557,
	1364, 1343, 558, 559, 1253, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1344, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1324, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 1254, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1307, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	1322, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1369, 672, 673, 674, 675,
	1345, 679, 680, 681, 682, 0, 683, 684, 1240, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1334, 1335, 1336, 1337, 0, 705, 0,
	694, 696, 697, 698, 699, 1346, 700, 1347, 1264, 701,
	702, 703, 704, 695, 706, 707, 0, 1247, 708, 709,
	711, 713, 714, 710, 712, 715, 1308, 716, 0, 0,
	717, 718, 719, 785, 1331, 1368, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1244,
	0, 0, 0, 0, 2732, 0, 1286, 1258, 1259, 1260,
	1256, 1257, 1269, 0, 1239, 0, 0, 0, 0, 0,
	0, 1237, 1238, 319, 320, 322, 321, 323, 324, 325,
	326, 1270, 327, 328, 0, 1268, 0, 0, 0, 1310,
	1274, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 1323, 0, 340,
	1330, 341, 1329, 0, 1340, 342, 343, 344, 345, 346,
	347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0,
	350, 351, 1316, 0, 1297, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382,
	383, 384, 1333, 385, 387, 1327, 1326, 1246, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1252, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1341, 1342, 421, 1265, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1325, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	1338, 1339, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1348, 0, 1275, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1311, 1312, 1315, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 1320, 1321, 0, 1281, 0, 465, 466, 468,
	1355, 1313, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1349, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 1304, 1303,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 1243, 318, 1362, 540, 541, 542, 543, 1266, 1314,
	544, 1328, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 1343, 558, 559, 1253, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1344, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1324, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 1254,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1307, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 1322, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1369, 672, 673, 674,
	675, 1345, 679, 680, 681, 682, 0, 683, 684, 1240,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1334, 1335, 1336, 1337, 0, 705,
	0, 694, 696, 697, 698, 699, 1346, 700, 1347, 1264,
	701, 702, 703, 704, 695, 706, 707, 0, 1247, 708,
	709, 711, 713, 714, 710, 712, 715, 1308, 716, 0,
	0, 717, 718, 719, 785, 1331, 1368, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1244, 0, 0, 0, 0, 2701, 0, 1286, 1258, 1259,
	1260, 1256, 1257, 1269, 0, 1239, 0, 0, 0, 0,
	0, 0, 1237, 1238, 319, 320, 322, 321, 323, 324,
	325, 326, 1270, 327, 328, 0, 1268, 0, 0, 0,
	1310, 1274, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 1323, 0,
	340, 1330, 341, 1329, 0, 1340, 342, 343, 344, 345,
	346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 1333, 385, 387, 1327, 1326, 1246, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1318, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1252, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 1265, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1325, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 1338, 1339, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 1275, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 1320, 1321, 0, 1281, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1243, 318, 1362, 540, 541, 542, 543, 1266,
	1314, 544, 1328, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 1253, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1324, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	1254, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 1322, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1369, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	1240, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1334, 1335, 1336, 1337, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	1264, 701, 702, 703, 704, 695, 706, 707, 0, 1247,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 1331, 1368, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1244, 0, 0, 0, 0, 1936, 0, 1286, 1258,
	1259, 1260, 1256, 1257, 1269, 0, 1239, 0, 0, 0,
	0, 0, 0, 1237, 1238, 319, 320, 322, 321, 323,
	324, 325, 326, 1270, 327, 328, 0, 1268, 0, 0,
	0, 1310, 1274, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 737, 1323,
	0, 340, 1330, 341, 1329, 0, 1340, 342, 343, 344,
	345, 346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371,
	744, 0, 350, 351, 1316, 0, 1297, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380,
	381, 382, 383, 384, 1333, 385, 387, 1327, 1326, 1246,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1318, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1252,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1341, 1342, 421, 1265, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1325, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 1338, 1339, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1348, 0, 1275, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1311, 1312, 1315,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 1320, 1321, 0, 1281, 0, 465,
	466, 468, 1355, 1313, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1349, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	1304, 1303, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 1243, 318, 1362, 540, 541, 542, 543,
	1266, 1314, 544, 1328, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 1343, 558, 559, 1253, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1344,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1324, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 1254, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1307, 651, 775,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 1322, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1369, 672,
	673, 674, 675, 1345, 679, 680, 681, 682, 0, 683,
	684, 1240, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1334, 1335, 1336, 1337,
	0, 705, 0, 694, 696, 697, 698, 699, 1346, 700,
	1347, 1264, 701, 702, 703, 704, 695, 706, 707, 0,
	1247, 708, 709, 711, 713, 714, 710, 712, 715, 1308,
	716, 0, 0, 717, 718, 719, 785, 1331, 1368, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1244, 0, 0, 0, 0, 1863, 0, 1286,
	1258, 1259, 1260, 1256, 1257, 1269, 0, 1239, 0, 0,
	0, 0, 0, 0, 1237, 1238, 319, 320, 322, 321,
	323, 324, 325, 326, 1270, 327, 328, 0, 1268, 0,
	0, 0, 1310, 1274, 0, 0, 329, 0, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	1323, 0, 340, 1330, 341, 1329, 0, 1340, 342, 343,
	344, 345, 346, 347, 348, 1276, 1309, 1241, 349, 1370,
	1371, 744, 0, 350, 351, 1316, 0, 1297, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1351,
	377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305,
	380, 381, 382, 383, 384, 1333, 385, 387, 1327, 1326,
	1246, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1318, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1252, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1341, 1342, 421, 1265, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1325, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1352,
	431, 432, 433, 1338, 1339, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1348, 0, 1275, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1311, 1312,
	1315, 545, 1354, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1353, 759, 463, 546, 464, 1320, 1321, 0, 1281, 0,
	465, 466, 468, 1355, 1313, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1349, 482, 1358,
	484, 485, 1359, 0, 486, 487, 488, 489, 490, 491,
	494, 1304, 1303, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 1243, 318, 1362, 540, 541, 542,
	543, 1266, 1314, 544, 1328, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1363, 557, 1364, 1343, 558, 559, 1253, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1344, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1324, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 1254, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1307, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 1322, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1369,
	672, 673, 674, 675, 1345, 679, 680, 681, 682, 0,
	683, 684, 1240, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1334, 1335, 1336,
	1337, 0, 705, 0, 694, 696, 697, 698, 699, 1346,
	700, 1347, 1264, 701, 702, 703, 704, 695, 706, 707,
	0, 1247, 708, 709, 711, 713, 714, 710, 712, 715,
	1308, 716, 0, 0, 717, 718, 719, 785, 1331, 1368,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1244, 0, 0, 0, 0, 1858, 0,
	1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 1239, 0,
	0, 0, 0, 0, 0, 1237, 1238, 319, 320, 322,
	321, 323, 324, 325, 326, 1270, 327, 328, 0, 1268,
	0, 0, 0, 1310, 1274, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 1323, 0, 340, 1330, 341, 1329, 0, 1340, 342,
	343, 344, 345, 346, 347, 348, 1276, 1309, 1241, 349,
	1370, 1371, 744, 0, 350, 351, 1316, 0, 1297, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301,
	1305, 380, 381, 382, 383, 384, 1333, 385, 387, 1327,
	1326, 1246, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1318, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1252, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1341, 1342, 421, 1265, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1325, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 1338, 1339, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1348, 0, 1275,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1311,
	1312, 1315, 545, 1354, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1353, 759, 463, 546, 464, 1320, 1321, 0, 1281,
	0, 465, 466, 468, 1355, 1313, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1349, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 1304, 1303, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 1243, 318, 1362, 540, 541,
	542, 543, 1266, 1314, 544, 1328, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1363, 557, 1364, 1343, 558, 559, 1253,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1344, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1324,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 1254, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1307,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 1322, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1369, 672, 673, 674, 675, 1345, 679, 680, 681, 682,
	0, 683, 684, 1240, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1334, 1335,
	1336, 1337, 0, 705, 0, 694, 696, 697, 698, 699,
	1346, 700, 1347, 1264, 701, 702, 703, 704, 695, 706,
	707, 0, 1247, 708, 709, 711, 713, 714, 710, 712,
	715, 1308, 716, 0, 0, 717, 718, 719, 785, 1331,
	1368, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1244, 0, 0, 0, 0, 1844,
	0, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 1239,
	0, 0, 0, 0, 0, 0, 1237, 1238, 319, 320,
	322, 321, 323, 324, 325, 326, 1270, 327, 328, 0,
	1268, 0, 0, 0, 1310, 1274, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 1323, 0, 340, 1330, 341, 1329, 0, 1340,
	342, 343, 344, 345, 346, 347, 348, 1276, 1309, 1241,
	349, 1370, 1371, 744, 0, 350, 351, 1316, 0, 1297,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302,
	1301, 1305, 380, 381, 382, 383, 384, 1333, 385, 387,
	1327, 1326, 1246, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1318,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1252, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1341, 1342, 421, 1265, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1325, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 1338, 1339, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1348, 0,
	1275, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1311, 1312, 1315, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 1320, 1321, 0,
	1281, 0, 465, 466, 468, 1355, 1313, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1349,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 1304, 1303, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1243, 318, 1362, 540,
	541, 542, 543, 1266, 1314, 544, 1328, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 1343, 558, 559,
	1253, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1344, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1324, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 1254, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1307, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 1322, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1369, 672, 673, 674, 675, 1345, 679, 680, 681,
	682, 0, 683, 684, 1240, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1334,
	1335, 1336, 1337, 0, 705, 0, 694, 696, 697, 698,
	699, 1346, 700, 1347, 1264, 701, 702, 703, 704, 695,
	706, 707, 0, 1247, 708, 709, 711, 713, 714, 710,
	712, 715, 1308, 716, 0, 0, 717, 718, 719, 785,
	1331, 1368, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1244, 0, 0, 0, 0,
	1839, 0, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0,
	1239, 0, 0, 0, 0, 0, 0, 1237, 1238, 319,
	320, 322, 321, 323, 324, 325, 326, 1270, 327, 328,
	0, 1268, 0, 0, 0, 1310, 1274, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 1323, 0, 340, 1330, 341, 1329, 0,
	1340, 342, 343, 344, 345, 346, 347, 348, 1276, 1309,
	1241, 349, 1370, 1371, 744, 0, 350, 351, 1316, 0,
	1297, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306,
	1302, 1301, 1305, 380, 381, 382, 383, 384, 1333, 385,
	387, 1327, 1326, 1246, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1318, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1252, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1341, 1342, 421, 1265,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1325,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 1338, 1339, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1348,
	0, 1275, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1311, 1312, 1315, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 1320, 1321,
	0, 1281, 0, 465, 466, 468, 1355, 1313, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1349, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 1304, 1303, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 1243, 318, 1362,
	540, 541, 542, 543, 1266, 1314, 544, 1328, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 1343, 558,
	559, 1253, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1344, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1324, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 1254, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1307, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 1322, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1369, 672, 673, 674, 675, 1345, 679, 680,
	681, 682, 0, 683, 684, 1240, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1334, 1335, 1336, 1337, 0, 705, 0, 694, 696, 697,
	698, 699, 1346, 700, 1347, 1264, 701, 702, 703, 704,
	695, 706, 707, 0, 1247, 708, 709, 711, 713, 714,
	710, 712, 715, 1308, 716, 0, 0, 717, 718, 719,
	785, 1331, 1368, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1244, 0, 0, 0,
	0, 1745, 0, 1286, 1258, 1259, 1260, 1256, 1257, 1269,
	0, 1239, 0, 0, 0, 0, 0, 0, 1237, 1238,
	319, 320, 322, 321, 323, 324, 325, 326, 1270, 327,
	328, 0, 1268, 0, 0, 0, 1310, 1274, 0, 0,
	329, 0, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 1323, 0, 340, 1330, 341, 1329,
	0, 1340, 342, 343, 344, 345, 346, 347, 348, 1276,
	1309, 1241, 349, 1370, 1371, 744, 0, 350, 351, 1316,
	0, 1297, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1351, 377, 378, 379, 1300, 1298, 1299,
	1306, 1302, 1301, 1305, 380, 381, 382, 383, 384, 1333,
	385, 387, 1327, 1326, 1246, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1318, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1252, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1341, 1342, 421,
	1265, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1325, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1352, 431, 432, 433, 1338, 1339, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1348, 0, 1275, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1744, 1312, 1315, 545, 1354, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1353, 759, 463, 546, 464, 1320,
	1321, 0, 1281, 0, 465, 466, 468, 1355, 1313, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1349, 482, 1358, 484, 485, 1359, 0, 486, 487,
	488, 489, 490, 491, 494, 1304, 1303, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 1243, 318,
	1362, 540, 541, 542, 543, 1266, 1314, 544, 1328, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1363, 557, 1364, 1343,
	558, 559, 1253, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1344, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1324, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 1254, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1307, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 1322, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1369, 672, 673, 674, 675, 1345, 679,
	680, 681, 682, 0, 683, 684, 1240, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1334, 1335, 1336, 1337, 0, 705, 0, 694, 696,
	697, 698, 699, 1346, 700, 1347, 1264, 701, 702, 703,
	704, 695, 706, 707, 0, 1247, 708, 709, 711, 713,
	714, 710, 712, 715, 1308, 716, 0, 0, 717, 718,
	719, 785, 1331, 1368, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1244, 0, 0,
	0, 0, 1739, 0, 1286, 1258, 1259, 1260, 1256, 1257,
	1269, 0, 1239, 0, 0, 0, 0, 0, 0, 1237,
	1238, 319, 320, 322, 321, 323, 324, 325, 326, 1270,
	327, 328, 0, 1268, 0, 0, 0, 1310, 1274, 0,
	0, 329, 0, 330, 331, 332, 1350, 333, 334, 335,
	336, 337, 338, 339, 737, 1323, 0, 340, 1330, 341,
	1329, 0, 1340, 342, 343, 344, 345, 346, 347, 348,
	1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350, 351,
	1316, 0, 1297, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1351, 377, 378, 379, 1300, 1298,
	1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383, 384,
	1333, 385, 387, 1327, 1326, 1246, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1318, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1252, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1341, 1342,
	421, 1265, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1325, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1352, 431, 432, 433, 1338, 1339,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1348, 0, 1275, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1738, 1312, 1315, 545, 1354, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1353, 759, 463, 546, 464,
	1320, 1321, 0, 1281, 0, 465, 466, 468, 1355, 1313,
	1356, 467, 469, 470, 1357, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1349, 482, 1358, 484, 485, 1359, 0, 486,
	487, 488, 489, 490, 491, 494, 1304, 1303, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1360, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1361, 538, 526, 1243,
	318, 1362, 540, 541, 542, 543, 1266, 1314, 544, 1328,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1363, 557, 1364,
	1343, 558, 559, 1253, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1344, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1324, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1365, 620, 621, 622, 623, 624, 1254, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1307, 651, 775, 652, 632, 633, 653,
	654, 1366, 655, 656, 657, 658, 659, 660, 661, 1322,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1369, 672, 673, 674, 675, 1345,
	679, 680, 681, 682, 0, 683, 684, 1240, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1334, 1335, 1336, 1337, 0, 705, 0, 694,
	696, 697, 698, 699, 1346, 700, 1347, 1264, 701, 702,
	703, 704, 695, 706, 707, 0, 1247, 708, 709, 711,
	713, 714, 710, 712, 715, 1308, 716, 0, 0, 717,
	718, 719, 785, 1331, 1368, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1244, 0,
	0, 0, 0, 1732, 0, 1286, 1258, 1259, 1260, 1256,
	1257, 1269, 0, 1239, 0, 0, 0, 0, 0, 0,
	1237, 1238, 319, 320, 322, 321, 323, 324, 325, 326,
	1270, 327, 328, 0, 1268, 0, 0, 0, 1310, 1274,
	0, 0, 329, 0, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 1323, 0, 340, 1330,
	341, 1329, 0, 1340, 342, 343, 344, 345, 346, 347,
	348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350,
	351, 1316, 0, 1297, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1351, 377, 378, 379, 1300,
	1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383,
	384, 1333, 385, 387, 1327, 1326, 1246, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1318, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1252, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1341,
	1342, 421, 1265, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1325, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1352, 431, 432, 433, 1338,
	1339, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1348, 0, 1275, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1311, 1312, 1315, 545, 1354, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1353, 759, 463, 546,
	464, 1320, 1321, 0, 1281, 0, 465, 466, 468, 1355,
	1313, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1349, 482, 1358, 484, 485, 1359, 0,
	486, 487, 488, 489, 490, 491, 494, 1304, 1303, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	1243, 318, 1362, 540, 541, 542, 543, 1266, 1314, 544,
	1328, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1363, 557,
	1364, 1343, 558, 559, 1253, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1344, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1324, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 1254, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1307, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	1322, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1369, 672, 673, 674, 675,
	1345, 679, 680, 681, 682, 0, 683, 684, 1240, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1334, 1335, 1336, 1337, 0, 705, 0,
	694, 696, 697, 698, 699, 1346, 700, 1347, 1264, 701,
	702, 703, 704, 695, 706, 707, 0, 1247, 708, 709,
	711, 713, 714, 710, 712, 715, 1308, 716, 0, 0,
	717, 718, 719, 785, 1331, 1368, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1244,
	0, 0, 0, 0, 1705, 0, 1286, 1258, 1259, 1260,
	1256, 1257, 1269, 0, 1239, 0, 0, 0, 0, 0,
	0, 1237, 1238, 319, 320, 322, 321, 323, 324, 325,
	326, 1270, 327, 328, 0, 1268, 0, 0, 0, 1310,
	1274, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 1323, 0, 340,
	1330, 341, 1329, 0, 1340, 342, 343, 344, 345, 346,
	347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0,
	350, 351, 1316, 0, 1297, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382,
	383, 384, 1333, 385, 387, 1327, 1326, 1246, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1252, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1341, 1342, 421, 1265, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1325, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	1338, 1339, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1348, 0, 1275, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1311, 1312, 1315, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 1320, 1321, 0, 1281, 0, 465, 466, 468,
	1355, 1313, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1349, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 1304, 1303,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 1243, 318, 1362, 540, 541, 542, 543, 1266, 1314,
	544, 1328, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 1343, 558, 559, 1253, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1344, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1324, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 1254,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1307, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 1322, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1369, 672, 673, 674,
	675, 1345, 679, 680, 681, 682, 0, 683, 684, 1240,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1334, 1335, 1336, 1337, 0, 705,
	0, 694, 696, 697, 698, 699, 1346, 700, 1347, 1264,
	701, 702, 703, 704, 695, 706, 707, 0, 1247, 708,
	709, 711, 713, 714, 710, 712, 715, 1308, 716, 0,
	0, 717, 718, 719, 785, 1331, 1368, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1244, 0, 0, 0, 0, 1676, 0, 1286, 1258, 1259,
	1260, 1256, 1257, 1269, 0, 1239, 0, 0, 0, 0,
	0, 0, 1237, 1238, 319, 320, 322, 321, 323, 324,
	325, 326, 1270, 327, 328, 0, 1268, 0, 0, 0,
	1310, 1274, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 1323, 0,
	340, 1330, 341, 1329, 0, 1340, 342, 343, 344, 345,
	346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 1333, 385, 387, 1327, 1326, 1246, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1318, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1252, 409,
	410, 411, 413, 415, 412, 1680, 416, 417, 418, 419,
	420, 1341, 1342, 421, 1265, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1325, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 1338, 1339, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 1275, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 1320, 1321, 0, 1281, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 1243, 318, 1362, 540, 541, 542, 543, 1266,
	1314, 544, 1328, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 1253, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1324, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 1681, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	1254, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 1322, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1369, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	1240, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 1679, 692, 0, 693, 1334, 1335, 1336, 1337, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	1264, 701, 702, 703, 704, 695, 706, 707, 0, 1247,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 1331, 1368, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1244, 0, 0, 0, 0, 1506, 0, 1286, 1258,
	1259, 1260, 1256, 1257, 1269, 0, 1239, 0, 0, 0,
	0, 0, 0, 1237, 1238, 319, 320, 322, 321, 323,
	324, 325, 326, 1270, 327, 328, 0, 1268, 0, 0,
	0, 1310, 1274, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 737, 1323,
	0, 340, 1330, 341, 1329, 0, 1340, 342, 343, 344,
	345, 346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371,
	744, 0, 350, 351, 1316, 0, 1297, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380,
	381, 382, 383, 384, 1333, 385, 387, 1327, 1326, 1246,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1318, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1252,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1341, 1342, 421, 1265, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1325, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 1338, 1339, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1348, 0, 1275, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1311, 1312, 1315,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 1320, 1321, 0, 1281, 0, 465,
	466, 468, 1355, 1313, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1349, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	1304, 1303, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 1243, 318, 1362, 540, 541, 542, 543,
	1266, 1314, 544, 1328, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 1343, 558, 559, 1253, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1344,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1324, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 1254, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1307, 651, 775,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 1322, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1369, 672,
	673, 674, 675, 1345, 679, 680, 681, 682, 0, 683,
	684, 1240, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1334, 1335, 1336, 1337,
	0, 705, 0, 694, 696, 697, 698, 699, 1346, 700,
	1347, 1264, 701, 702, 703, 704, 695, 706, 707, 0,
	1247, 708, 709, 711, 713, 714, 710, 712, 715, 1308,
	716, 0, 0, 717, 718, 719, 785, 1331, 1368, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1244, 0, 0, 0, 0, 0, 0, 1286,
	1258, 1259, 1260, 1256, 1257, 1269, 0, 1239, 0, 0,
	0, 0, 0, 0, 1237, 1238, 319, 320, 322, 321,
	323, 324, 325, 326, 1270, 327, 328, 0, 1268, 0,
	0, 0, 1310, 1274, 0, 0, 329, 0, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	1323, 0, 340, 1330, 341, 1329, 0, 1340, 342, 343,
	344, 345, 346, 347, 348, 1276, 1309, 1241, 349, 1370,
	1371, 744, 0, 350, 351, 1316, 0, 1297, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1351,
	377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305,
	380, 381, 382, 383, 384, 1333, 385, 387, 1327, 1326,
	1246, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1318, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	1252, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1341, 1342, 421, 1265, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1325, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1352,
	431, 432, 433, 1338, 1339, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1348, 0, 1275, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1311, 1312,
	1315, 545, 1354, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1353, 759, 463, 546, 464, 1320, 1321, 0, 1281, 0,
	465, 466, 468, 1355, 1313, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1349, 482, 1358,
	484, 485, 1359, 0, 486, 487, 488, 489, 490, 491,
	494, 1304, 1303, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 1243, 318, 1362, 540, 541, 542,
	543, 1266, 1314, 544, 1328, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1363, 557, 1364, 1343, 558, 559, 1253, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1344, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1324, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 1254, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1307, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 1322, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1369,
	672, 673, 674, 675, 1345, 679, 680, 681, 682, 0,
	683, 684, 1240, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1334, 1335, 1336,
	1337, 0, 705, 0, 694, 696, 697, 698, 699, 1346,
	700, 1347, 1264, 701, 702, 703, 704, 695, 706, 707,
	0, 1247, 708, 709, 711, 713, 714, 710, 712, 715,
	1308, 716, 0, 0, 717, 718, 719, 785, 1331, 1368,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1244, 0, 0, 0, 0, 0, 0,
	1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 1239, 0,
	0, 0, 0, 0, 0, 1237, 1238, 319, 320, 322,
	321, 323, 324, 325, 326, 1270, 327, 328, 0, 1268,
	0, 0, 0, 1310, 1274, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 1323, 0, 340, 1330, 341, 1329, 0, 1340, 342,
	343, 344, 345, 346, 347, 348, 1276, 1309, 1241, 349,
	1370, 1371, 744, 0, 350, 351, 1316, 0, 1297, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 5454, 1300, 1298, 1299, 1306, 1302, 1301,
	1305, 380, 381, 382, 383, 384, 1333, 385, 387, 1327,
	1326, 1246, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1318, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 1252, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 1341, 1342, 421, 1265, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 1325, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 1338, 1339, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 1348, 0, 1275,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1311,
	1312, 1315, 545, 1354, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 1353, 759, 463, 546, 464, 1320, 1321, 0, 1281,
	0, 465, 466, 468, 1355, 1313, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 1349, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 1304, 1303, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 1243, 318, 1362, 540, 541,
	542, 543, 1266, 1314, 544, 1328, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1363, 557, 1364, 1343, 558, 559, 1253,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 1344, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 1324,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 1254, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1307,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 1322, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	1369, 672, 673, 674, 675, 1345, 679, 680, 681, 682,
	0, 683, 684, 1240, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 1334, 1335,
	1336, 1337, 0, 705, 0, 694, 696, 697, 698, 699,
	1346, 700, 1347, 1264, 701, 702, 703, 704, 695, 5453,
	707, 0, 1247, 708, 709, 711, 713, 714, 710, 712,
	715, 1308, 716, 0, 0, 717, 718, 719, 785, 1331,
	1368, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1244, 0, 0, 0, 0, 0,
	0, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0, 1239,
	0, 0, 0, 0, 0, 0, 1237, 1238, 319, 320,
	322, 321, 323, 324, 325, 326, 1270, 327, 328, 0,
	1268, 0, 0, 0, 1310, 1274, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 5452, 1323, 0, 340, 1330, 341, 1329, 0, 1340,
	342, 343, 344, 345, 346, 347, 348, 1276, 1309, 1241,
	349, 1370, 1371, 744, 0, 350, 351, 1316, 0, 1297,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 5454, 1300, 1298, 1299, 1306, 1302,
	1301, 1305, 380, 381, 382, 383, 384, 1333, 385, 387,
	1327, 1326, 1246, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1318,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 1252, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1341, 1342, 421, 1265, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 1325, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 1338, 1339, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1348, 0,
	1275, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1311, 1312, 1315, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 1320, 1321, 0,
	1281, 0, 465, 466, 468, 1355, 1313, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1349,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 1304, 1303, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 1243, 318, 1362, 540,
	541, 542, 543, 1266, 1314, 544, 1328, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 1343, 558, 559,
	1253, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1344, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	1324, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 1254, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1307, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 1322, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 1369, 672, 673, 674, 675, 1345, 679, 680, 681,
	682, 0, 683, 684, 1240, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 1334,
	1335, 1336, 1337, 0, 705, 0, 694, 696, 697, 698,
	699, 1346, 700, 1347, 1264, 701, 702, 703, 704, 695,
	5453, 707, 0, 1247, 708, 709, 711, 713, 714, 710,
	712, 715, 1308, 716, 0, 0, 717, 718, 719, 785,
	1331, 1368, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1244, 0, 0, 0, 0,
	0, 0, 1286, 1258, 1259, 1260, 1256, 1257, 1269, 0,
	1239, 0, 0, 0, 0, 0, 0, 1237, 1238, 319,
	320, 322, 321, 323, 324, 325, 326, 1270, 327, 328,
	0, 1268, 0, 0, 0, 1310, 1274, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 1323, 0, 340, 1330, 341, 1329, 0,
	1340, 342, 343, 344, 345, 346, 347, 348, 1276, 1309,
	1241, 349, 1370, 1371, 744, 0, 350, 351, 1316, 0,
	1297, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 5027, 379, 1300, 1298, 1299, 1306,
	1302, 1301, 1305, 380, 381, 382, 383, 384, 1333, 385,
	387, 1327, 1326, 1246, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1318, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 1252, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1341, 1342, 421, 1265,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 1325,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 1338, 1339, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1348,
	0, 5028, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1311, 1312, 1315, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 1320, 1321,
	0, 1281, 0, 465, 466, 468, 1355, 1313, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1349, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 1304, 1303, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 1243, 318, 1362,
	540, 541, 542, 543, 1266, 1314, 544, 1328, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 1343, 558,
	559, 1253, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1344, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 1324, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 5026, 624, 1254, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1307, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 1322, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 1369, 672, 673, 674, 675, 1345, 679, 680,
	681, 682, 0, 683, 684, 1240, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	1334, 1335, 1336, 1337, 0, 705, 0, 694, 696, 697,
	698, 699, 1346, 700, 1347, 1264, 701, 702, 703, 704,
	695, 706, 707, 0, 1247, 708, 709, 711, 713, 714,
	710, 712, 715, 1308, 716, 0, 0, 717, 718, 719,
	785, 1331, 1368, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1244, 0, 0, 0,
	0, 0, 0, 1286, 1258, 1259, 1260, 3637, 3638, 1269,
	0, 1239, 0, 0, 0, 0, 0, 0, 1237, 1238,
	319, 320, 322, 321, 323, 324, 325, 326, 1270, 327,
	328, 0, 1268, 0, 0, 0, 1310, 1274, 0, 0,
	329, 0, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 1323, 0, 340, 1330, 341, 1329,
	0, 1340, 342, 343, 344, 345, 346, 347, 348, 1276,
	1309, 1241, 349, 1370, 1371, 744, 0, 350, 351, 1316,
	0, 1297, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1351, 377, 378, 379, 1300, 1298, 1299,
	1306, 1302, 1301, 1305, 380, 381, 382, 383, 384, 1333,
	385, 387, 1327, 1326, 1246, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 1318, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 1252, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1341, 1342, 421,
	1265, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	1325, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1352, 431, 432, 433, 1338, 1339, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1348, 0, 1275, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1311, 1312, 1315, 545, 1354, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1353, 759, 463, 546, 464, 1320,
	1321, 0, 1281, 0, 465, 466, 468, 1355, 1313, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 1349, 482, 1358, 484, 485, 1359, 0, 486, 487,
	488, 489, 490, 491, 494, 1304, 1303, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 1243, 318,
	1362, 540, 541, 542, 543, 1266, 1314, 544, 1328, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1363, 557, 1364, 1343,
	558, 559, 1253, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1344, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 1324, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 1254, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1307, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 1322, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 1369, 672, 673, 674, 675, 1345, 679,
	680, 681, 682, 0, 683, 684, 1240, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 1334, 1335, 1336, 1337, 0, 705, 0, 694, 696,
	697, 698, 699, 1346, 700, 1347, 1264, 701, 702, 703,
	704, 695, 706, 707, 0, 1247, 708, 709, 711, 713,
	714, 710, 712, 715, 1308, 716, 0, 0, 717, 718,
	719, 785, 1331, 1368, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1244, 0, 0,
	0, 0, 0, 0, 1286, 1258, 1259, 1260, 3635, 3636,
	1269, 0, 1239, 0, 0, 0, 0, 0, 0, 1237,
	1238, 319, 320, 322, 321, 323, 324, 325, 326, 1270,
	327, 328, 0, 1268, 0, 0, 0, 1310, 1274, 0,
	0, 329, 0, 330, 331, 332, 1350, 333, 334, 335,
	336, 337, 338, 339, 737, 1323, 0, 340, 1330, 341,
	1329, 0, 1340, 342, 343, 344, 345, 346, 347, 348,
	1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350, 351,
	1316, 0, 1297, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1351, 377, 378, 379, 1300, 1298,
	1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383, 384,
	1333, 385, 387, 1327, 1326, 1246, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 1318, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 1252, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 1341, 1342,
	421, 1265, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 1325, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1352, 431, 432, 433, 1338, 1339,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 1348, 0, 1275, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1311, 1312, 1315, 545, 1354, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 1353, 759, 463, 546, 464,
	1320, 1321, 0, 1281, 0, 465, 466, 468, 1355, 1313,
	1356, 467, 469, 470, 1357, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 1349, 482, 1358, 484, 485, 1359, 0, 486,
	487, 488, 489, 490, 491, 494, 1304, 1303, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1360, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1361, 538, 526, 1243,
	318, 1362, 540, 541, 542, 543, 1266, 1314, 544, 1328,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1363, 557, 1364,
	1343, 558, 559, 1253, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 1344, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 1324, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1365, 620, 621, 622, 623, 624, 1254, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1307, 651, 775, 652, 632, 633, 653,
	654, 1366, 655, 656, 657, 658, 659, 660, 661, 1322,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 1369, 672, 673, 674, 675, 1345,
	679, 680, 681, 682, 0, 683, 684, 1240, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 1334, 1335, 1336, 1337, 0, 705, 0, 694,
	696, 697, 698, 699, 1346, 700, 1347, 1264, 701, 702,
	703, 704, 695, 706, 707, 0, 1247, 708, 709, 711,
	713, 714, 710, 712, 715, 1308, 716, 0, 0, 717,
	718, 719, 785, 1331, 1368, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 1244, 0,
	0, 0, 0, 0, 0, 1286, 1258, 1259, 1260, 1256,
	1257, 1269, 0, 1239, 0, 0, 0, 0, 0, 0,
	1237, 1238, 319, 320, 322, 321, 323, 324, 325, 326,
	1270, 327, 328, 0, 1268, 0, 0, 0, 1310, 1274,
	0, 0, 329, 0, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 1323, 0, 340, 1330,
	341, 1329, 0, 1340, 342, 343, 344, 345, 346, 347,
	348, 1276, 1309, 1241, 349, 1370, 1371, 744, 0, 350,
	351, 1316, 0, 1297, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1351, 377, 378, 379, 1300,
	1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383,
	384, 1333, 385, 387, 1327, 1326, 1246, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 1318, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 1252, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1341,
	1342, 421, 1265, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 1325, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1352, 431, 432, 433, 1338,
	1339, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1348, 0, 1275, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1311, 1312, 1315, 545, 1354, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1353, 759, 463, 546,
	464, 1320, 1321, 0, 1281, 0, 465, 466, 468, 1355,
	1313, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1349, 482, 1358, 484, 485, 1359, 0,
	486, 487, 488, 489, 490, 491, 494, 1304, 1303, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	1243, 318, 1362, 540, 541, 542, 543, 1266, 1314, 544,
	1328, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1363, 557,
	1364, 1343, 558, 559, 1253, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1344, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 1324, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 1254, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1307, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	1322, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 1369, 672, 673, 674, 675,
	1345, 679, 680, 681, 682, 0, 683, 684, 1240, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 1334, 1335, 1336, 1337, 0, 705, 0,
	694, 696, 697, 698, 699, 1346, 700, 1347, 1264, 701,
	702, 703, 704, 695, 706, 707, 0, 1247, 708, 709,
	711, 713, 714, 710, 712, 715, 1308, 716, 0, 0,
	717, 718, 719, 785, 1331, 1368, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1244,
	0, 0, 0, 0, 0, 0, 1286, 1258, 1259, 1260,
	1256, 1257, 1269, 0, 1239, 0, 0, 0, 0, 0,
	0, 2780, 2781, 319, 320, 322, 321, 323, 324, 325,
	326, 1270, 327, 328, 0, 1268, 0, 0, 0, 1310,
	1274, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 1323, 0, 340,
	1330, 341, 1329, 0, 1340, 342, 343, 344, 345, 346,
	347, 348, 1276, 1309, 0, 349, 1370, 1371, 744, 0,
	350, 351, 1316, 0, 1297, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382,
	383, 384, 1333, 385, 387, 1327, 1326, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 1252, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	1341, 1342, 421, 1265, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 1325, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	1338, 1339, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 1348, 0, 1275, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1311, 1312, 1315, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 1320, 1321, 0, 1281, 0, 465, 466, 468,
	1355, 1313, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 1349, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 1304, 1303,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 0, 318, 1362, 540, 541, 542, 543, 1266, 1314,
	544, 1328, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 1343, 558, 559, 1253, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 1344, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 1324, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 1254,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1307, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 1322, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 1369, 672, 673, 674,
	675, 1345, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 1334, 1335, 1336, 1337, 0, 705,
	0, 694, 696, 697, 698, 699, 1346, 700, 1347, 1264,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 1308, 716, 0,
	0, 717, 718, 719, 785, 1331, 1368, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 1286, 1258, 1259,
	1260, 1256, 1257, 1269, 0, 3041, 0, 0, 0, 0,
	0, 0, 3039, 3040, 319, 320, 322, 321, 323, 324,
	325, 326, 1270, 327, 328, 0, 1268, 0, 0, 0,
	1310, 1274, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 1323, 0,
	340, 1330, 341, 1329, 0, 1340, 342, 343, 344, 345,
	346, 347, 348, 1276, 1309, 0, 349, 1370, 1371, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 1333, 385, 387, 1327, 1326, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1318, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 1252, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 1265, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1325, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 1338, 1339, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 1275, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 1320, 1321, 0, 1281, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 0, 318, 1362, 540, 541, 542, 543, 1266,
	1314, 544, 1328, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1324, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	3630, 3631, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 1322, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1369, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1334, 1335, 1336, 1337, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	1264, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 1331, 1368, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 0, 0, 0, 0, 0, 0, 0, 1286, 1258,
	1259, 1260, 1256, 1257, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 2369, 2370, 319, 320, 322, 321, 323,
	324, 325, 326, 1270, 327, 328, 0, 1268, 0, 0,
	0, 1310, 1274, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 0, 1323,
	0, 340, 1330, 341, 1329, 0, 1340, 342, 343, 344,
	345, 346, 347, 348, 1276, 1309, 1241, 349, 1370, 1371,
	744, 0, 350, 351, 1316, 0, 1297, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 5454, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380,
	381, 382, 383, 384, 1333, 385, 387, 1327, 1326, 1246,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1318, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 1252,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 1341, 1342, 421, 1265, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 1325, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 1338, 1339, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 1348, 0, 1275, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1311, 1312, 1315,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 1320, 1321, 0, 1281, 0, 465,
	466, 468, 0, 1313, 0, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 1349, 482, 1358, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	1304, 1303, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 1243, 318, 0, 540, 541, 542, 543,
	1266, 1314, 544, 1328, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 1343, 558, 559, 1253, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 1344,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 1324, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 1254, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1307, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 1322, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 1369, 672,
	673, 674, 675, 1345, 679, 680, 681, 682, 0, 683,
	684, 1240, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 1334, 1335, 1336, 1337,
	0, 705, 0, 694, 696, 697, 698, 699, 1346, 700,
	1347, 1264, 701, 702, 703, 704, 695, 5453, 707, 0,
	1247, 708, 709, 711, 713, 714, 710, 712, 715, 1308,
	716, 0, 0, 717, 718, 719, 785, 1331, 1368, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 3060, 0, 1286,
	1258, 1259, 1260, 1256, 1257, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 1237, 1238, 319, 320, 322, 321,
	323, 324, 325, 326, 1270, 327, 328, 0, 1268, 0,
	0, 0, 1310, 1274, 0, 0, 329, 0, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	1323, 0, 340, 1330, 341, 1329, 0, 1340, 342, 343,
	344, 345, 346, 347, 348, 0, 1309, 0, 349, 1370,
	1371, 744, 0, 350, 351, 1316, 0, 1297, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1351,
	377, 378, 379, 1300, 1298, 1299, 1306, 1302, 1301, 1305,
	380, 381, 382, 383, 384, 1333, 385, 387, 1327, 1326,
	0, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 1318, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 1341, 1342, 421, 1265, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 1325, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1352,
	431, 432, 433, 1338, 1339, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 1348, 0, 1275, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 1311, 1312,
	1315, 545, 1354, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	1353, 759, 463, 546, 464, 1320, 1321, 0, 1281, 0,
	465, 466, 468, 1355, 1313, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 1349, 482, 1358,
	484, 485, 1359, 0, 486, 487, 488, 489, 490, 491,
	494, 1304, 1303, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 0, 318, 1362, 540, 541, 542,
	543, 1266, 1314, 544, 1328, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1363, 557, 1364, 1343, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	1344, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 1324, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 1254, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 1307, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 1322, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 1369,
	672, 673, 674, 675, 1345, 679, 680, 681, 682, 0,
	683, 684, 0, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 1334, 1335, 1336,
	1337, 0, 705, 0, 694, 696, 697, 698, 699, 1346,
	700, 1347, 1264, 701, 702, 703, 704, 695, 706, 707,
	0, 0, 708, 709, 711, 713, 714, 710, 712, 715,
	1308, 716, 0, 0, 717, 718, 719, 785, 1331, 1368,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 0, 0, 1707, 0, 1286, 1258, 1259,
	1260, 1256, 1257, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 1270, 0, 0, 0, 1268,
	1310, 1274, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 1323, 0,
	340, 1330, 341, 1329, 0, 1340, 342, 343, 344, 345,
	346, 347, 348, 0, 1309, 0, 349, 1370, 1371, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 1333, 385, 387, 1327, 1326, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 1318, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 1265, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 1325, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 1338, 1339, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 1275, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 1320, 1321, 0, 1281, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 0, 318, 1362, 540, 541, 542, 543, 1266,
	1314, 544, 1328, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 1324, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	1254, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 1322, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 1369, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 1334, 1335, 1336, 1337, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	1264, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 1331, 1368, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1228, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 0, 0, 1270, 0, 0, 1310, 1268, 0, 0,
	329, 0, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	1309, 0, 349, 742, 743, 744, 0, 350, 351, 1316,
	0, 1297, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1351, 377, 378, 379, 1300, 1298, 1299,
	1306, 1302, 1301, 1305, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1341, 1342, 421,
	0, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1352, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1348, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1311, 1312, 1315, 545, 1354, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1353, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 1355, 1313, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1395, 479, 481, 480, 0,
	483, 1349, 482, 1358, 484, 485, 1359, 0, 486, 487,
	488, 489, 490, 491, 494, 1304, 1303, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 0, 318,
	1362, 540, 541, 542, 543, 0, 1314, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 1401, 552, 553,
	554, 0, 0, 555, 556, 767, 1363, 557, 1364, 1343,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1344, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 774, 1403, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 272, 646, 647, 645, 648,
	649, 650, 1307, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 1345, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 274,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 1346, 700, 1347, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 1308, 716, 0, 0, 717, 718,
	719, 1828, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	266, 731, 732, 789, 733, 734, 735, 1409, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 1399, 0, 2194,
	1310, 0, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 1309, 0, 349, 742, 743, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1395,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 0, 318, 1362, 540, 541, 542, 543, 0,
	1314, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 1401, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	774, 1403, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 272,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 274, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 1828, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 266, 731, 732, 789, 733, 734,
	735, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3797, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1399, 0, 2194, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 0, 0, 0,
	1310, 0, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 1309, 0, 349, 742, 743, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1395,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 0, 318, 1362, 540, 541, 542, 543, 0,
	1314, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 1401, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	774, 1403, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1391, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 1399, 0, 1397, 0, 0, 1310, 0, 0, 0,
	329, 0, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	1309, 0, 349, 742, 743, 744, 0, 350, 351, 1316,
	0, 1297, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1351, 377, 378, 379, 1300, 1298, 1299,
	1306, 1302, 1301, 1305, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 1341, 1342, 421,
	0, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1352, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	1348, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 1311, 1312, 1315, 545, 1354, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 317,
	460, 461, 462, 0, 1353, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 1355, 1313, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 1395, 479, 481, 480, 0,
	483, 1349, 482, 1358, 484, 485, 1359, 0, 486, 487,
	488, 489, 490, 491, 494, 1304, 1303, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 0, 318,
	1362, 540, 541, 542, 543, 0, 1314, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 1401, 552, 553,
	554, 0, 0, 555, 556, 767, 1363, 557, 1364, 1343,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 1344, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 608, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 774, 1403, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 1307, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 1345, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 1346, 700, 1347, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 1308, 716, 0, 0, 717, 718,
	719, 785, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 1399, 0, 1397,
	1310, 0, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 1309, 0, 349, 742, 743, 744,
	0, 350, 351, 1316, 0, 1297, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 1300, 1298, 1299, 1306, 1302, 1301, 1305, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 1341, 1342, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 1348, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 1311, 1312, 1315, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 317, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 1355, 1313, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 1395,
	479, 481, 480, 0, 483, 1349, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 1304,
	1303, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 0, 318, 1362, 540, 541, 542, 543, 0,
	1314, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 1401, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 1343, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 1344, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	774, 1403, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 1307, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 1345, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 1346, 700, 1347,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 1308, 716,
	0, 0, 717, 718, 719, 785, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 1399, 0, 1397, 1310, 0, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 1309, 0,
	349, 742, 743, 744, 0, 350, 351, 1316, 0, 1297,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306, 1302,
	1301, 1305, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 1341, 1342, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 1348, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	1311, 1312, 1315, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 1355, 1313, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 1349,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 1304, 1303, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 0, 318, 1362, 540,
	541, 542, 543, 0, 1314, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 1343, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 1344, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	1307, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 1345, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 1346, 700, 1347, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 1308, 716, 0, 0, 717, 718, 719, 785,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 4826, 1310, 0,
	0, 0, 329, 0, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 0, 741, 342, 343, 344, 345, 346, 347,
	348, 0, 1309, 0, 349, 742, 743, 744, 0, 350,
	351, 1316, 0, 1297, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1351, 377, 378, 379, 1300,
	1298, 1299, 1306, 1302, 1301, 1305, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 1341,
	1342, 421, 0, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1352, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 1348, 0, 755, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 1311, 1312, 1315, 545, 1354, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 1353, 759, 463, 546,
	464, 760, 761, 0, 762, 0, 465, 466, 468, 1355,
	1313, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 1349, 482, 1358, 484, 485, 1359, 0,
	486, 487, 488, 489, 490, 491, 494, 1304, 1303, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	0, 318, 1362, 540, 541, 542, 543, 0, 1314, 544,
	766, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1363, 557,
	1364, 1343, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 1344, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 774, 1403,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 1307, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	1345, 679, 680, 681, 682, 0, 683, 684, 0, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 779, 780, 781, 782, 0, 705, 0,
	694, 696, 697, 698, 699, 1346, 700, 1347, 0, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 1308, 716, 0, 0,
	717, 718, 719, 785, 786, 787, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 313,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 2886,
	2887, 2888, 2905, 2906, 2907, 0, 319, 320, 322, 321,
	323, 324, 325, 326, 0, 327, 328, 0, 0, 0,
	2908, 0, 736, 0, 0, 0, 329, 0, 330, 331,
	332, 2089, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 0, 741, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 2074, 349, 742,
	743, 744, 0, 350, 351, 745, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 2898, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 2894, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 0, 0, 0, 0, 0, 0,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	0, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 0, 0, 0, 2899,
	2900, 2901, 2902, 422, 423, 424, 751, 0, 0, 2893,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 0,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 754, 0, 755, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 0, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 0, 460, 461, 462, 0,
	0, 759, 463, 546, 464, 760, 761, 0, 762, 0,
	465, 466, 468, 0, 763, 0, 467, 469, 470, 0,
	471, 0, 2903, 2904, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 764, 482, 0,
	484, 485, 0, 0, 486, 487, 488, 489, 490, 491,
	494, 0, 0, 492, 493, 495, 496, 2896, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 0, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 0, 538, 526, 0, 0, 0, 540, 541, 542,
	543, 0, 765, 544, 766, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 0, 557, 0, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 0, 620, 621, 622,
	623, 624, 774, 625, 2897, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 0, 651,
	775, 652, 632, 633, 653, 654, 0, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 0,
	683, 684, 2073, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 779, 780, 781,
	782, 0, 705, 0, 694, 696, 697, 698, 699, 783,
	700, 784, 0, 701, 702, 703, 704, 695, 706, 707,
	0, 0, 708, 709, 711, 713, 714, 710, 712, 715,
	0, 716, 0, 0, 717, 718, 719, 785, 786, 787,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1228, 0, 1697, 2883, 2884, 2885, 2909, 2895,
	2889, 0, 2891, 2892, 2890, 2877, 2878, 2879, 2880, 2881,
	2882, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 1350, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 1665, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1351, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1352, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 1354, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 1353, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 1355, 763,
	1356, 467, 469, 470, 1357, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 1358, 484, 485, 1359, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1360, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1361, 538, 526, 0,
	0, 1362, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1363, 557, 1364,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1365, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 272, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 1366, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	274, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 1828, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 266, 731, 732, 789, 733, 734, 735, 0, 1825,
	267, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	213, 0, 0, 0, 736, 0, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 0,
	349, 742, 743, 744, 0, 350, 351, 745, 0, 1665,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 754, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 0, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 1355, 763, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 764,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 0, 0, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 0, 0, 1362, 540,
	541, 542, 543, 0, 765, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 272, 646, 647, 645, 648, 649, 650,
	0, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 274, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 783, 700, 784, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 0, 716, 0, 0, 717, 718, 719, 1828,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 266, 731,
	732, 789, 733, 734, 735, 1697, 1696, 267, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 213, 736, 0,
	0, 0, 329, 0, 330, 331, 332, 1350, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 0, 741, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 0, 349, 742, 743, 744, 0, 350,
	351, 745, 0, 1665, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 1351, 377, 378, 379, 0,
	0, 0, 0, 0, 0, 0, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 0, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 1352, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 754, 0, 755, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 1354, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 0, 460, 461, 462, 0, 1353, 759, 463, 546,
	464, 760, 761, 0, 762, 0, 465, 466, 468, 1355,
	763, 1356, 467, 469, 470, 1357, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 764, 482, 1358, 484, 485, 1359, 0,
	486, 487, 488, 489, 490, 491, 494, 0, 0, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 1360,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 1361, 538, 526,
	0, 0, 1362, 540, 541, 542, 543, 0, 765, 544,
	766, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 1363, 557,
	1364, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 1365, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 0, 651, 775, 652, 632, 633,
	653, 654, 1366, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 0, 683, 684, 0, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 779, 780, 781, 782, 0, 705, 0,
	694, 696, 697, 698, 699, 783, 700, 784, 0, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 0, 716, 0, 0,
	717, 718, 719, 785, 786, 787, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 1697,
	1696, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 320, 322, 321,
	323, 324, 325, 326, 0, 327, 328, 0, 0, 0,
	0, 1852, 736, 0, 0, 0, 329, 0, 330, 331,
	332, 1350, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 0, 741, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 0, 349, 742,
	743, 744, 0, 350, 351, 745, 0, 1665, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 1351,
	377, 378, 379, 0, 0, 0, 0, 0, 0, 0,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	0, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 0, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 1352,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 754, 0, 755, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 1354, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 0, 460, 461, 462, 0,
	1353, 759, 463, 546, 464, 760, 761, 0, 762, 0,
	465, 466, 468, 1355, 763, 1356, 467, 469, 470, 1357,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 764, 482, 1358,
	484, 485, 1359, 0, 486, 487, 488, 489, 490, 491,
	494, 0, 0, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 1360, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 1361, 538, 526, 0, 0, 1362, 540, 541, 542,
	543, 0, 765, 544, 766, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 1363, 557, 1364, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 1365, 620, 621, 622,
	623, 624, 774, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 0, 651,
	775, 652, 632, 633, 653, 654, 1366, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 0,
	683, 684, 0, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 779, 780, 781,
	782, 0, 705, 0, 694, 696, 697, 698, 699, 783,
	700, 784, 0, 701, 702, 703, 704, 695, 706, 707,
	0, 0, 708, 709, 711, 713, 714, 710, 712, 715,
	0, 716, 0, 0, 717, 718, 719, 785, 786, 787,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 0, 0, 731, 732, 789,
	733, 734, 735, 1697, 1696, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 320, 322, 321, 323, 324, 325, 326, 0, 327,
	328, 0, 0, 0, 0, 4177, 736, 0, 0, 0,
	329, 0, 330, 331, 332, 1350, 333, 334, 335, 336,
	337, 338, 339, 737, 738, 0, 340, 739, 341, 740,
	0, 741, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 0, 349, 742, 743, 744, 0, 350, 351, 745,
	0, 1665, 0, 352, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 361, 362, 363, 360, 364, 365, 0,
	366, 0, 367, 368, 369, 370, 371, 372, 373, 0,
	374, 375, 376, 1351, 377, 378, 379, 0, 0, 0,
	0, 0, 0, 0, 380, 381, 382, 383, 384, 0,
	385, 387, 746, 747, 0, 390, 392, 386, 388, 0,
	391, 389, 393, 394, 0, 395, 396, 397, 0, 0,
	398, 399, 400, 0, 401, 402, 403, 0, 404, 405,
	406, 0, 407, 408, 748, 409, 410, 411, 413, 415,
	412, 414, 416, 417, 418, 419, 420, 749, 750, 421,
	0, 316, 0, 0, 0, 0, 0, 422, 423, 424,
	751, 0, 0, 0, 425, 0, 426, 427, 428, 0,
	429, 430, 0, 1352, 431, 432, 433, 752, 753, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 0, 443,
	754, 0, 755, 444, 0, 445, 446, 447, 448, 449,
	450, 451, 756, 757, 758, 545, 1354, 452, 453, 454,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 0,
	460, 461, 462, 0, 1353, 759, 463, 546, 464, 760,
	761, 0, 762, 0, 465, 466, 468, 1355, 763, 1356,
	467, 469, 470, 1357, 471, 0, 0, 0, 472, 473,
	474, 475, 476, 477, 478, 0, 479, 481, 480, 0,
	483, 764, 482, 1358, 484, 485, 1359, 0, 486, 487,
	488, 489, 490, 491, 494, 0, 0, 492, 493, 495,
	496, 0, 497, 498, 500, 503, 499, 501, 502, 504,
	517, 518, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 520, 0, 519, 1360, 521, 522,
	523, 524, 525, 532, 534, 535, 530, 531, 533, 536,
	537, 539, 527, 528, 529, 1361, 538, 526, 0, 0,
	1362, 540, 541, 542, 543, 0, 765, 544, 766, 547,
	548, 0, 0, 549, 0, 550, 0, 0, 552, 553,
	554, 0, 0, 555, 556, 767, 1363, 557, 1364, 768,
	558, 559, 551, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 0, 570, 571, 769, 572, 573, 574,
	770, 575, 576, 577, 771, 578, 772, 579, 580, 0,
	581, 582, 583, 0, 584, 585, 586, 587, 588, 589,
	590, 591, 773, 592, 593, 595, 594, 596, 0, 597,
	0, 598, 599, 600, 0, 0, 0, 0, 0, 601,
	602, 604, 0, 605, 606, 607, 2639, 603, 609, 610,
	611, 612, 613, 614, 0, 616, 617, 615, 618, 619,
	1365, 620, 621, 622, 623, 624, 774, 625, 0, 626,
	627, 635, 636, 637, 628, 629, 631, 638, 630, 639,
	640, 641, 642, 644, 643, 0, 646, 647, 645, 648,
	649, 650, 0, 651, 775, 652, 632, 633, 653, 654,
	1366, 655, 656, 657, 658, 659, 660, 661, 776, 0,
	662, 0, 663, 664, 665, 666, 667, 668, 670, 634,
	671, 676, 677, 777, 672, 673, 674, 675, 778, 679,
	680, 681, 682, 0, 683, 684, 0, 678, 669, 0,
	685, 686, 687, 688, 689, 690, 0, 691, 692, 0,
	693, 779, 780, 781, 782, 0, 705, 0, 694, 696,
	697, 698, 699, 783, 700, 784, 0, 701, 702, 703,
	704, 695, 706, 707, 0, 0, 708, 709, 711, 713,
	714, 710, 712, 715, 0, 716, 0, 0, 717, 718,
	719, 785, 786, 787, 0, 721, 722, 720, 723, 724,
	727, 725, 726, 788, 728, 729, 730, 0, 0, 0,
	0, 731, 732, 789, 733, 734, 735, 1697, 2544, 0,
	0, 0, 0, 2545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 0, 0, 1852,
	736, 0, 0, 0, 329, 0, 330, 331, 332, 1350,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 0, 349, 742, 743, 744,
	0, 350, 351, 745, 0, 1665, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 1351, 377, 378,
	379, 0, 0, 0, 0, 0, 0, 0, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 0, 316, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 1352, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 754, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	1354, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 0, 460, 461, 462, 0, 1353, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 1355, 763, 1356, 467, 469, 470, 1357, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	2543, 481, 480, 0, 483, 764, 482, 1358, 484, 485,
	1359, 0, 486, 487, 488, 489, 490, 491, 494, 0,
	0, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 1360, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 1361,
	538, 526, 0, 0, 1362, 540, 541, 542, 543, 0,
	765, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	1363, 557, 1364, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 1365, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 0,
	646, 647, 645, 648, 649, 650, 0, 651, 775, 652,
	632, 633, 653, 654, 1366, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 0, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 783, 700, 784,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 0, 716,
	0, 0, 717, 718, 719, 785, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 0, 0, 0, 0, 731, 732, 789, 733, 734,
	735, 1697, 1696, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 1852, 736, 0, 0, 0, 329, 0,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 0,
	349, 742, 743, 744, 0, 350, 351, 745, 0, 1665,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 754, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 1354, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 0, 460, 461,
	462, 0, 1353, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 1355, 763, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 764,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 0, 0, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 0, 0, 1362, 540,
	541, 542, 543, 0, 765, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 1363, 557, 1364, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	0, 651, 775, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 783, 700, 784, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 0, 716, 0, 0, 717, 718, 719, 785,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 789, 733, 734, 735, 1228, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 322, 321, 323, 324,
	325, 326, 0, 327, 328, 0, 0, 1834, 0, 0,
	736, 0, 0, 0, 329, 0, 330, 331, 332, 0,
	333, 334, 335, 336, 337, 338, 339, 737, 738, 0,
	340, 739, 341, 740, 0, 741, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 0, 349, 742, 743, 744,
	0, 350, 351, 745, 0, 0, 0, 352, 353, 354,
	355, 356, 357, 358, 359, 0, 0, 361, 362, 363,
	360, 364, 365, 0, 366, 0, 367, 368, 369, 370,
	371, 372, 373, 0, 374, 375, 376, 0, 377, 378,
	379, 0, 0, 0, 0, 0, 0, 0, 380, 381,
	382, 383, 384, 0, 385, 387, 746, 747, 0, 390,
	392, 386, 388, 0, 391, 389, 393, 394, 0, 395,
	396, 397, 0, 0, 398, 399, 400, 0, 401, 402,
	403, 0, 404, 405, 406, 0, 407, 408, 748, 409,
	410, 411, 413, 415, 412, 414, 416, 417, 418, 419,
	420, 749, 750, 421, 0, 0, 0, 0, 0, 0,
	0, 422, 423, 424, 751, 0, 0, 0, 425, 0,
	426, 427, 428, 0, 429, 430, 0, 0, 431, 432,
	433, 752, 753, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 0, 443, 754, 0, 755, 444, 0, 445,
	446, 447, 448, 449, 450, 451, 756, 757, 758, 545,
	0, 452, 453, 454, 0, 455, 456, 457, 458, 459,
	0, 0, 0, 0, 460, 461, 462, 0, 0, 759,
	463, 546, 464, 760, 761, 0, 762, 0, 465, 466,
	468, 0, 763, 0, 467, 469, 470, 0, 471, 0,
	0, 0, 472, 473, 474, 475, 476, 477, 478, 0,
	479, 481, 480, 0, 483, 764, 482, 0, 484, 485,
	0, 0, 486, 487, 488, 489, 490, 491, 494, 0,
	0, 492, 493, 495, 496, 0, 497, 498, 500, 503,
	499, 501, 502, 504, 517, 518, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 520, 0,
	519, 0, 521, 522, 523, 524, 525, 532, 534, 535,
	530, 531, 533, 536, 537, 539, 527, 528, 529, 0,
	538, 526, 0, 0, 0, 540, 541, 542, 543, 0,
	765, 544, 766, 547, 548, 0, 0, 549, 0, 550,
	0, 0, 552, 553, 554, 0, 0, 555, 556, 767,
	0, 557, 0, 768, 558, 559, 551, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 0, 570, 571,
	769, 572, 573, 574, 770, 575, 576, 577, 771, 578,
	772, 579, 580, 0, 581, 582, 583, 0, 584, 585,
	586, 587, 588, 589, 590, 591, 773, 592, 593, 595,
	594, 596, 0, 597, 0, 598, 599, 600, 0, 0,
	0, 0, 0, 601, 602, 604, 0, 605, 606, 607,
	608, 603, 609, 610, 611, 612, 613, 614, 0, 616,
	617, 615, 618, 619, 0, 620, 621, 622, 623, 624,
	774, 625, 0, 626, 627, 635, 636, 637, 628, 629,
	631, 638, 630, 639, 640, 641, 642, 644, 643, 272,
	646, 647, 645, 648, 649, 650, 0, 651, 775, 652,
	632, 633, 653, 654, 0, 655, 656, 657, 658, 659,
	660, 661, 776, 0, 662, 0, 663, 664, 665, 666,
	667, 668, 670, 634, 671, 676, 677, 777, 672, 673,
	674, 675, 778, 679, 680, 681, 682, 0, 683, 684,
	0, 678, 669, 274, 685, 686, 687, 688, 689, 690,
	0, 691, 692, 0, 693, 779, 780, 781, 782, 0,
	705, 0, 694, 696, 697, 698, 699, 783, 700, 784,
	0, 701, 702, 703, 704, 695, 706, 707, 0, 0,
	708, 709, 711, 713, 714, 710, 712, 715, 0, 716,
	0, 0, 717, 718, 719, 1828, 786, 787, 0, 721,
	722, 720, 723, 724, 727, 725, 726, 788, 728, 729,
	730, 313, 0, 0, 266, 731, 732, 789, 733, 734,
	735, 0, 0, 267, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 329, 0,
	330, 331, 332, 213, 333, 334, 335, 336, 337, 338,
	339, 737, 738, 0, 340, 739, 341, 740, 0, 741,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 0,
	349, 742, 743, 744, 0, 350, 351, 745, 0, 0,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 0, 377, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 380, 381, 382, 383, 384, 0, 385, 387,
	746, 747, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 399,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 748, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 749, 750, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 751, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 0, 431, 432, 433, 752, 753, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 754, 0,
	755, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	756, 757, 758, 545, 0, 452, 453, 454, 0, 455,
	456, 457, 458, 459, 0, 0, 0, 317, 460, 461,
	462, 0, 0, 759, 463, 546, 464, 760, 761, 0,
	762, 0, 465, 466, 468, 0, 763, 0, 467, 469,
	470, 0, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 764,
	482, 0, 484, 485, 0, 0, 486, 487, 488, 489,
	490, 491, 494, 0, 0, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 0, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 0, 538, 526, 0, 318, 0, 540,
	541, 542, 543, 0, 765, 544, 766, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 767, 0, 557, 0, 768, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 769, 572, 573, 574, 770, 575,
	576, 577, 771, 578, 772, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	773, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 0, 620,
	621, 622, 623, 624, 774, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	0, 651, 775, 652, 632, 633, 653, 654, 0, 655,
	656, 657, 658, 659, 660, 661, 776, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 777, 672, 673, 674, 675, 778, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 779,
	780, 781, 782, 0, 705, 0, 694, 696, 697, 698,
	699, 783, 700, 784, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 0, 716, 0, 0, 717, 718, 719, 785,
	786, 787, 0, 721, 722, 720, 723, 724, 727, 725,
	726, 788, 728, 729, 730, 313, 3403, 0, 0, 731,
	732, 789, 733, 734, 735, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 329, 0, 330, 331, 332, 2208, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 0, 741, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 0, 349, 742, 743, 744, 0, 350,
	351, 745, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	0, 0, 0, 0, 0, 0, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 0, 0, 0, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 0, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 754, 0, 755, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 0, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 0, 460, 461, 462, 0, 0, 759, 463, 546,
	464, 760, 761, 0, 762, 0, 465, 466, 468, 0,
	763, 0, 467, 469, 470, 0, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 764, 482, 0, 484, 485, 0, 0,
	486, 487, 488, 489, 490, 491, 494, 0, 0, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 0,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 0, 538, 526,
	0, 0, 0, 540, 541, 542, 543, 0, 765, 544,
	766, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 0, 557,
	0, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 0, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 0, 651, 775, 652, 632, 633,
	653, 654, 0, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 0, 683, 684, 0, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 779, 780, 781, 782, 0, 705, 0,
	694, 696, 697, 698, 699, 783, 700, 784, 0, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 0, 716, 0, 0,
	717, 718, 719, 785, 786, 787, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 313,
	0, 0, 0, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 0, 319, 320, 322, 321,
	323, 324, 325, 326, 0, 327, 328, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 329, 0, 330, 331,
	332, 5634, 333, 334, 335, 336, 337, 338, 339, 737,
	738, 0, 340, 739, 341, 740, 0, 741, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 0, 349, 742,
	743, 744, 0, 350, 351, 745, 0, 0, 0, 352,
	353, 354, 355, 356, 357, 358, 359, 0, 0, 361,
	362, 363, 360, 364, 365, 0, 366, 0, 367, 368,
	369, 370, 371, 372, 373, 0, 374, 375, 376, 0,
	377, 378, 379, 0, 0, 0, 0, 0, 0, 0,
	380, 381, 382, 383, 384, 0, 385, 387, 746, 747,
	0, 390, 392, 386, 388, 0, 391, 389, 393, 394,
	0, 395, 396, 397, 0, 0, 398, 399, 400, 0,
	401, 402, 403, 0, 404, 405, 406, 0, 407, 408,
	748, 409, 410, 411, 413, 415, 412, 414, 416, 417,
	418, 419, 420, 749, 750, 421, 0, 316, 0, 0,
	0, 0, 0, 422, 423, 424, 751, 0, 0, 0,
	425, 0, 426, 427, 428, 0, 429, 430, 0, 0,
	431, 432, 433, 752, 753, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 0, 443, 754, 0, 755, 444,
	0, 445, 446, 447, 448, 449, 450, 451, 756, 757,
	758, 545, 0, 452, 453, 454, 0, 455, 456, 457,
	458, 459, 0, 0, 0, 317, 460, 461, 462, 0,
	0, 759, 463, 546, 464, 760, 761, 0, 762, 0,
	465, 466, 468, 0, 763, 0, 467, 469, 470, 0,
	471, 0, 0, 0, 472, 473, 474, 475, 476, 477,
	478, 0, 479, 481, 480, 0, 483, 764, 482, 0,
	484, 485, 0, 0, 486, 487, 488, 489, 490, 491,
	494, 0, 0, 492, 493, 495, 496, 0, 497, 498,
	500, 503, 499, 501, 502, 504, 517, 518, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	520, 0, 519, 0, 521, 522, 523, 524, 525, 532,
	534, 535, 530, 531, 533, 536, 537, 539, 527, 528,
	529, 0, 538, 526, 0, 318, 0, 540, 541, 542,
	543, 0, 765, 544, 766, 547, 548, 0, 0, 549,
	0, 550, 0, 0, 552, 553, 554, 0, 0, 555,
	556, 767, 0, 557, 0, 768, 558, 559, 551, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 0,
	570, 571, 769, 572, 573, 574, 770, 575, 576, 577,
	771, 578, 772, 579, 580, 0, 581, 582, 583, 0,
	584, 585, 586, 587, 588, 589, 590, 591, 773, 592,
	593, 595, 594, 596, 0, 597, 0, 598, 599, 600,
	0, 0, 0, 0, 0, 601, 602, 604, 0, 605,
	606, 607, 608, 603, 609, 610, 611, 612, 613, 614,
	0, 616, 617, 615, 618, 619, 0, 620, 621, 622,
	623, 624, 774, 625, 0, 626, 627, 635, 636, 637,
	628, 629, 631, 638, 630, 639, 640, 641, 642, 644,
	643, 0, 646, 647, 645, 648, 649, 650, 0, 651,
	775, 652, 632, 633, 653, 654, 0, 655, 656, 657,
	658, 659, 660, 661, 776, 0, 662, 0, 663, 664,
	665, 666, 667, 668, 670, 634, 671, 676, 677, 777,
	672, 673, 674, 675, 778, 679, 680, 681, 682, 0,
	683, 684, 0, 678, 669, 0, 685, 686, 687, 688,
	689, 690, 0, 691, 692, 0, 693, 779, 780, 781,
	782, 0, 705, 0, 694, 696, 697, 698, 699, 783,
	700, 784, 0, 701, 702, 703, 704, 695, 706, 707,
	0, 0, 708, 709, 711, 713, 714, 710, 712, 715,
	0, 716, 0, 0, 717, 718, 719, 785, 786, 787,
	0, 721, 722, 720, 723, 724, 727, 725, 726, 788,
	728, 729, 730, 0, 0, 313, 0, 731, 732, 789,
	733, 734, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 320, 322, 321, 323, 324, 325, 326,
	0, 327, 328, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 329, 1822, 330, 331, 332, 0, 333, 334,
	335, 336, 337, 338, 339, 737, 738, 0, 340, 739,
	341, 740, 0, 741, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 0, 349, 742, 743, 744, 0, 350,
	351, 745, 0, 0, 0, 352, 353, 354, 355, 356,
	357, 358, 359, 0, 0, 361, 362, 363, 360, 364,
	365, 0, 366, 0, 367, 368, 369, 370, 371, 372,
	373, 0, 374, 375, 376, 0, 377, 378, 379, 0,
	0, 0, 0, 0, 0, 0, 380, 381, 382, 383,
	384, 0, 385, 387, 746, 747, 0, 390, 392, 386,
	388, 0, 391, 389, 393, 394, 0, 395, 396, 397,
	0, 0, 398, 399, 400, 0, 401, 402, 403, 0,
	404, 405, 406, 0, 407, 408, 748, 409, 410, 411,
	413, 415, 412, 414, 416, 417, 418, 419, 420, 749,
	750, 421, 0, 316, 0, 0, 0, 0, 0, 422,
	423, 424, 751, 0, 0, 0, 425, 0, 426, 427,
	428, 0, 429, 430, 0, 0, 431, 432, 433, 752,
	753, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	0, 443, 754, 0, 755, 444, 0, 445, 446, 447,
	448, 449, 450, 451, 756, 757, 758, 545, 0, 452,
	453, 454, 0, 455, 456, 457, 458, 459, 0, 0,
	0, 317, 460, 461, 462, 0, 0, 759, 463, 546,
	464, 760, 761, 0, 762, 0, 465, 466, 468, 0,
	763, 0, 467, 469, 470, 0, 471, 0, 0, 0,
	472, 473, 474, 475, 476, 477, 478, 0, 479, 481,
	480, 0, 483, 764, 482, 0, 484, 485, 0, 0,
	486, 487, 488, 489, 490, 491, 494, 0, 0, 492,
	493, 495, 496, 0, 497, 498, 500, 503, 499, 501,
	502, 504, 517, 518, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 520, 0, 519, 0,
	521, 522, 523, 524, 525, 532, 534, 535, 530, 531,
	533, 536, 537, 539, 527, 528, 529, 0, 538, 526,
	0, 318, 0, 540, 541, 542, 543, 0, 765, 544,
	766, 547, 548, 0, 0, 549, 0, 550, 0, 0,
	552, 553, 554, 0, 0, 555, 556, 767, 0, 557,
	0, 768, 558, 559, 551, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 0, 570, 571, 769, 572,
	573, 574, 770, 575, 576, 577, 771, 578, 772, 579,
	580, 0, 581, 582, 583, 0, 584, 585, 586, 587,
	588, 589, 590, 591, 773, 592, 593, 595, 594, 596,
	0, 597, 0, 598, 599, 600, 0, 0, 0, 0,
	0, 601, 602, 604, 0, 605, 606, 607, 608, 603,
	609, 610, 611, 612, 613, 614, 0, 616, 617, 615,
	618, 619, 0, 620, 621, 622, 623, 624, 774, 625,
	0, 626, 627, 635, 636, 637, 628, 629, 631, 638,
	630, 639, 640, 641, 642, 644, 643, 0, 646, 647,
	645, 648, 649, 650, 0, 651, 775, 652, 632, 633,
	653, 654, 0, 655, 656, 657, 658, 659, 660, 661,
	776, 0, 662, 0, 663, 664, 665, 666, 667, 668,
	670, 634, 671, 676, 677, 777, 672, 673, 674, 675,
	778, 679, 680, 681, 682, 0, 683, 684, 0, 678,
	669, 0, 685, 686, 687, 688, 689, 690, 0, 691,
	692, 0, 693, 779, 780, 781, 782, 0, 705, 0,
	694, 696, 697, 698, 699, 783, 700, 784, 0, 701,
	702, 703, 704, 695, 706, 707, 0, 0, 708, 709,
	711, 713, 714, 710, 712, 715, 0, 716, 0, 0,
	717, 718, 719, 785, 786, 787, 0, 721, 722, 720,
	723, 724, 727, 725, 726, 788, 728, 729, 730, 0,
	0, 3211, 0, 731, 732, 789, 733, 734, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 320,
	322, 321, 323, 324, 325, 326, 0, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 4128,
	330, 331, 332, 1350, 333, 334, 335, 336, 337, 338,
	339, 0, 2268, 0, 340, 2258, 341, 2274, 0, 2281,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 0,
	349, 2284, 2285, 0, 0, 350, 351, 0, 0, 1665,
	0, 352, 353, 354, 355, 356, 357, 358, 359, 0,
	0, 361, 362, 363, 360, 364, 365, 0, 366, 0,
	367, 368, 369, 370, 371, 372, 373, 0, 374, 375,
	376, 1351, 377, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 380, 381, 382, 383, 384, 1333, 385, 387,
	2272, 2271, 0, 390, 392, 386, 388, 0, 391, 389,
	393, 394, 0, 395, 396, 397, 0, 0, 398, 1318,
	400, 0, 401, 402, 403, 0, 404, 405, 406, 0,
	407, 408, 0, 409, 410, 411, 413, 415, 412, 414,
	416, 417, 418, 419, 420, 0, 0, 421, 0, 316,
	0, 0, 0, 0, 0, 422, 423, 424, 2270, 0,
	0, 0, 425, 0, 426, 427, 428, 0, 429, 430,
	0, 1352, 431, 432, 433, 2279, 2280, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 0, 443, 0, 0,
	0, 444, 0, 445, 446, 447, 448, 449, 450, 451,
	0, 0, 0, 545, 1354, 452, 453, 454, 3205, 455,
	456, 457, 458, 459, 0, 0, 0, 0, 460, 461,
	462, 0, 1353, 3207, 463, 546, 464, 2265, 2266, 0,
	2261, 0, 465, 466, 468, 1355, 0, 1356, 467, 469,
	470, 1357, 471, 0, 0, 0, 472, 473, 474, 475,
	476, 477, 478, 0, 479, 481, 480, 0, 483, 0,
	482, 1358, 484, 485, 1359, 0, 486, 487, 488, 489,
	490, 491, 494, 0, 0, 492, 493, 495, 496, 0,
	497, 498, 500, 503, 499, 501, 502, 504, 517, 518,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 520, 0, 519, 1360, 521, 522, 523, 524,
	525, 532, 534, 535, 530, 531, 533, 536, 537, 539,
	527, 528, 529, 1361, 538, 526, 0, 0, 1362, 540,
	541, 542, 543, 0, 0, 544, 2273, 547, 548, 0,
	0, 549, 0, 550, 0, 0, 552, 553, 554, 0,
	0, 555, 556, 3206, 1363, 557, 1364, 0, 558, 559,
	551, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 570, 571, 2255, 572, 573, 574, 2256, 575,
	576, 577, 0, 578, 0, 579, 580, 0, 581, 582,
	583, 0, 584, 585, 586, 587, 588, 589, 590, 591,
	2269, 592, 593, 595, 594, 596, 0, 597, 0, 598,
	599, 600, 0, 0, 0, 0, 0, 601, 602, 604,
	0, 605, 606, 607, 608, 603, 609, 610, 611, 612,
	613, 614, 0, 616, 617, 615, 618, 619, 1365, 620,
	621, 622, 623, 624, 0, 625, 0, 626, 627, 635,
	636, 637, 628, 629, 631, 638, 630, 639, 640, 641,
	642, 644, 643, 0, 646, 647, 645, 648, 649, 650,
	0, 651, 0, 652, 632, 633, 653, 654, 1366, 655,
	656, 657, 658, 659, 660, 661, 2267, 0, 662, 0,
	663, 664, 665, 666, 667, 668, 670, 634, 671, 676,
	677, 2283, 672, 673, 674, 675, 0, 679, 680, 681,
	682, 0, 683, 684, 0, 678, 669, 0, 685, 686,
	687, 688, 689, 690, 0, 691, 692, 0, 693, 2275,
	2276, 2277, 2278, 0, 705, 0, 694, 696, 697, 698,
	699, 0, 700, 0, 0, 701, 702, 703, 704, 695,
	706, 707, 0, 0, 708, 709, 711, 713, 714, 710,
	712, 715, 0, 716, 0, 0, 717, 718, 719, 0,
	2259, 2282, 3208, 721, 722, 720, 723, 724, 727, 725,
	726, 0, 728, 729, 730, 0, 0, 0, 0, 731,
	732, 0, 733, 734, 735, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 3200, 736,
	0, 2249, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	3211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 3522, 0, 0, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	0, 2268, 0, 340, 2258, 341, 2274, 0, 2281, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	2284, 2285, 0, 0, 350, 351, 0, 0, 1665, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 1333, 385, 387, 2272,
	2271, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 1318, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 0, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 0, 0, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 2270, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 2279, 2280, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 0, 0, 0,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 0,
	0, 0, 545, 1354, 452, 453, 454, 3205, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 1353, 3207, 463, 546, 464, 2265, 2266, 0, 2261,
	0, 465, 466, 468, 1355, 0, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 0, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 0, 0, 1362, 540, 541,
	542, 543, 0, 0, 544, 2273, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 3206, 1363, 557, 1364, 0, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 2255, 572, 573, 574, 2256, 575, 576,
	577, 0, 578, 0, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 2269,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 0, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 0, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 2267, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	2283, 672, 673, 674, 675, 0, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 2275, 2276,
	2277, 2278, 0, 705, 0, 694, 696, 697, 698, 699,
	0, 700, 0, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 0, 2259,
	2282, 3208, 721, 722, 720, 723, 724, 727, 725, 726,
	0, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	0, 733, 734, 735, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	2249, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	4296, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 2626, 1310, 0, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 1309,
	0, 349, 742, 743, 744, 0, 350, 351, 1316, 0,
	1297, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 1300, 1298, 1299, 1306,
	1302, 1301, 1305, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 1341, 1342, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 1348,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1311, 1312, 1315, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 1355, 1313, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	1349, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 1304, 1303, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 0, 318, 1362,
	540, 541, 542, 543, 0, 1314, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 1343, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 1344, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1307, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 1345, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 1346, 700, 1347, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 1308, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 2262, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 0, 2268, 0, 340,
	2258, 341, 2274, 0, 2281, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 2284, 2285, 0, 0,
	350, 351, 0, 0, 1665, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 1333, 385, 387, 2272, 2271, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 1318, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 0, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 2270, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	2279, 2280, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 0, 0, 0, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 0, 0, 0, 545, 1354,
	452, 453, 454, 3205, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 1353, 3207, 463,
	546, 464, 2265, 2266, 0, 2261, 0, 465, 466, 468,
	1355, 0, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 0, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 0, 0, 1362, 540, 541, 542, 543, 0, 0,
	544, 2273, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 3206, 1363,
	557, 1364, 0, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 2255,
	572, 573, 574, 2256, 575, 576, 577, 0, 578, 0,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 2269, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 0,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 0, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 2267, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 2283, 672, 673, 674,
	675, 0, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 2275, 2276, 2277, 2278, 0, 705,
	0, 694, 696, 697, 698, 699, 0, 700, 0, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 0, 2259, 2282, 3208, 721, 722,
	720, 723, 724, 727, 725, 726, 0, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 0, 733, 734, 735,
	1053, 0, 952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 2249, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 959, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 1050, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 1052, 0, 678, 669, 957, 685,
	686, 687, 688, 689, 958, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 2231, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 4431, 327, 328, 0, 0, 0, 0, 0, 736,
	962, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	2238, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 2239,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 2240, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	4430, 630, 639, 640, 641, 642, 644, 643, 0, 2235,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 2237, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 4429, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	2231, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 2289, 327, 328, 0, 0,
	0, 0, 0, 736, 962, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 2238, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 2239, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 2240, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 2288, 630, 639, 640, 641, 642,
	644, 643, 0, 2290, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 2237, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 2287, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 2231, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 2230,
	327, 328, 0, 0, 0, 0, 0, 736, 962, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 2238, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 2239, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 2240, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 2229, 630,
	639, 640, 641, 642, 644, 643, 0, 2235, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	2237, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	2228, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 950, 0,
	952, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 962, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 959, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 957, 685, 686, 687,
	688, 689, 958, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 952, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 962, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 959, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	957, 685, 686, 687, 688, 689, 958, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 3211, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 0, 962, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 0, 2268,
	0, 340, 2258, 341, 2274, 0, 2281, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 2284, 2285,
	0, 0, 350, 351, 0, 0, 1665, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 1333, 385, 387, 2272, 2271, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 1318, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 0,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 0, 0, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 2270, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 2279, 2280, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 0, 0, 0, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 0, 0, 0,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 1353,
	0, 463, 546, 464, 2265, 2266, 0, 2261, 0, 465,
	466, 468, 1355, 0, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 0, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 0, 0, 1362, 540, 541, 542, 543,
	0, 0, 544, 2273, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	0, 1363, 557, 1364, 0, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 2255, 572, 573, 574, 2256, 575, 576, 577, 0,
	578, 0, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 2269, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 0, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 0,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 2267, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 2283, 672,
	673, 674, 675, 0, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 2275, 2276, 2277, 2278,
	0, 705, 0, 694, 696, 697, 698, 699, 0, 700,
	0, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 0, 2259, 2282, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 0, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 0, 733,
	734, 735, 3191, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 2249, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 2231, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 962, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 2238, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 2239, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 2240,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 2680, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 2681, 630, 639, 640, 641, 642, 644, 643,
	0, 2235, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 2237, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 2682, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 2262, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 0, 962, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 0, 2268, 0, 340, 2258, 341, 2274, 0,
	2281, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 2284, 2285, 0, 0, 350, 351, 0, 0,
	1665, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 1333, 385,
	387, 2272, 2271, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	1318, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 0, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 2270,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 2279, 2280, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 0,
	0, 0, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 0, 0, 0, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 1353, 0, 463, 546, 464, 2265, 2266,
	0, 2261, 0, 465, 466, 468, 1355, 0, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	0, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 0, 0, 1362,
	540, 541, 542, 543, 0, 0, 544, 2273, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 0, 1363, 557, 1364, 0, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 2255, 572, 573, 574, 2256,
	575, 576, 577, 0, 578, 0, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 2269, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 0, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 0, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 2267, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 2283, 672, 673, 674, 675, 0, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	2275, 2276, 2277, 2278, 0, 705, 0, 694, 696, 697,
	698, 699, 0, 700, 0, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	0, 2259, 2282, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 0, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 0, 733, 734, 735, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 2249, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 962, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 1696, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4672, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	1665, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 1355, 763, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 0, 0, 1362,
	540, 541, 542, 543, 4558, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 3604, 0, 1697, 1696,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 1665, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 1355, 763, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 0, 0, 1362, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 2563, 0, 1697, 1696, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 1350, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 1665, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 1351, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 1352, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1755, 757, 758, 545, 1354, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 1353, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 1355, 763,
	1356, 467, 469, 470, 1357, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 1358, 484, 485, 1359, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 1360, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 1361, 538, 526, 0,
	0, 1362, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 1363, 557, 1364,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 1365, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 1366, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 0, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 2298, 0,
	1697, 1696, 0, 0, 0, 0, 1694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 1665, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 1354, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 1353, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 1355, 763, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 0, 0, 1362, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1363, 557, 1364, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 0, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 1885, 0, 1697, 1696, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 1665, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	1882, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	1355, 763, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 0, 0, 1362, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 1883, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 1881, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 1884, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	0, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	1752, 0, 1697, 1696, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	1665, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1755, 757, 758, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 1355, 763, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 0, 0, 1362,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 0, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 1692, 0, 1697, 1696,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	1350, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 1665, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 1351, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 1352, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 1354, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 1353,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 1355, 763, 1356, 467, 469, 470, 1357, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 1358, 484,
	485, 1359, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 1360, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	1361, 538, 526, 0, 0, 1362, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 1363, 557, 1364, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 1365, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 1690,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 1366, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 1697, 1696, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 1350, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	1665, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 1351, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 1352, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 1354, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 1353, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 1355, 763, 1356, 467,
	469, 470, 1357, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 1358, 484, 485, 1359, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 1360, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 1361, 538, 526, 0, 0, 1362,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 1363, 557, 1364, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 1365,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 1366,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1697, 1696, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 1350, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 1665, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 1351, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 1352, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 1354,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 1353, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	1355, 763, 1356, 467, 469, 470, 1357, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 1358, 484, 485, 1359,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	1360, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 1361, 538,
	526, 0, 0, 1362, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 1363,
	557, 1364, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 1365, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 1366, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1697, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 1350, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 1665, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	1351, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	1352, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 1354, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 1353, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 1355, 763, 1356, 467, 469, 470,
	1357, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	1358, 484, 485, 1359, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 1360, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 1361, 538, 526, 0, 0, 1362, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 1363, 557, 1364, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 1365, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 1366, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 3273, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	4120, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 3277, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 4119, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	3276, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	4116, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 4118, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 4115, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	3275, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 4117, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 3273, 350, 351, 745, 0, 0, 3267, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 3269, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 3277, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 3276, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 3266, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 3275, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	3274, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1966, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 1965,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 1963, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 1968, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 1964, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 1967, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 1962, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	1960, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 1961, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1669, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1671,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 1401, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1666, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1668, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	1401, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1572, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1574, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 1401, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 824, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	822, 325, 326, 811, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 814, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 820, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	816, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	823, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 810, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 811,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	814, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 815,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 816, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 809, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 811, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 814, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 815, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	816, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 811, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 814, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 4568, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 816, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	1401, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 3986, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 3491, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 3490, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 811, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 814, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 815, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 816, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 3193, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 2647, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	2591, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 2590, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 2575, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 2577, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 2537, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 1401, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1800, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1799, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1689, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1682, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1684,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1489, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1488, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1478, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 1477, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1474, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1473, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1468, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1467, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1445, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1444,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 791, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	304, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 814, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 815, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 816, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 2689, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 2687, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 316, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 317, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 318, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 2685, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	316, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 317, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 318, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 316, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 2598, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 317, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 318, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 316, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 2322,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 317, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 318, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 316, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 2316, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	317, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	318, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1037, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	1036, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 1035, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 914, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 903, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 912, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 905, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 911, 430, 907, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 908, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 906, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 909, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 910, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 904, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	897, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	903, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 912,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 905, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 911,
	430, 907, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 908,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 906, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	909, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 910,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 904,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 4119, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 4924, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1517, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 1520, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 1518, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 885, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	884, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 883, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 1521,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	881, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1517, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	1520, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	1518, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 885, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 884, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 883, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 1521, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 881, 780, 781, 782,
	0, 705, 0, 694, 1519, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 892, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 890,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 800, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 799, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 798, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 3403, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 5244, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 3926, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 4798, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 4492, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 3127,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 3118, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 3403, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 3483,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 2455, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 884, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	883, 630, 639, 640, 641, 642, 3335, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 881, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 2659, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 2645, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1856, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1848, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 875, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 871,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 876, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 885, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 884, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 883, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 1833, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 881, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1806, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1805,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1789, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1787, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1781, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1759, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1757, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1750, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 1711, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 1674, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	1523, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	884, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 883, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	881, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 1494, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 1493, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1485, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1484, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 1426, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 895, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 875, 0,
	313, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 871, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 870, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 756,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	876, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 885, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 884, 621,
	622, 623, 624, 872, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 883, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 873, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 881, 780,
	781, 782, 0, 705, 0, 694, 877, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 864, 0, 313, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 865, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	826, 0, 313, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 818, 0, 313, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 795, 0, 313, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 4151, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 884, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	883, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 881, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 4035,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 4004, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 4000, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 3951, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 3949, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 651, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 3937,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 3934, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 3502, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 313, 0, 0, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 737, 738, 0, 340, 739, 341, 740, 0,
	741, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 742, 743, 744, 0, 350, 351, 745, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 0, 380, 381, 382, 383, 384, 0, 385,
	387, 746, 747, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 748, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 749, 750, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 751,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 752, 753, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 754,
	0, 755, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 756, 757, 758, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 759, 463, 546, 464, 760, 761,
	0, 762, 0, 465, 466, 468, 0, 763, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	764, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 765, 544, 766, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 767, 0, 557, 0, 768, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 769, 572, 573, 574, 770,
	575, 576, 577, 771, 578, 772, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 773, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 774, 625, 0, 626, 627,
	865, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 0, 651, 775, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 776, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 777, 672, 673, 674, 675, 778, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	779, 780, 781, 782, 0, 705, 0, 694, 696, 697,
	698, 699, 783, 700, 784, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	785, 786, 787, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 788, 728, 729, 730, 313, 0, 0, 0,
	731, 732, 789, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 736,
	0, 2616, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 737, 738, 0, 340,
	739, 341, 740, 0, 741, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 742, 743, 744, 0,
	350, 351, 745, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 0, 380, 381, 382,
	383, 384, 0, 385, 387, 746, 747, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 748, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	749, 750, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 751, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	752, 753, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 754, 0, 755, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 756, 757, 758, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 759, 463,
	546, 464, 760, 761, 0, 762, 0, 465, 466, 468,
	0, 763, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 764, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 765,
	544, 766, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 767, 0,
	557, 0, 768, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 769,
	572, 573, 574, 770, 575, 576, 577, 771, 578, 772,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 773, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 774,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 0, 0, 775, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 776, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 777, 672, 673, 674,
	675, 778, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 779, 780, 781, 782, 0, 705,
	0, 694, 696, 697, 698, 699, 783, 700, 784, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 785, 786, 787, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 788, 728, 729, 730,
	313, 0, 0, 0, 731, 732, 789, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	737, 738, 0, 340, 739, 341, 740, 0, 741, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	742, 743, 744, 0, 350, 351, 745, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 380, 381, 382, 383, 384, 0, 385, 387, 746,
	747, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 748, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 749, 750, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 751, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 752, 753, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 754, 0, 755,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1454,
	757, 758, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 759, 463, 546, 464, 760, 761, 0, 762,
	0, 465, 466, 468, 0, 763, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 764, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 765, 544, 766, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 767, 0, 557, 0, 768, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 769, 572, 573, 574, 770, 575, 576,
	577, 771, 578, 772, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 773,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 774, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 0,
	651, 775, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 776, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	777, 672, 673, 674, 675, 778, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 779, 780,
	781, 782, 0, 705, 0, 694, 696, 697, 698, 699,
	783, 700, 784, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 785, 786,
	787, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	788, 728, 729, 730, 313, 0, 0, 0, 731, 732,
	789, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 737, 738, 0, 340, 739, 341,
	740, 0, 741, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 742, 743, 744, 0, 350, 351,
	745, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 0, 380, 381, 382, 383, 384,
	0, 385, 387, 746, 747, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 748, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 749, 750,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 751, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 752, 753,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 754, 0, 755, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 756, 757, 758, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 759, 463, 546, 464,
	760, 761, 0, 762, 0, 465, 466, 468, 0, 763,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 764, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 765, 544, 766,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 767, 0, 557, 0,
	768, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 769, 572, 573,
	574, 770, 575, 576, 577, 771, 578, 772, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 773, 592, 593, 1374, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 774, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 0, 651, 775, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 776,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 777, 672, 673, 674, 675, 778,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 779, 780, 781, 782, 0, 705, 0, 694,
	696, 697, 698, 699, 783, 700, 784, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 785, 786, 787, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 788, 728, 729, 730, 313, 0,
	0, 0, 731, 732, 789, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 737, 738,
	0, 340, 739, 341, 740, 0, 741, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 742, 743,
	744, 0, 350, 351, 745, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 0, 380,
	381, 382, 383, 384, 0, 385, 387, 746, 747, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 748,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 749, 750, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 751, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 752, 753, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 754, 0, 755, 0, 0,
	445, 446, 447, 448, 449, 450, 451, 756, 757, 758,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	759, 463, 546, 464, 760, 761, 0, 762, 0, 465,
	466, 468, 0, 763, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 764, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 765, 544, 766, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	767, 0, 557, 0, 768, 558, 559, 551, 560, 561,
	562, 0, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 769, 572, 573, 574, 770, 575, 576, 577, 771,
	578, 772, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 0, 590, 591, 773, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 774, 0, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 0, 651, 775,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 776, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 777, 672,
	673, 674, 675, 778, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 779, 780, 781, 782,
	0, 705, 0, 694, 696, 697, 698, 699, 783, 700,
	784, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 785, 786, 787, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 788, 728,
	729, 730, 1795, 0, 1501, 0, 731, 732, 789, 733,
	734, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 322, 321, 323, 324, 325, 326, 0,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 330, 331, 332, 0, 333, 334, 335,
	336, 337, 338, 339, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 0, 349, 0, 0, 0, 0, 350, 351,
	0, 0, 0, 0, 352, 353, 354, 355, 356, 357,
	358, 359, 0, 0, 361, 362, 363, 360, 364, 365,
	0, 366, 0, 367, 368, 369, 370, 371, 372, 373,
	0, 374, 375, 376, 0, 377, 378, 379, 0, 0,
	0, 0, 0, 0, 1503, 380, 381, 382, 383, 384,
	0, 385, 387, 0, 0, 0, 390, 392, 386, 388,
	0, 391, 389, 393, 394, 0, 395, 396, 397, 0,
	0, 398, 399, 400, 0, 401, 402, 403, 0, 404,
	405, 406, 0, 407, 408, 0, 409, 410, 411, 413,
	415, 412, 414, 416, 417, 418, 419, 420, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 422, 423,
	424, 0, 0, 0, 0, 425, 0, 426, 427, 428,
	0, 429, 430, 0, 0, 431, 432, 433, 0, 0,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 0,
	443, 0, 0, 0, 444, 0, 445, 446, 447, 448,
	449, 450, 451, 1794, 0, 0, 545, 0, 452, 453,
	454, 0, 455, 456, 457, 458, 459, 0, 0, 0,
	0, 460, 461, 462, 0, 0, 0, 463, 546, 464,
	0, 0, 0, 0, 0, 465, 466, 468, 0, 0,
	0, 467, 469, 470, 0, 471, 0, 0, 0, 472,
	473, 474, 475, 476, 477, 478, 0, 479, 481, 480,
	0, 483, 0, 482, 0, 484, 485, 0, 0, 486,
	487, 488, 489, 490, 491, 494, 0, 0, 492, 493,
	495, 496, 0, 497, 498, 500, 503, 499, 501, 502,
	504, 517, 518, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 520, 0, 519, 0, 521,
	522, 523, 524, 525, 532, 534, 535, 530, 531, 533,
	536, 537, 539, 527, 528, 529, 0, 538, 526, 0,
	0, 0, 540, 541, 542, 543, 0, 0, 544, 0,
	547, 548, 0, 0, 549, 0, 550, 0, 0, 552,
	553, 554, 0, 0, 555, 556, 0, 0, 557, 0,
	0, 558, 559, 551, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 0, 570, 571, 0, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 0, 579, 580,
	0, 581, 582, 583, 0, 584, 585, 586, 587, 588,
	589, 590, 591, 0, 592, 593, 595, 594, 596, 0,
	597, 0, 598, 599, 600, 0, 0, 0, 0, 0,
	601, 602, 604, 0, 605, 606, 607, 608, 603, 609,
	610, 611, 612, 613, 614, 0, 616, 617, 615, 618,
	619, 0, 620, 621, 622, 623, 624, 0, 625, 0,
	626, 627, 635, 636, 637, 628, 629, 631, 638, 630,
	639, 640, 641, 642, 644, 643, 0, 646, 647, 645,
	648, 649, 650, 1504, 651, 0, 652, 632, 633, 653,
	654, 0, 655, 656, 657, 658, 659, 660, 661, 0,
	0, 662, 0, 663, 664, 665, 666, 667, 668, 670,
	634, 671, 676, 677, 0, 672, 673, 674, 675, 0,
	679, 680, 681, 682, 0, 683, 684, 0, 678, 669,
	0, 685, 686, 687, 688, 689, 690, 0, 691, 692,
	0, 693, 0, 0, 0, 0, 0, 705, 0, 694,
	696, 697, 698, 699, 0, 700, 0, 0, 701, 702,
	703, 704, 695, 706, 707, 0, 0, 708, 709, 711,
	713, 714, 710, 712, 715, 0, 716, 0, 0, 717,
	718, 719, 0, 0, 0, 0, 721, 722, 720, 723,
	724, 727, 725, 726, 0, 728, 729, 730, 1714, 0,
	1501, 0, 731, 732, 0, 733, 734, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 322,
	321, 323, 324, 325, 326, 0, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 330,
	331, 332, 0, 333, 334, 335, 336, 337, 338, 339,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 0, 349,
	0, 0, 0, 0, 350, 351, 0, 0, 0, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 0, 0,
	361, 362, 363, 360, 364, 365, 0, 366, 0, 367,
	368, 369, 370, 371, 372, 373, 0, 374, 375, 376,
	0, 377, 378, 379, 0, 0, 0, 0, 0, 0,
	1503, 380, 381, 382, 383, 384, 0, 385, 387, 0,
	0, 0, 390, 392, 386, 388, 0, 391, 389, 393,
	394, 0, 395, 396, 397, 0, 0, 398, 399, 400,
	0, 401, 402, 403, 0, 404, 405, 406, 0, 407,
	408, 0, 409, 410, 411, 413, 415, 412, 414, 416,
	417, 418, 419, 420, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 422, 423, 424, 0, 0, 0,
	0, 425, 0, 426, 427, 428, 0, 429, 430, 0,
	0, 431, 432, 433, 0, 0, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 0, 443, 0, 0, 0,
	444, 0, 445, 446, 447, 448, 449, 450, 451, 1713,
	0, 0, 545, 0, 452, 453, 454, 0, 455, 456,
	457, 458, 459, 0, 0, 0, 0, 460, 461, 462,
	0, 0, 0, 463, 546, 464, 0, 0, 0, 0,
	0, 465, 466, 468, 0, 0, 0, 467, 469, 470,
	0, 471, 0, 0, 0, 472, 473, 474, 475, 476,
	477, 478, 0, 479, 481, 480, 0, 483, 0, 482,
	0, 484, 485, 0, 0, 486, 487, 488, 489, 490,
	491, 494, 0, 0, 492, 493, 495, 496, 0, 497,
	498, 500, 503, 499, 501, 502, 504, 517, 518, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 520, 0, 519, 0, 521, 522, 523, 524, 525,
	532, 534, 535, 530, 531, 533, 536, 537, 539, 527,
	528, 529, 0, 538, 526, 0, 0, 0, 540, 541,
	542, 543, 0, 0, 544, 0, 547, 548, 0, 0,
	549, 0, 550, 0, 0, 552, 553, 554, 0, 0,
	555, 556, 0, 0, 557, 0, 0, 558, 559, 551,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	0, 570, 571, 0, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 0, 579, 580, 0, 581, 582, 583,
	0, 584, 585, 586, 587, 588, 589, 590, 591, 0,
	592, 593, 595, 594, 596, 0, 597, 0, 598, 599,
	600, 0, 0, 0, 0, 0, 601, 602, 604, 0,
	605, 606, 607, 608, 603, 609, 610, 611, 612, 613,
	614, 0, 616, 617, 615, 618, 619, 0, 620, 621,
	622, 623, 624, 0, 625, 0, 626, 627, 635, 636,
	637, 628, 629, 631, 638, 630, 639, 640, 641, 642,
	644, 643, 0, 646, 647, 645, 648, 649, 650, 1504,
	651, 0, 652, 632, 633, 653, 654, 0, 655, 656,
	657, 658, 659, 660, 661, 0, 0, 662, 0, 663,
	664, 665, 666, 667, 668, 670, 634, 671, 676, 677,
	0, 672, 673, 674, 675, 0, 679, 680, 681, 682,
	0, 683, 684, 0, 678, 669, 0, 685, 686, 687,
	688, 689, 690, 0, 691, 692, 0, 693, 0, 0,
	0, 0, 0, 705, 0, 694, 696, 697, 698, 699,
	0, 700, 0, 0, 701, 702, 703, 704, 695, 706,
	707, 0, 0, 708, 709, 711, 713, 714, 710, 712,
	715, 0, 716, 0, 0, 717, 718, 719, 0, 0,
	0, 0, 721, 722, 720, 723, 724, 727, 725, 726,
	0, 728, 729, 730, 1499, 0, 1501, 0, 731, 732,
	0, 733, 734, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 322, 321, 323, 324, 325,
	326, 0, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 330, 331, 332, 0, 333,
	334, 335, 336, 337, 338, 339, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 0, 349, 0, 0, 0, 0,
	350, 351, 0, 0, 0, 0, 352, 353, 354, 355,
	356, 357, 358, 359, 0, 0, 361, 362, 363, 360,
	364, 365, 0, 366, 0, 367, 368, 369, 370, 371,
	372, 373, 0, 374, 375, 376, 0, 377, 378, 379,
	0, 0, 0, 0, 0, 0, 1503, 380, 381, 382,
	383, 384, 0, 385, 387, 0, 0, 0, 390, 392,
	386, 388, 0, 391, 389, 393, 394, 0, 395, 396,
	397, 0, 0, 398, 399, 400, 0, 401, 402, 403,
	0, 404, 405, 406, 0, 407, 408, 0, 409, 410,
	411, 413, 415, 412, 414, 416, 417, 418, 419, 420,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	422, 423, 424, 0, 0, 0, 0, 425, 0, 426,
	427, 428, 0, 429, 430, 0, 0, 431, 432, 433,
	0, 0, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 0, 443, 0, 0, 0, 444, 0, 445, 446,
	447, 448, 449, 450, 451, 1498, 0, 0, 545, 0,
	452, 453, 454, 0, 455, 456, 457, 458, 459, 0,
	0, 0, 0, 460, 461, 462, 0, 0, 0, 463,
	546, 464, 0, 0, 0, 0, 0, 465, 466, 468,
	0, 0, 0, 467, 469, 470, 0, 471, 0, 0,
	0, 472, 473, 474, 475, 476, 477, 478, 0, 479,
	481, 480, 0, 483, 0, 482, 0, 484, 485, 0,
	0, 486, 487, 488, 489, 490, 491, 494, 0, 0,
	492, 493, 495, 496, 0, 497, 498, 500, 503, 499,
	501, 502, 504, 517, 518, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 520, 0, 519,
	0, 521, 522, 523, 524, 525, 532, 534, 535, 530,
	531, 533, 536, 537, 539, 527, 528, 529, 0, 538,
	526, 0, 0, 0, 540, 541, 542, 543, 0, 0,
	544, 0, 547, 548, 0, 0, 549, 0, 550, 0,
	0, 552, 553, 554, 0, 0, 555, 556, 0, 0,
	557, 0, 0, 558, 559, 551, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 0, 570, 571, 0,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 0,
	579, 580, 0, 581, 582, 583, 0, 584, 585, 586,
	587, 588, 589, 590, 591, 0, 592, 593, 595, 594,
	596, 0, 597, 0, 598, 599, 600, 0, 0, 0,
	0, 0, 601, 602, 604, 0, 605, 606, 607, 608,
	603, 609, 610, 611, 612, 613, 614, 0, 616, 617,
	615, 618, 619, 0, 620, 621, 622, 623, 624, 0,
	625, 0, 626, 627, 635, 636, 637, 628, 629, 631,
	638, 630, 639, 640, 641, 642, 644, 643, 0, 646,
	647, 645, 648, 649, 650, 1504, 651, 0, 652, 632,
	633, 653, 654, 0, 655, 656, 657, 658, 659, 660,
	661, 0, 0, 662, 0, 663, 664, 665, 666, 667,
	668, 670, 634, 671, 676, 677, 0, 672, 673, 674,
	675, 0, 679, 680, 681, 682, 0, 683, 684, 0,
	678, 669, 0, 685, 686, 687, 688, 689, 690, 0,
	691, 692, 0, 693, 0, 0, 0, 0, 0, 705,
	0, 694, 696, 697, 698, 699, 0, 700, 0, 0,
	701, 702, 703, 704, 695, 706, 707, 0, 0, 708,
	709, 711, 713, 714, 710, 712, 715, 0, 716, 0,
	0, 717, 718, 719, 0, 0, 0, 0, 721, 722,
	720, 723, 724, 727, 725, 726, 0, 728, 729, 730,
	2336, 0, 1501, 0, 731, 732, 0, 733, 734, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 322, 321, 323, 324, 325, 326, 0, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 330, 331, 332, 0, 333, 334, 335, 336, 337,
	338, 339, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	0, 349, 0, 0, 0, 0, 350, 351, 0, 0,
	0, 0, 352, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 361, 362, 363, 360, 364, 365, 0, 366,
	0, 367, 368, 369, 370, 371, 372, 373, 0, 374,
	375, 376, 0, 377, 378, 379, 0, 0, 0, 0,
	0, 0, 1503, 380, 381, 382, 383, 384, 0, 385,
	387, 0, 0, 0, 390, 392, 386, 388, 0, 391,
	389, 393, 394, 0, 395, 396, 397, 0, 0, 398,
	399, 400, 0, 401, 402, 403, 0, 404, 405, 406,
	0, 407, 408, 0, 409, 410, 411, 413, 415, 412,
	414, 416, 417, 418, 419, 420, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 422, 423, 424, 0,
	0, 0, 0, 425, 0, 426, 427, 428, 0, 429,
	430, 0, 0, 431, 432, 433, 0, 0, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 0, 443, 0,
	0, 0, 444, 0, 445, 446, 447, 448, 449, 450,
	451, 0, 0, 0, 545, 0, 452, 453, 454, 0,
	455, 456, 457, 458, 459, 0, 0, 0, 0, 460,
	461, 462, 0, 0, 0, 463, 546, 464, 0, 0,
	0, 0, 0, 465, 466, 468, 0, 0, 0, 467,
	469, 470, 0, 471, 0, 0, 0, 472, 473, 474,
	475, 476, 477, 478, 0, 479, 481, 480, 0, 483,
	0, 482, 0, 484, 485, 0, 0, 486, 487, 488,
	489, 490, 491, 494, 0, 0, 492, 493, 495, 496,
	0, 497, 498, 500, 503, 499, 501, 502, 504, 517,
	518, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 520, 0, 519, 0, 521, 522, 523,
	524, 525, 532, 534, 535, 530, 531, 533, 536, 537,
	539, 527, 528, 529, 0, 538, 526, 0, 0, 0,
	540, 541, 542, 543, 0, 0, 544, 0, 547, 548,
	0, 0, 549, 0, 550, 0, 0, 552, 553, 554,
	0, 0, 555, 556, 0, 0, 557, 0, 0, 558,
	559, 551, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 0, 570, 571, 0, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 0, 579, 580, 0, 581,
	582, 583, 0, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 592, 593, 595, 594, 596, 0, 597, 0,
	598, 599, 600, 0, 0, 0, 0, 0, 601, 602,
	604, 0, 605, 606, 607, 608, 603, 609, 610, 611,
	612, 613, 614, 0, 616, 617, 615, 618, 619, 0,
	620, 621, 622, 623, 624, 0, 625, 0, 626, 627,
	635, 636, 637, 628, 629, 631, 638, 630, 639, 640,
	641, 642, 644, 643, 0, 646, 647, 645, 648, 649,
	650, 1504, 651, 0, 652, 632, 633, 653, 654, 0,
	655, 656, 657, 658, 659, 660, 661, 0, 0, 662,
	0, 663, 664, 665, 666, 667, 668, 670, 634, 671,
	676, 677, 0, 672, 673, 674, 675, 0, 679, 680,
	681, 682, 0, 683, 684, 0, 678, 669, 0, 685,
	686, 687, 688, 689, 690, 0, 691, 692, 0, 693,
	0, 0, 0, 0, 0, 705, 0, 694, 696, 697,
	698, 699, 0, 700, 0, 0, 701, 702, 703, 704,
	695, 706, 707, 0, 0, 708, 709, 711, 713, 714,
	710, 712, 715, 0, 716, 0, 0, 717, 718, 719,
	0, 0, 0, 0, 721, 722, 720, 723, 724, 727,
	725, 726, 0, 728, 729, 730, 2296, 0, 1501, 0,
	731, 732, 0, 733, 734, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 0, 0,
	0, 0, 350, 351, 0, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 1503, 380,
	381, 382, 383, 384, 0, 385, 387, 0, 0, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 0,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 0, 0, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 0, 0, 0, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 0, 0, 0,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	0, 463, 546, 464, 0, 0, 0, 0, 0, 465,
	466, 468, 0, 0, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 0, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 0, 544, 0, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	0, 0, 557, 0, 0, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 0, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 0, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 0, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1504, 651, 0,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 0, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 0, 672,
	673, 674, 675, 0, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 0, 0, 0, 0,
	0, 705, 0, 694, 696, 697, 698, 699, 0, 700,
	0, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 0, 0, 0, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 1501, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 0, 733,
	734, 735, 0, 0, 0, 319, 320, 322, 321, 323,
	324, 325, 326, 0, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 330, 331, 332,
	0, 333, 334, 335, 336, 337, 338, 339, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 0, 349, 0, 0,
	0, 0, 350, 351, 0, 0, 0, 0, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 0, 361, 362,
	363, 360, 364, 365, 0, 366, 0, 367, 368, 369,
	370, 371, 372, 373, 0, 374, 375, 376, 0, 377,
	378, 379, 0, 0, 0, 0, 0, 0, 1503, 380,
	381, 382, 383, 384, 0, 385, 387, 0, 0, 0,
	390, 392, 386, 388, 0, 391, 389, 393, 394, 0,
	395, 396, 397, 0, 0, 398, 399, 400, 0, 401,
	402, 403, 0, 404, 405, 406, 0, 407, 408, 0,
	409, 410, 411, 413, 415, 412, 414, 416, 417, 418,
	419, 420, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 422, 423, 424, 0, 0, 0, 0, 425,
	0, 426, 427, 428, 0, 429, 430, 0, 0, 431,
	432, 433, 0, 0, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 0, 443, 0, 0, 0, 444, 0,
	445, 446, 447, 448, 449, 450, 451, 0, 0, 0,
	545, 0, 452, 453, 454, 0, 455, 456, 457, 458,
	459, 0, 0, 0, 0, 460, 461, 462, 0, 0,
	0, 463, 546, 464, 0, 0, 0, 0, 0, 465,
	466, 468, 0, 0, 0, 467, 469, 470, 0, 471,
	0, 0, 0, 472, 473, 474, 475, 476, 477, 478,
	0, 479, 481, 480, 0, 483, 0, 482, 0, 484,
	485, 0, 0, 486, 487, 488, 489, 490, 491, 494,
	0, 0, 492, 493, 495, 496, 0, 497, 498, 500,
	503, 499, 501, 502, 504, 517, 518, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 520,
	0, 519, 0, 521, 522, 523, 524, 525, 532, 534,
	535, 530, 531, 533, 536, 537, 539, 527, 528, 529,
	0, 538, 526, 0, 0, 0, 540, 541, 542, 543,
	0, 0, 544, 0, 547, 548, 0, 0, 549, 0,
	550, 0, 0, 552, 553, 554, 0, 0, 555, 556,
	0, 0, 557, 0, 0, 558, 559, 551, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 0, 570,
	571, 0, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 0, 579, 580, 0, 581, 582, 583, 0, 584,
	585, 586, 587, 588, 589, 590, 591, 0, 592, 593,
	595, 594, 596, 0, 597, 0, 598, 599, 600, 0,
	0, 0, 0, 0, 601, 602, 604, 0, 605, 606,
	607, 608, 603, 609, 610, 611, 612, 613, 614, 0,
	616, 617, 615, 618, 619, 0, 620, 621, 622, 623,
	624, 0, 625, 0, 626, 627, 635, 636, 637, 628,
	629, 631, 638, 630, 639, 640, 641, 642, 644, 643,
	0, 646, 647, 645, 648, 649, 650, 1504, 651, 0,
	652, 632, 633, 653, 654, 0, 655, 656, 657, 658,
	659, 660, 661, 0, 0, 662, 0, 663, 664, 665,
	666, 667, 668, 670, 634, 671, 676, 677, 0, 672,
	673, 674, 675, 0, 679, 680, 681, 682, 0, 683,
	684, 0, 678, 669, 0, 685, 686, 687, 688, 689,
	690, 0, 691, 692, 0, 693, 0, 0, 0, 0,
	0, 705, 0, 694, 696, 697, 698, 699, 0, 700,
	0, 0, 701, 702, 703, 704, 695, 706, 707, 0,
	0, 708, 709, 711, 713, 714, 710, 712, 715, 0,
	716, 0, 0, 717, 718, 719, 0, 0, 0, 0,
	721, 722, 720, 723, 724, 727, 725, 726, 0, 728,
	729, 730, 0, 0, 0, 0, 731, 732, 0, 733,
	734, 735, 2018, 2019, 0, 2051, 2052, 2053, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 2049, 0, 0, 0,
	0, 0, 0, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 2018, 2019, 0,
	2051, 2052, 2053, 2062, 2063, 2064, 0, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	2055, 2049, 2020, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	2068, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 2044, 2045, 2046, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 2019, 0, 2051, 2052,
	2053, 2062, 2063, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 2049,
	2043, 2044, 2045, 2046, 0, 0, 0, 2021, 2059, 0,
	2026, 0, 2069, 0, 0, 0, 0, 0, 2068, 2048,
	2050, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 2065,
	0, 2066, 0, 0, 0, 2020, 0, 0, 2035, 2036,
	0, 0, 0, 2059, 0, 0, 2040, 2069, 0, 0,
	0, 0, 0, 0, 2048, 2050, 2037, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 2065, 0, 2066, 0, 0, 0,
	0, 0, 0, 2035, 2036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 2044,
	2045, 2046, 0, 2056, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 2071, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2056, 0,
	0, 2059, 0, 0, 0, 2069, 0, 0, 0, 2071,
	0, 0, 2048, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 2066, 0, 0, 0, 0, 0,
	0, 2035, 2036, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 2073, 0,
	0, 0, 0, 0, 0, 2067, 0, 2060, 0, 0,
	0, 0, 2055, 2049, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 2033, 2039, 2061, 2038, 2034, 2047, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0,
	0, 0, 5272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2042, 2058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 2033, 2039, 2061,
	2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024, 2025,
	2027, 2028, 0, 0, 0, 2060, 0, 5218, 0, 0,
	0, 0, 2043, 2044, 2045, 2046, 0, 0, 0, 0,
	2018, 2019, 2026, 2051, 2052, 2053, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 2055, 2049, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 2059, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 2048, 2050, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 2065, 0, 2066, 0,
	0, 2040, 0, 0, 0, 2035, 2036, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034,
	2041, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028,
	0, 0, 0, 0, 0, 5217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 2043, 2044, 2045, 2046, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	2069, 0, 0, 0, 0, 0, 0, 2048, 2050, 0,
	0, 0, 0, 0, 0, 2018, 2019, 0, 2051, 2052,
	2053, 2062, 2063, 2064, 0, 0, 0, 2065, 0, 2066,
	0, 2047, 0, 0, 0, 0, 2035, 2036, 2055, 2049,
	0, 0, 0, 0, 0, 0, 0, 2021, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 2042, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 2018, 2019, 2037, 2051, 2052, 2053,
	2062, 2063, 2064, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 2073, 0, 2055, 2049, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 2043, 2044,
	2045, 2046, 0, 0, 0, 2037, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 2032, 2033,
	2039, 2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 0, 0, 0, 2042, 5011,
	0, 2059, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 2048, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 2065, 0, 2066, 0, 0, 2043, 2044, 2045,
	2046, 2035, 2036, 0, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 2048, 2050, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 2066, 0, 2067, 0, 0, 0, 0,
	2035, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2056, 2058, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 2071, 0, 2032,
	2033, 2039, 2061, 2038, 2034, 2041, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 0, 0, 0, 0, 0,
	4822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2018, 2019,
	0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 2047, 0, 0,
	0, 2055, 2049, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 2056, 0, 0, 0, 0,
	0, 2068, 0, 2042, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 0, 2018, 2019, 0,
	2051, 2052, 2053, 2062, 2063, 2064, 2047, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 2049, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 2060, 0, 0, 2020, 0, 0,
	0, 2043, 2044, 2045, 2046, 0, 0, 0, 2040, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 2058, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034,
	0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028,
	0, 0, 0, 0, 2059, 4720, 0, 0, 2069, 0,
	0, 0, 0, 0, 0, 2048, 2050, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 2066, 0, 0,
	0, 0, 0, 0, 2035, 2036, 0, 0, 0, 0,
	2043, 2044, 2045, 2046, 0, 0, 0, 0, 0, 0,
	2026, 2058, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034, 2041,
	2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0,
	0, 0, 0, 0, 4719, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 2048, 2050, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 0, 0, 2065, 0, 2066, 0, 0, 0,
	0, 0, 0, 2035, 2036, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 2055, 2049, 0, 0, 0, 2067, 0, 0,
	0, 2021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 2042, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2071,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 2018, 2019,
	0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 2047,
	0, 2055, 2049, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 2043, 2044, 2045, 2046, 0, 2060, 0, 2040,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 2033, 2039,
	2061, 2038, 2034, 2073, 2031, 2029, 2030, 2022, 2023, 2024,
	2025, 2027, 2028, 0, 0, 2059, 0, 0, 4718, 2069,
	0, 0, 0, 0, 0, 0, 2048, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 2066, 0,
	0, 0, 0, 0, 0, 2035, 2036, 0, 0, 0,
	0, 2043, 2044, 2045, 2046, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 2032, 2033, 2039, 2061,
	2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024, 2025,
	2027, 2028, 0, 0, 2059, 0, 0, 4301, 2069, 0,
	0, 0, 0, 0, 0, 2048, 2050, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 0, 0, 0, 0, 2065, 0, 2066, 0, 0,
	0, 0, 0, 0, 2035, 2036, 0, 0, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 2055, 2049, 0, 0, 0, 2067, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 2042, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 2018,
	2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	2047, 0, 2055, 2049, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 2043, 2044, 2045, 2046, 0, 2060, 0,
	2040, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 2033,
	2039, 2061, 2038, 2034, 2073, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 0, 2059, 0, 0, 3713,
	2069, 0, 0, 0, 0, 0, 0, 2048, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 2066,
	0, 0, 0, 0, 0, 0, 2035, 2036, 0, 0,
	0, 0, 2043, 2044, 2045, 2046, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 2032, 2033, 2039,
	2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024,
	2025, 2027, 2028, 0, 0, 2059, 0, 0, 3712, 2069,
	0, 0, 0, 0, 0, 0, 2048, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 2065, 0, 2066, 0,
	0, 0, 0, 0, 0, 2035, 2036, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2071, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2018, 2019, 0, 2051, 2052, 2053, 2062, 2063, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 2055, 2049, 0, 0, 0, 2067,
	0, 0, 0, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 2042, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	2018, 2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 2515, 0, 2073, 0, 0, 0,
	0, 2047, 0, 2055, 2049, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 2042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 2043, 2044, 2045, 2046, 0, 2060,
	0, 2040, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	2033, 2039, 2061, 2038, 2034, 2073, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 0, 0, 2059, 0, 0,
	3711, 2069, 0, 0, 0, 0, 0, 0, 2048, 2050,
	0, 0, 2516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2065, 0,
	2066, 0, 0, 0, 0, 0, 0, 2035, 2036, 0,
	0, 0, 0, 2043, 2044, 2045, 2046, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 2032, 2033,
	2039, 2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023,
	2024, 2025, 2027, 2028, 0, 0, 2059, 0, 0, 3710,
	2069, 0, 0, 0, 0, 0, 0, 2048, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 0, 0, 0, 0, 0, 2065, 0, 2066,
	0, 0, 0, 0, 0, 0, 2035, 2036, 0, 0,
	0, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2071, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 2019, 0, 2051, 2052, 2053,
	2062, 2063, 2064, 2047, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 2055, 2049, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 2042,
	0, 2056, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 2060, 0, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 2415,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2517, 0, 2413, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 2043, 2044, 2045,
	2046, 0, 0, 0, 0, 0, 0, 2026, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 2033, 2039, 2061, 2038, 2034, 2073, 2031, 2029, 2030,
	2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0, 3675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 2048, 2050, 0, 0, 0, 0, 0, 0, 0,
	0, 2518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 2066, 0, 0, 0, 0, 0, 0,
	2035, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	2033, 2039, 2061, 2038, 2034, 2041, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 2018, 2019, 0, 2051, 2052,
	2053, 2062, 2063, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 2049,
	0, 0, 0, 0, 0, 0, 0, 2021, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 2071, 0, 0, 0,
	0, 0, 0, 0, 2018, 2019, 2040, 2051, 2052, 2053,
	2062, 2063, 2064, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2055, 2049, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 2414, 2047, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 2020, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 2043, 2044,
	2045, 2046, 0, 0, 0, 0, 0, 0, 2026, 5539,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 2059, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 2412, 2048, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 2044, 2045,
	2046, 0, 2065, 0, 2066, 0, 0, 2026, 0, 3775,
	0, 2035, 2036, 0, 0, 0, 3774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	2059, 2058, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 2048, 2050, 2032, 2033, 2039, 2061, 2038, 2034, 0,
	2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0,
	0, 2065, 0, 2066, 0, 0, 0, 0, 0, 0,
	2035, 2036, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 2071, 0, 0,
	0, 0, 0, 2018, 2019, 0, 2051, 2052, 2053, 2062,
	2063, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	5538, 0, 0, 0, 0, 0, 2055, 2049, 0, 0,
	0, 0, 3645, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 0, 0, 2074, 2056, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 2071, 0, 0, 0,
	0, 0, 0, 2042, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2060, 0, 0, 0, 0,
	0, 0, 2018, 2019, 0, 2051, 2052, 2053, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 2047, 3646, 0, 0,
	0, 0, 0, 0, 0, 2055, 2049, 0, 0, 0,
	0, 2073, 0, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 2044, 2045, 2046,
	0, 0, 0, 2074, 0, 0, 2026, 0, 0, 0,
	0, 0, 2020, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2059,
	2073, 0, 2058, 2069, 0, 0, 0, 0, 0, 0,
	2048, 2050, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034,
	0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028,
	2065, 0, 2066, 0, 0, 0, 0, 0, 0, 2035,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 0, 0, 2043, 2044, 2045, 2046, 0,
	0, 0, 0, 0, 2041, 2026, 0, 5117, 0, 0,
	0, 2058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034, 0,
	2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 0, 2069, 2067, 0, 0, 0, 0, 0, 2048,
	2050, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 2065,
	0, 2066, 0, 0, 0, 2071, 0, 0, 2035, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 2018, 2019, 0, 2051, 2052, 2053,
	2062, 2063, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2047, 0, 2055, 2049, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 2042, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 2056, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 2071, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 2043, 2044, 2045,
	2046, 0, 0, 0, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 0, 2060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031,
	2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0,
	2059, 0, 0, 0, 2069, 0, 0, 0, 2073, 0,
	0, 2048, 2050, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2065, 0, 2066, 0, 0, 0, 0, 0, 0,
	2035, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2056, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2071, 0, 0, 0,
	0, 0, 2018, 2019, 0, 2051, 2052, 2053, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 2049, 0, 0, 0,
	0, 0, 0, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 2018, 2019, 0,
	2051, 2052, 2053, 2062, 2063, 2064, 2047, 0, 0, 0,
	0, 0, 0, 2074, 0, 0, 0, 0, 0, 0,
	2055, 2049, 2020, 0, 0, 0, 0, 0, 0, 2021,
	0, 0, 2042, 2040, 0, 0, 0, 0, 0, 0,
	2068, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 2060, 0, 0, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 2044, 2045, 2046, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 2044, 2045, 2046, 0, 0, 0, 0, 2059, 0,
	2026, 2058, 2069, 0, 0, 0, 0, 0, 0, 2048,
	2050, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034, 0,
	2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 2065,
	0, 2066, 0, 0, 0, 0, 0, 0, 2035, 2036,
	0, 0, 0, 2059, 0, 0, 0, 2069, 0, 0,
	0, 0, 0, 0, 2048, 2050, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 2065, 0, 2066, 0, 0, 0,
	0, 0, 0, 2035, 2036, 0, 0, 0, 0, 0,
	0, 0, 2018, 2019, 0, 2051, 2052, 2053, 2062, 2063,
	2064, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 2049, 0, 2041, 0,
	0, 0, 2067, 0, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2074, 2071, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 2056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2071,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 2047,
	0, 0, 0, 0, 0, 2043, 2044, 2045, 2046, 0,
	0, 0, 2060, 2055, 2049, 2026, 0, 4521, 0, 0,
	0, 0, 2021, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 2074, 0, 0, 0, 0, 0, 2060, 2059, 0,
	2020, 0, 2069, 0, 0, 0, 0, 4872, 0, 2048,
	2050, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 2066, 0, 2073, 0, 0, 0, 0, 2035, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4522, 0, 0, 0, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0,
	0, 0, 0, 2043, 2044, 2045, 2046, 0, 0, 0,
	0, 0, 0, 2026, 2058, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 2032, 2033, 2039, 2061,
	2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024, 2025,
	2027, 2028, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2071, 0, 2059, 0, 0, 0,
	2069, 0, 0, 0, 0, 0, 0, 2048, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2065, 0, 2066,
	0, 0, 0, 0, 0, 0, 2035, 2036, 0, 0,
	0, 0, 0, 0, 0, 2018, 2019, 0, 2051, 2052,
	2053, 2062, 2063, 2064, 2047, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 2049,
	0, 2041, 0, 0, 0, 0, 0, 2021, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	2018, 2019, 0, 2051, 2052, 2053, 2062, 2063, 2064, 0,
	0, 0, 0, 0, 0, 0, 2074, 0, 0, 0,
	0, 0, 2060, 2055, 2049, 2020, 0, 0, 3776, 0,
	2067, 0, 2021, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 2037, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 2074, 2071, 0, 0, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 2043, 2044,
	2045, 2046, 0, 0, 0, 0, 0, 0, 2026, 2058,
	0, 0, 0, 0, 0, 0, 0, 3781, 2042, 0,
	0, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0,
	0, 0, 0, 2043, 2044, 2045, 2046, 0, 0, 0,
	2060, 2059, 0, 2026, 0, 2069, 0, 0, 0, 0,
	0, 0, 2048, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2065, 0, 2066, 0, 2073, 0, 0, 0,
	0, 2035, 2036, 0, 0, 0, 2059, 0, 0, 4282,
	2069, 0, 0, 0, 0, 0, 0, 2048, 2050, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 2065, 0, 2066,
	0, 0, 0, 0, 0, 0, 2035, 2036, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 0, 0,
	0, 2041, 0, 0, 0, 2067, 0, 0, 0, 2032,
	2033, 2039, 2061, 2038, 2034, 0, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 0, 2056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2071, 0, 0, 0, 0, 0, 2018, 2019,
	0, 2051, 2052, 2053, 2062, 2063, 2064, 2047, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 2049, 0, 0, 0, 0, 0, 0, 0,
	2021, 0, 0, 2042, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 2018, 2019, 0, 2051, 2052, 2053, 2062,
	2063, 2064, 2047, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 2060, 2055, 2049, 2020, 0,
	0, 3714, 0, 0, 0, 2021, 0, 0, 2042, 2040,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 2074, 0, 0, 0, 0, 0,
	2060, 0, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2043, 2044, 2045, 2046, 0, 0, 0, 0, 0,
	0, 2026, 2058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 2033, 2039, 2061, 2038, 2034,
	0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028,
	0, 0, 0, 0, 0, 0, 2043, 2044, 2045, 2046,
	0, 0, 0, 0, 2059, 0, 2026, 2058, 2069, 0,
	0, 0, 0, 0, 0, 2048, 2050, 0, 0, 2032,
	2033, 2039, 2061, 2038, 2034, 0, 2031, 2029, 2030, 2022,
	2023, 2024, 2025, 2027, 2028, 2065, 0, 2066, 0, 0,
	0, 0, 0, 0, 2035, 2036, 0, 0, 0, 2059,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	2048, 2050, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	2065, 0, 2066, 0, 0, 0, 0, 0, 0, 2035,
	2036, 0, 0, 0, 0, 0, 0, 0, 2018, 2019,
	0, 2051, 2052, 2053, 2062, 2063, 2064, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 2049, 0, 2041, 0, 0, 0, 2067, 0,
	2021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	2071, 0, 0, 0, 0, 0, 0, 0, 2020, 0,
	0, 3741, 0, 2067, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 2019, 0, 2051,
	2052, 2053, 2062, 2063, 2064, 2047, 0, 0, 0, 0,
	0, 2043, 2044, 2045, 2046, 0, 0, 0, 2060, 2055,
	2049, 2026, 0, 0, 0, 0, 0, 0, 2021, 0,
	0, 2042, 0, 0, 0, 0, 0, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 2074, 0, 0,
	0, 0, 0, 2060, 2059, 0, 2020, 0, 2069, 0,
	0, 0, 0, 0, 0, 2048, 2050, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 2065, 0, 2066, 0, 2073,
	0, 0, 0, 0, 2035, 2036, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2057, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2058, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 2032, 2033, 2039,
	2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024,
	2025, 2027, 2028, 0, 0, 0, 0, 0, 0, 2043,
	2044, 2045, 2046, 0, 0, 0, 0, 0, 0, 2026,
	2058, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 0, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031,
	2029, 2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 0, 2059, 0, 0, 0, 2069, 0, 0, 0,
	0, 0, 0, 2048, 2050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 2066, 0, 0, 0, 0,
	0, 0, 2035, 2036, 0, 0, 0, 2018, 2019, 0,
	2051, 2052, 2053, 2062, 2063, 2064, 0, 0, 0, 0,
	2047, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	2055, 2049, 0, 0, 0, 0, 0, 2041, 0, 2021,
	0, 0, 0, 0, 0, 0, 2042, 0, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 2020, 2060, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 2056, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 2019, 0, 2051, 2052, 2053, 2062, 2063,
	2064, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	2043, 2044, 2045, 2046, 0, 0, 2049, 0, 2628, 0,
	2026, 0, 0, 0, 2021, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 2042, 2068, 0, 2032, 2033, 2039,
	2061, 2038, 2034, 0, 2031, 2029, 2030, 2022, 2023, 2024,
	2025, 2027, 2028, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 2059, 0, 0, 2060, 2069, 0, 0,
	0, 0, 0, 2040, 2048, 2050, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 2066, 0, 0, 0,
	0, 0, 2073, 2035, 2036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 2044, 2045, 2046, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 0, 0, 2032, 2033, 2039, 2061, 2038,
	2034, 0, 2031, 2029, 2030, 2022, 2023, 2024, 2025, 2027,
	2028, 0, 0, 0, 0, 0, 0, 0, 2059, 2071,
	0, 0, 2069, 0, 0, 0, 0, 0, 0, 2048,
	2050, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 2066, 0, 0, 0, 0, 0, 0, 2035, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1105, 0, 1157, 0, 0, 0, 0, 0, 2057, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 1113, 0, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1128, 0, 1111, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 1130, 2067, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 1115, 0, 0, 0, 0, 1169, 0, 1140,
	0, 0, 0, 0, 0, 0, 0, 0, 1125, 1126,
	0, 0, 0, 2073, 2071, 0, 0, 0, 1145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 1117, 0, 0,
	0, 0, 0, 1118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1119, 0,
	0, 0, 0, 0, 2047, 0, 0, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 0,
	2042, 0, 0, 0, 0, 0, 2032, 2033, 2039, 2061,
	2038, 2034, 1156, 2031, 2029, 2030, 2022, 2023, 2024, 2025,
	2027, 2028, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 2060, 0, 0, 0, 0, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1131, 1129, 0, 0, 0, 0, 0, 0, 1124, 0,
	0, 0, 0, 1141, 0, 0, 1163, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 0, 0, 2058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 2033, 2039, 2061, 2038, 2034, 0, 2031, 2029,
	2030, 2022, 2023, 2024, 2025, 2027, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1116, 0, 0, 1168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 1149, 1150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 1147, 0, 0, 0, 0, 0, 0, 0, 1167,
	1142, 0, 0, 1134, 1132, 0, 0, 0, 1137, 0,
	0, 0, 0, 0, 0, 0, 1138, 0, 0, 1107,
	0, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 0,
	0, 1151, 0, 1139, 0, 0, 0, 0, 0, 1136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 1143, 0,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 1120,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1148,
}

var sqlPact = [...]int32{
	337, -1000, -1000, -1000, -1000, -1000, -1000, 297, -1000, -1000,
	294, 291, 275, 273, 269, 265, 263, 261, 260, 259,
	258, -1000, -1000, 257, 254, 253, 251, -1000, 244, 243,
	-1000, 242, -1000, -1000, 241, -1000, 240, 239, 238, -1000,
	-1000, 237, -1000, 236, -1000, -1000, -1000, -1000, 233, 232,
	231, 110418, 109802, 111032, 2723, 139330, 120256, 2345, 98110, 138714,
	97494, 138098, 2565, 11135, 137482, 3234, 230, -1000, 136866, 229,
	218, 217, -1000, 119640, 136250, 117178, 116562, 2342, 1953, 1940,
	-1000, 214, 212, -1000, 8788, 82626, 210, 204, 202, 198,
	2754, 196, -1000, 195, 192, -1000, 191, 190, -1000, 11798,
	1750, -1000, 189, 185, 182, -1000, 5973, 115946, 181, 180,
	179, 2940, 174, 172, 80168, 169, 168, 166, 2748, 3396,
	-1000, -1000, 2411, -1000, -1000, 163, 159, 157, 155, 154,
	153, 151, 147, 146, 142, 141, 140, 139, 131, -1000,
	130, 129, 128, 127, 126, -1000, 122, 120, 118, -1000,
	117, -1000, 116, 115, 111, 110, 108, 107, 103, 102,
	100, 99, 97, 96, 94, 91, 86, 160418, -1000, -1000,
	84, -1000, 2191, 1936, 1926, 1921, 1116, 81, 78, 72,
	69, 68, 66, 65, 62, 61, 60, 59, 58, -1000,
	57, 53, 50, 49, 48, 47, 45, 44, 43, -1000,
	186, 34, 31, 30, 28, 27, 25, 23, -1000, 3114,
	4080, -1000, 1999, 1178, 1399, 36138, 3506, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 148540, 139944, 22, -50,
	21, -1000, 3854, 1218, 65249, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 397,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 595, 3040, 846, -1000, -1000, -1000, 135634, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2722, -44, 98724,
	-1000, 2464, -1000, -1000, -1000, -1000, -1000, 845, -1000, 2719,
	2666, 349, 2659, 98724, -1000, -1000, -1000, 3941, 3846, 109186,
	2914, 4364, 4362, 4361, 4358, 4357, 147926, 2138, 2978, 4356,
	4355, 4353, 4352, 4349, 4348, 4346, -1000, 108570, 1209, 107954,
	107338, 3951, 135020, 106722, 134404, 151002, 55164, 1143, 3938, -1000,
	-1000, -1000, -1000, -1000, -1000, 139944, -1000, 1204, -1000, -1000,
	4345, 2389, 844, 119024, -1000, -1000, 133788, 2001, -1000, -1000,
	-1000, 1037, 1368, 38662, 38662, 38662, 395, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3949, -1000, -1000, -1000, -1000, 139944,
	3214, 3214, 1552, 1559, 1559, 3214, 3214, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4344, 4342, 4341, 4340, 4339,
	1535, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 96878, 28377,
	96262, 95646, 133172, 54533, 106106, 105490, 91334, 4336, 4334, 111032,
	53902, 62733, 4078, 132556, 150386, 4077, 4076, 1202, 2449, 1687,
	-1000, -1000, -1000, -1000, -1000, -1000, 2, 86332, 4145, 139944,
	-1000, 394, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53271,
	962, 52640, 740, 52009, 633, 131940, -1000, -1000, -1000, -1000,
	-1000, 90708, 3835, -1000, 131324, 1738, 2904, 4333, 4332, 1337,
	4331, 3812, 2080, 4330, 4329, 4327, 4326, 4325, 4323, 4321,
	1732, 130708, 3182, 130092, 2084, 149770, 2291, 1200, 104874, 111032,
	3111, 129476, 1684, 1675, -1000, -1000, -1000, -1000, 3616, 3386,
	3363, 1511, -1000, -1000, -1000, -1000, -1000, 68997, 8117, 7794,
	-1000, -1000, 14284, 128860, 72117, 111032, 111032, -1000, -1000, -1000,
	-1000, -1000, -1000, 51378, 628, 50747, 1036, 128244, -1000, -1000,
	69621, 3440, 1270, -1000, -1000, -1000, -1000, -1000, 127628, 50116,
	431, 49485, 881, 139944, -1000, 3505, 2222, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2512, 1886, 4149,
	3246, 90082, 2377, 1567, 3893, 3612, 3610, 1740, 2444, 3609,
	4320, 3060, 3606, 3601, 3600, 3598, 3597, 1850, 3058, 338,
	3050, 35507, 3493, 2003, 48854, 1793, 1736, 3594, 3590, 4163,
	4007, 2422, 2364, 2460, 2363, 95030, 4319, 4317, 3853, 3578,
	3540, 3299, 3534, 2336, -1000, 3439, 1724, 391, -1000, -1000,
	-1000, -1000, -1000, -1000, 391, 1649, -1000, -1000, -1000, -1000,
	-1000, 99952, -1000, -1000, 1535, -1000, -1000, -1000, 1615, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1999, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2901, -1000, 2403, -1000, -1000,
	-1000, 2931, 3787, 3787, 3787, 3936, 560, 557, -1000, 186,
	1007, 1321, -1000, -1000, 159705, -1000, -1000, 55795, 55795, 55795,
	55795, 55795, 55795, 55795, 55795, 2581, -1000, 843, -1000, -1000,
	894, -1000, 839, 766, 713, -1000, -1000, -1000, -1000, -1000,
	-1000, 838, -1000, -1000, -1000, -1000, -1000, -1000, 4132, -1000,
	31584, -1000, -1000, -1000, 588, 836, 55795, -1000, -1000, 4191,
	4190, 1205, -1000, 375, 1068, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3504, 835, 834,
	-1000, 833, 832, 830, 827, 826, -1000, 824, -1000, 822,
	819, 817, 815, 814, 813, 810, 808, -1000, 2511, -1000,
	-1000, -1000, -1000, -1000, -1000, 755, 754, 754, 754, -1000,
	1192, -1000, -1000, -1000, 455, 752, 382, 751, 749, 747,
	-1000, 807, 806, 803, 789, 788, 781, 778, 775, 773,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1189, -1000, -1000,
	-1000, -1000, 1626, -1, 139944, -1000, 705, -1, -1000, -1000,
	772, -1000, 39942, 39942, 39942, -1000, -1000, 2716, 55795, -1000,
	3011, -1000, 9, 9, 1010, 67121, -1000, 63983, 1010, 587,
	916, 73357, -1000, 3436, -1000, -1000, 770, 370, -1000, -1000,
	-1000, -1000, 29001, 3435, 139944, 139944, 139944, 111032, 111032, 111032,
	139944, 4316, 4315, 3721, 55795, -1000, -1000, 82010, 152844, 111646,
	1611, 1, -1000, -1000, 4052, 85708, 81396, 3503, 152844, 3502,
	3433, 152234, 89456, 288, 3687, -1000, -1000, 767, 4314, -1000,
	-1000, -1000, -1000, -1000, 3686, 4313, 4312, 4311, 139944, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2701, 3685, -1000, 0,
	-1000, 115330, 2701, 3684, -1000, 0, 2701, 3681, -1000, 0,
	114716, -1000, -1000, 2701, 3679, -1000, -1000, 281, 3677, -1000,
	-1000, -1000, 278, 3676, -1000, -1000, 369, -133, 3675, -1000,
	-1000, -1000, -1000, -1000, -1000, 159705, -1000, -1000, -1000, 151618,
	-1000, 3859, -1000, 139944, -1000, 55795, -1000, -1000, 4051, 1837,
	3877, 3981, -1000, -1000, -16, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2956, 2957, 1285, 2764, -1000, 3738, 1966, 38662,
	3798, -1000, -1000, -1000, -1000, -1000, 367, 29001, 3343, -1000,
	-1000, 139944, -1000, 139944, 3214, 3214, -1000, -1000, -1000, 4156,
	4155, 3214, 3214, 139944, 139944, -1000, -1000, -1000, -1000, -1000,
	-1000, -16, -1000, 5616, 3674, 1696, -1000, 2763, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2333, 3673, -1000,
	2293, 3672, 2324, -1000, -1000, 3056, -1000, 156533, 1523, -1000,
	-1000, -1000, -1000, 2048, 3671, 10, -1000, -1000, 2601, -1000,
	4146, 3387, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2519, 156199, -1000, 2079, -1000, -1000, 2375,
	2397, -1000, 1489, 3670, -1000, 3244, 3244, 104258, 3652, 71493,
	69621, 86332, -13, -1000, -1000, -1000, -1000, -1000, -158, -1000,
	27745, 159705, -1000, -1000, -1000, -1000, 2134, 159705, 1072, -1000,
	-1000, 3669, -1000, 159705, 1067, -1000, -1000, 3668, -1000, 3051,
	-1000, 3498, -1000, -1000, -1000, 2858, 88830, 2852, 1162, -1000,
	111032, 2428, 4310, -1000, 4309, -1000, -1000, 4308, -1000, 4307,
	4306, 4305, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 103644,
	2713, -1000, -1000, 1712, 1105, 91958, -1000, 2849, 3979, -1000,
	103028, 1197, -1000, 1134, 2847, -1000, 1630, 114102, 1177, 2846,
	-1000, 4301, 3947, 3156, 1134, 2837, -1000, -1000, -1000, -1000,
	-1000, 1161, -1000, 74585, -1000, 74585, -1000, 1892, -1000, 147312,
	9, 111032, 4132, -1000, -53, -1000, -1000, -1000, 1218, -1000,
	68370, -1000, 68370, 118408, 91958, 1105, 3429, 78304, 159547, -1000,
	1160, -1000, -1000, 159705, -1000, -1000, -1000, 3047, -1000, -252,
	3243, -1000, 91958, 70869, 3428, 3033, -1000, 159705, -1000, -1000,
	-1000, -1000, 159705, -1000, -1000, -1000, 91958, 1712, -1000, 127012,
	102412, -1000, -1000, 1723, 3003, -1000, -1000, -1000, 69621, 3427,
	1524, 91958, 91958, 91958, 91958, -1000, 126396, -1000, -1000, 2382,
	1840, 3855, 2381, 111032, -1000, 2140, -1000, -1000, -1000, 3878,
	3651, 139944, -1000, -1000, 3495, -1000, 85094, 113488, -1000, 112874,
	-1000, 112260, -1000, 111032, -1000, 111032, -1000, 4300, 4298, 4296,
	-1000, -1000, 4294, -1000, 4293, 3869, -1000, 780, 48223, 159705,
	3864, -1000, 4292, 2284, 3493, 159705, -1000, 3647, 1925, 1916,
	139944, -1000, -1000, 139944, -1000, 139944, -1000, -1000, -1000, 2747,
	1802, -1000, -1000, 2955, -1000, -1000, -1000, 1157, -1000, -1000,
	111032, 111032, 111032, 111032, 111032, 1961, -1000, 47592, 3834, -1000,
	-1000, 3516, 4290, 2010, -1000, 2136, -1000, 3423, 3863, -1000,
	3421, 1716, 2155, 356, 4194, 356, -1000, -1000, 290, -1000,
	-1000, 146698, -1000, 2931, -1000, 139944, -1000, 2925, 3482, 3490,
	1884, 2745, 3065, -1000, 46961, 3028, 59581, 2761, 186, -1000,
	-1000, 186, 186, 37400, -1000, -1000, 38662, 1007, 85708, 85708,
	29001, 1527, 55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795,
	55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795,
	55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795,
	55795, 55795, 55795, 55795, 55795, 55795, 55795, 55795, 2580, 55795,
	1610, 55795, 55795, 55795, 55795, 2122, -1000, -1000, 2260, 623,
	2307, 766, -1000, -1000, -1000, 4127, 4127, 4127, 646, 646,
	646, 160131, 160131, 735, 4288, 894, -1000, 55795, -1000, 137,
	67735, 55795, 29627, -1000, 557, 14048, 2929, -1000, 546, 30288,
	-1000, -1000, -1000, 31584, 713, 46300, 55795, 1167, 159705, -1000,
	-1000, 1605, 4144, 27113, 3365, 3290, 764, 1053, 1041, 34846,
	34185, 33524, 32863, 1006, 997, 55795, 55795, 55795, 55795, 55795,
	55795, 55795, 55795, -1000, -1000, 4154, -1000, 4144, -1000, -1000,
	-1000, -1000, 4144, 1522, 1450, 4144, -1000, 4144, 4144, 12151,
	12151, 45669, 45038, 44407, 60212, 43776, 55795, 32232, 43145, 42514,
	-1000, 62105, 139944, -1, 4050, 139944, 55795, 327, -1000, 10391,
	-1000, 327, 327, 763, -54, 159705, 3018, 3018, 65873, 2750,
	2591, 2591, 2591, -1000, 1010, 21386, 1010, 124554, 2603, 1010,
	1010, 345, 386, 537, 63359, 3011, 123940, 875, 761, 18,
	17, 16, -1000, -1000, 15, 14, -1000, -1000, 111032, 760,
	29627, 29001, 339, 2322, -55, 3092, 3085, 3079, 3078, -1000,
	3077, 2712, -1000, -1000, -1000, 2209, -60, 1606, 111032, 139944,
	2027, -1000, -1000, -1000, -1000, 86332, -2, 86332, 139944, 3831,
	111032, -39, -1000, 152844, 5673, -61, -1000, 1493, 329, 4144,
	-1000, -1000, -1000, -1000, -1000, 4286, 4285, -1000, 1180, 759,
	758, 517, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	755, 754, 754, 754, -1000, 455, 752, 382, 751, 749,
	747, -1000, -1000, -1000, -1000, -1000, 3420, 111032, 139944, 2026,
	84480, 101796, -133, 111646, 152844, -80, -1000, -1000, -1000, -1000,
	111032, -1000, -1000, 111032, -1000, 75817, -1000, 139944, -1000, -1000,
	-1000, 4284, -1000, 111032, 111032, 2701, 3667, -1000, 111032, -1000,
	111032, 268, 3666, -1000, -1000, 139944, -1000, 111032, 111032, -1000,
	139944, 139944, 139944, 152844, 152844, 264, -1000, 111032, 1007, -62,
	1343, -16, -1000, -1000, -1000, -1000, 1535, -1000, 2289, -1000,
	-1000, -1000, -1000, -1000, -1000, 1742, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1205, -1000, -1000, -1000, -1000, 4138,
	4134, -12, -1000, -1000, 29001, -1000, 2329, -1000, -1000, -1000,
	-1000, 139944, 139944, -1000, -1000, 139944, 139944, -1000, -1000, -18,
	2002, 685, 1604, -1000, 94414, 2844, 3840, 4283, 3147, 3821,
	1890, -1000, 1800, 746, -1000, 3956, 99952, 4006, 4022, 1500,
	-1000, 3418, -1000, -1000, -1000, 1034, 2007, 2119, 1602, 1584,
	99952, 2293, -1000, 85708, -1000, 3105, 3935, 1559, 1554, 1559,
	1559, 1571, 1566, -1000, 99952, 2117, 1583, 1580, 1576, -1000,
	-1000, 1914, 1958, -1000, -1000, 125782, 1996, -1000, 1546, 1530,
	141172, 4070, 2901, 2620, 930, 2402, -1000, 1507, 1528, 3416,
	-1000, -1000, -19, 3996, 3999, 1500, -1000, -1000, 3402, 1525,
	-1000, 1181, -1000, -1000, -1000, 3932, 111032, 29001, 1805, 1803,
	1787, 2115, 1447, -3, -1000, 3989, 1888, -1000, 4089, 91958,
	-1000, 2878, 6123, 1445, 2112, 1438, 3729, -1000, -1000, 2710,
	2792, -1000, -1000, -1000, -1000, 1951, 3213, -1000, 2960, 1548,
	1548, 139944, -1000, 1923, -1000, 1712, 1712, 120870, 139944, -1000,
	-1000, -1000, 3891, 3886, -1000, -1000, 1436, 1434, -1000, 1150,
	9615, 3773, -1000, 152844, 1150, 1150, 2310, 3665, 3198, 1891,
	-1000, 3240, 1003, 3232, -1000, -1000, -1000, 1003, -13, 86332,
	139944, 325, -1000, 137, 55795, 55795, 137, 55795, 137, -1000,
	3974, 3664, 4048, -1000, 3663, 4280, 745, -1000, 2977, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 744, 2836, 3394, 139944,
	225, -1000, 111032, -1000, 4046, 125168, -1000, 3661, 152844, 2293,
	2835, -1000, -1000, 101182, -1000, 3660, 2388, 595, 2833, -1000,
	829, 4278, 3658, -1000, 146084, -1000, 3859, 1617, 3657, 1264,
	867, 4045, -1000, 867, 76442, -1000, 139944, -1000, 9, 415,
	93186, -63, -68, 536, -1000, 139944, 139944, 3784, 2414, 2412,
	-1000, 1129, 69621, -1000, 69621, -69, -1000, -252, 3229, 1782,
	69621, -1000, 1105, -149, 1003, -1000, 1003, -1000, 111032, 3489,
	-1000, 91958, 69621, -1000, 1105, 1105, 1105, 1105, -1000, -1000,
	-1000, -1000, 4277, 4275, 4274, 4273, -1000, -1000, 1133, 111032,
	139944, 111032, -1000, 3192, 1887, -1000, 324, -1000, 152844, -1000,
	152844, 139944, 111032, -1000, 1133, 139944, 1133, 139944, 1133, 139944,
	1133, 1133, -1000, -1000, -1000, -1000, -1000, 137, -1000, -1000,
	159705, -1000, 55795, -1000, -1000, 1799, 4272, 1924, -1000, 3488,
	-1000, 3483, -1000, 55, -1000, -1000, 4152, 2274, -1000, 4189,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4268,
	3823, 159705, -1000, 88204, 2285, -1000, -1000, -1000, -1000, 111032,
	111032, 111032, 111032, 139944, 3771, -1000, 139944, 3766, 3769, 111032,
	-1000, 4193, -1000, -1000, 99952, -1000, 2925, 3482, -1000, -1000,
	-1000, -1000, -1000, -1000, 1858, 2679, -1000, 3004, -1000, 1835,
	-1000, -1000, -1000, 159705, 60843, -1000, -1000, 159705, 2240, -1000,
	58950, 58319, -1000, -1000, 1990, 111032, 3120, -1000, 3120, -81,
	-1000, 157232, 3001, 111032, -12, 38662, -1000, -1000, -1000, -1000,
	-1000, 1033, 1222, 1222, 1518, 1518, 1518, 1518, 3955, 551,
	371, 7284, 6781, 6781, 10058, 10058, 10058, 10058, 10058, 6781,
	703, 646, 646, 703, 703, 703, 703, 703, 646, 646,
	646, 6781, 6781, 6781, 646, 160131, 159976, 8485, 55795, 55795,
	1433, 2255, 623, 7828, 55795, 10302, 10302, 10302, 10302, -1000,
	2370, -1000, -1000, -1000, -1000, 3392, 742, 60212, 60212, -1000,
	-1000, -1000, -1000, 30936, 55795, -1000, -1000, -1000, -1000, 41853,
	-1000, -1000, 156100, -340, 535, -1000, 321, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	534, -56, 104, -1000, 55795, 55795, 55795, 532, -1000, 318,
	55795, 139944, -1000, 19702, 866, -105, -1000, -74, 1633, -1000,
	55795, -1000, -1000, 1431, -1000, 1430, 1429, 1427, -1000, 739,
	531, -1000, 317, -1000, 2584, 733, 731, 55795, -1000, -1000,
	-1000, -1000, -1000, 155778, -1000, -1000, 155679, -1000, -1000, 155357,
	-1000, -1000, 155258, -1000, -1000, -1000, -1000, -1000, 159272, 19191,
	18657, 18103, 13564, 17589, 16918, -86, 529, -87, 527, 1032,
	1028, 526, 525, 518, -89, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -92, 513, -1000,
	3391, -56, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	511, -1000, 510, -1000, 159227, -56, 501, 9009, -1000, 60212,
	60212, 60212, 60212, 500, -1000, 156923, -1000, 158839, 41222, 41222,
	41222, 499, 158794, 55795, -56, -94, -1000, -95, -1000, -1000,
	-1000, -1000, 699, -104, -1000, -106, 1152, 39942, 64623, 29001,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1152, 1152, 55795, -1000, 55795, 3025, -1000, -1000,
	-1000, -1000, 3013, 2205, 3018, 65873, -1000, -1000, -1000, -1000,
	124554, -1000, 4132, 3380, -1000, 124554, -1000, -1000, 139944, 705,
	-1000, 124554, 124554, 29001, 1010, -1000, -1000, 139944, 704, 1010,
	124554, 820, -1000, -1000, -1000, -1000, -1000, 498, 78928, 104,
	315, 29001, 1134, -1000, -1000, 3141, 3141, 3141, 3141, 3141,
	111032, -1000, -1000, 152844, 1426, -11, -85, 3223, 3221, 3220,
	-13, 86332, -13, -158, 139944, -4, 4085, -267, -1000, 2524,
	-1000, 85708, -1000, 893, 1400, 29001, -1000, -1000, -1000, 726,
	-1000, 4144, 4144, -1000, 4144, 152844, 3390, 320, 3208, 3206,
	3204, -1000, 2708, 98724, 248, -133, 152844, -1000, 288, -112,
	-1000, -1000, 83854, 79542, -1000, 2597, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4267, -1000, 2701, -1000, -1000, 111032, 2701,
	2701, -1000, 111032, 111032, 2701, -1000, 281, -1000, 278, -1000,
	-1000, -133, -1000, 1151, 38662, -1000, 1535, -1000, -1000, 1811,
	-1000, 2399, -1000, 1439, -1000, -1000, 38662, -1000, 3789, -1000,
	2127, -1000, -1000, -1000, -1000, 3948, 139944, 139944, 111032, -1000,
	122098, 139944, -1000, 2592, 152844, -1000, 2828, 145470, 2801, 144856,
	85708, -1000, -1000, 721, 1045, 3000, 2998, 1262, 139944, 139944,
	2994, 144242, 143628, -1000, 4264, 139944, 2476, 55795, 122098, 3931,
	2552, 4354, 137, 137, -1000, 137, -1000, -1000, 720, 1581,
	111032, 111032, 139944, 152844, 111032, 2194, -1000, -1000, -1000, -1000,
	-1000, 100566, -1000, -1000, 1559, -1000, -1000, -1000, 1559, -1000,
	1559, 2293, 2188, 139944, 152844, 111032, 152844, 143014, 2396, 142400,
	2394, 2391, -1000, -1000, -1000, 2352, 2376, 2557, 2111, 139944,
	-1000, -1000, -1000, -1000, -1000, 1677, -1000, 930, 1425, 3379,
	55795, 55795, 2542, 137, 137, -1000, 137, 719, 29001, -1000,
	1490, -1000, 3496, 139944, 4188, 141786, 4187, 139944, 139944, 139944,
	152844, 3836, 139944, -5, -1000, 1469, -1000, 4089, -1000, 985,
	-1000, -1000, -1000, -1000, 139944, 139944, 152844, 2705, 2791, 2702,
	3211, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -149, -9,
	-165, -1000, 983, 982, -158, 2389, 139944, 152844, -1000, 141172,
	9615, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2537, 3160,
	1280, 139944, 1489, -1000, -1000, 2110, 1424, 1419, 99952, 2509,
	2099, 2249, 152844, 69621, 1130, 69621, 3162, -1000, -1000, 26481,
	-1000, 159705, 159705, -1000, 159705, -1000, 83240, 91958, 91958, 139944,
	-1000, 77066, 139944, 93800, 1048, 3656, 75201, -158, 1105, 1712,
	3510, 1935, -165, 716, 139944, -1000, -1000, 2293, 3653, 595,
	2824, -1000, 152844, 1195, 4044, 3649, 715, 4261, 4260, -1000,
	111032, 2699, 2821, -1000, -1000, 140558, 3700, 930, 139944, 1152,
	65873, 2415, -1000, 72743, 1242, 139944, 2272, 245, -1000, -1000,
	-1000, 33, 139944, -1000, 903, -1000, -1000, 415, 415, 1105,
	70245, -114, -1000, 313, 714, 981, 977, -1000, 2492, -1000,
	-252, -1000, 91958, 1129, 69621, 3374, -252, 3201, 3372, -1000,
	-1000, 1149, 1105, 1656, 3200, 1105, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8, -1000,
	2088, 2247, 139944, -133, -133, -28, -1000, -1000, 304, -11,
	-1000, 1133, -1000, 1133, -1000, 1133, -1000, -1000, -1000, 159705,
	-1000, -1000, -1000, 1919, 1897, 139944, -1000, 3479, -1000, 139944,
	-1000, -1000, 4256, -1000, -1000, 29001, 139944, 111032, 29001, 111032,
	3478, 3477, -1000, -1000, -1000, 139944, -1000, -1000, 139944, -1000,
	-1000, -1000, -1000, -1000, -1000, 1308, -1000, 2240, 2675, -1000,
	713, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2935, -1000, -1000, 37400, 1016, -1000, -1000, 111032, 7, -12,
	55795, 55795, 7792, 7469, 55795, 60212, 60212, -1000, 55795, 7077,
	-1000, -1000, -1000, -1000, -1000, 3371, 712, 55795, 85708, 10492,
	10146, -1000, 495, 16247, 703, -1000, 55795, -1000, 684, -1000,
	494, 40591, -1000, 157653, 88, -115, -1000, 22033, -56, -120,
	-1000, -1000, 892, -1000, 3696, -1000, 55795, 158519, 2909, 2413,
	2221, 1980, 4144, 4186, 25849, -1000, 77690, 1163, 2613, 154936,
	-1000, -1000, -1000, -1000, 85708, 85708, 55795, 55795, -1000, 55795,
	55795, 55795, -1000, -1000, -1000, 4144, 1014, -1000, -1000, -1000,
	1014, -1000, -1000, 1559, -1000, 1559, -1000, 55795, -1000, -1000,
	3370, 55795, -1000, 85708, 85708, 60212, 60212, 60212, 60212, 60212,
	60212, 60212, 60212, 60212, 60212, 60212, 60212, 60212, 60212, 60212,
	60212, 60212, 60212, 60212, 60212, 2999, 60212, 4118, 4118, 4118,
	1108, -1000, 3470, 3370, 55795, 55795, 85708, 491, 489, 487,
	-1000, 55795, -56, -1000, -1000, 8869, 711, -1000, 2923, -1000,
	139944, -1000, 3287, -1000, 55795, -1000, -157, -1000, 3011, -1000,
	-1000, 3287, 3287, -121, 159705, 65873, 65873, -1000, 706, 55795,
	3012, -1000, -1000, 865, -337, -1000, 973, -1000, -1000, -1000,
	-1000, -1000, -1000, 972, -1000, 705, -1000, -1000, -1000, 301,
	124554, 704, -1000, 139944, 124554, 864, -1000, -122, -1000, -1000,
	-123, -1000, 123940, 486, 29001, -1000, 1152, 3023, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3066, -267, 152844, 152844, 2066,
	2057, 2056, -13, -158, 2658, -1000, 3297, 4185, -1000, 4151,
	884, 859, 227, 4144, 485, 483, 479, -133, 152844, 152844,
	2040, 2039, 2034, 80782, 3368, 152844, -1000, -1000, -1000, 77066,
	85708, -1000, 85708, -1000, -1000, -1000, -1000, 2701, -1000, -1000,
	-1000, 268, -1000, -1000, -1000, -1000, 3101, -1000, -16, -1000,
	-1000, -1000, 55795, -1000, 1114, -1000, -1000, 3837, 702, 1414,
	1412, -1000, -130, -1000, 969, -1000, -1000, -1000, -1000, -1000,
	3347, -1000, 3646, -1000, 2820, -1000, 1247, 2815, 2149, -1000,
	55795, 700, 3155, 688, 687, 4255, 2451, 4249, 1263, 3643,
	2701, 3640, 2701, -1000, -1000, -1000, 1040, -1000, 159705, -132,
	-1000, 2552, -1000, 686, 683, -1000, -18, 1889, 516, 1410,
	1148, -1000, -1000, 55795, 55795, 123326, -1000, 555, 3838, 6,
	-1000, -1000, -1000, 2025, 1403, 1398, -1000, -1000, -1000, -1000,
	-1000, 2293, 2020, 1395, 1393, -1000, -1000, -1000, -1000, -1000,
	2814, -1000, 139944, -1000, 3637, 139944, 3256, 930, 139944, 3838,
	3314, 1147, -1000, 3529, 3528, 1023, 139944, 55795, 55795, 158361,
	158086, -1000, 1146, -1000, -1000, 55795, -1000, -19, -1000, 1387,
	3983, 2812, 111032, -1000, 2701, 3627, 1384, -1000, 1383, -1000,
	-1000, -1000, 3985, 3984, 1404, 1888, 91958, 69621, 2875, -1000,
	3967, 2654, 4121, 4089, 69621, -1000, -1000, -1000, 3538, 3136,
	2787, -1000, -1000, -1000, 120870, 91958, 91958, -1000, -1000, -1000,
	4121, -1000, -1000, -1000, -1000, 87578, -1000, -1000, 1150, 139944,
	152844, 111032, 2154, -1000, -1000, 98724, 99338, 139944, 3198, -133,
	1003, -1000, 2945, 1003, 1130, 3367, -1000, 3108, -1000, -1000,
	1135, 470, -20, -1000, 1435, 4247, 469, -144, -21, 85708,
	-1000, -1000, -1000, -1000, 2801, 111032, 139944, 1451, 3151, 139944,
	139944, 4043, -1000, 2704, 718, 111032, 1011, -1000, 4132, -1000,
	-1000, -1000, 139944, 39942, 120870, -1000, 3978, 111032, 4041, 3626,
	1134, 111032, 137, 111032, 4161, -1000, -1000, 4040, 111032, 3625,
	2690, 2805, 2965, 930, 92572, 1134, 2606, -37, -1000, 2272,
	39293, 3833, -146, -1000, -1000, -1000, 1152, 76442, 65873, 55795,
	4244, -147, -1000, -1000, -1000, -1000, -1000, 91958, 1105, 139944,
	139944, 4243, 91958, 91958, 91958, -26, 680, -1000, 964, 963,
	961, -1000, -1000, -1000, -1000, -1000, -1000, 960, 958, 955,
	954, -1000, -1000, 1129, -1000, -1000, -252, 69621, 1129, 69621,
	137, -1000, 2638, -1000, 111032, 69621, -1000, 25217, 139944, 3192,
	-1000, 86946, -1000, -1000, -1000, -1000, -1000, 1133, 4184, -158,
	-1000, -1000, -1000, -1000, 2543, 2752, 2543, 2233, 2220, -1000,
	-1000, -1000, 2669, -1000, -1000, -1000, -1000, 3082, 3832, 29001,
	3957, 10302, 55795, 55795, 456, 7508, 6245, 10302, 55795, 55795,
	85708, 12224, -152, 55795, 55795, -1000, 55795, 856, 159705, -1000,
	4183, 55795, 467, 466, -1000, -1000, -1000, 4142, -1000, -1000,
	-1000, 159705, 55795, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	465, -1000, 144, -1000, -1000, -1000, 149154, -1000, 55795, 462,
	3929, -1000, 461, 457, 14550, 12999, 154837, 154503, 154414, 453,
	-1000, -1000, 429, 428, 159705, 3470, 159705, -1000, -1000, 1122,
	1122, 1542, 1542, 1542, 1542, 4118, 515, 801, 657, 1029,
	1029, 1029, 1173, 1108, 1108, 1029, 1029, 1029, 1108, 3361,
	2971, 663, 2311, -1000, -1000, 159705, 159705, 427, -1000, -1000,
	-1000, -56, 426, 8869, -1000, -1000, 3281, 3923, 159705, -1000,
	65873, 3281, 3281, -1000, -1000, 2205, 139944, 159705, 65873, -1000,
	3380, -1000, 23315, 22677, -1000, 29001, -1000, -1000, -159, -1000,
	85708, -1000, -1000, -1000, 4132, -1000, 78928, -1000, -1000, 56,
	-1000, 3023, -1000, 953, -1000, -1000, 91958, 91958, 4241, 4240,
	-1000, 4181, 4177, 2559, 4176, 3141, -1000, -267, -161, 139944,
	139944, 139944, -1000, 2653, -1000, 855, 4239, 880, 29001, 425,
	-1000, -1000, -1000, -133, -133, 139944, 139944, 139944, 3358, 111032,
	139944, 1760, 152844, -133, -1000, -1000, -1000, -1000, -1000, -1000,
	3781, 159705, 3469, 3269, 3267, 139944, 139944, -1000, 122098, 38662,
	1713, 122712, 139944, 3624, -1000, 3622, -1000, 1262, 5682, 154169,
	66497, -1000, 66497, 139944, -1000, -1000, -1000, -1000, 2234, 1766,
	4237, 1325, -1000, 3880, 139944, -1000, 139944, -1000, -1000, -1000,
	122098, -1000, 139944, 139944, 111032, 139944, -1000, 152844, 3559, -167,
	159705, -27, -1000, 952, -1000, 1556, -1000, 24585, 139944, 152844,
	111032, 139944, 152844, 111032, 3620, 1240, 139944, -1000, 3604, 139944,
	1239, -1000, -1000, 139944, 2554, -1000, -1000, 3526, -1000, 159705,
	158041, 137, 55795, 3377, -169, 29001, -1000, 4175, 4171, 3603,
	3881, -1000, 139944, 4168, 139944, 111032, 3780, -1000, -1000, -1000,
	-1000, 951, 948, 947, 946, 945, 4093, 120870, -1000, 1132,
	139944, -1000, 3133, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2013, 1381, 1380, 2689, 2688, 2621, -28,
	2509, 1130, -29, 662, -1000, 1130, -1000, 91958, 69621, 4236,
	2266, 77066, 55795, 55795, -1000, 3143, -1000, 117792, 93800, 2727,
	-1000, -1000, 661, 139944, 139944, 660, -1000, 137, -1000, 4234,
	122098, 659, -1000, 2635, -1000, 850, -1000, -1000, 226, -181,
	152844, 2293, 137, 111032, -1000, 595, 1128, 595, 423, -31,
	-1000, 3694, 1254, 29001, 111032, 3576, 2970, 930, 92572, -1000,
	1617, 3065, -1000, -36, -1000, 601, 137, 2606, -1000, -37,
	159705, -1000, 942, 419, -1000, 3778, -1000, -1000, -182, -1000,
	-1000, 2595, 2595, 91958, 69621, 91958, 91958, 91958, 69621, 91958,
	-1000, 1129, 4039, -1000, -252, -1000, 2838, 1105, 1105, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 29001, 1997, -1000,
	655, 654, -1000, -1000, -1000, -1000, 3832, 10302, 10302, 55795,
	55795, 55795, 10302, 12224, -188, -1000, 10302, 10302, -56, -1000,
	-1000, 157653, -1000, -1000, -1000, 159705, -1000, 23953, 2546, -1000,
	153988, -1000, 37400, -1000, -1000, 55795, 55795, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 60212, 3354, 653, 85708, -1000,
	-1000, 418, 1123, 55795, 57688, 3011, 1123, 1123, -1000, -196,
	-1000, -1000, -1000, 4132, -1000, 4132, 56, -1000, 139944, -1000,
	-1000, -1000, 29001, -1000, 91958, -1000, -1000, -1000, -1000, -1000,
	4233, 4230, 2784, 4227, 4226, -1000, -1000, -1000, 3520, -155,
	-164, -172, -1000, 879, -1000, 4225, -1000, -1000, 207, 197,
	165, 152844, 3350, 160, 3191, 3189, -133, -1000, 137, -1000,
	-1000, -1000, -1000, -1000, -1000, 3186, 4038, -1000, 2356, -1000,
	139944, 139944, -1000, 139944, -1000, 29001, 139944, 3313, 1464, -1000,
	1045, 2990, 635, 60212, 1307, 111032, 1074, 3264, 3262, -1000,
	4065, 3922, 3254, -199, -1000, 139944, 55795, 139944, -202, -204,
	2783, -1000, -1000, 1306, 1463, 55795, 1305, -1000, -1000, -1000,
	85708, 631, 2701, 2701, -1000, -207, -212, -1000, -1000, -1000,
	55795, 1370, 139944, 38031, -1000, 4224, 3838, -1000, -1000, -1000,
	-1000, -1000, -1000, 139944, 139944, -1000, -1000, -1000, 139944, 3838,
	139944, -1000, 55795, -1000, 157351, 55795, 1366, -1000, -1000, -1000,
	4167, 2701, 29001, 2701, -1000, 2701, 3881, 1324, 91958, 55795,
	1730, 69621, 69621, -1000, -1000, -1000, 2731, -1000, -1000, 139944,
	152844, 111032, 2195, 2195, 3466, -1000, -1000, -1000, 2875, 2875,
	-1000, -40, 1130, -1000, 1867, -1000, 159705, 159705, 2544, 4223,
	-1000, -1000, -1000, -1000, 2988, -1000, -1000, -1000, 139944, 2984,
	3245, 66497, 629, 627, 139944, 1118, -1000, -215, 93800, 1048,
	1069, -1000, 74585, -1000, -1000, -1000, -1000, 595, 4035, -1000,
	3100, 4032, -1000, 4166, 626, 625, 139944, 2687, 624, 29001,
	3827, 930, 92572, -1000, 3700, 2272, -1000, 2799, 139944, 3819,
	-1000, 3065, 623, 1105, 622, 1105, -1000, -223, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1409, 1129, -41,
	-1000, 1088, 1087, -1000, -1000, -1000, -1000, 111032, 111032, 55795,
	55795, -1000, 10302, 10302, 10302, -1000, 413, -1000, -1000, 2606,
	3915, -1000, -43, 153654, 153506, 1057, 60212, 85708, -224, -1000,
	-1000, 139944, 159705, -49, -1000, 159705, 619, 618, 596, -1000,
	-1000, -1000, 802, 658, -1000, -1000, -1000, -1000, 4220, -1000,
	-1000, -1000, 152844, 152844, 152844, 4219, -1000, 152844, 152844, 152844,
	-133, 152844, 152844, 2009, 1992, -1000, 121484, 139944, -1000, -1000,
	2149, 2236, -1000, -1000, 139944, 2802, -1000, -1000, -1000, 1092,
	55795, 2311, 60212, 614, 55795, -1000, 613, 612, 4031, 3750,
	-1000, 3142, 3351, 2288, 66497, -1000, 3832, -1000, 153461, -1000,
	1250, 2367, -1000, -1000, -1000, -1000, 159705, 60212, 3881, 66497,
	-1000, -1000, 610, 609, 159705, 607, 940, 3344, -1000, -1000,
	-1000, -1000, -158, -158, -1000, -1000, 159705, 137, 159705, 606,
	3983, -1000, -1000, -1000, -1000, 2701, 111032, -1000, 159705, -1000,
	-1000, -1000, -1000, 936, -1000, -1000, -1000, 1359, -1000, -1000,
	-1000, -1000, -1000, 4217, 3341, 98724, -1000, -225, 2386, 85708,
	-1000, 1048, -1000, -1000, 2727, 604, -1000, 1082, 2894, 2894,
	-226, 66497, 66497, -231, 2681, 3097, -1000, 409, 4030, 1069,
	-1000, 4124, -1000, 1152, -1000, 4023, 137, 3776, -1000, 137,
	-1000, 4161, 66497, -1000, 111032, 66497, 2686, 2499, 2951, 92572,
	-1000, 2965, -1000, -1000, -233, 139944, 2272, -1000, -1000, 91958,
	-1000, -1000, 4112, -1000, 2838, -1000, 139944, -1000, 139944, -1000,
	-1000, -234, -240, -1000, 2456, 55795, 37400, -1000, -1000, 1057,
	-242, -1000, -51, -1000, 4020, 57688, 4215, 4212, 4207, -1000,
	-1000, -1000, -267, -267, -267, -1000, -133, -133, -133, -133,
	-133, 139944, 139944, -1000, 2353, -1000, 2801, -1000, -1000, 3571,
	-1000, 3276, 602, 20575, 2311, 2928, 139944, 20358, 2293, 2293,
	-1000, 4015, 3349, -1000, -1000, 2542, 600, -1000, -1000, -1000,
	-1000, 1016, 139944, 1082, 3274, 111032, 2311, 1261, -245, 2543,
	2543, 55795, 36769, 2551, -1000, 55795, -1000, -1000, 3881, 69621,
	152844, -1000, 152844, 2682, -1000, 3320, 5934, -1000, 2681, 139944,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1250, -253, -256, -1000, -1000, 3874, -1000, 3775,
	3143, 137, -1000, -1000, -1000, 137, -1000, 4205, 1128, 406,
	-258, 1254, -264, 111032, 2371, -1000, 930, -1000, 2970, 1152,
	3715, -1000, -266, -1000, -1000, -1000, -269, -272, -1000, -1000,
	405, 57057, 57057, 57057, -56, -81, -1000, 139944, 597, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 158, 143, -1000, -1000,
	3384, 1005, -1000, 967, 2133, 328, 1258, 199, 35, -1000,
	-1000, -1000, 3254, -1000, 139944, -1000, -1000, -1000, 1005, 595,
	-1000, 55795, 1250, -274, -1000, 1238, -277, -1000, 1232, -285,
	-1000, 3334, -1000, -287, 2701, -1000, -267, 264, 2195, 1125,
	3958, 2671, 5934, -1000, 4130, 92572, -1000, -1000, -1000, 2941,
	-288, -1000, -1000, 2288, 1250, 2542, 2780, -1000, 2544, 1118,
	-1000, -1000, -1000, -1000, 1250, 593, 2288, 592, 1752, 930,
	-1000, -1000, 1559, 3827, 3712, 1575, 1105, -1000, -1000, -1000,
	3654, -1000, 61474, 2725, 2214, 156844, 3654, 3654, -1000, -1000,
	152844, 152844, 139944, 1082, 3952, -1000, 994, 992, 1748, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1152, -290, -1000,
	2928, 159705, 1082, -1000, 2543, 3175, -1000, 2543, 3330, -1000,
	2550, -1000, -1000, -1000, -1000, 3327, -1000, 2137, 4092, -1000,
	-1000, 3993, 55795, -1000, -1000, -1000, -1000, -1000, -1000, 1082,
	139944, 2542, 2288, 1082, 2186, 2183, 4200, 1048, 2681, 2288,
	66497, 2542, 66497, 2529, -1000, 139944, -1000, 2499, 1549, -1000,
	1874, -1000, -1000, 2067, 4058, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -133, -133, -1000, -1000, 933, -1000, 3732, -1000,
	1301, 2532, 2532, -1000, -1000, 967, -1000, -1000, 567, -1000,
	566, -1000, 152844, 2623, -1000, -1000, -1000, 159705, -1000, -1000,
	1082, 2542, 1152, -1000, 4197, -1000, 2681, -1000, 2542, -301,
	1082, -309, 2558, -1000, -1000, -158, 2371, -1000, 1872, 76442,
	2206, -1000, -1000, 2600, 56426, 55795, -1000, 4094, -1000, -1000,
	3009, -1000, 3254, 55795, 55795, 264, 73971, 11028, 1152, 1082,
	1446, -1000, 2941, 1082, 1250, 1152, 2288, 1978, 930, 1752,
	76442, -284, -1000, -1000, -1000, 159705, -1000, -1000, -1000, -1000,
	-310, -312, -1000, -165, 120870, -328, -1000, -1000, -1000, 1446,
	1152, -1000, 1175, -1000, -1000, 1152, 2288, 1446, 2542, -1000,
	-1000, 2352, 152844, 2529, -284, -1000, 2542, 1348, -317, -1000,
	-1000, 1446, -1000, 1446, 2542, -1000, 1082, -1000, 1978, -1000,
	-1000, -1000, 565, -1000, -1000, -1000, 1082, 1152, -1000, 55795,
	1152, 1446, -320, 1446, -1000, 2542, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5119, 5116, 19, 5114, 5113, 5110, 5108, 5107, 5106,
	5105, 5104, 5103, 5102, 5101, 5097, 165, 5096, 5095, 5094,
	5093, 5092, 5091, 5090, 5089, 5088, 5087, 5084, 5078, 5077,
	5076, 5074, 5070, 5069, 5066, 5065, 5064, 5062, 5059, 5056,
	5055, 5042, 5039, 5038, 5037, 5036, 5034, 5029, 5028, 5026,
	5023, 5021, 5020, 5012, 5011, 5010, 5009, 5008, 5007, 5006,
	5005, 5002, 4999, 4998, 4994, 4992, 4990, 4989, 4988, 4987,
	4986, 4984, 4983, 4982, 4981, 4977, 4973, 4971, 4969, 4967,
	4964, 4959, 4957, 4956, 65, 4955, 4952, 4950, 4949, 4948,
	4947, 4946, 4945, 4944, 4943, 4942, 4941, 4940, 4938, 4937,
	4934, 4931, 4930, 4929, 4928, 4927, 4920, 79, 4919, 322,
	4918, 4916, 4915, 4913, 4912, 4911, 4909, 4908, 4907, 4905,
	4903, 4900, 4899, 4898, 319, 4897, 13, 199, 4895, 4894,
	22, 4891, 4887, 318, 4886, 4885, 4884, 4882, 4881, 342,
	4880, 4879, 4878, 4877, 4875, 362, 4872, 4871, 4870, 4869,
	4868, 4866, 73, 162, 4864, 4863, 2504, 4862, 4861, 4860,
	4859, 4857, 4852, 4850, 308, 312, 4849, 4848, 4847, 301,
	200, 4846, 317, 4845, 4843, 4842, 4840, 4839, 4838, 4837,
	4834, 4832, 4829, 4828, 4824, 4823, 4822, 4820, 4818, 4817,
	4815, 4812, 4810, 4809, 4807, 4805, 4804, 4803, 4802, 4800,
	4799, 4798, 4797, 4796, 4794, 4793, 4792, 4790, 4788, 4787,
	4785, 4784, 4783, 4781, 4780, 4775, 300, 260, 190, 4772,
	4769, 4768, 4767, 4766, 316, 315, 4765, 4764, 4763, 4762,
	4761, 3981, 4760, 4758, 4756, 4754, 4748, 4747, 4745, 4744,
	4742, 147, 2, 105, 4741, 4739, 111, 107, 109, 97,
	124, 126, 4724, 4723, 145, 4722, 160, 142, 4721, 139,
	137, 30, 29, 264, 296, 417, 287, 4720, 4718, 4712,
	298, 233, 4711, 286, 4706, 4705, 4704, 4701, 4700, 4699,
	90, 72, 251, 4698, 169, 4696, 4694, 166, 203, 218,
	213, 206, 208, 92, 64, 121, 95, 76, 57, 21,
	98, 261, 26, 262, 1, 7, 311, 4693, 306, 11,
	167, 12, 41, 4686, 4685, 4684, 4682, 4482, 135, 4680,
	314, 289, 202, 4677, 4676, 4675, 1019, 4674, 4673, 66,
	291, 385, 112, 131, 256, 156, 4672, 189, 205, 46,
	4671, 188, 100, 4670, 4669, 117, 120, 10873, 8773, 4668,
	4666, 140, 84, 129, 7392, 257, 180, 241, 133, 157,
	195, 198, 4664, 143, 4662, 179, 173, 209, 564, 4653,
	114, 4651, 4015, 113, 211, 192, 7067, 4650, 4649, 4648,
	102, 4646, 125, 4645, 4643, 81, 25, 4, 3, 170,
	48, 42, 20, 4642, 37, 154, 60, 28, 4641, 32,
	4640, 4639, 4637, 4636, 58, 4634, 49, 217, 4633, 4631,
	323, 4627, 99, 77, 47, 4626, 45, 273, 4625, 277,
	161, 4622, 4621, 223, 231, 232, 219, 272, 4618, 82,
	281, 4617, 4615, 4614, 4613, 4610, 326, 159, 8, 158,
	4609, 4604, 181, 4603, 71, 297, 235, 4602, 74, 4601,
	4600, 210, 69, 175, 321, 212, 283, 150, 276, 224,
	282, 4599, 4595, 4594, 225, 4593, 4592, 269, 187, 4591,
	4589, 267, 330, 110, 59, 15, 207, 108, 285, 96,
	227, 196, 4587, 243, 177, 4573, 182, 4572, 116, 4567,
	325, 221, 268, 56, 9, 27, 123, 130, 4566, 10,
	284, 193, 247, 148, 4565, 8234, 3450, 3583, 280, 4564,
	186, 153, 94, 152, 184, 313, 104, 4563, 4562, 4453,
	4561, 4552, 4549, 4546, 226, 4545, 4540, 258, 183, 178,
	4533, 174, 249, 4532, 122, 87, 68, 38, 151, 103,
	327, 144, 274, 222, 304, 4527, 4521, 4518, 228, 4517,
	106, 146, 246, 4511, 242, 303, 78, 4506, 194, 4504,
	191, 2811, 83, 185, 4502, 292, 4501, 4496, 4495, 4494,
	4492, 4491, 4490, 2561, 293, 4489, 4487, 4481, 52, 238,
	4480, 236, 172, 237, 75, 63, 229, 119, 4297, 132,
	2464, 240, 50, 5, 4479, 214, 4478, 4874, 85, 4477,
	0, 16072, 11262, 14290, 4474, 4473, 15378, 4472, 4816, 4471,
	4470, 4468, 255, 93, 4467, 4466, 4465, 127, 4464, 101,
	4462, 4459, 91, 4458, 43, 18, 24, 39, 31, 882,
	61, 4457, 4456, 36, 168, 34, 4454, 320, 278, 4451,
	4449, 4447, 4446, 118, 4445, 62, 4444, 53, 4443, 4442,
	70, 16, 44, 4441, 4439, 250, 201, 3918, 197, 176,
	4438, 155, 4436, 4435, 4434, 88, 164, 4431, 4429, 310,
	253, 254, 134, 4428, 302, 4427, 239, 4426, 80, 51,
	4425, 4421, 290, 138, 136, 67, 299, 163, 54, 4420,
	4418, 4417, 4416, 215, 4415, 4414, 4413, 4411, 4410, 128,
	171, 4409, 89, 4408, 4406, 4405, 55, 252, 220, 4404,
	6, 4403, 4401, 4400, 271, 270, 309, 234, 263, 4399,
	4396, 204, 4395, 4394, 4392, 305, 4390, 4389, 3976, 307,
	4386, 40, 4385, 4383, 4382, 17, 4380, 4378, 245, 3780,
	4375, 4368, 33, 4356, 230,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 14,
	14, 10, 10, 10, 10, 11, 11, 11, 11, 11,
	63, 63, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 20, 20,
	20, 20, 20, 20, 42, 44, 43, 37, 37, 38,
	38, 39, 40, 40, 45, 47, 46, 48, 49, 49,
	50, 50, 50, 13, 13, 13, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 23, 23, 51, 51, 24,
	24, 53, 53, 25, 25, 54, 54, 669, 669, 669,
	670, 670, 671, 671, 671, 28, 56, 58, 58, 476,
	476, 21, 22, 22, 22, 22, 672, 672, 672, 672,
	41, 29, 57, 34, 34, 34, 34, 34, 244, 244,
	244, 244, 27, 27, 52, 52, 290, 290, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 668, 668,
	292, 292, 291, 277, 277, 278, 278, 279, 279, 673,
	673, 293, 293, 293, 294, 294, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 562, 562, 562, 593,
	593, 593, 593, 595, 595, 720, 720, 721, 721, 721,
	721, 721, 155, 155, 450, 450, 450, 72, 72, 72,
	72, 72, 658, 658, 246, 246, 246, 248, 248, 247,
	247, 247, 247, 247, 247, 247, 247, 96, 96, 97,
	97, 285, 285, 284, 284, 284, 284, 284, 284, 284,
	679, 679, 678, 716, 716, 677, 677, 680, 680, 680,
	245, 245, 245, 93, 93, 114, 114, 151, 151, 151,
	151, 151, 151, 151, 151, 152, 152, 153, 153, 689,
	689, 689, 249, 249, 249, 251, 251, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 256, 19, 19, 134, 134, 134, 134, 134,
	134, 134, 129, 129, 597, 597, 598, 598, 240, 240,
	241, 241, 241, 241, 242, 242, 243, 243, 243, 87,
	87, 253, 253, 255, 255, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 75, 75,
	75, 75, 75, 76, 76, 76, 76, 76, 76, 77,
	77, 77, 77, 77, 77, 78, 78, 85, 85, 85,
	85, 85, 85, 85, 85, 218, 218, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 92, 92, 92, 92, 103, 690, 690, 691,
	691, 709, 695, 695, 696, 696, 699, 699, 699, 700,
	700, 700, 700, 700, 708, 708, 708, 708, 708, 702,
	701, 703, 703, 704, 704, 706, 706, 706, 706, 706,
	707, 707, 707, 707, 707, 707, 707, 707, 707, 707,
	707, 707, 707, 707, 707, 707, 707, 694, 710, 711,
	711, 712, 712, 713, 713, 713, 122, 122, 715, 715,
	714, 714, 697, 697, 698, 698, 67, 705, 705, 723,
	723, 68, 69, 70, 71, 692, 692, 722, 722, 722,
	722, 722, 722, 722, 722, 722, 722, 722, 722, 722,
	722, 722, 722, 722, 724, 724, 725, 725, 726, 726,
	726, 726, 726, 726, 726, 726, 726, 726, 726, 726,
	726, 726, 726, 726, 726, 726, 726, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 104, 104, 408, 408, 371,
	371, 105, 105, 105, 106, 106, 107, 107, 89, 89,
	89, 655, 655, 656, 662, 727, 727, 553, 553, 552,
	552, 109, 109, 449, 449, 110, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 120, 120, 120, 120, 120,
	121, 121, 121, 118, 118, 118, 115, 115, 115, 113,
	113, 113, 119, 119, 119, 661, 357, 357, 117, 117,
	117, 116, 116, 116, 424, 424, 425, 427, 426, 123,
	123, 123, 123, 372, 124, 124, 124, 124, 124, 124,
	124, 124, 127, 127, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 555, 555, 5,
	5, 283, 283, 282, 282, 282, 282, 6, 6, 6,
	288, 288, 287, 286, 125, 125, 125, 517, 517, 130,
	130, 130, 465, 465, 131, 131, 131, 131, 131, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 665, 665, 417,
	417, 320, 320, 320, 320, 143, 143, 143, 143, 144,
	144, 144, 144, 145, 145, 226, 226, 161, 161, 161,
	161, 160, 160, 160, 160, 160, 160, 160, 160, 79,
	79, 79, 80, 80, 81, 81, 82, 82, 83, 83,
	84, 84, 84, 84, 84, 164, 164, 33, 33, 33,
	33, 165, 165, 717, 717, 167, 163, 163, 163, 163,
	163, 163, 163, 162, 162, 166, 166, 166, 166, 168,
	170, 170, 170, 170, 170, 169, 169, 169, 169, 169,
	171, 171, 587, 587, 435, 435, 585, 585, 609, 609,
	586, 586, 378, 378, 378, 378, 378, 379, 379, 379,
	596, 596, 596, 596, 596, 596, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 227, 227, 227, 228, 228, 233,
	233, 234, 234, 234, 235, 235, 235, 232, 232, 232,
	229, 229, 230, 230, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 238, 238, 236, 236, 237, 237,
	729, 729, 728, 728, 239, 239, 239, 239, 239, 199,
	199, 199, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 436, 436, 202, 202, 202,
	186, 186, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 252, 252, 252, 252, 252, 179, 179, 179, 179,
	179, 179, 179, 179, 180, 180, 180, 174, 174, 188,
	188, 188, 188, 188, 181, 181, 182, 182, 182, 183,
	183, 183, 183, 210, 210, 185, 185, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 175, 175, 175, 175,
	190, 190, 190, 190, 472, 472, 472, 216, 216, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 213, 213, 213, 213, 213,
	213, 681, 681, 682, 682, 682, 206, 206, 206, 206,
	206, 206, 533, 533, 200, 200, 200, 200, 205, 205,
	205, 205, 208, 208, 208, 208, 455, 455, 197, 197,
	197, 198, 198, 198, 203, 203, 215, 204, 409, 409,
	201, 201, 207, 207, 207, 207, 209, 209, 209, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 177,
	177, 177, 177, 178, 178, 178, 178, 211, 211, 196,
	196, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 730, 730, 192, 192, 192, 191, 191, 191,
	191, 194, 194, 195, 195, 195, 195, 195, 195, 195,
	193, 184, 214, 663, 663, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 660, 660, 660, 660, 660, 664,
	664, 135, 135, 135, 135, 135, 135, 135, 146, 146,
	146, 146, 146, 146, 146, 149, 149, 136, 136, 136,
	136, 136, 136, 136, 139, 139, 137, 137, 137, 137,
	138, 138, 98, 98, 98, 98, 98, 18, 18, 18,
	99, 99, 311, 311, 261, 261, 261, 396, 396, 262,
	262, 386, 386, 386, 386, 257, 257, 258, 258, 259,
	260, 260, 100, 100, 731, 731, 731, 674, 674, 674,
	675, 675, 675, 675, 675, 675, 380, 380, 381, 381,
	497, 497, 497, 497, 497, 384, 384, 384, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 394, 395, 395,
	387, 387, 393, 392, 392, 391, 391, 390, 390, 388,
	389, 389, 389, 398, 398, 397, 400, 400, 399, 496,
	618, 618, 620, 620, 620, 620, 620, 620, 620, 622,
	622, 622, 622, 622, 622, 622, 622, 622, 622, 622,
	622, 622, 622, 622, 622, 622, 473, 473, 732, 732,
	733, 734, 616, 616, 616, 617, 612, 612, 613, 613,
	613, 613, 613, 382, 382, 383, 383, 383, 383, 614,
	615, 415, 415, 537, 619, 619, 621, 621, 623, 735,
	735, 735, 735, 735, 735, 736, 736, 736, 495, 495,
	494, 494, 493, 493, 406, 406, 624, 624, 624, 624,
	625, 625, 625, 625, 625, 628, 627, 626, 626, 626,
	626, 626, 102, 102, 102, 452, 452, 451, 451, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 223, 223, 323,
	323, 323, 95, 95, 95, 15, 15, 15, 15, 15,
	15, 15, 338, 338, 16, 16, 16, 16, 676, 676,
	676, 101, 101, 101, 101, 101, 101, 404, 404, 404,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 667, 667, 666, 666,
	324, 324, 738, 738, 108, 108, 108, 108, 108, 108,
	108, 108, 556, 556, 557, 557, 94, 94, 94, 94,
	94, 474, 474, 471, 471, 470, 470, 414, 414, 535,
	535, 535, 536, 328, 328, 329, 329, 280, 280, 280,
	475, 475, 475, 36, 35, 26, 26, 30, 30, 31,
	31, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	32, 32, 60, 60, 60, 60, 61, 61, 61, 61,
	64, 64, 65, 65, 59, 59, 59, 59, 62, 62,
	55, 55, 66, 66, 66, 66, 66, 683, 685, 685,
	684, 684, 688, 688, 688, 688, 688, 688, 686, 686,
	359, 359, 687, 687, 718, 718, 719, 719, 142, 142,
	147, 147, 147, 147, 147, 148, 148, 148, 148, 150,
	150, 150, 150, 159, 159, 219, 219, 219, 219, 219,
	219, 219, 73, 73, 86, 86, 157, 740, 740, 740,
	158, 158, 158, 220, 220, 220, 220, 221, 221, 222,
	222, 739, 739, 321, 321, 490, 490, 491, 491, 741,
	741, 492, 492, 492, 492, 492, 314, 313, 315, 315,
	316, 316, 91, 91, 91, 302, 302, 301, 304, 304,
	303, 305, 305, 306, 306, 299, 299, 599, 599, 308,
	308, 308, 309, 309, 295, 295, 296, 296, 297, 297,
	298, 298, 312, 312, 594, 594, 742, 742, 133, 133,
	133, 225, 225, 370, 370, 370, 483, 483, 483, 407,
	407, 335, 335, 489, 489, 489, 489, 489, 448, 448,
	448, 224, 224, 422, 422, 438, 438, 439, 439, 549,
	549, 440, 140, 140, 141, 141, 156, 156, 265, 265,
	263, 263, 263, 263, 263, 263, 263, 263, 270, 270,
	271, 271, 272, 272, 273, 274, 274, 274, 274, 428,
	428, 275, 275, 275, 264, 264, 264, 266, 266, 266,
	266, 266, 266, 266, 269, 269, 269, 269, 276, 276,
	276, 268, 268, 635, 635, 635, 637, 637, 639, 639,
	638, 638, 634, 634, 636, 636, 737, 737, 454, 454,
	454, 403, 405, 401, 401, 402, 402, 412, 412, 410,
	411, 411, 413, 413, 534, 534, 534, 281, 281, 281,
	445, 445, 445, 445, 446, 446, 479, 479, 477, 477,
	477, 477, 478, 478, 480, 480, 480, 481, 481, 482,
	482, 442, 442, 443, 443, 444, 444, 444, 444, 513,
	513, 267, 267, 267, 419, 419, 419, 420, 420, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	504, 504, 502, 502, 502, 502, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 539, 540, 540, 421, 421,
	541, 486, 486, 487, 487, 484, 484, 485, 485, 488,
	488, 653, 653, 653, 654, 654, 532, 532, 542, 542,
	542, 542, 542, 542, 528, 528, 529, 529, 530, 530,
	531, 531, 550, 551, 551, 458, 458, 458, 458, 456,
	456, 459, 459, 459, 459, 459, 457, 457, 543, 543,
	543, 543, 447, 447, 544, 544, 544, 544, 545, 546,
	546, 547, 547, 498, 499, 499, 558, 558, 558, 558,
	560, 418, 418, 418, 418, 418, 611, 610, 610, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	575, 575, 575, 575, 575, 575, 575, 561, 561, 561,
	561, 561, 565, 565, 565, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 566, 566, 571, 571,
	572, 572, 572, 567, 568, 573, 573, 573, 573, 743,
	743, 577, 577, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 563, 563, 563, 570, 570, 570, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 466, 466, 468, 468, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 507, 507, 507, 507,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 629, 629, 629, 629, 629,
	629, 629, 629, 509, 509, 632, 632, 633, 633, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	640, 640, 641, 641, 643, 643, 644, 644, 645, 646,
	646, 646, 647, 648, 648, 642, 642, 649, 649, 649,
	649, 650, 650, 651, 651, 651, 651, 651, 652, 652,
	652, 652, 652, 519, 519, 520, 520, 526, 526, 526,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 377, 377, 376, 325, 325,
	325, 325, 325, 325, 433, 433, 431, 431, 431, 434,
	434, 432, 432, 430, 430, 429, 429, 516, 516, 514,
	514, 518, 518, 460, 460, 576, 576, 576, 576, 576,
	576, 576, 576, 461, 461, 461, 469, 462, 462, 463,
	463, 463, 463, 463, 510, 511, 464, 464, 464, 512,
	512, 521, 525, 525, 524, 523, 523, 522, 522, 500,
	500, 501, 501, 441, 441, 744, 744, 437, 437, 548,
	548, 548, 548, 605, 605, 374, 374, 423, 423, 373,
	373, 365, 365, 366, 366, 366, 366, 416, 416, 527,
	527, 578, 578, 579, 579, 580, 580, 581, 581, 582,
	583, 584, 515, 515, 346, 345, 332, 333, 344, 343,
	342, 331, 334, 339, 340, 341, 336, 337, 353, 352,
	351, 300, 307, 358, 360, 360, 363, 363, 364, 362,
	361, 361, 348, 349, 350, 554, 330, 367, 367, 368,
	368, 368, 369, 369, 369, 369, 326, 326, 327, 327,
	354, 354, 355, 356, 356, 347, 347, 347, 317, 317,
	317, 318, 318, 319, 319, 592, 592, 589, 589, 589,
	590, 590, 590, 693, 591, 591, 591, 591, 588, 588,
	588, 588, 588, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 601, 601, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 603, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 608, 608,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 3,
	4, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 6, 4, 4, 6, 9, 6,
	8, 4, 4, 5, 9, 7, 9, 5, 6, 8,
	7, 7, 9, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 6, 2,
	1, 4, 8, 7, 10, 9, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 4, 4, 6, 5, 6,
	5, 6, 4, 8, 3, 8, 4, 2, 3, 10,
	3, 6, 4, 3, 1, 3, 4, 4, 2, 1,
	1, 3, 1, 3, 2, 4, 3, 2, 3, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 6, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 1, 3, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 3, 3, 3, 12, 3, 5,
	4, 1, 3, 3, 3, 3, 2, 4, 4, 4,
	1, 1, 2, 1, 4, 1, 0, 3, 3, 0,
	4, 6, 0, 6, 4, 4, 4, 5, 7, 6,
	8, 7, 9, 8, 2, 1, 3, 1, 3, 3,
	3, 0, 2, 5, 0, 1, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	1, 1, 1, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 6, 3, 8, 5, 3, 12, 2, 0, 1,
	0, 1, 1, 0, 1, 3, 1, 3, 3, 3,
	3, 2, 2, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 0, 1, 2, 2, 2, 1, 1, 1,
	4, 5, 1, 1, 1, 1, 3, 3, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 2, 1,
	1, 3, 0, 1, 4, 0, 4, 6, 1, 3,
	2, 1, 3, 2, 1, 3, 5, 1, 2, 1,
	0, 6, 6, 6, 8, 1, 0, 4, 3, 3,
	4, 3, 4, 4, 4, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 1, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 10,
	5, 1, 3, 3, 1, 1, 0, 2, 0, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 4,
	3, 1, 2, 3, 2, 2, 2, 4, 6, 3,
	1, 2, 2, 7, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 7,
	4, 7, 8, 8, 9, 11, 11, 11, 6, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 10,
	13, 10, 13, 5, 8, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 4, 4, 3,
	4, 1, 1, 1, 1, 5, 4, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 1, 2, 2, 2, 9, 2, 1,
	0, 1, 1, 0, 1, 2, 0, 2, 2, 0,
	2, 2, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 3, 6, 8, 3,
	3, 3, 4, 8, 6, 4, 5, 5, 5, 5,
	3, 0, 1, 1, 1, 1, 4, 4, 3, 4,
	4, 3, 4, 4, 1, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 5, 7, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 7, 5, 2, 0,
	3, 3, 4, 3, 3, 3, 5, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 3, 4,
	5, 4, 4, 5, 6, 5, 5, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 6, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 2,
	3, 2, 2, 3, 2, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 1, 1, 1, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 2, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 3, 6, 4, 2, 3, 5, 5,
	5, 2, 5, 5, 2, 2, 2, 0, 1, 1,
	3, 4, 11, 12, 10, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	6, 1, 3, 1, 2, 0, 1, 2, 3, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	3, 0, 4, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 2, 3, 1, 4, 2, 3,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 8, 11, 5, 4, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	2, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 1, 2, 3, 0,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 2, 1, 2, 3, 2, 2,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 15, 17, 3, 1, 0, 4, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 7, 10, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 3, 0, 1, 3, 0, 3, 1, 3, 1,
	2, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 663, -3, -220, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -219, -227, -228, -229, -230, -239, -221, -222,
	-4, -72, -74, -88, -109, -111, -124, -134, -133, -135,
	-143, -151, -146, -129, -79, -156, -160, -172, -223, -224,
	-225, 33, 32, 107, 85, 166, 138, 148, 219, 418,
	470, 482, 435, 153, 458, 440, -166, -167, 504, -73,
	-86, -158, -157, 78, 139, 183, 322, 450, 53, 158,
	-7, -15, -33, -19, 30, 49, -75, -76, -77, -78,
	67, -95, -90, -104, -96, -89, -92, -93, -722, 110,
	-636, -112, -116, -150, -114, -726, 174, 240, -136, -137,
	-138, 400, -144, -145, 461, -147, -148, -149, 464, 175,
	-81, -80, 168, -263, -265, -163, -162, -164, -226, -173,
	-174, -175, -176, -177, -178, -180, -181, -183, -210, -184,
	-185, -186, -187, -188, -189, -193, -213, -190, -191, -192,
	-195, -194, -196, -201, -197, -198, -199, -200, -202, -203,
	-205, -206, -207, -208, -209, -211, -212, 510, -204, -214,
	-182, -215, 578, 527, 87, 474, 21, -8, -9, -10,
	-11, -12, -13, -14, -18, -17, -66, -5, -6, -20,
	-97, -91, -94, -98, -99, -100, -108, -101, -102, -103,
	-635, -113, -115, -118, -120, -121, -117, -119, -122, 459,
	634, -266, -264, 660, 639, 594, -179, -23, -28, -24,
	-25, -27, -29, -26, -30, -31, -32, -51, -56, -53,
	-54, -52, -55, -57, -58, -59, -60, -61, -62, -63,
	-64, -65, -35, -41, -42, -36, -37, -38, -39, -40,
	-43, -44, -45, -46, -47, -48, -49, -50, -21, -22,
	-34, -67, -68, -70, -69, -71, 621, 630, -269, -267,
	-268, -276, 496, 602, 550, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, -372, 2, -348, -354, -355, -356, -347,
	-317, -603, -608, 4, -600, -606, 182, 250, 360, 21,
	22, 24, 23, 25, 26, 27, 28, 30, 31, 41,
	43, 44, 45, 47, 48, 49, 50, 51, 52, 53,
	57, 59, 63, 64, 65, 66, 67, 68, 69, 73,
	78, 79, 84, 85, 86, 87, 88, 89, 90, 91,
	97, 94, 95, 96, 98, 99, 101, 103, 104, 105,
	106, 107, 108, 109, 111, 112, 113, 115, 116, 117,
	125, 126, 127, 128, 129, 131, 138, 132, 139, 142,
	136, 141, 137, 143, 144, 146, 147, 148, 151, 152,
	153, 155, 156, 157, 159, 160, 161, 163, 164, 166,
	167, 168, 171, 169, 172, 170, 173, 174, 175, 176,
	177, 180, 188, 189, 190, 195, 197, 198, 199, 201,
	202, 205, 206, 207, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 220, 224, 226, 227, 228, 229, 230,
	231, 232, 238, 239, 240, 242, 243, 244, 245, 246,
	251, 252, 253, 257, 259, 265, 266, 271, 267, 272,
	273, 275, 279, 280, 281, 282, 283, 284, 285, 287,
	289, 288, 293, 291, 295, 296, 299, 300, 301, 302,
	303, 304, 308, 309, 305, 310, 311, 313, 314, 317,
	315, 318, 319, 316, 320, 323, 324, 325, 326, 327,
	328, 329, 330, 331, 332, 333, 334, 321, 322, 337,
	335, 339, 340, 341, 342, 343, 358, 353, 354, 355,
	347, 348, 344, 349, 345, 346, 350, 351, 357, 352,
	362, 363, 364, 365, 368, 236, 258, 370, 371, 374,
	376, 393, 379, 380, 381, 384, 385, 388, 391, 392,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
	405, 406, 408, 409, 410, 412, 413, 414, 416, 418,
	419, 421, 422, 423, 425, 426, 427, 428, 429, 430,
	431, 432, 434, 435, 437, 436, 438, 440, 442, 443,
	444, 450, 451, 458, 452, 454, 455, 456, 457, 459,
	460, 461, 462, 463, 464, 468, 466, 467, 469, 470,
	472, 473, 474, 475, 476, 478, 480, 481, 485, 486,
	489, 487, 507, 508, 530, 482, 483, 484, 488, 490,
	491, 492, 493, 495, 494, 499, 497, 498, 500, 501,
	502, 504, 506, 509, 510, 512, 513, 514, 515, 516,
	517, 518, 521, 523, 524, 525, 526, 527, 528, 549,
	529, 531, 535, 536, 537, 538, 532, 533, 548, 540,
	541, 542, 543, 545, 546, 551, 552, 553, 554, 555,
	556, 558, 559, 561, 569, 582, 570, 571, 572, 573,
	575, 578, 579, 580, 581, 567, 583, 584, 587, 588,
	592, 589, 593, 590, 591, 594, 596, 599, 600, 601,
	608, 606, 607, 609, 610, 612, 613, 611, 615, 616,
	617, 622, 623, 625, 626, 627, 37, 54, 55, 58,
	60, 62, 74, 75, 76, 80, 133, 134, 165, 178,
	179, 191, 208, 209, 221, 223, 233, 234, 235, 256,
	260, 261, 263, 269, 292, 367, 369, 386, 390, 407,
	411, 415, 417, 433, 477, 505, 519, 534, 539, 562,
	563, 564, 565, 574, 576, 602, 603, 604, 614, 624,
	-372, 2, -348, 377, -341, 2, -317, -317, 418, 29,
	2, 29, 406, 498, 553, 555, 2, -665, -417, 546,
	2, 29, -320, -317, 110, 219, 496, -341, 2, -665,
	219, -417, 26, 546, 2, -317, 2, 391, 177, 205,
	23, 28, 71, 82, 105, 151, 176, 200, -725, 393,
	426, 480, 500, 548, 559, 575, 2, 607, 314, 497,
	550, 250, 128, 580, 488, -676, 485, 486, 391, 424,
	472, 222, 595, -321, 2, 482, -317, 314, 2, 663,
	101, 79, 477, 501, -169, 2, 304, 570, -170, -171,
	-168, 562, -587, 488, 472, 337, -317, 663, 663, 663,
	29, -330, 2, -317, -330, 2, -231, 2, -330, -728,
	-238, -237, -236, 22, 451, 190, 285, 203, 241, 342,
	421, 201, 51, -231, 2, 550, 250, 488, 128, 546,
	-739, 2, 570, -739, 2, 663, 663, 2, 550, 397,
	607, 497, 128, 430, 250, 580, 49, 151, 28, 205,
	73, 556, 638, 488, -676, 635, 636, 314, 135, -658,
	2, -657, 4, -606, -600, -366, -365, 550, 556, 128,
	-356, -347, 652, -355, 663, 663, 663, 663, 2, 272,
	273, 428, 427, 501, 502, 29, 663, 663, 663, 663,
	663, 485, 177, 2, 176, -690, 23, 28, 71, 100,
	105, 135, 200, 393, 426, 500, 548, 552, 559, 575,
	-675, 529, 73, 488, -674, -676, 382, 314, 580, 151,
	-470, 128, 304, 217, 588, 555, 553, 586, 142, 259,
	591, 590, 663, 663, 663, -127, 2, 660, 33, 32,
	-126, -130, 153, 504, -256, 550, 264, 2, -317, 663,
	663, 663, 2, 272, 273, 485, 486, 29, 663, 663,
	203, -657, 546, 2, 663, 663, 663, 2, 29, 272,
	273, 485, 486, 264, 2, 73, 491, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 2, -217, 501, 529, 229,
	50, 49, 79, 29, 425, 84, 398, 129, 135, 160,
	581, 220, 250, 251, 280, 100, 101, -472, 47, 273,
	73, 272, 486, -681, 485, -533, 551, 490, 498, 545,
	91, 285, 482, 570, 572, 110, 596, 473, 627, 430,
	431, 543, 444, 540, 305, 169, 204, 4, 128, 337,
	472, 503, 289, 288, 582, 562, 304, 481, 401, 89,
	663, -737, 2, 550, 570, 2, -739, 2, -739, 2,
	-740, 570, 624, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, 663, 663, 663, 663, 663, 663,
	663, 663, 663, 663, -264, -266, -265, 663, 663, 663,
	663, 663, 663, 663, -217, 501, 2, 79, 29, 29,
	-410, -412, 585, 262, 162, 383, -263, -265, 2, -635,
	582, 501, -585, 2, -505, -609, -507, 650, 651, 643,
	547, 72, -376, 359, 628, -519, 135, 586, 377, -608,
	-508, -521, 165, 393, 477, -434, 8, 9, 5, 6,
	7, -326, -509, -515, 577, 181, 366, -369, 664, 10,
	660, -632, -265, -520, 38, 223, 70, -589, -368, -327,
	-561, 263, -367, -347, -629, -630, 4, -600, -601, -590,
	-564, -572, -568, -569, -575, -317, -603, 82, 119, 120,
	118, 123, 122, 307, 306, 124, 121, 503, 595, 71,
	37, 233, 234, 269, 367, 235, 80, -631, 152, -602,
	260, 261, 519, 55, 433, 191, 134, 133, 369, 60,
	58, 603, -573, 130, 562, 563, 564, 565, 208, 209,
	62, 178, 179, 390, 415, 539, 574, 576, 221, 292,
	46, 114, 204, 255, 237, 268, 270, 274, 294, 297,
	338, 356, 361, 387, 389, 471, 511, -743, 604, 534,
	74, 75, 196, -637, 436, -638, -341, -637, 663, 663,
	665, 663, -401, -403, -405, 2, 29, 149, 660, 2,
	-538, 2, -539, -543, -265, 286, -542, 660, -540, 658,
	-348, 378, -633, 478, -629, -630, -326, -347, -368, 4,
	-600, -602, 662, -406, 660, 128, 488, 550, 83, 250,
	100, 176, 205, -465, 660, -317, 29, 377, 566, 665,
	-665, -417, -402, 423, -517, 660, 377, 380, 203, 380,
	-665, 64, 98, -715, 233, 2, -714, -354, 318, 2,
	2, 2, 2, 2, 233, -317, 550, 127, 284, 2,
	2, 2, 2, 2, 2, 2, -426, 233, 2, -424,
	-354, 607, -427, 233, 2, -424, -425, 233, 2, -424,
	-471, 2, 93, -331, 233, 2, -317, -357, 233, 2,
	-352, -354, -363, 233, 2, -360, -317, -595, 233, 2,
	-593, 4, -600, 124, 503, -505, 2, -156, 2, 64,
	-317, 607, 2, 507, 2, 660, -169, 2, 76, 570,
	46, 501, -170, 2, -491, 2, -492, -313, -314, -315,
	-550, -316, 271, 422, 432, 631, 140, 359, 627, -717,
	203, 642, 566, -585, -585, -585, -435, 662, -233, 57,
	-330, -729, -728, -729, -583, 29, -578, 8, -579, 650,
	651, -583, -583, -729, -729, 2, 2, 2, 2, 2,
	-490, -491, 2, -543, 233, -348, 2, -345, -588, 4,
	-600, -606, -601, -607, -603, 29, 32, 33, 34, 36,
	38, 39, 40, 42, 61, 70, 71, 77, 81, 83,
	93, 100, 110, 118, 119, 121, 120, 122, 123, 124,
	135, 140, 145, 149, 150, 154, 158, 162, 181, 183,
	196, 200, 203, 219, 222, 225, 241, 254, 262, 264,
	286, 290, 298, 306, 307, 359, 366, 372, 377, 378,
	382, 383, 404, 420, 439, 465, 496, 503, 522, 544,
	550, 560, 566, 568, 577, 585, 586, 595, 597, 605,
	618, 619, 620, 621, -608, 82, 2, -543, 233, 2,
	-351, 233, -543, -354, 2, -331, 2, -505, -669, 558,
	172, 452, 2, -373, 233, -348, -350, -354, -352, 2,
	485, -597, 2, -592, 10, -591, 5, 4, -600, -606,
	-601, 2, 2, -714, -505, 2, -508, 2, -519, 29,
	-360, 2, -593, 233, 2, 29, 29, 607, 423, 264,
	566, 665, -423, -365, -366, -584, 4, 8, -416, -317,
	662, -505, 2, -156, -139, 2, 196, -505, 233, 2,
	-156, 233, 2, -505, 233, 2, -156, 233, 2, -317,
	2, -677, 2, -716, -597, 233, 98, 233, -317, 2,
	205, -724, 480, 579, 318, 2, 2, 575, 2, 105,
	550, 127, 2, 2, 2, 2, 2, 2, 2, 550,
	-336, 2, -317, 196, -552, 264, -360, 233, -361, 2,
	497, -738, 436, -593, 233, 2, 456, 607, -352, 233,
	2, -352, 250, 266, -331, 233, 2, 555, 553, 555,
	553, 203, 2, 264, 2, 264, 2, -544, 2, -545,
	-539, -546, 658, 378, -555, 2, -554, -591, 602, -127,
	660, -127, 660, 501, 660, -597, -348, -348, -505, 2,
	-156, -139, 2, -505, 2, -156, 2, -317, 2, -153,
	-597, -152, 660, 203, 596, -317, 2, -505, 2, -156,
	-139, 2, -505, 2, -156, 2, -256, 196, 2, 128,
	550, -217, 2, 196, 597, 2, 8, 2, 241, -252,
	-597, 490, 188, 431, 600, 2, 507, 2, 508, 79,
	-472, 627, 79, 203, 2, 203, 2, -455, 2, 621,
	423, 203, 2, 2, -663, 2, 377, 203, 2, 203,
	2, 203, 2, 203, 2, 203, 2, -216, 502, 571,
	549, 427, 273, 2, -156, 618, -139, 273, 272, -505,
	618, 2, -682, 196, 486, -505, 2, 569, 282, 170,
	203, -455, 2, 203, 2, 203, 2, 5, 2, 43,
	428, 530, 2, 271, 422, 530, 2, 528, 2, -348,
	550, 607, 497, 128, 205, 29, 2, 485, 177, 2,
	2, 94, 95, 203, 2, 203, 2, 218, 203, 2,
	444, 203, 550, -436, 662, -436, 627, 2, -447, -543,
	-490, 566, -410, -412, -217, 507, 2, -270, -445, -272,
	196, -477, -478, -273, 298, 183, 372, -274, -454, 29,
	149, -454, -454, 64, 661, 661, -717, 582, 11, 12,
	81, 43, 650, 651, 652, 653, 194, 654, 655, 648,
	649, 647, 640, 641, 645, 277, 278, 102, 644, 642,
	92, 312, 479, 184, 185, 186, 187, 453, 248, 35,
	249, 14, 15, 16, -376, 34, 382, 297, 628, 237,
	511, 643, 17, 18, 19, 268, 270, 361, 54, 241,
	-325, 393, -375, 547, 72, -505, -505, -505, -505, -505,
	-505, -505, -505, 389, 660, -441, -500, 658, -265, 660,
	660, 660, 660, -584, -265, -505, -519, 661, -432, 660,
	-265, -519, -514, 660, 477, 658, 660, -522, -505, 5,
	5, 5, 660, 662, -640, 622, 196, 660, 660, 660,
	660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
	660, 660, 660, 417, -566, 660, -565, 660, -565, -565,
	608, -563, 660, 630, 623, 660, -563, 660, 660, 660,
	660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
	608, 556, 665, -637, -486, 660, 660, -437, -548, -505,
	652, -437, -437, 377, -429, -505, 114, -458, 274, 338,
	204, 294, 471, 255, -502, 664, -502, -532, 630, -265,
	-540, -347, -265, -542, 660, -538, -532, -128, -584, -109,
	-124, -133, -156, -172, -224, -225, 652, -348, 660, 203,
	660, 662, -588, 203, -416, -331, -360, -348, -367, -368,
	-373, -342, -317, 2, 2, 148, -429, -659, 580, 488,
	29, 4, -606, -600, -366, 497, -365, 550, 128, 177,
	205, -595, -320, 566, 39, -516, -558, -559, -611, 664,
	-610, -561, -571, -567, -570, 407, 411, -590, 58, 603,
	-573, 263, 4, -600, -602, 260, 261, 519, 55, 433,
	191, 134, 133, 369, 60, 562, 563, 564, 565, 208,
	209, 62, 604, 534, 74, 75, -659, 580, 488, 29,
	497, 196, -595, 196, 203, -595, 2, -597, 2, -293,
	665, 69, 462, 165, -697, 660, 2, 165, 2, 2,
	2, -317, -293, 165, 665, -426, 233, -293, 165, -293,
	165, -374, 233, -373, -293, 165, -293, 665, 165, -293,
	665, 165, 662, 665, 165, -595, 2, -471, -587, -429,
	39, -491, 2, 135, 4, 5, -741, 665, 296, -379,
	311, 358, 228, 378, 625, 370, 140, -596, 5, 4,
	-515, -527, 135, 304, 263, -578, -580, 9, -581, 650,
	651, -586, -585, 117, 662, -588, -234, 258, 41, -330,
	-330, -729, -729, 8, 8, -729, -729, -330, -330, -290,
	454, 504, 392, -289, 25, 30, 153, 252, 343, 600,
	171, -391, 253, 459, -388, 397, 165, 523, 589, -669,
	-672, 484, 558, 172, 452, 96, 370, 504, 392, 454,
	165, -451, -453, 39, 126, 343, 391, 65, 244, 316,
	317, 527, 460, 614, 165, 504, 392, 454, 392, -16,
	-306, 25, 153, -308, -301, 504, 30, -672, 106, 454,
	639, 634, 459, 403, 542, 420, -672, -669, 291, -671,
	617, 357, -292, 523, 589, -669, -476, -672, 484, 454,
	-291, 359, 615, -393, -388, 397, 165, 664, 25, 153,
	454, 504, 392, -720, -721, 30, -584, 2, -288, 241,
	-287, 25, -705, 454, 504, 392, -692, -707, 343, 66,
	467, 533, 239, 526, 616, 177, 495, 293, 359, 108,
	478, 541, 394, -283, -282, 25, 153, 504, 592, -165,
	-145, -164, 459, 504, -165, 2, 454, 392, -666, -338,
	-634, 241, 621, 165, -338, -338, -543, 233, -686, 196,
	2, -679, -152, 287, 5, 10, -597, -152, -423, 665,
	665, -588, 652, 486, 485, 165, 165, 165, 165, 273,
	196, 359, -716, 2, 359, 621, -709, -354, -725, 2,
	2, 2, 2, 2, 2, 2, -348, 233, -408, 377,
	-655, -656, -727, 550, -243, 621, -597, 359, 46, -351,
	233, 2, -354, 607, -666, 359, -674, -353, 233, -348,
	39, 660, 359, 2, -471, 2, 250, -634, 359, -544,
	-370, -348, -539, -370, 504, -341, 39, -502, -348, 661,
	665, -555, -555, -597, -243, 203, 660, -256, 621, 621,
	273, -551, 665, -550, 241, -598, -597, -153, -597, 457,
	203, 273, -597, -655, -331, 2, -348, 2, 550, 275,
	-152, 203, 241, -243, -597, -597, -597, -597, -587, 29,
	508, 2, -216, 502, 571, 95, 508, 2, -348, 550,
	128, 250, 85, -686, 196, 2, -317, -664, 196, -660,
	472, 488, 580, -659, -348, 128, -348, 128, -348, 128,
	-348, -348, 2, 2, 2, 2, 2, 90, 2, -156,
	-505, 2, 90, 2, 49, 524, -682, 196, 2, 569,
	2, 569, 2, -317, -317, -317, 372, 529, 296, 621,
	-348, -348, -351, -349, -354, -354, 490, 551, 581, 486,
	177, -505, 2, 98, -730, 2, 203, 196, 2, 550,
	250, 550, 250, 128, 203, 79, 128, 29, 203, 550,
	483, 662, 4, -293, 665, -321, -270, -445, -587, -446,
	-445, -271, -270, -273, 196, 432, 590, 343, 509, 279,
	-478, -477, 29, -505, -482, 190, 342, -505, -480, -507,
	650, 651, -579, -581, -428, 370, -264, -264, -264, -413,
	-534, -505, 420, 250, -586, -717, -560, -558, -558, -346,
	-588, 562, -505, -505, -505, -505, -505, -505, -505, -505,
	-505, -505, -505, -505, -505, -505, -505, -505, -505, -505,
	-505, -505, -505, -505, -505, -505, -505, -505, -505, -505,
	-505, -505, -505, -505, -505, -505, -505, -505, 297, 237,
	511, 54, 241, -505, 566, -505, -505, -505, -505, 335,
	359, 366, 577, 181, 587, 149, 370, -744, 544, 42,
	-512, -265, -433, 660, -526, 36, 522, 29, -519, 660,
	2, -500, -505, -501, -377, -375, -317, 650, 651, 652,
	653, 654, 655, 640, 641, 642, 14, 15, 16, 645,
	649, 647, 648, 194, 102, 644, 312, 479, 92, 184,
	185, 186, 187, 277, 278, 17, 18, 19, 35, 643,
	-430, -429, -429, 661, 605, 29, 149, 652, 2, 661,
	665, 39, 661, -505, -430, -518, -514, -429, -525, -524,
	618, -466, -467, 626, 321, 131, 231, 319, -468, 493,
	-582, 8, -588, 652, -641, 189, 222, 660, 661, 2,
	661, 2, 661, -505, 2, 661, -505, 2, 661, -505,
	2, 661, -505, 2, 661, 2, 661, 2, -505, -505,
	-505, -505, -505, -505, -505, -429, 8, -582, -582, 562,
	562, -582, -582, -582, -574, 407, 408, 409, 410, 299,
	300, 301, 302, 411, 412, 413, 414, 327, 328, 329,
	330, 323, 324, 325, 326, 331, 332, 333, 334, 213,
	214, 215, 216, 209, 210, 211, 212, -574, -460, 2,
	-576, -429, 4, 626, 321, 131, 231, 319, 493, 5,
	-460, 2, -461, 2, -505, -429, -462, -506, -507, 650,
	651, 643, -376, -463, 2, -505, -430, -505, 61, 290,
	568, -464, -505, 203, -429, -429, 2, -429, 2, -508,
	2, -638, 39, -487, -317, -429, -419, 665, 203, 39,
	-605, 4, -604, 44, 66, 108, 137, 144, 177, 239,
	257, 267, 293, 394, 466, 467, 495, 526, 541, 573,
	616, 505, -419, -419, 660, 661, 665, -459, 226, 315,
	310, 266, -459, -538, -458, 274, -456, 387, -456, -456,
	-532, -332, 658, 667, -588, -532, -529, -528, 39, -341,
	384, -532, -532, 662, 661, -531, -530, 39, -341, 659,
	-653, 660, 663, 663, 663, 663, 663, -348, 660, -429,
	-588, 662, 531, 2, 661, 268, 268, 268, 268, 268,
	377, 478, 661, 566, -661, -357, -363, 498, 551, 206,
	-423, 665, -423, -416, 98, -715, 621, -595, -126, 379,
	661, 665, -418, 38, 658, 662, -582, 2, 2, -577,
	608, 660, 660, -467, 660, 203, -661, -363, 551, 498,
	206, 2, -665, 546, -417, -595, 566, -714, -715, -698,
	661, -700, -708, -693, -702, 241, 386, 256, 605, -589,
	-558, 4, -600, -317, 2, -426, -354, -293, 165, -427,
	-425, -293, 665, 165, -331, -352, -357, -360, -363, -317,
	-593, -595, -293, -353, -717, 661, 570, -492, -378, 432,
	521, 455, 499, 546, 9, 9, 665, -588, -235, 487,
	343, -330, -330, -330, -330, 665, -718, 100, 566, 83,
	660, 488, -310, 305, 566, -496, 233, 83, -612, 100,
	-334, -613, -317, 77, 586, 420, 200, 163, -718, 100,
	420, -718, 100, 2, 252, 100, 504, 529, 660, 29,
	64, -543, 43, 43, 29, -670, -671, 291, 203, 627,
	550, 250, 488, 566, 566, -543, -453, -558, 126, 316,
	317, 64, -583, -583, 64, -583, -583, -583, 621, -583,
	621, -351, -543, 488, 566, 566, 566, 442, 540, 442,
	540, 494, -301, -303, -170, 494, 540, 305, 566, 566,
	-170, 29, -217, 463, 135, -742, 642, 442, 291, -671,
	566, 203, 665, 43, 43, 29, -670, 203, 566, 615,
	-373, -332, 601, 45, 601, 45, 601, 566, 45, 488,
	566, 665, 45, -285, -284, 504, -287, -597, -286, 341,
	-723, -707, 462, 504, 566, 488, 566, 144, 377, 366,
	495, 137, 267, 293, -527, -527, -317, -282, -655, -655,
	-242, -241, -317, 5, -416, 79, 566, 566, -16, 504,
	-667, -322, 113, 349, 309, 350, 104, 346, 103, 345,
	111, 347, 112, 348, 609, 362, 610, 363, 68, 344,
	320, 351, 525, 352, 613, 364, -323, -324, 156, 399,
	599, 128, -593, -16, -16, 504, 392, 454, 165, -687,
	241, 29, -676, 241, -551, 241, -551, -365, -317, 662,
	-156, -505, -505, -156, -505, -156, 49, 165, 39, 165,
	2, 660, 284, 660, -382, 359, 203, -416, -552, 665,
	-348, 39, -242, 381, 165, -593, -452, -451, 359, -353,
	233, 2, 165, -738, -406, 359, 159, 660, 430, 2,
	165, -333, 233, -318, -317, -471, -295, 554, 165, -449,
	597, -483, -156, 660, 135, 39, -483, -438, -439, -549,
	-440, -334, 660, -341, -502, -127, -554, 661, 661, 661,
	-256, -407, -335, -334, 127, 434, 434, -249, 621, -152,
	-153, 661, 665, -551, 241, 532, -153, -597, -243, -243,
	-551, -551, -348, 196, -597, -152, -243, -243, -243, -243,
	2, 2, 2, 2, -455, -348, -331, -373, -348, -359,
	241, 29, 662, -595, -595, -363, -364, -362, -317, -357,
	-455, -331, -455, -331, -455, -331, -455, -455, -156, -505,
	529, 2, 501, 196, 196, 662, -455, 8, -409, 465,
	5, 2, 99, -597, 2, 430, 128, 550, 397, 250,
	-348, -373, -348, -373, -331, 128, -331, 129, 128, -348,
	4, -543, -446, -271, 378, 279, 509, -480, -481, -507,
	477, 478, -481, 477, 478, 8, 9, 8, 9, -275,
	513, 365, -425, 665, -280, 40, 145, 279, -348, -586,
	627, 161, -505, -505, 566, -744, 544, -512, 161, -505,
	335, 366, 577, 181, 587, 149, 370, 203, 660, -506,
	-506, 661, -431, -505, -505, 659, 669, 661, 662, 661,
	-412, 665, -410, -505, -429, -429, 661, 662, -429, -416,
	659, 659, 665, 661, -523, -524, 154, -505, 566, 566,
	566, 566, 660, 661, 662, -646, 388, 660, 660, -505,
	661, 661, 661, 661, 39, 665, 665, 665, 661, 665,
	665, 665, 661, 661, 661, 665, 661, 627, 627, 661,
	661, 661, 661, 665, 661, 665, 661, 203, 661, 661,
	-469, 404, 661, 11, 12, 650, 651, 652, 653, 194,
	654, 655, 648, 649, 647, 640, 641, 642, 92, 312,
	479, 14, 15, 16, -376, 268, 241, -506, -506, -506,
	-506, 661, -510, -511, 203, 196, 39, -464, -464, -464,
	661, 203, -429, 661, 661, 660, -639, 314, 359, 661,
	665, 661, -499, -498, 619, -548, -420, 2, -538, -343,
	-588, -499, -499, -429, -505, 274, 274, -457, 597, 377,
	-459, -538, -529, -584, -504, -503, 198, 40, 145, 353,
	354, 355, 236, 199, -529, -341, -486, -529, -529, -588,
	-532, -341, -484, 660, -532, -528, 661, -654, -584, 661,
	-421, -541, -633, -412, 662, -588, -253, -634, -218, 5,
	366, -218, -218, -218, -218, -348, -595, 566, 566, 241,
	241, 241, -423, -416, 26, -685, 621, 405, -558, 658,
	659, 8, -588, 660, -582, -582, -582, -595, 203, 203,
	241, 241, 241, 377, -665, 203, -593, -293, 661, 665,
	-693, -702, -708, -702, 386, 2, -293, -426, -293, -293,
	-373, -374, -293, -293, -293, -450, 621, -585, -491, 584,
	88, 432, 562, -585, 125, 487, -289, 454, 504, -334,
	-334, -348, -260, -259, -257, -317, 5, -358, -317, 217,
	443, -593, 359, -496, 233, -294, 359, 233, -342, -558,
	660, -473, 623, 279, 279, 597, -334, -342, 279, 233,
	-334, 233, -342, 2, -342, -668, 432, 371, -505, -258,
	-257, 64, -389, 303, 430, 360, -290, 454, 504, 392,
	-156, -156, -156, 660, -717, 597, 148, -348, -373, -348,
	-358, -593, -353, 504, 392, 454, 356, -367, -583, -583,
	-583, -451, 504, 392, 454, -358, -593, -351, -593, -300,
	233, -317, 442, -300, 233, 442, 442, 442, 442, 217,
	443, 488, -331, 442, 627, 48, -742, 566, 203, -505,
	-505, -291, -156, -156, -156, 660, -332, -292, -476, 454,
	5, 233, -334, 5, -334, 233, 5, -317, -334, -358,
	-593, -721, 25, 153, -334, 665, 283, 264, 621, -678,
	204, 485, 437, -288, 642, -317, -358, -593, 377, 366,
	377, 137, 267, -243, 665, 642, 642, -358, -593, -322,
	399, -679, 366, 5, 10, 593, -331, -666, -338, 488,
	566, 566, -543, -683, -684, 219, 470, 488, 473, -595,
	-152, -246, 621, -152, -240, 245, 652, -658, -597, -597,
	-317, -695, -696, -699, -700, -317, -380, -383, -381, -334,
	-497, -496, -616, -617, -612, 297, 250, 586, 266, 182,
	100, -261, -262, 623, 621, 165, -371, -348, 658, -243,
	-656, -553, 182, 496, 660, -360, -361, 165, -406, 359,
	-593, 607, 39, 165, 660, 2, 2, -352, 377, 359,
	-333, 233, -296, 155, -742, -331, -499, -420, -448, -489,
	465, 377, -407, 602, -341, -448, -422, 665, 203, 642,
	662, -407, -547, 652, -127, -127, -243, 660, -597, 661,
	665, 662, 660, 642, 642, -251, 381, -250, 157, 281,
	265, 515, 516, 517, 518, 147, 514, 132, 340, 246,
	556, 489, 606, -551, -597, -249, -153, 203, -551, 241,
	203, -82, 621, -243, 550, 241, -243, 664, 488, 473,
	-317, 662, -455, -455, -455, 501, 501, -317, 196, -416,
	2, -344, -588, -331, -348, -345, -373, 196, 196, -331,
	-331, 590, -481, 378, 308, -534, -281, 629, -348, 664,
	-505, -505, 161, 161, -505, -506, -506, -505, 161, 203,
	660, -505, -516, 34, 34, 661, 665, -501, -505, -375,
	661, 605, -412, -412, 661, 652, -588, 664, 661, -514,
	158, -505, 560, 321, 231, 319, -468, 319, -468, -468,
	-582, 5, -588, 652, -647, -337, 660, -317, 619, -411,
	383, 661, -560, -558, -505, -505, -505, -505, -505, -582,
	-563, -563, -578, -578, -505, -510, -505, -560, -558, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, -506,
	-506, -506, -506, -506, -506, -506, -506, -506, -506, 149,
	359, 370, -506, -511, -510, -505, -505, -558, 661, 661,
	661, -429, -126, 660, 314, -317, -442, 222, -505, -551,
	665, -442, -442, 661, -538, -538, 660, -505, 274, 659,
	665, 668, 642, 642, -486, 662, -528, -484, -485, -488,
	-317, -529, 659, 661, 665, 661, 665, -531, 661, -588,
	-499, -255, -254, 146, 57, 115, 143, 366, 374, 202,
	227, 429, 161, 197, 155, 268, -685, -595, -595, 488,
	488, 488, 380, 219, 5, 8, 658, 659, 662, -582,
	661, 661, 661, -595, -595, 488, 488, 488, -659, 580,
	488, 29, 203, -595, -700, -702, -702, -293, -293, 127,
	343, -505, -232, 621, 623, 566, 566, 661, 665, 642,
	64, 241, 165, 359, 599, 359, -613, 163, -618, -505,
	660, 250, 660, 660, 2, -277, -278, -279, 153, 504,
	25, -719, 2, 597, 165, -293, 165, -293, 625, 661,
	665, -389, 660, 660, 566, 488, -310, 566, 621, -429,
	-505, -244, 135, -587, -672, 664, -672, 664, 488, 566,
	566, 488, 566, 566, 359, -317, 165, -317, 233, -742,
	-317, -672, -672, 241, 621, 180, 180, 627, -300, -505,
	-505, 196, 566, 621, -429, 566, -562, 52, 27, 359,
	-352, -293, 165, 566, 566, 580, 504, -284, -597, -152,
	-247, 157, 469, 147, 281, 246, 49, 380, -679, -152,
	176, 257, 366, -241, -597, -597, -679, -597, 366, -16,
	-358, -593, -353, 504, 392, 454, -665, -665, 219, -363,
	-687, -551, -248, 381, -247, -551, -246, 203, 264, 621,
	661, 665, 135, 642, 2, 661, 661, 665, 665, -619,
	-294, -348, -333, 250, 250, -340, -318, 39, 374, 374,
	660, -348, -105, 621, -550, -584, -339, -317, -437, -242,
	46, -351, 39, 165, -666, -353, -156, -353, -556, -557,
	5, 39, -348, 165, 377, 359, -297, 289, -742, -592,
	-634, -412, -448, -437, 360, 97, 661, -499, -439, -420,
	-505, 2, 661, -597, -243, -256, -335, 2, -598, -597,
	-597, 665, 660, 642, 642, 642, 642, 642, 642, 642,
	-249, -551, -152, -249, -153, -156, 381, -348, -152, 652,
	-358, -359, 652, -455, 5, -395, -394, 397, 370, -395,
	477, 477, 378, 190, 285, -280, -332, -505, -505, 161,
	34, 34, -505, -505, -516, 661, -505, -505, -429, 659,
	5, -505, 661, 661, 8, -505, 661, 662, -648, -317,
	-505, 661, 64, 661, 661, 665, 665, 661, 661, 661,
	661, 661, 661, 661, -511, 203, 149, 370, 660, 661,
	661, -126, -513, 225, 64, -538, -513, -513, -457, -416,
	-538, -503, -332, 658, -332, 658, -588, 661, 665, -558,
	-584, -541, 662, -254, 642, -597, -597, 2, 2, 5,
	5, 429, 359, 366, 5, -218, -685, -685, 621, -363,
	-363, -363, 380, 659, 2, 658, -588, 661, -363, -363,
	-363, 203, -661, -363, 551, 206, -595, 127, 196, 230,
	230, -334, -334, -259, -585, 550, 477, -300, 420, -496,
	165, 165, -620, 100, -622, 81, 182, 110, 359, 366,
	586, 420, 77, 135, 377, 439, -732, -733, -734, 39,
	632, 633, 661, -414, -535, -633, 660, -317, -414, -416,
	359, 537, 135, 377, 359, 135, 377, 615, 127, 2,
	580, 84, -334, -342, -257, -416, -416, -348, -358, -593,
	173, 661, 665, 642, 2, 652, 652, -358, -593, -353,
	-358, -593, -351, 165, 602, -300, 165, -300, 602, -300,
	395, 180, 566, -156, -505, 173, 661, -332, 5, 5,
	165, -329, 81, -334, 5, -334, -352, 127, 642, 642,
	642, 642, 642, 31, -679, -241, 621, -317, 257, 488,
	566, 566, 377, 377, 380, -683, -684, -246, 665, 660,
	-246, -598, -152, 2, 467, -699, -505, -505, -396, 252,
	-334, -617, -614, -615, 420, -497, -621, -623, 182, 420,
	-384, 660, -333, -318, 660, -156, 2, -260, 660, -382,
	381, 659, 203, 661, -593, -452, -156, -353, -406, -404,
	621, -406, 661, 665, 159, -474, 597, -332, -348, 165,
	-298, 288, -742, -592, -295, -479, -477, 150, 660, 377,
	-156, -412, 642, 661, 127, 661, -250, -251, -597, -152,
	-597, -597, -597, -152, -597, -249, -689, 39, -551, -83,
	-84, 250, 100, 402, -243, -243, -345, 550, 250, 660,
	660, -280, -505, -505, -505, 661, -412, -588, 652, -642,
	397, 661, -534, -505, -505, -506, 203, 660, -516, 661,
	-643, 620, -505, -443, -444, -505, 475, 116, 223, -643,
	-643, 661, -584, -584, -488, -597, 2, 2, 366, 2,
	2, 2, 566, 566, 566, 658, 2, 203, 203, 203,
	-595, 203, 203, 241, 241, -156, 241, 39, 442, -496,
	-342, -342, -346, -339, 182, 233, 366, 615, -473, 279,
	660, -506, 590, -348, 660, 2, 232, 232, 31, 64,
	-735, 140, 254, 661, 665, -536, -328, -317, -505, -536,
	661, 661, 366, 590, 366, 615, -505, 590, -558, 660,
	-293, -293, 661, 661, -505, 566, -587, 107, -585, 2,
	-672, -300, -416, -416, -672, -331, -505, 196, -505, 566,
	5, -293, -346, -293, -293, -329, 580, -597, -505, 577,
	181, -152, -152, 376, -358, -593, -353, -688, 551, 498,
	581, 490, 206, 476, -688, 196, -247, -248, -246, -691,
	505, -390, -391, 2, -619, 279, -339, 279, 243, 164,
	-414, 660, 660, -416, -731, 621, 661, -380, -261, -106,
	-107, 567, -550, -662, -370, -406, 39, 343, 127, 39,
	5, 660, 660, -317, 377, 660, -332, -312, 98, -742,
	-592, -296, -448, 360, -416, 100, -479, -512, -243, 660,
	-243, 661, 556, -249, 665, 29, 660, 29, 660, -348,
	-373, -429, -429, 661, -412, 64, 665, 661, 661, -506,
	-516, 661, -644, -645, -337, 665, 660, 660, 506, 659,
	659, 2, -595, -595, -595, 2, -595, -595, -595, -595,
	-595, 488, 488, -300, 420, -317, -613, -622, -339, 359,
	-262, 597, 621, -505, -506, -319, 660, -505, 660, 660,
	39, 135, 254, 141, 238, -495, -736, 109, 538, 242,
	-535, -280, 661, -494, 597, 439, -506, -329, -414, 660,
	660, 660, 642, 203, -156, 660, -562, -293, -352, 642,
	566, 2, 203, -665, 661, -678, -701, -702, -261, 660,
	-262, -385, 86, 101, 136, 232, 207, 251, 529, 535,
	29, -385, 661, -414, -414, 661, -386, 377, 127, 343,
	661, 39, -107, 9, -499, 39, -156, 127, -156, -556,
	-414, -348, -414, 377, -302, -301, 298, -592, -297, 661,
	-342, -448, -598, -584, 4, -84, -416, -416, 661, 661,
	-649, 430, 478, 224, -429, -413, 661, 665, 39, -444,
	2, 2, 2, -685, -685, -685, -363, -363, 442, -294,
	165, 226, 661, -624, 313, -317, 661, -452, -452, 39,
	141, 238, -392, -388, 660, -281, -536, -262, 226, -348,
	-673, 597, 661, -398, -397, -394, -400, -399, -394, -429,
	-585, 107, 395, -429, -329, -152, -595, -595, 377, -680,
	204, -703, -704, -706, 39, 284, 573, 620, -707, -386,
	-415, -537, -334, -494, 661, 661, 87, 127, -396, -156,
	-156, 2, -404, 661, 661, -474, 661, -348, -299, -599,
	442, 444, -742, -298, -499, 150, 661, 661, 661, 661,
	-650, -651, 54, 583, 117, -505, -650, -650, -645, -647,
	203, 203, 182, -493, 630, -625, -628, -627, 637, 512,
	204, 396, 661, 537, 614, 661, 661, -735, -416, -493,
	-406, -505, -494, 661, 665, 602, 661, 665, 602, 661,
	203, 661, -293, -685, -293, -688, -245, 621, 49, -713,
	-710, 53, 466, -706, -694, 5, -592, -311, -310, 661,
	665, -495, -494, -392, 419, 142, 153, -390, -731, -494,
	660, -495, 660, -309, -308, -742, -578, -312, 150, 360,
	590, -243, -652, 163, -651, 416, 195, 477, 416, 195,
	-652, -652, -595, -595, -339, -262, 59, -627, 637, -628,
	637, 590, 142, -499, 661, -624, -262, -397, 241, -399,
	203, 395, 203, 485, -679, 31, 44, -505, -262, -537,
	-392, -495, -262, 478, 478, 2, -261, -386, -495, -414,
	-392, -414, -305, -306, -307, -416, -302, 360, 590, 504,
	117, 222, 561, 343, 34, 642, -626, 343, 462, 69,
	504, -626, -625, 660, 660, -595, 381, -712, -262, -392,
	-499, 2, -386, -392, 661, -262, 661, -594, 392, -299,
	504, -438, 477, 385, -651, -505, 24, 366, 135, -735,
	-429, -429, -293, -242, 660, -711, 158, -3, -710, -499,
	-262, -475, 359, 615, -311, -262, -494, -499, -495, -304,
	-303, 494, -742, -309, -438, -499, 661, 661, -242, 666,
	-475, -499, 615, -499, -495, -475, -392, -593, -305, -499,
	-387, -388, 566, 661, -475, -475, -392, -262, -304, 660,
	-262, -499, -429, -499, -475, 661, -475, -387,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1743, 1745,
	724, 725, 727, 728, 729, 731, 732, 734, 736, 738,
	739, 740, 742, 743, 745, 746, 747, 748, 749, 751,
	753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 847, 849, 0, 1725,
	1727, 1729, 1731, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 419, 421, 423, 425,
	0, 457, 459, 460, 462, 464, 465, 467, 469, -2,
	0, 651, 652, 654, 656, 658, -2, 0, 1301, 1303,
	1305, 0, 835, 837, 0, 1308, 1310, 1312, 0, 0,
	859, 860, 0, 1846, -2, 851, 853, 855, 857, 936,
	938, 940, 942, 944, 946, 948, 950, 952, 954, 956,
	957, 959, 961, 963, 965, 967, 968, 970, 972, 974,
	975, 977, 978, 980, 982, 984, 986, 988, 990, 992,
	994, 996, 998, 1000, 1002, 1004, 1006, -2, 1009, 1010,
	1011, 1013, -2, 0, -2, -2, 1739, 51, 53, 55,
	57, 59, 61, 63, 65, 67, 69, 71, 73, 75,
	76, 597, 599, 601, 603, 605, 608, 610, 612, 614,
	1904, 660, 662, 664, 666, 668, 670, 672, 674, 0,
	0, -2, 1918, 0, 0, 0, 1104, 78, 79, 80,
	81, 82, 83, 84, 85, 86, 87, 146, 147, 148,
	149, 150, 151, 152, 153, 91, 92, 93, 95, 96,
	97, 98, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 143, 144,
	89, 118, 119, 120, 121, 122, 0, 0, 1877, 1879,
	1881, 1883, -2, 0, 0, 8, 12, 14, 16, 18,
	20, 22, 24, 26, 28, 30, 32, 36, 38, 40,
	42, 1744, 1746, 726, 730, 733, 735, 737, 741, 744,
	750, 752, 754, 709, 710, 713, 2632, 2650, 2651, 2652,
	2655, 2656, 2657, 2658, 2659, 2660, 3193, 3274, 3275, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793,
	2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
	2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903,
	2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913,
	2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923,
	2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943,
	2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953,
	2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963,
	2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973,
	2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983,
	2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003,
	3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
	3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033,
	3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053,
	3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063,
	3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073,
	3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083,
	3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	3094, 3095, 3096, 3097, 3098, 3099, 3119, 3120, 3121, 3122,
	3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132,
	3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142,
	3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152,
	3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162,
	3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172,
	711, 712, 1495, 0, 793, 791, 2615, 794, 2943, 796,
	798, 645, 646, 647, 648, 649, 650, 0, 828, 3048,
	809, 1916, 829, 831, 832, 833, 834, 788, 786, 0,
	833, 828, 2688, 3048, 826, 1723, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 576,
	1558, 1559, 1560, 1708, 1709, 2999, 1754, 0, 283, 848,
	-2, -2, 3157, -2, 890, 891, -2, -2, 905, 909,
	900, 3162, 0, 3002, 2984, -2, 912, 1726, 1728, 1730,
	1014, 1015, 1016, 2636, 1020, 1018, 1030, 1031, 1034, 0,
	1051, -2, 0, 2684, 2966, -2, -2, 1052, 1053, -2,
	-2, -2, -2, 1032, 1033, 0, 0, 0, 0, 0,
	1756, 1748, 1751, 1749, 1750, 46, 48, 50, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 293, -2, -2, -2, -2, 0, 0, 3054, 2747,
	2583, 2652, 2586, 2581, 420, 422, 424, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 458, 461, 463, 466,
	468, -2, 0, 470, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1375, 1367, 1368, 1625, 0, 0,
	0, -2, 653, 655, 657, 714, 715, 0, 1905, 1905,
	722, 723, -2, 0, 0, 0, 0, 381, 372, 1302,
	1304, 1306, 1307, 0, 0, 0, 0, 0, 836, 838,
	0, 0, 3048, 344, 1309, 1311, 1313, 1314, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 852, 854, 856,
	858, 937, 939, 941, 943, 945, 947, 949, 951, 953,
	955, 958, 960, 962, 964, 966, 969, 971, 973, 976,
	979, 981, 983, 985, 987, 989, 991, 993, 995, 997,
	999, 1001, 1003, 1005, 1007, 1008, 1059, 0, 0, 0,
	0, -2, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 1173, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, -2, 0, 1270, 0, 0, 1062, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 0, 1146, 1171, 1172, 1182,
	1012, 0, 1538, 1906, 1756, 1733, 1734, 1735, 1740, 1742,
	1736, 1737, 1738, 52, 54, 56, 58, 60, 62, 64,
	66, 68, 70, 72, 74, 77, 598, 600, 602, 604,
	606, 609, 611, 613, -2, 1875, 1876, 661, 663, 665,
	667, 669, 671, 673, 839, 0, 842, 0, 1064, 841,
	-2, 0, 1910, 1910, 1910, 0, 0, 1876, 1874, 0,
	0, 0, 845, 846, 916, 917, 2195, 0, 0, 0,
	0, 0, 0, 0, 0, 2455, 2283, 0, 918, -2,
	2316, 2318, 3131, 2915, 3157, 2454, 2320, 2321, 2322, 2323,
	2324, 0, 2326, 2327, 2328, 2329, 2330, 2331, 0, 2333,
	0, 2338, 2339, 2340, 0, 3138, 2558, 2646, -2, 0,
	0, 3145, 2642, 0, 2421, 2356, -2, -2, 2669, 2648,
	2127, 2128, 2129, 2130, 2131, -2, -2, 3176, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 0,
	3119, 3139, 3140, 3146, 3148, 3141, 3128, 2381, 2763, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2154, 2163, -2, -2, -2, -2, -2, -2,
	-2, 3132, 3133, 3151, 3154, 3161, 3166, 3167, 3137, 3147,
	3175, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185,
	3186, 3187, 3188, 3189, 3190, 3191, 3192, 2155, -2, -2,
	-2, -2, 0, 1893, 2959, 1896, 2002, 1894, 1878, 1880,
	0, 1882, 0, 0, 0, 1887, 1913, 1911, 0, 1962,
	1891, 1892, 1985, 1985, 2017, 0, 1990, 0, 2017, 1905,
	2048, 0, 1996, 2989, 2357, 2358, 0, 2652, 2647, -2,
	-2, 3173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 795, 797, 0, 0, 0,
	0, 828, 827, 1915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 3139, 588, 538, 541, 0, 579,
	580, 581, 582, 583, 3139, 0, 0, 0, 0, 590,
	591, 592, 593, 594, 595, 596, 253, 3139, 679, 708,
	704, 0, 253, 3139, 682, 707, 253, 3139, 685, 706,
	0, 688, 1623, 253, 3139, 691, 2611, 253, 3139, 694,
	696, 2619, 253, 3139, 700, 2626, 2624, 701, 0, 703,
	273, 269, 270, 271, 272, 1719, 1720, 1721, 1722, 0,
	1753, 1624, 850, 0, 876, 0, 888, 889, 3127, -2,
	0, 3013, 893, 894, -2, 896, 1757, 1761, 1762, 1763,
	1764, 1765, 0, 0, 0, 0, 1770, 0, 0, 0,
	0, 883, 884, 903, 904, 910, 913, 0, 1023, 1019,
	1035, 0, 1050, 0, 1051, 1051, 2600, 2591, 2592, 0,
	0, 1051, 1051, 0, 0, 1054, 1055, 1056, 1057, 1058,
	1747, -2, 88, 0, 3139, 2048, 90, 0, 2605, 2678,
	2679, 2680, 2681, 2682, 3174, 3194, 3195, 3196, 3197, 3198,
	3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208,
	3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218,
	3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228,
	3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238,
	3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248,
	3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258,
	3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268,
	3269, 3270, 3271, 3272, 3273, 3176, 94, 0, 3139, 99,
	0, 3139, 0, -2, 123, 0, 145, 0, 173, -2,
	-2, -2, 154, 0, 3139, 0, 2580, -2, 0, 265,
	-2, 0, 779, 384, 385, 2665, 2666, 2674, 2675, 2676,
	2677, 373, 374, 556, 0, 770, 0, 879, 2455, 0,
	0, 1339, -2, 0, 1551, 1553, 1553, 0, -2, 0,
	0, 0, 1290, 2577, 2582, 1291, 1292, 2601, 1293, 2587,
	0, 428, 429, 430, 431, 432, 0, 433, 3139, 435,
	436, 0, 438, 439, 3139, 441, 442, 0, 444, 0,
	446, 0, 308, 325, 323, 3139, 0, 3139, 472, 475,
	0, 577, 0, 574, 0, 558, 559, 0, 561, 0,
	0, 0, 566, 567, 569, 570, 571, 572, 573, 0,
	618, 616, 2616, 636, 398, 0, -2, 3139, 0, 1336,
	0, 0, 1603, -2, 0, 1544, -2, 0, 1610, 3139,
	1606, 0, -2, 0, 1903, 3139, 1774, 1371, 1372, 1373,
	1374, 2060, 642, 0, 1810, 0, 1812, 0, 1832, 2054,
	1985, 0, 0, 2059, 0, -2, 767, 2635, -2, 717,
	0, 718, 0, -2, 0, 398, 0, 0, 1317, 1319,
	1320, 1322, 1323, 1326, 1327, 1328, 1329, 0, 1331, 2034,
	345, 347, 0, 0, 0, 0, 1316, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 0, 636, 861, 0,
	0, 1060, 1061, 0, 0, 1079, 1080, 1081, 0, 0,
	398, -2, -2, -2, -2, 1090, 0, 1098, 1101, -2,
	0, 0, 0, 0, 1108, 0, 1113, 1114, 1115, 0,
	-2, 0, 1122, 1124, 1300, 1126, 0, 0, 1128, 0,
	1132, 0, 1135, 0, 1137, 0, 1139, -2, -2, -2,
	1147, 1148, -2, 1153, -2, 0, 1157, -2, 0, 1160,
	0, 1163, -2, 0, 1173, 1169, 1170, 0, 0, 0,
	0, 1190, 1191, 0, 1200, 0, 1203, 1204, 1205, 0,
	0, 1210, 1211, 0, 1213, 1214, 1215, 1217, 1218, 1219,
	0, 3086, 3010, 2747, 2795, 0, 1228, -2, 2784, 1238,
	1240, 0, -2, 0, 1256, 0, 1260, 0, 0, 1269,
	0, 0, 0, 1063, 0, 1072, 1073, 1074, 253, 2052,
	1732, 0, -2, 0, 840, 0, 844, 1935, 1861, 1858,
	0, 1932, 1933, 1862, 0, 0, 0, 1869, 0, 1908,
	1909, 0, 0, 0, 1848, 1849, 0, 0, 0, 0,
	0, 0, 2460, 2461, 2462, 2463, 2476, 2464, 2465, 2475,
	2473, 2474, 2466, 2467, 2472, 2486, 2487, 2477, 2478, 2468,
	2481, 2479, 2480, 2482, 2483, 2484, 2485, 0, 0, 2491,
	0, 2469, 2470, 2471, 2499, 0, 0, 2500, 0, 2502,
	0, 2492, 2488, 2489, 2490, 0, 2262, 2264, 2566, 0,
	0, 0, 2498, 2493, 2494, 2200, 2201, 2202, 2203, 2204,
	2237, 2241, 2242, 0, 0, 2317, 2563, 2562, 2319, 0,
	0, 2514, 0, 2332, -2, 0, 2455, 2509, 0, 0,
	2341, 2342, 2343, 0, 0, 2514, 0, 0, 2557, 2353,
	2354, 2192, 0, 0, 2423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2141, 2140, 0, 2142, 0, 2143, 2144,
	2151, 2164, 0, 0, 0, 0, 2168, 0, 0, 0,
	0, 0, 0, 0, 2538, -2, 0, 0, 0, 0,
	2156, 0, 0, 1895, 0, 0, 0, 1966, 2567, 2571,
	2572, 1966, 1966, 0, 0, 2515, 2045, 2045, 0, 0,
	2040, 2040, 2040, 2038, 2017, 0, 2017, 2027, 0, 2017,
	2017, 0, -2, 1990, 0, 0, 2031, 0, 2011, 755,
	757, 759, 761, 762, 763, 765, 2049, 2050, 0, 0,
	0, 0, 2653, 0, 0, 0, 0, 0, 0, 2638,
	0, 0, 2610, 453, 454, 0, 0, 0, 3067, 3002,
	0, -2, -2, -2, -2, 3010, 0, 0, 2747, 2784,
	2795, 800, 830, 0, 1905, 0, 2517, 2075, 2079, 0,
	2081, 2082, 2083, 2084, 2085, 0, 0, 2076, -2, 2152,
	2154, 2175, 2670, 2671, 2672, 2135, 2136, 2137, 2138, 2139,
	2147, 2134, 2134, 2134, 2145, 2174, 2166, 2174, 2170, 2120,
	2121, 2122, 2157, 2158, 2159, 2160, 0, 3067, 3002, 0,
	-2, 0, 812, 0, 0, 0, 1843, 335, 336, 536,
	0, 251, 252, 0, 540, 0, 578, 0, 585, 586,
	587, 0, 675, 0, 0, 253, 3139, 680, 0, 683,
	0, 253, 3139, 2575, 689, 0, 692, 0, 0, 698,
	0, 0, 0, 0, 0, 253, 1845, 0, 0, 0,
	0, -2, 898, 906, 907, 908, 0, 1759, 0, 1766,
	927, 928, 929, 1768, 1769, 0, 1771, 901, 930, 931,
	932, 933, 934, 935, 0, 2589, 2590, 2595, 2596, 0,
	0, 899, 920, 902, 0, 914, 1026, 1021, 1022, 1036,
	1037, 0, 0, 2593, 2594, 0, 0, 1042, 1043, 155,
	1705, 0, 0, 206, 0, 1705, 1705, 0, 0, 0,
	0, 234, 0, 0, 1405, 0, 0, 0, 0, 173,
	191, 202, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 100, 1517, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 1533, 1536, 0, 0, 0, 0, 0, 125,
	126, 0, 0, 131, 132, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 1807, 0, 181, 173, 0, 0,
	172, 174, 157, 0, 0, 173, 177, 192, 204, 0,
	240, 0, 180, 242, 1402, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 275, 0, 0, 310, 777, 0,
	780, 0, 550, 0, 525, 0, 0, 547, 555, 0,
	0, 512, 513, 514, 515, 0, 0, 520, 0, 0,
	0, 0, 526, 769, 771, 636, 636, 0, 0, 877,
	881, 882, 0, 0, 878, 880, 0, 0, 1545, 0,
	0, 0, 1902, 0, 0, 0, 0, 3139, 1703, 0,
	1686, 0, 2034, 2843, -2, -2, 345, 2034, 1289, 0,
	0, 2653, 2585, 0, 0, 0, 0, 0, 0, 445,
	0, 0, 0, 334, 0, 0, 0, 481, 0, 568,
	557, 560, 562, 563, 564, 607, 1464, 3139, 0, 0,
	640, 631, 0, 635, 0, 0, 639, 0, 0, 1516,
	3139, 1514, 2620, 0, 1542, 0, 1602, 1495, 3139, 2618,
	0, 0, 0, 1611, 2662, 1620, 1624, 1795, 0, 644,
	0, 1813, 1815, 0, 0, 2055, 0, 2057, 1985, 1905,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	1330, 354, 0, 2033, 0, 0, 386, 2034, 345, 2972,
	0, 1315, 398, 398, 2034, 863, 2034, 865, 0, 0,
	1082, 0, 0, 1085, 398, 398, 398, 398, 1096, 1097,
	1099, 1100, -2, -2, -2, -2, 1102, 1103, 1197, 0,
	0, 0, 1196, 1701, 0, 1118, 1121, 1125, 0, 1273,
	2984, 3002, 3067, 1298, 1197, 2747, 1197, 2747, 1197, 2747,
	1197, 1197, 1141, 1185, 1193, 1152, 1159, 0, 1154, 1158,
	1161, 1164, 0, 1166, 1174, 0, -2, 0, 1177, 0,
	1179, 0, 1181, 1197, 1198, 1201, 0, 1209, 1212, 0,
	1220, 1221, 1222, 1223, 2633, 1224, 1225, 1226, 1227, -2,
	0, 1231, 1232, 0, 0, 1247, 1252, 1253, 1249, 0,
	0, 0, 0, 0, 0, 1263, 1264, 0, 0, 0,
	1272, 0, 1075, 1537, 0, 1741, 1935, 1861, 843, 1852,
	1934, 1853, 1860, 1863, 0, 0, 1865, 0, 1867, 0,
	1930, 1931, 1938, 1939, 0, 1949, 1950, 1942, 0, -2,
	0, 0, 1945, 1946, 1871, 0, 1888, 1889, 1890, 1919,
	1922, 1639, 0, 3274, 886, 0, 2196, 2070, 2197, 2198,
	2604, 0, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, -2, -2, -2, -2, -2, -2, -2, -2,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, -2, -2, -2, 2238, 2239, 2240, -2, 2501, 2503,
	0, 2566, 0, -2, 0, -2, -2, -2, -2, 2259,
	0, 2261, 2266, 2268, 2270, 0, 0, 0, 0, 2565,
	2280, 2549, 2550, 0, 0, 2457, 2458, 2459, 2265, 0,
	2284, 2564, 2561, 0, 0, 2495, 0, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	0, 2513, 1918, 2345, 0, 0, 0, 0, 2352, 2337,
	2511, 0, 2510, 0, 0, 0, 2521, 0, 2556, 2552,
	0, 2602, 2191, 2178, 2179, 2180, 2181, 2182, 2183, 2193,
	0, 2599, 2639, 2645, 2431, 0, 0, 0, 2382, 2383,
	2384, 2385, 2386, 0, 2388, 2389, 0, 2391, 2392, 0,
	2394, 2395, 0, 2397, 2398, 2399, 2400, 2401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 0, 0, 2403,
	0, 2524, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2405, 0, 2407, 2515, 2535, 0, 0, 2285, 0,
	0, 0, 0, 0, 2410, 2515, 2543, 0, 0, 0,
	0, 0, 2515, 0, 2548, 0, 2417, 0, 2419, 1105,
	1106, 1897, 0, 0, 2003, 0, 2065, 0, 0, 0,
	2570, 2573, 2574, 3100, 3101, 3102, 3103, 3104, 3105, 3106,
	3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116,
	3117, 3118, 2065, 2065, 0, 1961, 0, 0, 2041, 2042,
	2043, 2044, 0, 0, 2045, 0, 2035, 2039, 2036, 2037,
	2027, 1982, 0, 0, 2606, 2027, 1988, 2026, 0, 2002,
	2016, 2027, 2027, 0, -2, 1992, 2030, 0, 2005, 2017,
	0, 0, 756, 758, 760, 764, 766, 0, 0, 1918,
	-2, 0, -2, 400, 1494, 0, 0, 0, 0, 0,
	0, 790, 792, 0, 0, 695, 0, 0, 0, 0,
	1279, 0, 1281, 1282, 0, 1284, 0, 1689, 784, 0,
	787, 0, 2066, 2069, 0, 0, 2080, 2086, 2087, 0,
	-2, 0, 0, 2176, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 3048, 0, 823, 0, 539, 253, 0,
	543, 544, 0, 0, 493, 494, 495, 496, 498, 2673,
	499, -2, -2, 0, 589, 253, 705, 677, 0, 253,
	253, 686, 0, 0, 253, 697, 253, 2627, 253, 2625,
	274, 702, 1844, 286, 0, 885, 0, 1758, 1767, 0,
	924, 0, 926, 0, 2597, 2598, 0, 915, 0, 1024,
	0, 1038, 1039, 1040, 1041, 0, 0, 0, 0, 1704,
	0, 0, 1649, 0, 0, 210, 3139, 0, 255, 0,
	0, 1457, 2612, 0, 1447, 0, 0, 2771, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 170, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1519, 1521, 1528,
	1530, 0, 1524, 1525, 0, 1527, 1529, 1531, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 137, 1554, 3008, 0, 0, 0, 0,
	1555, 1556, 1557, 1783, 1784, 0, 1806, 1807, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 179,
	0, 2579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 311, 0, 781, 0, 782, 0,
	546, 548, 549, 525, 0, 0, 0, 0, 0, 0,
	0, 518, 519, 521, 522, 523, 524, 772, 398, 774,
	775, 394, 391, 393, 776, 0, 0, 0, 1547, 0,
	1598, 1596, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 0, 0,
	0, 0, -2, 1549, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 389, 2578, 2588, 0,
	1324, 1325, 434, 437, 440, 443, 292, 0, 0, 0,
	474, 483, 0, 1377, 1349, 0, 0, 617, 398, 636,
	638, 0, 396, 2918, 2631, 1334, 1512, 1515, 0, 1495,
	3139, 1566, 0, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 3139, 2607, 2661, 2662, 1797, 1807, 0, 2065,
	0, 1830, 1816, 0, 0, 0, 1830, 1834, 1835, 1837,
	1838, 0, 0, 2056, 2062, 716, 768, 1905, 1905, 398,
	0, 0, 1819, 1821, 0, 0, 0, 337, 0, 348,
	2034, 346, 0, 354, 0, 0, 2034, 345, 0, 630,
	862, 867, 398, 0, 0, 398, 1086, 1087, 1088, 1089,
	1143, 1187, 1195, 1251, 1107, 1109, 1110, 1111, 0, 1116,
	0, 0, 0, 1299, 1294, 1295, 1296, 2628, 2624, 1297,
	1127, 1197, 1130, 1197, 1133, 1197, 1136, 1138, 1156, 1162,
	1175, 1168, 1176, 0, 0, 0, 1189, 0, 1207, 0,
	1216, 1230, -2, 1235, 1236, 0, 0, 0, 0, 0,
	0, 0, 1257, 1258, 1259, 1261, 1266, 1265, 0, 1271,
	1076, 2053, 1856, 1857, 1859, 0, 1868, 0, 0, 1944,
	-2, -2, 1943, 1947, 1948, -2, -2, -2, -2, 1864,
	0, 1873, 1870, 0, 1929, 1637, 1638, 0, 0, 887,
	0, 0, -2, -2, 0, 0, 0, 2281, 0, -2,
	2260, 2263, 2267, 2269, 2271, 0, 0, 0, 0, 0,
	0, 2504, 0, 2506, 2282, 2559, 2562, 2497, 0, 2453,
	0, 0, 1917, 1918, 1918, 0, 2351, 0, 2512, 0,
	2519, 2520, 0, 2344, 0, 2553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2355, 0, 0, 0, 0,
	2387, 2390, 2393, 2396, 0, 0, 0, 0, 2376, 0,
	0, 0, 2380, 2146, 2132, 0, 2174, 2172, 2173, 2167,
	2174, 2171, 2124, 0, 2123, 0, 2402, 0, 2404, 2406,
	0, 0, 2408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2288, 2289, 2290,
	2310, 2409, 2541, 2542, 0, 0, 0, 0, 0, 0,
	2415, 0, 2547, 2416, 2418, 1905, 0, 1898, 0, 2001,
	0, 1963, 1952, 2064, 0, 2568, 2034, 1965, 1967, 2569,
	2609, 1952, 1952, 0, 2516, 0, 0, 2021, 0, 0,
	0, 2023, 1986, 0, 0, 1980, 0, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1987, 2002, 2025, 1989, 1993, 2639,
	0, 2005, 2029, 0, 2027, 0, 2012, 0, 2014, 2051,
	0, 1998, 2031, 0, 0, 2654, 2065, 0, 447, 455,
	456, 448, 449, 450, 451, 0, 1689, 0, 0, 0,
	0, 0, 1280, 1283, 0, 808, 0, 0, 2518, 0,
	2071, 0, 2077, 0, 0, 0, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 537, 542, 0,
	0, 492, 0, 491, 497, 584, 676, 253, 681, 684,
	2576, 253, 690, 693, 699, 282, 0, 875, -2, 922,
	923, 925, 0, 921, 1029, 1025, 207, 1705, 0, 0,
	0, 1645, 0, 1360, 0, 1355, 1356, 1647, 2623, 1651,
	1657, 1660, 0, 212, 3139, 224, 0, 3139, 0, 1421,
	0, 0, 0, 0, 0, 0, 1707, 0, 0, 3139,
	253, 3139, 253, 228, 230, 233, 0, 239, 235, 0,
	1357, 0, 1409, 0, 0, 1412, 156, 1705, 0, 0,
	159, 163, 175, 0, 0, 0, 189, 0, 0, 0,
	1662, 1666, 1674, 0, 0, 0, 1522, 1523, 1526, 1532,
	1535, 101, 0, 0, 0, 1670, 1672, 1678, 124, 127,
	3139, 2621, 0, 129, 3139, 0, 138, 1807, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 161, 165, 176, 0, 1680, 158, 178, 0,
	268, 0, 0, 258, 253, 3139, 0, 260, 0, 261,
	262, 276, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 778, 0, 551, 552, 553, 0, 0,
	0, 516, 517, 773, 0, 0, 0, 1337, 1338, 1597,
	0, 1540, 1541, 320, 321, 0, 1552, 1546, 0, 0,
	0, 0, 0, 1682, 1683, 0, 0, 0, 1703, 1698,
	2034, 288, 0, 2034, 296, 0, 2584, 0, 324, 333,
	471, 0, 482, 484, 486, 0, 0, 0, 1376, 1475,
	1378, 1380, 1381, 1382, 255, 0, 2662, 1447, 2830, 2662,
	0, 0, 1344, 0, 0, 0, 623, 619, 0, 628,
	632, 633, 0, 0, 0, -2, 0, 0, 0, 0,
	-2, 0, 0, 0, 1613, 1607, 1608, 0, 0, 0,
	0, 3139, 1799, 1807, 0, 1903, 1918, 643, 1808, 1830,
	0, 0, 0, 1818, 1814, 1811, 2065, 0, 0, 0,
	0, 0, 2058, 2061, 719, 720, 375, 0, 398, 0,
	0, 0, 0, 0, 0, 352, 0, 355, 0, 0,
	0, 360, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 370, 371, 354, 387, 339, 2034, 0, 354, 0,
	0, 864, 0, 1077, 0, 0, 1084, 0, 0, 1701,
	1120, 0, 1129, 1131, 1134, 1178, 1180, 1197, 0, 1208,
	1234, 1241, 2608, 1242, 1399, 0, 1399, 0, 0, 1262,
	1268, 1866, 0, 1941, 1872, 1923, 1924, 0, 1639, 0,
	2199, 2244, 0, 0, -2, 0, 0, 2248, 0, 0,
	0, -2, 0, 0, 0, 2505, 2507, 0, 2561, 2496,
	2346, 0, 0, 0, 2350, 2334, 2335, 0, 2456, 2522,
	2551, 2555, 0, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	0, 2603, 2640, 2644, 2429, 2430, 2434, 2617, 0, 0,
	0, 2359, 0, 0, 0, 0, 0, 0, 0, 0,
	2165, 2169, 0, 0, 2523, 2534, 2536, 2286, 2287, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, -2,
	-2, -2, 2304, 2305, 2306, -2, -2, -2, 2311, 0,
	0, 0, 2537, 2539, 2540, 2544, 2545, 0, 2412, 2413,
	2414, 2546, 0, 1905, 1899, 2004, 1960, 0, 2063, 1964,
	0, 1960, 1960, 1912, 2019, 0, 0, 2047, 0, 1983,
	0, 1984, 0, 0, 2024, 0, 1991, 2028, 0, 2007,
	2009, 1994, 1995, 2013, 0, 1997, 0, 2000, 2346, -2,
	399, 401, 403, 0, 406, 407, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 799, 1689, 1689, 0,
	0, 0, 801, 0, 785, 0, 0, 2073, 0, 0,
	2149, 2153, 2177, 814, 816, 0, 0, 0, 0, 3067,
	3002, 0, 0, 813, 545, 489, 490, 678, 687, 284,
	0, 2032, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 254, 0, 1456, 0, 1419, 0,
	0, 1446, 0, 0, 1462, 214, 215, 216, 0, 0,
	0, 0, 226, 0, 0, 222, 0, 232, 238, 237,
	0, 1406, 0, 0, 0, 0, 1650, 0, 0, 0,
	186, 187, 188, 0, 193, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 140, 141, 0, 0, 1789, 1790, 0, 1777, 183,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	1636, 278, 0, 0, 0, 0, 0, 312, 313, 314,
	315, 0, 300, 302, 0, 0, 0, 0, 322, 0,
	0, 510, 0, 395, 390, 392, 1539, 1600, 1601, 1548,
	1663, 1667, 1675, 0, 0, 0, 0, 0, 833, 1702,
	0, 296, 294, 0, 297, 296, 290, 0, 0, 0,
	0, 0, 0, 0, 565, 1347, 1463, 0, 0, 1465,
	1383, 1387, 0, 2662, 2662, 0, 2614, 0, 1345, 0,
	0, 1464, 615, 0, 622, 0, 637, 2613, 0, 0,
	0, 1516, 0, 0, 1543, 1495, 1569, 1495, 0, 1612,
	1614, 0, 1622, 0, 0, 0, 1801, 1807, 0, 1794,
	1795, 1937, 1809, 1828, -2, 0, 0, 1918, 1836, 1833,
	1839, 1840, 0, 0, 378, 0, 1820, 1822, 0, 1318,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 354, 351, 341, 2034, 382, 0, 398, 398, 1112,
	1700, 1117, 2629, 1188, 1206, 1243, 1398, 0, 0, 1245,
	0, 0, 1940, 1927, 1928, 1925, 1639, 2246, 2250, 0,
	0, 0, 2252, -2, 0, 2274, -2, -2, 2508, 2560,
	2325, 1918, 2347, 2349, 2336, 2554, 2194, 0, 2436, 2433,
	0, 2420, 0, 2371, 2372, 0, 0, 2375, 2377, 2378,
	2379, 2133, 2126, 2125, 2533, 0, 0, 0, 0, 2411,
	1900, 0, 2425, 0, 0, 1968, 2425, 2425, 2020, 0,
	2022, 1981, 1969, 0, 1978, 0, 2640, 2006, 0, 2010,
	2015, 1999, 0, 404, 0, 408, 409, 410, 411, 413,
	0, 0, 0, 0, 0, 452, 802, 803, 0, 0,
	0, 0, 1688, 2067, 2072, 0, 2078, 2148, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 285, 0, 1027,
	1028, 208, 209, 1361, 1359, 1654, 1658, 1655, 0, 211,
	0, 0, 1420, 0, 1423, 0, 0, 0, 0, 1430,
	1447, 0, 0, 0, 0, 0, 0, 1449, 0, 1448,
	0, 0, 1479, 0, 1627, 1634, 0, -2, 0, 0,
	0, 218, 244, 0, 0, 0, 0, 247, 1706, 220,
	0, 0, 253, 253, 1358, 0, 0, 1646, 1648, 1661,
	0, 0, 0, 0, 196, 0, 0, 1664, 1668, 1676,
	1671, 1673, 1679, 0, 0, 130, 139, 1780, 0, 0,
	0, 1791, 0, 182, 0, 0, 0, 1681, 266, 267,
	0, 253, 0, 253, 259, 253, 1636, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 0, 554, 511, 0,
	0, 0, 0, 0, 0, 1684, 1685, 287, 0, 0,
	289, 388, 296, 473, 480, 485, 487, 488, 1408, 0,
	1475, 1467, 1468, 1469, 0, 1379, 1474, 1476, 0, 0,
	1384, 0, 0, 0, 0, 1364, 1346, 0, 1377, 1349,
	0, 620, 0, 397, 1335, 1513, 1561, 1495, 0, 1564,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	1803, 1807, 0, 1796, 1797, 1830, 1936, 0, 0, 0,
	1817, 1937, 0, 398, 0, 398, 356, 0, 357, 358,
	359, 366, 367, 368, 369, 340, 343, 0, 354, 866,
	868, 0, 0, 874, 1078, 1083, 1397, 0, 0, 0,
	0, 1926, 2254, -2, -2, 2275, 0, 2641, 2643, 1918,
	0, 2422, 1920, 0, 0, -2, 0, 0, 0, 1901,
	1884, 0, 1959, 1951, 1953, 1955, 2987, 2742, 3138, 1885,
	1886, 2046, 0, 0, 2008, 405, 414, 415, 0, 417,
	418, 804, 0, 0, 0, 0, 2074, 0, 0, 0,
	811, 0, 0, 0, 0, 1017, 0, 0, 1656, 213,
	0, 0, 1424, 1425, 1427, 0, 1429, 1431, 1432, 1349,
	0, 1436, 0, 2664, 0, 1441, 1444, 1445, 0, 0,
	1458, 1480, 0, 1489, 0, 1629, 1639, 1633, 0, 1631,
	1491, 0, 217, 246, 219, 248, 243, 0, 1636, 0,
	221, 231, 0, 0, 160, 0, 0, 2735, 199, 197,
	195, 128, 134, 136, 142, 1643, 185, 0, 162, 0,
	268, 277, 1635, 279, 263, 253, 0, 299, 301, 303,
	304, 305, 306, 0, 1665, 1669, 1677, 0, 1692, 1693,
	1694, 1695, 1696, 0, 0, 0, 298, 0, 0, 0,
	479, 1349, 1407, 1348, 1466, 0, 1477, 1349, 0, 0,
	0, 0, 0, 0, 1351, 0, 1350, 0, 0, 621,
	624, 0, 627, 2065, 634, 0, 0, 0, 1568, 0,
	1615, 1613, 0, 1621, 0, 0, 0, 1776, 0, 0,
	1798, 1799, 641, 1823, 0, 0, 1830, 1841, 377, 0,
	380, 353, 0, 342, 0, 870, 0, 872, 0, 1244,
	1246, 0, 0, 2348, 2440, 0, 0, 2373, 2374, -2,
	0, 2314, 2424, 2426, 0, 0, 0, 0, 0, 1970,
	1979, 416, 1689, 1689, 1689, 2068, 818, 819, 821, 815,
	817, 0, 0, 1652, 0, 1659, 255, 1422, 1426, 0,
	1433, 0, 0, 0, 1437, 1499, 0, 0, 1516, 1516,
	1450, 0, 0, 1483, 1484, 1404, 0, 1485, 1486, 1487,
	1628, 1929, 1634, 1349, 0, 0, 245, 250, 0, 0,
	0, 0, 0, 0, 184, 0, 257, 280, 1636, 0,
	0, 1697, 0, 0, 295, 329, 502, 500, 1351, 0,
	1478, 1385, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1386, 1491, 0, 0, 1455, 1362, 0, 1365, 0,
	1347, 0, 625, 626, 629, 0, 1562, 0, 1569, 0,
	0, 1622, 0, 0, 1786, 1775, 1807, 1800, 1801, 2065,
	0, 1831, 0, 349, 350, 869, 0, 0, 1254, 1255,
	0, 0, 0, 0, 2435, 1921, 2315, 0, 0, 1954,
	1956, 1957, 1958, 805, 806, 807, 0, 0, 1653, 225,
	0, 1493, 1435, 1504, 0, 0, 0, 0, 0, 1451,
	1481, 1482, 1479, 1403, 0, 1632, 1630, 1460, 1493, 1495,
	223, 0, 1491, 0, 1413, 0, 0, 1416, 0, 0,
	200, 2735, 198, 0, 253, 783, 1689, 253, 0, 332,
	0, 535, 501, 503, 0, 0, 507, 508, 509, 1343,
	0, 1471, 1473, 1489, 1491, 1404, 0, 1366, 1408, 1364,
	1563, 1567, 1565, 1605, 1491, 0, 1489, 0, 1793, 1807,
	1787, 1788, 0, 1803, 0, 0, 398, 871, 873, 2432,
	2452, 2441, -2, 3070, 2743, 0, 2452, 2452, 2427, 2428,
	0, 0, 0, 1349, 0, 1438, 1500, 1501, 0, 1496,
	1497, 1498, 2663, 1439, 1440, 1442, 1443, 2065, 0, 1490,
	1499, 249, 1349, 1410, 0, 0, 1411, 0, 0, 203,
	0, 205, 281, 1687, 1690, 0, 307, 0, 0, 476,
	533, 0, 0, 504, 505, 527, 506, 1340, 1342, 1349,
	0, 1404, 1489, 1349, 0, 0, 0, 1349, 1351, 1489,
	0, 1404, 0, 1782, 1792, 0, 1802, 1776, 0, 1826,
	0, 379, 2437, 0, 0, 2443, 2444, 2445, 2446, 2447,
	2438, 2439, 820, 822, 1428, 1434, 0, 1502, 0, 1503,
	0, 0, 0, 1459, 1488, 1504, 229, 1414, 0, 1417,
	0, 201, 0, 0, 327, 328, 532, 528, 1470, 1472,
	1349, 1404, 2065, 1352, 0, 1354, 1351, 1363, 1404, 0,
	1349, 0, 1805, 1781, 1785, 2622, 1786, 1824, 0, 0,
	0, 2449, 2450, 0, 0, 0, 1505, 0, 1508, 1509,
	0, 1506, 1479, 0, 0, 253, 0, 1905, 2065, 1349,
	1642, 1353, 1343, 1349, 1491, 2065, 1489, 1779, 1807, 1793,
	0, 2065, 2448, 2451, 2442, 1492, 1507, 1510, 1511, 1461,
	0, 0, 1691, 330, 0, 0, 534, 529, 530, 1642,
	2065, 1454, 0, 1641, 1341, 2065, 1489, 1642, 1404, 1772,
	1778, 0, 0, 1782, 2065, 1827, 1401, 0, 0, 531,
	1452, 1642, 1640, 1642, 1404, 1618, 1349, 1804, 1779, 1825,
	1415, 1400, 0, 331, 1453, 1616, 1349, 2065, 1773, 0,
	2065, 1642, 0, 1642, 1619, 1401, 1617, 1418,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 648, 3, 654, 649, 3,
	660, 661, 652, 650, 665, 651, 662, 653, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 669, 666,
	640, 642, 641, 645, 664, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 658, 3, 659, 655, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 667, 647, 668, 643,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 644, 57983, 646, 57984, 656,
	57985, 657, 57986, 663, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1664
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1701
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1712
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1781
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1807
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1821
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1908
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1920
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2044
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2057
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2070
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2106
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2164
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2173
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2202
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2238
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2249
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2261
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = true
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = false
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2331
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2364
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2381
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2408
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2419
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 193:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2429
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2439
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2448
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2459
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2465
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 201:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2491
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2587
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2631
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2641
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2644
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = nil
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = true
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = false
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = nil
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = nil
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3424
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3440
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3532
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3712
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3721
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3727
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3732
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3737
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3769
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3845
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3859
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3978
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4005
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4077
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4098
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4103
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4108
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "CREATE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4142
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4145
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4153
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = true
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = false
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = true
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = false
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4249
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4283
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			return unimplemented(sqllex, "create window function")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4320
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4328
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4354
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4355
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
		}
	case 550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4483
		{
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = true
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = false
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			return unimplemented(sqllex, "create access method")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return unimplemented(sqllex, "create cast")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4539
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4541
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			return unimplemented(sqllex, "create publication")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4544
		{
			return unimplemented(sqllex, "create rule")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return unimplemented(sqllex, "create server")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4552
		{
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4553
		{
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4556
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4557
		{
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4560
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4566
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4567
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4568
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4569
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4570
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4571
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			return unimplemented(sqllex, "drop server")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4670
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4706
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4724
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4755
		{
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4757
		{
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.str = ""
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4775
		{

			sqlVAL.union.val = nil
		}
	case 641:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "DELETE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4803
		{
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4833
		{
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "DROP")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5034
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5109
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5133
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5141
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "DELETE")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5167
		{
			return helpWith(sqllex, "INSERT")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "DELETE")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "INSERT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5195
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5331
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5364
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5455
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "GRANT")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5655
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5668
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "RESET")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "RESET")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "USE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5746
		{
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5751
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5754
		{
			return helpWith(sqllex, "USE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5878
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5886
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5924
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5930
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5939
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5944
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5961
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			return unimplemented(sqllex, "set from current")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6055
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = tree.Low
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = tree.Normal
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.High
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6194
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6195
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6196
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6200
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6222
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6225
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = true
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = false
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = true
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = false
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = false
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = int64(1)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = int64(1)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = int64(1)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6446
		{
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6451
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6461
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.str = "client_encoding"
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6505
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.str = "timezone"
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6542
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6550
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6571
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6687
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6702
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6716
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6750
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6819
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6832
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6864
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6873
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6884
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = true
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = true
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = false
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6943
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6960
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6986
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6987
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7003
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7011
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7055
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7062
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7066
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = true
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = false
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7081
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7086
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7127
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7132
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = true
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = false
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7150
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7171
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7175
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7179
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7189
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7200
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7214
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7222
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7227
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7236
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7250
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7266
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7271
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7276
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7281
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7286
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7319
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7324
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7336
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7341
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7352
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7381
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7389
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7410
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7415
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7420
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7433
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7456
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7468
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7534
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7544
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7557
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7739
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7784
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7795
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7803
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7861
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7885
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7913
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7926
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7958
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7966
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7977
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8013
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8077
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8092
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{

			sqlVAL.union.val = nil
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.str = ""
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = nil
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8159
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8163
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8199
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8212
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8226
		{
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8227
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8283
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8309
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.str = ""
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8572
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{

			sqlVAL.union.val = true
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = false
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8634
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8734
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8762
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8772
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8787
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8855
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8857
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8858
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9027
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9036
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9044
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9073
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9092
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9181
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.str = ""
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = true
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{

			sqlVAL.union.val = true
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = false
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9241
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9255
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9267
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9279
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9290
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9301
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = false
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = true
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = true
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = nil
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9448
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9474
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9476
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9478
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9480
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9482
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9484
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9519
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9537
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9556
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9573
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9590
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = false
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = true
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = false
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = true
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = false
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9648
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9654
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9660
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.str = ""
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.str = ""
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = true
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = false
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9735
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9741
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9966
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9972
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9984
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9990
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10004
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10010
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10069
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = true
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = false
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10133
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.str = ""
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10169
		{
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10172
		{
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10173
		{
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10280
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10284
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10286
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10318
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10327
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10329
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10346
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10352
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10353
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10360
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10372
		{
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10415
		{
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10511
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.str = ""
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.str = ""
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{

		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10583
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.str = ""
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.str = ""
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.str = ""
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.str = ""
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10638
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10664
		{
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10715
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10818
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10909
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10924
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11068
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11103
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11104
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11105
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11154
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11166
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11210
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11226
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = true
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = false
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11280
		{
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = nil
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11293
		{
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11294
		{
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = true
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = false
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = false
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = true
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11323
		{
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11324
		{
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11327
		{
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11328
		{
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11369
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11381
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11386
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11412
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11541
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11571
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11573
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11588
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11610
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11657
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11688
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11730
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11740
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11786
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11816
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = nil
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = true
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = false
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.str = tree.AstFull
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.str = tree.AstRight
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.str = tree.AstInner
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12030
		{
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12031
		{
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.str = tree.AstHash
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.str = ""
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12100
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12105
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12123
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12129
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12145
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = true
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = false
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = true
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = false
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12194
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12207
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12215
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12216
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12234
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12236
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12244
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12257
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12264
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12273
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12313
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12325
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12326
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = types.Geography
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12375
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12383
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12409
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12417
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = nil
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = types.Int2
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = types.Int
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = types.Float4
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = types.Float
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12460
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12468
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12476
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = types.Bool
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12490
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = types.Float
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12509
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12515
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12537
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = types.String
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = true
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = false
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = types.Date
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12586
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12594
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12608
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12617
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12625
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12642
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12652
		{
			sqlVAL.union.val = true
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = false
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = false
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = types.Interval
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12666
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12750
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12765
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = nil
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12795
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12855
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12900
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13004
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13012
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13134
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13211
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13233
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13341
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13349
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13393
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13429
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13433
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13437
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13441
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13445
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13450
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13456
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13464
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13468
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13472
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13476
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13485
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13492
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13496
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13500
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13515
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13519
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13523
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13527
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13531
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13534
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13545
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13546
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13561
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13570
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13623
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13636
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13648
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13658
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13715
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13719
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13723
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13727
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13731
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13735
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13739
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13743
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13747
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13751
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13761
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13766
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13784
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13786
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13802
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13804
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13807
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13809
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13812
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13817
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13824
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13827
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13836
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13837
		{
			return unimplemented(sqllex, "treat")
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13858
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13863
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13869
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13873
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13879
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13883
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13894
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13900
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13910
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13918
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13922
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13926
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13933
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.str = ""
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13959
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13963
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13969
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13977
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13993
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13999
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14012
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14040
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14044
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14048
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14052
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14059
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14068
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14072
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14076
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14080
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14085
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14098
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14102
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14109
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14121
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14125
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14129
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14145
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14146
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14147
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14148
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14149
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14150
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14151
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14152
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14153
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14154
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14155
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14156
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14158
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14159
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14160
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14161
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14162
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14163
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14164
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14165
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14166
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14167
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14168
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14169
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14170
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14171
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14172
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14173
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14174
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14175
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14176
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14177
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14179
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14180
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14185
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14201
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14208
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14209
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14210
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14211
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14234
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14238
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14244
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14248
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14252
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14267
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14273
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14277
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14284
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14290
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14300
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14320
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14330
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14334
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14357
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14361
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14365
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14371
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14378
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14399
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14403
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14407
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14415
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14421
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14427
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14433
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14437
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14441
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14447
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14459
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14466
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14476
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14482
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14486
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14493
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14499
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14503
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14510
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14516
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14525
		{
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14526
		{
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14530
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14534
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14540
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14549
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14553
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14557
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14569
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14579
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14602
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14610
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14633
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14642
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14646
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14650
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14654
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14660
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14679
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14683
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14695
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14699
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14708
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14719
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14728
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14736
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14753
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14838
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14846
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14850
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14856
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14866
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14872
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14879
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14906
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14913
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14917
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14921
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14935
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14939
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14943
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14956
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14965
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14983
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14996
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15003
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15028
		{
			sqlVAL.str = ""
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15034
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15038
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
