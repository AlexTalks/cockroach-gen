// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:680
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11770

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1328,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	224, 202,
	454, 202,
	-2, 0,
	-1, 79,
	213, 1133,
	226, 1133,
	242, 340,
	345, 340,
	354, 917,
	386, 340,
	398, 917,
	439, 917,
	464, 340,
	489, 917,
	-2, 0,
	-1, 85,
	242, 344,
	-2, 0,
	-1, 86,
	127, 1328,
	219, 1328,
	474, 1328,
	475, 1328,
	-2, 0,
	-1, 102,
	144, 1299,
	162, 1299,
	175, 1299,
	222, 1299,
	255, 1299,
	304, 1299,
	314, 1299,
	469, 1299,
	-2, 1270,
	-1, 136,
	152, 802,
	241, 802,
	348, 771,
	403, 771,
	457, 802,
	-2, 0,
	-1, 138,
	4, 1330,
	21, 1330,
	22, 1330,
	23, 1330,
	24, 1330,
	25, 1330,
	26, 1330,
	28, 1330,
	29, 1330,
	35, 1330,
	40, 1330,
	41, 1330,
	42, 1330,
	43, 1330,
	44, 1330,
	45, 1330,
	46, 1330,
	47, 1330,
	48, 1330,
	49, 1330,
	51, 1330,
	52, 1330,
	53, 1330,
	54, 1330,
	56, 1330,
	57, 1330,
	58, 1330,
	59, 1330,
	60, 1330,
	61, 1330,
	62, 1330,
	66, 1330,
	67, 1330,
	68, 1330,
	69, 1330,
	71, 1330,
	72, 1330,
	73, 1330,
	77, 1330,
	78, 1330,
	79, 1330,
	80, 1330,
	81, 1330,
	82, 1330,
	83, 1330,
	86, 1330,
	87, 1330,
	88, 1330,
	89, 1330,
	91, 1330,
	93, 1330,
	94, 1330,
	95, 1330,
	96, 1330,
	97, 1330,
	98, 1330,
	100, 1330,
	101, 1330,
	102, 1330,
	104, 1330,
	105, 1330,
	113, 1330,
	114, 1330,
	115, 1330,
	116, 1330,
	118, 1330,
	119, 1330,
	120, 1330,
	122, 1330,
	123, 1330,
	124, 1330,
	126, 1330,
	127, 1330,
	129, 1330,
	130, 1330,
	131, 1330,
	134, 1330,
	135, 1330,
	136, 1330,
	138, 1330,
	139, 1330,
	141, 1330,
	142, 1330,
	143, 1330,
	145, 1330,
	146, 1330,
	147, 1330,
	148, 1330,
	149, 1330,
	150, 1330,
	151, 1330,
	152, 1330,
	153, 1330,
	154, 1330,
	155, 1330,
	156, 1330,
	157, 1330,
	158, 1330,
	159, 1330,
	161, 1330,
	167, 1330,
	168, 1330,
	169, 1330,
	170, 1330,
	174, 1330,
	176, 1330,
	180, 1330,
	181, 1330,
	182, 1330,
	183, 1330,
	184, 1330,
	185, 1330,
	187, 1330,
	188, 1330,
	190, 1330,
	191, 1330,
	193, 1330,
	194, 1330,
	195, 1330,
	196, 1330,
	197, 1330,
	198, 1330,
	199, 1330,
	200, 1330,
	201, 1330,
	203, 1330,
	204, 1330,
	206, 1330,
	207, 1330,
	208, 1330,
	209, 1330,
	213, 1330,
	214, 1330,
	215, 1330,
	216, 1330,
	219, 1330,
	220, 1330,
	221, 1330,
	223, 1330,
	225, 1330,
	226, 1330,
	228, 1330,
	230, 1330,
	231, 1330,
	232, 1330,
	234, 1330,
	238, 1330,
	239, 1330,
	240, 1330,
	241, 1330,
	242, 1330,
	243, 1330,
	245, 1330,
	246, 1330,
	247, 1330,
	249, 1330,
	250, 1330,
	252, 1330,
	253, 1330,
	256, 1330,
	257, 1330,
	258, 1330,
	261, 1330,
	262, 1330,
	263, 1330,
	264, 1330,
	266, 1330,
	267, 1330,
	268, 1330,
	269, 1330,
	270, 1330,
	271, 1330,
	272, 1330,
	273, 1330,
	274, 1330,
	275, 1330,
	276, 1330,
	278, 1330,
	280, 1330,
	281, 1330,
	282, 1330,
	283, 1330,
	284, 1330,
	285, 1330,
	286, 1330,
	287, 1330,
	288, 1330,
	289, 1330,
	290, 1330,
	292, 1330,
	294, 1330,
	296, 1330,
	297, 1330,
	299, 1330,
	300, 1330,
	301, 1330,
	302, 1330,
	303, 1330,
	306, 1330,
	309, 1330,
	310, 1330,
	311, 1330,
	312, 1330,
	315, 1330,
	316, 1330,
	317, 1330,
	319, 1330,
	321, 1330,
	322, 1330,
	323, 1330,
	324, 1330,
	325, 1330,
	326, 1330,
	327, 1330,
	328, 1330,
	329, 1330,
	330, 1330,
	331, 1330,
	332, 1330,
	334, 1330,
	335, 1330,
	336, 1330,
	337, 1330,
	338, 1330,
	339, 1330,
	340, 1330,
	341, 1330,
	342, 1330,
	344, 1330,
	346, 1330,
	347, 1330,
	348, 1330,
	349, 1330,
	350, 1330,
	351, 1330,
	352, 1330,
	353, 1330,
	354, 1330,
	355, 1330,
	356, 1330,
	358, 1330,
	364, 1330,
	366, 1330,
	367, 1330,
	368, 1330,
	369, 1330,
	370, 1330,
	371, 1330,
	372, 1330,
	373, 1330,
	375, 1330,
	376, 1330,
	377, 1330,
	379, 1330,
	380, 1330,
	381, 1330,
	382, 1330,
	383, 1330,
	384, 1330,
	386, 1330,
	387, 1330,
	388, 1330,
	389, 1330,
	390, 1330,
	391, 1330,
	392, 1330,
	393, 1330,
	394, 1330,
	395, 1330,
	396, 1330,
	398, 1330,
	399, 1330,
	400, 1330,
	401, 1330,
	402, 1330,
	403, 1330,
	405, 1330,
	406, 1330,
	407, 1330,
	408, 1330,
	409, 1330,
	411, 1330,
	412, 1330,
	413, 1330,
	414, 1330,
	415, 1330,
	416, 1330,
	417, 1330,
	419, 1330,
	421, 1330,
	422, 1330,
	423, 1330,
	424, 1330,
	425, 1330,
	426, 1330,
	427, 1330,
	428, 1330,
	429, 1330,
	430, 1330,
	431, 1330,
	432, 1330,
	433, 1330,
	435, 1330,
	436, 1330,
	438, 1330,
	440, 1330,
	441, 1330,
	442, 1330,
	443, 1330,
	444, 1330,
	445, 1330,
	446, 1330,
	447, 1330,
	449, 1330,
	450, 1330,
	451, 1330,
	452, 1330,
	453, 1330,
	455, 1330,
	457, 1330,
	458, 1330,
	459, 1330,
	460, 1330,
	461, 1330,
	463, 1330,
	464, 1330,
	465, 1330,
	467, 1330,
	468, 1330,
	471, 1330,
	472, 1330,
	473, 1330,
	474, 1330,
	475, 1330,
	476, 1330,
	477, 1330,
	479, 1330,
	482, 1330,
	483, 1330,
	484, 1330,
	485, 1330,
	486, 1330,
	487, 1330,
	489, 1330,
	490, 1330,
	491, 1330,
	492, 1330,
	497, 1330,
	498, 1330,
	499, 1330,
	500, 1330,
	501, 1330,
	502, 1330,
	-2, 0,
	-1, 139,
	1, 1206,
	230, 1206,
	344, 1206,
	352, 1206,
	505, 1206,
	529, 1206,
	-2, 0,
	-1, 141,
	1, 1206,
	529, 1206,
	-2, 0,
	-1, 142,
	1, 1206,
	529, 1206,
	-2, 0,
	-1, 143,
	1, 1206,
	454, 1206,
	529, 1206,
	-2, 0,
	-1, 172,
	144, 1298,
	162, 1298,
	175, 1298,
	222, 1298,
	255, 1298,
	304, 1298,
	314, 1298,
	469, 1298,
	-2, 1273,
	-1, 210,
	4, 1337,
	5, 1337,
	6, 1337,
	7, 1337,
	8, 1337,
	9, 1337,
	10, 1337,
	21, 1337,
	22, 1337,
	23, 1337,
	24, 1337,
	25, 1337,
	26, 1337,
	28, 1337,
	29, 1337,
	35, 1337,
	36, 1337,
	40, 1337,
	41, 1337,
	42, 1337,
	43, 1337,
	44, 1337,
	45, 1337,
	46, 1337,
	47, 1337,
	48, 1337,
	49, 1337,
	51, 1337,
	52, 1337,
	53, 1337,
	54, 1337,
	56, 1337,
	57, 1337,
	58, 1337,
	59, 1337,
	60, 1337,
	61, 1337,
	62, 1337,
	63, 1337,
	64, 1337,
	65, 1337,
	66, 1337,
	67, 1337,
	68, 1337,
	69, 1337,
	71, 1337,
	72, 1337,
	73, 1337,
	75, 1337,
	77, 1337,
	78, 1337,
	79, 1337,
	80, 1337,
	81, 1337,
	82, 1337,
	83, 1337,
	86, 1337,
	87, 1337,
	88, 1337,
	89, 1337,
	91, 1337,
	93, 1337,
	94, 1337,
	95, 1337,
	96, 1337,
	97, 1337,
	98, 1337,
	100, 1337,
	101, 1337,
	102, 1337,
	103, 1337,
	104, 1337,
	105, 1337,
	106, 1337,
	107, 1337,
	108, 1337,
	109, 1337,
	110, 1337,
	111, 1337,
	112, 1337,
	113, 1337,
	114, 1337,
	115, 1337,
	116, 1337,
	117, 1337,
	118, 1337,
	119, 1337,
	120, 1337,
	121, 1337,
	122, 1337,
	123, 1337,
	124, 1337,
	126, 1337,
	127, 1337,
	129, 1337,
	130, 1337,
	131, 1337,
	134, 1337,
	135, 1337,
	136, 1337,
	138, 1337,
	139, 1337,
	141, 1337,
	142, 1337,
	143, 1337,
	145, 1337,
	146, 1337,
	147, 1337,
	148, 1337,
	149, 1337,
	150, 1337,
	151, 1337,
	152, 1337,
	153, 1337,
	154, 1337,
	155, 1337,
	156, 1337,
	157, 1337,
	158, 1337,
	159, 1337,
	160, 1337,
	161, 1337,
	167, 1337,
	168, 1337,
	169, 1337,
	170, 1337,
	174, 1337,
	176, 1337,
	179, 1337,
	180, 1337,
	181, 1337,
	182, 1337,
	183, 1337,
	184, 1337,
	185, 1337,
	187, 1337,
	188, 1337,
	190, 1337,
	191, 1337,
	193, 1337,
	194, 1337,
	195, 1337,
	196, 1337,
	197, 1337,
	198, 1337,
	199, 1337,
	200, 1337,
	201, 1337,
	202, 1337,
	203, 1337,
	204, 1337,
	206, 1337,
	207, 1337,
	208, 1337,
	209, 1337,
	213, 1337,
	214, 1337,
	215, 1337,
	216, 1337,
	218, 1337,
	219, 1337,
	220, 1337,
	221, 1337,
	223, 1337,
	225, 1337,
	226, 1337,
	227, 1337,
	228, 1337,
	229, 1337,
	230, 1337,
	231, 1337,
	232, 1337,
	233, 1337,
	234, 1337,
	238, 1337,
	239, 1337,
	240, 1337,
	241, 1337,
	242, 1337,
	243, 1337,
	245, 1337,
	246, 1337,
	247, 1337,
	249, 1337,
	250, 1337,
	251, 1337,
	252, 1337,
	253, 1337,
	254, 1337,
	256, 1337,
	257, 1337,
	258, 1337,
	259, 1337,
	260, 1337,
	261, 1337,
	262, 1337,
	263, 1337,
	264, 1337,
	266, 1337,
	267, 1337,
	268, 1337,
	269, 1337,
	270, 1337,
	271, 1337,
	272, 1337,
	273, 1337,
	274, 1337,
	275, 1337,
	276, 1337,
	278, 1337,
	279, 1337,
	280, 1337,
	281, 1337,
	282, 1337,
	283, 1337,
	284, 1337,
	285, 1337,
	286, 1337,
	287, 1337,
	288, 1337,
	289, 1337,
	290, 1337,
	291, 1337,
	292, 1337,
	293, 1337,
	294, 1337,
	295, 1337,
	296, 1337,
	297, 1337,
	298, 1337,
	299, 1337,
	300, 1337,
	301, 1337,
	302, 1337,
	303, 1337,
	306, 1337,
	310, 1337,
	311, 1337,
	312, 1337,
	315, 1337,
	316, 1337,
	317, 1337,
	318, 1337,
	319, 1337,
	320, 1337,
	321, 1337,
	322, 1337,
	323, 1337,
	324, 1337,
	325, 1337,
	326, 1337,
	327, 1337,
	328, 1337,
	329, 1337,
	330, 1337,
	331, 1337,
	332, 1337,
	334, 1337,
	335, 1337,
	336, 1337,
	337, 1337,
	338, 1337,
	339, 1337,
	340, 1337,
	341, 1337,
	342, 1337,
	344, 1337,
	346, 1337,
	347, 1337,
	348, 1337,
	349, 1337,
	350, 1337,
	351, 1337,
	352, 1337,
	353, 1337,
	354, 1337,
	355, 1337,
	356, 1337,
	358, 1337,
	364, 1337,
	366, 1337,
	367, 1337,
	368, 1337,
	369, 1337,
	370, 1337,
	371, 1337,
	372, 1337,
	373, 1337,
	375, 1337,
	376, 1337,
	377, 1337,
	378, 1337,
	379, 1337,
	380, 1337,
	381, 1337,
	382, 1337,
	383, 1337,
	384, 1337,
	386, 1337,
	387, 1337,
	388, 1337,
	389, 1337,
	390, 1337,
	391, 1337,
	392, 1337,
	393, 1337,
	394, 1337,
	395, 1337,
	396, 1337,
	398, 1337,
	399, 1337,
	400, 1337,
	401, 1337,
	402, 1337,
	403, 1337,
	404, 1337,
	405, 1337,
	406, 1337,
	407, 1337,
	408, 1337,
	409, 1337,
	410, 1337,
	411, 1337,
	412, 1337,
	413, 1337,
	414, 1337,
	415, 1337,
	416, 1337,
	417, 1337,
	419, 1337,
	421, 1337,
	422, 1337,
	423, 1337,
	424, 1337,
	425, 1337,
	426, 1337,
	427, 1337,
	428, 1337,
	429, 1337,
	430, 1337,
	431, 1337,
	432, 1337,
	433, 1337,
	435, 1337,
	436, 1337,
	437, 1337,
	438, 1337,
	440, 1337,
	441, 1337,
	442, 1337,
	443, 1337,
	444, 1337,
	445, 1337,
	446, 1337,
	447, 1337,
	449, 1337,
	450, 1337,
	451, 1337,
	452, 1337,
	453, 1337,
	455, 1337,
	457, 1337,
	458, 1337,
	459, 1337,
	460, 1337,
	461, 1337,
	462, 1337,
	463, 1337,
	464, 1337,
	465, 1337,
	467, 1337,
	468, 1337,
	470, 1337,
	471, 1337,
	472, 1337,
	473, 1337,
	474, 1337,
	475, 1337,
	476, 1337,
	477, 1337,
	478, 1337,
	479, 1337,
	482, 1337,
	483, 1337,
	484, 1337,
	485, 1337,
	486, 1337,
	487, 1337,
	489, 1337,
	490, 1337,
	491, 1337,
	492, 1337,
	497, 1337,
	498, 1337,
	499, 1337,
	500, 1337,
	501, 1337,
	502, 1337,
	503, 1337,
	510, 1337,
	517, 1337,
	518, 1337,
	519, 1337,
	526, 1337,
	530, 1337,
	-2, 0,
	-1, 638,
	178, 2047,
	454, 2047,
	509, 2047,
	528, 2047,
	-2, 0,
	-1, 639,
	178, 2139,
	454, 2139,
	509, 2139,
	528, 2139,
	-2, 0,
	-1, 640,
	178, 2035,
	454, 2035,
	509, 2035,
	528, 2035,
	-2, 0,
	-1, 642,
	178, 2244,
	454, 2244,
	509, 2244,
	528, 2244,
	-2, 0,
	-1, 644,
	178, 2278,
	454, 2278,
	509, 2278,
	528, 2278,
	-2, 0,
	-1, 651,
	178, 2154,
	454, 2154,
	509, 2154,
	528, 2154,
	-2, 619,
	-1, 682,
	528, 1985,
	531, 1985,
	-2, 856,
	-1, 683,
	528, 1987,
	531, 1987,
	-2, 857,
	-1, 684,
	528, 1986,
	531, 1986,
	-2, 858,
	-1, 685,
	531, 1920,
	-2, 859,
	-1, 707,
	175, 216,
	-2, 0,
	-1, 729,
	489, 1110,
	-2, 918,
	-1, 769,
	4, 1131,
	21, 1131,
	22, 1131,
	23, 1131,
	24, 1131,
	25, 1131,
	26, 1131,
	28, 1131,
	29, 1131,
	35, 1131,
	40, 1131,
	41, 1131,
	42, 1131,
	43, 1131,
	44, 1131,
	45, 1131,
	46, 1131,
	47, 1131,
	48, 1131,
	49, 1131,
	51, 1131,
	52, 1131,
	53, 1131,
	54, 1131,
	56, 1131,
	57, 1131,
	58, 1131,
	59, 1131,
	60, 1131,
	61, 1131,
	62, 1131,
	66, 1131,
	67, 1131,
	68, 1131,
	69, 1131,
	71, 1131,
	72, 1131,
	73, 1131,
	77, 1131,
	78, 1131,
	79, 1131,
	80, 1131,
	81, 1131,
	82, 1131,
	83, 1131,
	86, 1131,
	87, 1131,
	88, 1131,
	89, 1131,
	91, 1131,
	93, 1131,
	94, 1131,
	95, 1131,
	96, 1131,
	97, 1131,
	98, 1131,
	100, 1131,
	101, 1131,
	102, 1131,
	104, 1131,
	105, 1131,
	113, 1131,
	114, 1131,
	115, 1131,
	116, 1131,
	118, 1131,
	119, 1131,
	120, 1131,
	122, 1131,
	123, 1131,
	124, 1131,
	126, 1131,
	127, 1131,
	129, 1131,
	130, 1131,
	131, 1131,
	134, 1131,
	135, 1131,
	136, 1131,
	138, 1131,
	139, 1131,
	141, 1131,
	142, 1131,
	143, 1131,
	145, 1131,
	146, 1131,
	147, 1131,
	148, 1131,
	149, 1131,
	150, 1131,
	151, 1131,
	152, 1131,
	153, 1131,
	154, 1131,
	155, 1131,
	156, 1131,
	157, 1131,
	158, 1131,
	159, 1131,
	161, 1131,
	167, 1131,
	168, 1131,
	169, 1131,
	170, 1131,
	174, 1131,
	176, 1131,
	180, 1131,
	181, 1131,
	182, 1131,
	183, 1131,
	184, 1131,
	185, 1131,
	187, 1131,
	188, 1131,
	190, 1131,
	191, 1131,
	193, 1131,
	194, 1131,
	195, 1131,
	196, 1131,
	197, 1131,
	198, 1131,
	199, 1131,
	200, 1131,
	201, 1131,
	203, 1131,
	204, 1131,
	206, 1131,
	207, 1131,
	208, 1131,
	209, 1131,
	213, 1131,
	214, 1131,
	215, 1131,
	216, 1131,
	219, 1131,
	220, 1131,
	221, 1131,
	223, 1131,
	225, 1131,
	226, 1131,
	228, 1131,
	230, 1131,
	231, 1131,
	232, 1131,
	234, 1131,
	238, 1131,
	239, 1131,
	240, 1131,
	241, 1131,
	242, 1131,
	243, 1131,
	245, 1131,
	246, 1131,
	247, 1131,
	249, 1131,
	250, 1131,
	252, 1131,
	253, 1131,
	256, 1131,
	257, 1131,
	258, 1131,
	261, 1131,
	262, 1131,
	263, 1131,
	264, 1131,
	266, 1131,
	267, 1131,
	268, 1131,
	269, 1131,
	270, 1131,
	271, 1131,
	272, 1131,
	273, 1131,
	274, 1131,
	275, 1131,
	276, 1131,
	278, 1131,
	280, 1131,
	281, 1131,
	282, 1131,
	283, 1131,
	284, 1131,
	285, 1131,
	286, 1131,
	287, 1131,
	288, 1131,
	289, 1131,
	290, 1131,
	292, 1131,
	294, 1131,
	296, 1131,
	297, 1131,
	299, 1131,
	300, 1131,
	301, 1131,
	302, 1131,
	303, 1131,
	306, 1131,
	310, 1131,
	311, 1131,
	312, 1131,
	315, 1131,
	316, 1131,
	317, 1131,
	319, 1131,
	321, 1131,
	322, 1131,
	323, 1131,
	324, 1131,
	325, 1131,
	326, 1131,
	327, 1131,
	328, 1131,
	329, 1131,
	330, 1131,
	331, 1131,
	332, 1131,
	334, 1131,
	335, 1131,
	336, 1131,
	337, 1131,
	338, 1131,
	339, 1131,
	340, 1131,
	341, 1131,
	342, 1131,
	344, 1131,
	346, 1131,
	347, 1131,
	348, 1131,
	349, 1131,
	350, 1131,
	351, 1131,
	352, 1131,
	353, 1131,
	354, 1131,
	355, 1131,
	356, 1131,
	358, 1131,
	364, 1131,
	366, 1131,
	367, 1131,
	368, 1131,
	369, 1131,
	370, 1131,
	371, 1131,
	372, 1131,
	373, 1131,
	375, 1131,
	376, 1131,
	377, 1131,
	379, 1131,
	380, 1131,
	381, 1131,
	382, 1131,
	383, 1131,
	384, 1131,
	386, 1131,
	387, 1131,
	388, 1131,
	389, 1131,
	390, 1131,
	391, 1131,
	392, 1131,
	393, 1131,
	394, 1131,
	395, 1131,
	396, 1131,
	398, 1131,
	399, 1131,
	400, 1131,
	401, 1131,
	402, 1131,
	403, 1131,
	405, 1131,
	406, 1131,
	407, 1131,
	408, 1131,
	409, 1131,
	411, 1131,
	412, 1131,
	413, 1131,
	414, 1131,
	415, 1131,
	416, 1131,
	417, 1131,
	419, 1131,
	421, 1131,
	422, 1131,
	423, 1131,
	424, 1131,
	425, 1131,
	426, 1131,
	427, 1131,
	428, 1131,
	429, 1131,
	430, 1131,
	431, 1131,
	432, 1131,
	433, 1131,
	435, 1131,
	436, 1131,
	438, 1131,
	440, 1131,
	441, 1131,
	442, 1131,
	443, 1131,
	444, 1131,
	445, 1131,
	446, 1131,
	447, 1131,
	449, 1131,
	450, 1131,
	451, 1131,
	452, 1131,
	453, 1131,
	455, 1131,
	457, 1131,
	458, 1131,
	459, 1131,
	460, 1131,
	461, 1131,
	463, 1131,
	464, 1131,
	465, 1131,
	467, 1131,
	468, 1131,
	471, 1131,
	472, 1131,
	473, 1131,
	474, 1131,
	475, 1131,
	476, 1131,
	477, 1131,
	479, 1131,
	482, 1131,
	483, 1131,
	484, 1131,
	485, 1131,
	486, 1131,
	487, 1131,
	489, 1131,
	490, 1131,
	491, 1131,
	492, 1131,
	497, 1131,
	498, 1131,
	499, 1131,
	500, 1131,
	501, 1131,
	502, 1131,
	-2, 0,
	-1, 848,
	348, 772,
	403, 772,
	-2, 0,
	-1, 849,
	348, 771,
	403, 771,
	-2, 715,
	-1, 853,
	1, 812,
	525, 812,
	527, 812,
	529, 812,
	-2, 0,
	-1, 854,
	1, 750,
	525, 750,
	527, 750,
	529, 750,
	-2, 0,
	-1, 855,
	1, 855,
	175, 855,
	525, 855,
	527, 855,
	529, 855,
	-2, 0,
	-1, 863,
	1, 775,
	525, 775,
	527, 775,
	529, 775,
	-2, 0,
	-1, 869,
	1, 812,
	525, 812,
	527, 812,
	529, 812,
	-2, 0,
	-1, 870,
	1, 814,
	525, 814,
	527, 814,
	529, 814,
	-2, 0,
	-1, 871,
	1, 817,
	525, 817,
	527, 817,
	529, 817,
	-2, 0,
	-1, 877,
	1, 834,
	525, 834,
	527, 834,
	529, 834,
	-2, 0,
	-1, 878,
	1, 836,
	525, 836,
	527, 836,
	529, 836,
	-2, 0,
	-1, 927,
	162, 1339,
	175, 1339,
	255, 1339,
	304, 1339,
	-2, 1277,
	-1, 942,
	162, 1338,
	175, 1338,
	255, 1338,
	304, 1338,
	-2, 1274,
	-1, 968,
	528, 1984,
	-2, 627,
	-1, 996,
	5, 1976,
	526, 1974,
	-2, 1965,
	-1, 1004,
	5, 1997,
	526, 1994,
	-2, 1985,
	-1, 1005,
	5, 1998,
	526, 1995,
	-2, 1986,
	-1, 1013,
	528, 1982,
	-2, 1964,
	-1, 1014,
	526, 2358,
	-2, 1983,
	-1, 1037,
	526, 2357,
	-2, 1999,
	-1, 1038,
	5, 1504,
	-2, 2328,
	-1, 1039,
	5, 1505,
	-2, 2329,
	-1, 1040,
	5, 1506,
	-2, 2343,
	-1, 1041,
	5, 1507,
	-2, 2307,
	-1, 1042,
	5, 1508,
	-2, 2341,
	-1, 1043,
	5, 1516,
	-2, 2320,
	-1, 1044,
	5, 1503,
	-2, 2316,
	-1, 1045,
	5, 1503,
	-2, 2315,
	-1, 1046,
	5, 1503,
	-2, 2334,
	-1, 1047,
	5, 1514,
	-2, 2309,
	-1, 1048,
	5, 1519,
	-2, 2308,
	-1, 1049,
	5, 1521,
	-2, 2353,
	-1, 1052,
	5, 1543,
	-2, 2346,
	-1, 1053,
	5, 1535,
	-2, 2347,
	-1, 1054,
	5, 1543,
	-2, 2348,
	-1, 1055,
	5, 1539,
	-2, 2349,
	-1, 1056,
	5, 1489,
	-2, 2321,
	-1, 1057,
	5, 1490,
	-2, 2322,
	-1, 1058,
	5, 1491,
	-2, 2310,
	-1, 1085,
	5, 1526,
	-2, 2354,
	-1, 1086,
	5, 1527,
	-2, 2344,
	-1, 1087,
	5, 1528,
	490, 1528,
	-2, 2311,
	-1, 1088,
	5, 1529,
	490, 1529,
	-2, 2312,
	-1, 1125,
	526, 1994,
	-2, 1985,
	-1, 1126,
	526, 1995,
	-2, 1986,
	-1, 1156,
	178, 2278,
	454, 2278,
	509, 2278,
	528, 2278,
	-2, 0,
	-1, 1159,
	1, 605,
	529, 605,
	-2, 1214,
	-1, 1284,
	366, 1960,
	405, 1960,
	519, 1960,
	-2, 1958,
	-1, 1296,
	530, 1960,
	-2, 1961,
	-1, 1303,
	1, 1107,
	525, 1107,
	527, 1107,
	529, 1107,
	-2, 1326,
	-1, 1357,
	354, 917,
	489, 917,
	-2, 339,
	-1, 1378,
	1, 1107,
	525, 1107,
	527, 1107,
	529, 1107,
	-2, 1326,
	-1, 1385,
	4, 1131,
	21, 1131,
	22, 1131,
	23, 1131,
	24, 1131,
	25, 1131,
	26, 1131,
	28, 1131,
	29, 1131,
	35, 1131,
	40, 1131,
	41, 1131,
	42, 1131,
	43, 1131,
	44, 1131,
	45, 1131,
	46, 1131,
	47, 1131,
	48, 1131,
	49, 1131,
	51, 1131,
	52, 1131,
	53, 1131,
	54, 1131,
	56, 1131,
	57, 1131,
	58, 1131,
	59, 1131,
	60, 1131,
	61, 1131,
	62, 1131,
	66, 1131,
	67, 1131,
	68, 1131,
	69, 1131,
	71, 1131,
	72, 1131,
	73, 1131,
	77, 1131,
	78, 1131,
	79, 1131,
	80, 1131,
	81, 1131,
	82, 1131,
	83, 1131,
	86, 1131,
	87, 1131,
	88, 1131,
	89, 1131,
	91, 1131,
	93, 1131,
	94, 1131,
	95, 1131,
	96, 1131,
	97, 1131,
	98, 1131,
	100, 1131,
	101, 1131,
	102, 1131,
	104, 1131,
	105, 1131,
	113, 1131,
	114, 1131,
	115, 1131,
	116, 1131,
	118, 1131,
	119, 1131,
	120, 1131,
	122, 1131,
	123, 1131,
	124, 1131,
	126, 1131,
	127, 1131,
	129, 1131,
	130, 1131,
	131, 1131,
	134, 1131,
	135, 1131,
	136, 1131,
	138, 1131,
	139, 1131,
	141, 1131,
	142, 1131,
	143, 1131,
	145, 1131,
	146, 1131,
	147, 1131,
	148, 1131,
	149, 1131,
	150, 1131,
	151, 1131,
	152, 1131,
	153, 1131,
	154, 1131,
	155, 1131,
	156, 1131,
	157, 1131,
	158, 1131,
	159, 1131,
	167, 1131,
	168, 1131,
	169, 1131,
	170, 1131,
	174, 1131,
	176, 1131,
	180, 1131,
	181, 1131,
	182, 1131,
	183, 1131,
	184, 1131,
	185, 1131,
	187, 1131,
	188, 1131,
	190, 1131,
	191, 1131,
	193, 1131,
	194, 1131,
	195, 1131,
	196, 1131,
	197, 1131,
	198, 1131,
	199, 1131,
	200, 1131,
	201, 1131,
	203, 1131,
	204, 1131,
	206, 1131,
	207, 1131,
	208, 1131,
	209, 1131,
	214, 1131,
	215, 1131,
	216, 1131,
	219, 1131,
	220, 1131,
	221, 1131,
	223, 1131,
	225, 1131,
	226, 1131,
	228, 1131,
	230, 1131,
	231, 1131,
	232, 1131,
	234, 1131,
	238, 1131,
	239, 1131,
	240, 1131,
	241, 1131,
	242, 1131,
	243, 1131,
	245, 1131,
	246, 1131,
	247, 1131,
	249, 1131,
	250, 1131,
	252, 1131,
	253, 1131,
	256, 1131,
	257, 1131,
	258, 1131,
	261, 1131,
	262, 1131,
	263, 1131,
	264, 1131,
	266, 1131,
	267, 1131,
	268, 1131,
	269, 1131,
	270, 1131,
	271, 1131,
	272, 1131,
	273, 1131,
	274, 1131,
	275, 1131,
	276, 1131,
	278, 1131,
	280, 1131,
	281, 1131,
	282, 1131,
	283, 1131,
	284, 1131,
	285, 1131,
	286, 1131,
	287, 1131,
	288, 1131,
	289, 1131,
	290, 1131,
	292, 1131,
	296, 1131,
	297, 1131,
	299, 1131,
	300, 1131,
	301, 1131,
	302, 1131,
	303, 1131,
	306, 1131,
	308, 1131,
	310, 1131,
	311, 1131,
	312, 1131,
	315, 1131,
	316, 1131,
	317, 1131,
	319, 1131,
	321, 1131,
	322, 1131,
	323, 1131,
	324, 1131,
	325, 1131,
	326, 1131,
	327, 1131,
	328, 1131,
	329, 1131,
	330, 1131,
	331, 1131,
	332, 1131,
	334, 1131,
	335, 1131,
	336, 1131,
	337, 1131,
	338, 1131,
	339, 1131,
	340, 1131,
	341, 1131,
	342, 1131,
	344, 1131,
	346, 1131,
	347, 1131,
	348, 1131,
	349, 1131,
	350, 1131,
	351, 1131,
	352, 1131,
	353, 1131,
	354, 1131,
	355, 1131,
	356, 1131,
	358, 1131,
	364, 1131,
	366, 1131,
	367, 1131,
	368, 1131,
	369, 1131,
	370, 1131,
	371, 1131,
	372, 1131,
	373, 1131,
	375, 1131,
	376, 1131,
	377, 1131,
	379, 1131,
	380, 1131,
	381, 1131,
	382, 1131,
	383, 1131,
	384, 1131,
	386, 1131,
	387, 1131,
	388, 1131,
	389, 1131,
	390, 1131,
	391, 1131,
	392, 1131,
	393, 1131,
	394, 1131,
	395, 1131,
	396, 1131,
	398, 1131,
	399, 1131,
	400, 1131,
	401, 1131,
	402, 1131,
	403, 1131,
	405, 1131,
	406, 1131,
	407, 1131,
	408, 1131,
	409, 1131,
	411, 1131,
	412, 1131,
	413, 1131,
	414, 1131,
	415, 1131,
	416, 1131,
	417, 1131,
	419, 1131,
	421, 1131,
	422, 1131,
	423, 1131,
	424, 1131,
	425, 1131,
	426, 1131,
	427, 1131,
	428, 1131,
	429, 1131,
	430, 1131,
	431, 1131,
	432, 1131,
	433, 1131,
	435, 1131,
	436, 1131,
	438, 1131,
	440, 1131,
	441, 1131,
	442, 1131,
	443, 1131,
	444, 1131,
	445, 1131,
	446, 1131,
	447, 1131,
	449, 1131,
	450, 1131,
	451, 1131,
	452, 1131,
	453, 1131,
	455, 1131,
	457, 1131,
	458, 1131,
	459, 1131,
	460, 1131,
	461, 1131,
	463, 1131,
	464, 1131,
	465, 1131,
	467, 1131,
	468, 1131,
	471, 1131,
	472, 1131,
	473, 1131,
	474, 1131,
	475, 1131,
	476, 1131,
	477, 1131,
	479, 1131,
	482, 1131,
	483, 1131,
	484, 1131,
	485, 1131,
	486, 1131,
	487, 1131,
	489, 1131,
	490, 1131,
	491, 1131,
	492, 1131,
	497, 1131,
	498, 1131,
	499, 1131,
	500, 1131,
	501, 1131,
	502, 1131,
	-2, 0,
	-1, 1458,
	1, 478,
	525, 478,
	527, 478,
	529, 478,
	-2, 1297,
	-1, 1461,
	4, 2352,
	11, 2352,
	12, 2352,
	14, 2352,
	15, 2352,
	16, 2352,
	17, 2352,
	18, 2352,
	19, 2352,
	21, 2352,
	22, 2352,
	23, 2352,
	24, 2352,
	25, 2352,
	26, 2352,
	28, 2352,
	29, 2352,
	32, 2352,
	33, 2352,
	35, 2352,
	37, 2352,
	40, 2352,
	41, 2352,
	42, 2352,
	43, 2352,
	44, 2352,
	45, 2352,
	46, 2352,
	47, 2352,
	48, 2352,
	49, 2352,
	51, 2352,
	52, 2352,
	53, 2352,
	54, 2352,
	56, 2352,
	57, 2352,
	58, 2352,
	59, 2352,
	60, 2352,
	61, 2352,
	62, 2352,
	66, 2352,
	67, 2352,
	68, 2352,
	69, 2352,
	71, 2352,
	72, 2352,
	73, 2352,
	74, 2352,
	77, 2352,
	78, 2352,
	79, 2352,
	80, 2352,
	81, 2352,
	82, 2352,
	83, 2352,
	84, 2352,
	86, 2352,
	87, 2352,
	88, 2352,
	89, 2352,
	91, 2352,
	92, 2352,
	93, 2352,
	94, 2352,
	95, 2352,
	96, 2352,
	97, 2352,
	98, 2352,
	100, 2352,
	101, 2352,
	102, 2352,
	103, 2352,
	104, 2352,
	105, 2352,
	113, 2352,
	114, 2352,
	115, 2352,
	116, 2352,
	118, 2352,
	119, 2352,
	120, 2352,
	122, 2352,
	123, 2352,
	124, 2352,
	126, 2352,
	127, 2352,
	129, 2352,
	130, 2352,
	131, 2352,
	134, 2352,
	135, 2352,
	136, 2352,
	138, 2352,
	139, 2352,
	141, 2352,
	142, 2352,
	143, 2352,
	145, 2352,
	146, 2352,
	147, 2352,
	148, 2352,
	149, 2352,
	150, 2352,
	151, 2352,
	152, 2352,
	153, 2352,
	154, 2352,
	155, 2352,
	156, 2352,
	157, 2352,
	158, 2352,
	159, 2352,
	163, 2352,
	164, 2352,
	165, 2352,
	166, 2352,
	167, 2352,
	168, 2352,
	169, 2352,
	170, 2352,
	173, 2352,
	174, 2352,
	176, 2352,
	179, 2352,
	180, 2352,
	181, 2352,
	182, 2352,
	183, 2352,
	184, 2352,
	185, 2352,
	187, 2352,
	188, 2352,
	190, 2352,
	191, 2352,
	193, 2352,
	194, 2352,
	195, 2352,
	196, 2352,
	197, 2352,
	198, 2352,
	199, 2352,
	200, 2352,
	201, 2352,
	202, 2352,
	203, 2352,
	204, 2352,
	205, 2352,
	206, 2352,
	207, 2352,
	208, 2352,
	209, 2352,
	211, 2352,
	212, 2352,
	214, 2352,
	215, 2352,
	216, 2352,
	218, 2352,
	219, 2352,
	220, 2352,
	221, 2352,
	223, 2352,
	225, 2352,
	226, 2352,
	227, 2352,
	228, 2352,
	229, 2352,
	230, 2352,
	231, 2352,
	232, 2352,
	233, 2352,
	234, 2352,
	236, 2352,
	237, 2352,
	238, 2352,
	239, 2352,
	240, 2352,
	241, 2352,
	242, 2352,
	243, 2352,
	245, 2352,
	246, 2352,
	247, 2352,
	249, 2352,
	250, 2352,
	251, 2352,
	252, 2352,
	253, 2352,
	254, 2352,
	256, 2352,
	257, 2352,
	258, 2352,
	261, 2352,
	262, 2352,
	263, 2352,
	264, 2352,
	265, 2352,
	266, 2352,
	267, 2352,
	268, 2352,
	269, 2352,
	270, 2352,
	271, 2352,
	272, 2352,
	273, 2352,
	274, 2352,
	275, 2352,
	276, 2352,
	278, 2352,
	279, 2352,
	280, 2352,
	281, 2352,
	282, 2352,
	283, 2352,
	284, 2352,
	285, 2352,
	286, 2352,
	287, 2352,
	288, 2352,
	289, 2352,
	290, 2352,
	292, 2352,
	295, 2352,
	296, 2352,
	297, 2352,
	299, 2352,
	300, 2352,
	301, 2352,
	302, 2352,
	303, 2352,
	306, 2352,
	310, 2352,
	311, 2352,
	312, 2352,
	313, 2352,
	315, 2352,
	316, 2352,
	317, 2352,
	319, 2352,
	321, 2352,
	322, 2352,
	323, 2352,
	324, 2352,
	325, 2352,
	326, 2352,
	327, 2352,
	328, 2352,
	329, 2352,
	330, 2352,
	331, 2352,
	332, 2352,
	334, 2352,
	335, 2352,
	336, 2352,
	337, 2352,
	338, 2352,
	339, 2352,
	340, 2352,
	341, 2352,
	342, 2352,
	344, 2352,
	346, 2352,
	347, 2352,
	348, 2352,
	349, 2352,
	350, 2352,
	351, 2352,
	352, 2352,
	353, 2352,
	354, 2352,
	355, 2352,
	356, 2352,
	358, 2352,
	364, 2352,
	365, 2352,
	366, 2352,
	367, 2352,
	368, 2352,
	369, 2352,
	370, 2352,
	371, 2352,
	372, 2352,
	373, 2352,
	375, 2352,
	376, 2352,
	377, 2352,
	378, 2352,
	379, 2352,
	380, 2352,
	381, 2352,
	382, 2352,
	383, 2352,
	384, 2352,
	385, 2352,
	386, 2352,
	387, 2352,
	388, 2352,
	389, 2352,
	390, 2352,
	391, 2352,
	392, 2352,
	393, 2352,
	394, 2352,
	395, 2352,
	396, 2352,
	398, 2352,
	399, 2352,
	400, 2352,
	401, 2352,
	402, 2352,
	403, 2352,
	405, 2352,
	406, 2352,
	407, 2352,
	408, 2352,
	409, 2352,
	410, 2352,
	411, 2352,
	412, 2352,
	413, 2352,
	414, 2352,
	415, 2352,
	416, 2352,
	417, 2352,
	419, 2352,
	421, 2352,
	422, 2352,
	423, 2352,
	424, 2352,
	425, 2352,
	426, 2352,
	427, 2352,
	428, 2352,
	429, 2352,
	430, 2352,
	431, 2352,
	432, 2352,
	433, 2352,
	435, 2352,
	436, 2352,
	438, 2352,
	440, 2352,
	441, 2352,
	442, 2352,
	443, 2352,
	444, 2352,
	445, 2352,
	446, 2352,
	447, 2352,
	449, 2352,
	450, 2352,
	451, 2352,
	452, 2352,
	453, 2352,
	455, 2352,
	457, 2352,
	458, 2352,
	459, 2352,
	460, 2352,
	461, 2352,
	463, 2352,
	464, 2352,
	465, 2352,
	467, 2352,
	468, 2352,
	471, 2352,
	472, 2352,
	473, 2352,
	474, 2352,
	475, 2352,
	476, 2352,
	477, 2352,
	479, 2352,
	482, 2352,
	483, 2352,
	484, 2352,
	485, 2352,
	486, 2352,
	487, 2352,
	489, 2352,
	490, 2352,
	491, 2352,
	492, 2352,
	497, 2352,
	498, 2352,
	499, 2352,
	500, 2352,
	501, 2352,
	502, 2352,
	503, 2352,
	504, 2352,
	507, 2352,
	508, 2352,
	509, 2352,
	510, 2352,
	511, 2352,
	512, 2352,
	514, 2352,
	515, 2352,
	516, 2352,
	517, 2352,
	518, 2352,
	519, 2352,
	520, 2352,
	521, 2352,
	522, 2352,
	524, 2352,
	527, 2352,
	528, 2352,
	530, 2352,
	531, 2352,
	-2, 0,
	-1, 1466,
	178, 2244,
	454, 2244,
	509, 2244,
	528, 2244,
	-2, 0,
	-1, 1515,
	348, 772,
	403, 772,
	-2, 0,
	-1, 1540,
	1, 767,
	525, 767,
	527, 767,
	529, 767,
	-2, 0,
	-1, 1541,
	1, 803,
	525, 803,
	527, 803,
	529, 803,
	-2, 0,
	-1, 1542,
	1, 774,
	525, 774,
	527, 774,
	529, 774,
	-2, 0,
	-1, 1544,
	1, 778,
	525, 778,
	527, 778,
	529, 778,
	-2, 0,
	-1, 1550,
	1, 785,
	525, 785,
	527, 785,
	529, 785,
	-2, 0,
	-1, 1578,
	1, 2298,
	525, 2298,
	527, 2298,
	528, 2298,
	529, 2298,
	-2, 832,
	-1, 1579,
	1, 2241,
	525, 2241,
	527, 2241,
	528, 2241,
	529, 2241,
	-2, 833,
	-1, 1594,
	1, 1209,
	529, 1209,
	-2, 1214,
	-1, 1597,
	162, 1338,
	175, 1338,
	255, 1338,
	304, 1338,
	-2, 1278,
	-1, 1691,
	144, 1299,
	162, 1299,
	175, 1299,
	222, 1299,
	255, 1299,
	304, 1299,
	314, 1299,
	469, 1299,
	-2, 1704,
	-1, 1751,
	527, 1854,
	-2, 0,
	-1, 1786,
	144, 1299,
	162, 1299,
	175, 1299,
	222, 1299,
	255, 1299,
	304, 1299,
	314, 1299,
	469, 1299,
	-2, 1419,
	-1, 1835,
	526, 1531,
	-2, 1519,
	-1, 1872,
	1, 607,
	529, 607,
	-2, 1214,
	-1, 1984,
	205, 217,
	-2, 1993,
	-1, 1985,
	205, 218,
	-2, 260,
	-1, 2112,
	1, 769,
	525, 769,
	527, 769,
	529, 769,
	-2, 0,
	-1, 2113,
	1, 805,
	525, 805,
	527, 805,
	529, 805,
	-2, 0,
	-1, 2143,
	1, 787,
	525, 787,
	527, 787,
	529, 787,
	-2, 0,
	-1, 2189,
	383, 1365,
	384, 1365,
	-2, 1564,
	-1, 2220,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1584,
	-1, 2221,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1585,
	-1, 2222,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1586,
	-1, 2223,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1587,
	-1, 2224,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1588,
	-1, 2225,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1589,
	-1, 2226,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1590,
	-1, 2227,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1591,
	-1, 2239,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1603,
	-1, 2240,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1604,
	-1, 2241,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1605,
	-1, 2244,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1610,
	-1, 2250,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1614,
	-1, 2252,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1622,
	-1, 2253,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1623,
	-1, 2254,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1624,
	-1, 2255,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1625,
	-1, 2367,
	5, 1997,
	178, 1865,
	526, 1994,
	-2, 1985,
	-1, 2368,
	178, 1866,
	-2, 2303,
	-1, 2369,
	178, 1867,
	-2, 2153,
	-1, 2370,
	178, 1868,
	-2, 2063,
	-1, 2371,
	178, 1869,
	-2, 2107,
	-1, 2372,
	178, 1870,
	-2, 2148,
	-1, 2373,
	178, 1871,
	-2, 2239,
	-1, 2374,
	178, 1872,
	-2, 1687,
	-1, 2443,
	1, 1420,
	2, 1420,
	103, 1420,
	144, 1420,
	162, 1420,
	175, 1420,
	179, 1420,
	189, 1420,
	192, 1420,
	218, 1420,
	222, 1420,
	233, 1420,
	251, 1420,
	255, 1420,
	279, 1420,
	304, 1420,
	308, 1420,
	314, 1420,
	374, 1420,
	378, 1420,
	469, 1420,
	480, 1420,
	494, 1420,
	495, 1420,
	496, 1420,
	505, 1420,
	525, 1420,
	527, 1420,
	529, 1420,
	531, 1420,
	-2, 1419,
	-1, 2456,
	526, 1966,
	-2, 1980,
	-1, 2458,
	1, 276,
	-2, 1326,
	-1, 2483,
	526, 1530,
	-2, 1520,
	-1, 2618,
	1, 1107,
	525, 1107,
	527, 1107,
	529, 1107,
	-2, 1326,
	-1, 2790,
	309, 1368,
	-2, 2342,
	-1, 2791,
	309, 1369,
	-2, 2225,
	-1, 2795,
	383, 1931,
	384, 1931,
	-2, 1685,
	-1, 2796,
	383, 1935,
	384, 1935,
	-2, 1686,
	-1, 2797,
	383, 1932,
	384, 1932,
	-2, 1685,
	-1, 2798,
	383, 1936,
	384, 1936,
	-2, 1686,
	-1, 2811,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1612,
	-1, 2812,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1616,
	-1, 2818,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1618,
	-1, 3022,
	230, 1214,
	344, 1214,
	352, 1214,
	505, 1214,
	-2, 604,
	-1, 3156,
	1, 1107,
	525, 1107,
	527, 1107,
	529, 1107,
	-2, 1326,
	-1, 3264,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1620,
	-1, 3271,
	227, 0,
	229, 0,
	295, 0,
	-2, 1639,
	-1, 3338,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1668,
	-1, 3339,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1669,
	-1, 3340,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1670,
	-1, 3344,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1674,
	-1, 3345,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1675,
	-1, 3346,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1676,
	-1, 3392,
	526, 1967,
	-2, 1981,
	-1, 3529,
	528, 2458,
	-2, 1256,
	-1, 3587,
	227, 0,
	229, 0,
	295, 0,
	-2, 1640,
	-1, 3590,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1643,
	-1, 3591,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1645,
	-1, 3802,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1644,
	-1, 3803,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1646,
	-1, 3814,
	227, 0,
	-2, 1677,
	-1, 3964,
	227, 0,
	-2, 1678,
	-1, 4111,
	48, 0,
	202, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 2306,
}

const sqlPrivate = 57344

const sqlLast = 107855

var sqlAct = [...]int{

	244, 2679, 3142, 3727, 3846, 2945, 4110, 3892, 2709, 4007,
	4220, 3570, 3986, 2519, 4121, 4086, 4070, 4067, 3849, 3141,
	4052, 1981, 4122, 3424, 4123, 4169, 1129, 3899, 3303, 1323,
	4109, 3968, 3834, 3759, 3754, 37, 3791, 3709, 2081, 2199,
	952, 3521, 1449, 3173, 3908, 2090, 3741, 3463, 3657, 1444,
	3040, 2267, 3931, 1606, 1007, 3498, 943, 1822, 3127, 3168,
	2583, 3166, 2065, 3483, 3137, 3764, 1925, 3425, 1481, 3481,
	684, 3219, 649, 2399, 3256, 1792, 2718, 3819, 1188, 2200,
	2804, 2650, 3221, 2731, 2026, 1281, 2668, 2641, 3394, 2720,
	1306, 1118, 2988, 2960, 684, 2968, 2207, 2928, 3626, 951,
	163, 2663, 783, 3569, 2728, 2088, 2665, 1523, 2717, 1976,
	2711, 2680, 2521, 4, 2436, 2949, 2927, 1761, 2204, 2951,
	1935, 1975, 2558, 3969, 1699, 2435, 2309, 2063, 3363, 2280,
	679, 1480, 1737, 2597, 2788, 2438, 101, 1970, 1424, 238,
	3059, 2727, 1961, 1954, 1000, 2651, 1172, 1762, 2052, 3893,
	1911, 1908, 2300, 1289, 1594, 2396, 1823, 2995, 237, 2264,
	1898, 996, 2188, 2171, 3139, 1050, 2417, 1459, 2169, 1445,
	1435, 2468, 2673, 2721, 1376, 685, 1005, 2015, 615, 1161,
	2510, 2425, 2467, 601, 686, 2303, 163, 623, 1732, 1781,
	1448, 1112, 1771, 1091, 2363, 2407, 2281, 1607, 172, 1684,
	777, 1109, 2353, 1608, 2170, 1550, 1308, 681, 2172, 690,
	1286, 2014, 631, 1126, 643, 2038, 1457, 756, 1400, 729,
	1924, 1318, 2193, 2557, 173, 981, 618, 42, 693, 41,
	39, 626, 30, 690, 28, 26, 1089, 1114, 1613, 1593,
	2839, 842, 1329, 861, 2835, 1621, 1622, 3377, 2054, 3378,
	2054, 2054, 693, 4286, 2054, 2054, 4280, 2416, 2947, 998,
	3200, 4264, 1621, 1622, 4263, 2416, 4237, 1652, 2416, 4235,
	3673, 4231, 947, 3673, 1624, 1989, 2311, 4151, 4145, 1778,
	3183, 4152, 2416, 4143, 1652, 4140, 4137, 2416, 4132, 4141,
	4138, 1624, 1989, 4107, 1003, 3182, 1108, 1989, 4106, 4105,
	4100, 798, 1989, 2074, 2074, 4099, 4095, 3018, 1623, 2074,
	3673, 948, 2900, 2901, 947, 2918, 2919, 2920, 1643, 4093,
	4065, 3017, 3200, 3673, 3673, 1623, 1640, 4046, 1621, 1622,
	4039, 2474, 1106, 4038, 2416, 4033, 2409, 2416, 4032, 3673,
	1092, 1092, 3673, 4026, 4000, 3966, 2803, 1989, 3719, 2474,
	1652, 3948, 3945, 2579, 3942, 3558, 1989, 1624, 3673, 3901,
	3866, 3865, 928, 3902, 1989, 1989, 3857, 3856, 3825, 3804,
	1989, 3673, 1989, 2474, 1124, 3783, 3772, 3583, 3704, 2074,
	3200, 3003, 2416, 3692, 2470, 2915, 3672, 2416, 927, 3589,
	3673, 1623, 1169, 2474, 1169, 2416, 4047, 1646, 1647, 1648,
	1649, 1643, 3537, 3961, 3531, 3496, 3216, 1629, 3216, 3497,
	1543, 3387, 3385, 937, 942, 3388, 3386, 3370, 2089, 1989,
	3367, 2416, 1621, 1622, 1629, 3287, 3283, 3215, 3207, 1989,
	2416, 3216, 3208, 2944, 2939, 1482, 2938, 2416, 2416, 2891,
	2416, 2848, 1093, 2892, 1652, 1651, 1653, 2849, 2889, 2881,
	2879, 1624, 2890, 2882, 2416, 1489, 3949, 2850, 2072, 1145,
	1322, 2416, 1651, 1653, 2734, 2707, 2074, 1140, 2074, 2077,
	1638, 1639, 2706, 2494, 2906, 2473, 2077, 2416, 3367, 2474,
	1646, 1647, 1648, 1649, 2465, 1623, 2408, 2459, 2416, 2416,
	1629, 1989, 2415, 2076, 3753, 3719, 2416, 2077, 1095, 1644,
	1096, 210, 3693, 1989, 1621, 1622, 3558, 1121, 3208, 2574,
	1664, 1665, 1666, 1929, 2509, 1878, 1644, 210, 2053, 2647,
	2069, 1988, 2900, 2901, 2591, 2507, 1652, 1757, 1651, 1653,
	1317, 2838, 3454, 1624, 3259, 3237, 1779, 1964, 3184, 2452,
	1525, 1670, 3642, 212, 1141, 2451, 2450, 2900, 2901, 2449,
	2918, 2919, 2920, 2448, 210, 1097, 1094, 3185, 2055, 212,
	2055, 2055, 936, 935, 2055, 2055, 2916, 1623, 3585, 934,
	2900, 2901, 2768, 2918, 2919, 2920, 933, 1643, 932, 931,
	2900, 2901, 1644, 1331, 1629, 1640, 930, 926, 925, 211,
	924, 3584, 923, 922, 921, 2915, 212, 920, 919, 1650,
	204, 918, 917, 916, 915, 211, 914, 86, 205, 913,
	912, 911, 910, 892, 840, 839, 204, 838, 837, 1645,
	2915, 836, 1651, 1653, 205, 2900, 2901, 835, 1331, 834,
	174, 2336, 833, 3182, 832, 831, 1645, 830, 829, 828,
	827, 826, 211, 2915, 825, 824, 174, 823, 1005, 2322,
	822, 821, 1005, 820, 819, 818, 1646, 1647, 1648, 1649,
	1141, 817, 816, 815, 814, 813, 1629, 1191, 812, 811,
	801, 1191, 1322, 800, 2072, 1311, 1644, 796, 795, 789,
	788, 747, 1650, 174, 2906, 746, 2917, 3601, 1171, 2408,
	1165, 706, 1176, 705, 704, 1661, 696, 695, 1671, 1005,
	694, 1005, 1645, 1005, 1651, 1653, 663, 655, 1311, 2906,
	654, 653, 637, 232, 231, 2320, 230, 2695, 1343, 2053,
	2072, 4128, 1297, 2069, 2164, 229, 228, 227, 1337, 1638,
	1639, 1311, 2906, 226, 1292, 1328, 225, 1335, 224, 1341,
	223, 222, 2906, 221, 220, 1641, 1637, 1659, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 219, 1644, 218,
	217, 216, 1475, 2921, 1321, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 1311, 1005, 2916, 215, 214, 213,
	1311, 3404, 1382, 1384, 1311, 3381, 2921, 2906, 3217, 2991,
	3766, 2861, 1005, 2844, 1005, 2628, 1645, 2659, 1311, 1159,
	2478, 2916, 2457, 1782, 1005, 210, 1005, 2442, 2912, 2913,
	2914, 1455, 1141, 1906, 1805, 2911, 2909, 2910, 2902, 2903,
	2904, 2905, 2907, 2908, 2916, 1710, 1620, 690, 1473, 1701,
	1478, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	1487, 1325, 1492, 1178, 1128, 2942, 693, 212, 1311, 210,
	210, 4108, 4014, 3958, 2900, 2901, 1740, 1154, 1650, 3818,
	1740, 136, 1739, 1320, 1300, 1005, 1739, 1184, 1005, 1278,
	1283, 2943, 1319, 2084, 3952, 3950, 3844, 3773, 1645, 2916,
	163, 163, 3752, 3649, 1743, 2676, 1330, 3624, 1738, 3501,
	3623, 212, 212, 211, 1462, 1464, 2917, 3617, 3616, 1544,
	3615, 1545, 3608, 1662, 204, 3607, 1429, 1432, 2900, 2901,
	1494, 3605, 205, 3600, 1342, 3597, 948, 3596, 3495, 1372,
	3408, 2917, 1621, 1622, 1336, 3407, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 174, 1331, 1002, 211, 211, 3406,
	2900, 2901, 1165, 1441, 2917, 1165, 1387, 3391, 204, 204,
	3358, 1624, 2083, 3357, 3356, 3452, 205, 205, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 3768, 3279, 3275, 2986, 2935,
	1702, 2926, 1700, 1708, 3211, 2899, 2896, 1559, 174, 174,
	1105, 1438, 2895, 2893, 1598, 1623, 1460, 2888, 1493, 1005,
	2887, 2886, 2883, 2306, 2880, 1005, 1660, 2860, 2843, 2917,
	2836, 2708, 2443, 1663, 1641, 1637, 2661, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 2906, 2293, 1620, 2029,
	1701, 1619, 4279, 1996, 4229, 2911, 2909, 2910, 2902, 2903,
	2904, 2905, 2907, 2908, 4228, 1474, 3502, 3009, 4161, 4159,
	1479, 2543, 1403, 2912, 2913, 2914, 1456, 1488, 4150, 1130,
	2911, 2909, 2910, 2902, 2903, 2904, 2905, 2907, 2908, 1331,
	1994, 3305, 1690, 4006, 3996, 3993, 2912, 2913, 2914, 3992,
	2906, 2307, 3991, 2911, 2909, 2910, 2902, 2903, 2904, 2905,
	2907, 2908, 3985, 3978, 1629, 1499, 2902, 2903, 2904, 2905,
	2907, 2908, 3946, 1516, 3930, 1592, 2900, 2901, 3929, 1005,
	1005, 1005, 2906, 2270, 2940, 1005, 1546, 3917, 2916, 3502,
	1303, 3914, 1126, 210, 1126, 3862, 3840, 3816, 3799, 1759,
	3798, 3780, 3779, 210, 3744, 948, 3720, 3641, 3622, 1191,
	2910, 2902, 2903, 2904, 2905, 2907, 2908, 1005, 3559, 1595,
	684, 3553, 3550, 1346, 1840, 684, 2308, 2305, 1603, 1120,
	928, 1796, 1602, 3442, 1005, 212, 2335, 210, 1311, 3441,
	1808, 210, 2916, 2276, 3428, 212, 1378, 3427, 1597, 3373,
	1819, 3361, 3270, 1005, 2321, 1866, 927, 1688, 1768, 1191,
	1599, 3218, 2660, 3767, 1616, 1617, 3201, 1742, 3159, 210,
	3970, 2983, 3099, 3072, 2916, 3043, 3042, 1813, 1834, 212,
	3011, 211, 1165, 212, 2865, 2864, 2859, 2827, 2640, 1452,
	1815, 211, 204, 1904, 1746, 163, 1745, 1765, 1766, 1468,
	205, 1744, 204, 1741, 1869, 1733, 1092, 1870, 2917, 1731,
	205, 212, 2485, 1789, 1734, 1735, 1621, 1622, 2484, 3747,
	2319, 2454, 174, 2447, 2414, 211, 2318, 1804, 1875, 211,
	948, 1760, 174, 1755, 1754, 1753, 204, 1752, 2906, 1751,
	204, 1750, 1749, 1748, 205, 1624, 1747, 1728, 205, 1727,
	1726, 2310, 1725, 1124, 1724, 1124, 1723, 211, 1811, 690,
	1722, 210, 2917, 1507, 690, 1721, 174, 3043, 204, 1720,
	2675, 1719, 1718, 1895, 1717, 1812, 205, 1716, 693, 1623,
	2085, 1715, 1714, 693, 1790, 1787, 1703, 1621, 1622, 1837,
	1689, 1872, 1687, 1682, 2917, 1153, 1311, 1311, 174, 1868,
	1143, 1136, 3645, 212, 3593, 3403, 1191, 1758, 3384, 3376,
	2847, 2476, 2445, 3829, 1917, 3647, 1624, 950, 2900, 2901,
	3402, 1702, 1809, 1799, 3007, 1798, 1797, 1816, 1795, 1784,
	1794, 1793, 1863, 1950, 1685, 3695, 1953, 1621, 1622, 1958,
	2902, 2903, 2904, 2905, 2907, 2908, 1897, 4226, 1820, 211,
	1623, 1800, 4219, 3953, 3951, 1897, 2304, 3994, 3169, 1652,
	204, 1175, 3904, 210, 1982, 1986, 1624, 1897, 205, 1780,
	3075, 3903, 3771, 1900, 3722, 3721, 1890, 3694, 1629, 3644,
	3843, 2487, 1723, 1828, 3562, 3561, 1121, 3560, 1121, 3379,
	174, 2911, 2909, 2910, 2902, 2903, 2904, 2905, 2907, 2908,
	1623, 3203, 3909, 3202, 1169, 212, 1173, 1934, 1625, 1626,
	1627, 1628, 1630, 1631, 3505, 210, 1174, 2562, 1782, 1723,
	1590, 210, 1962, 1169, 2909, 2910, 2902, 2903, 2904, 2905,
	2907, 2908, 1740, 2885, 2884, 2809, 3440, 690, 1739, 2545,
	1166, 2019, 1170, 1712, 1311, 908, 1311, 3144, 1311, 3143,
	1524, 211, 1169, 2104, 2947, 4104, 693, 212, 3307, 2082,
	1884, 3900, 204, 212, 1311, 1311, 4148, 1560, 1515, 4133,
	205, 956, 4120, 1320, 1709, 1311, 3128, 2035, 2732, 1525,
	2024, 1977, 1319, 3820, 1104, 1873, 909, 1311, 2030, 1311,
	1311, 1311, 174, 1957, 3460, 3459, 1979, 3445, 3234, 1629,
	3020, 2301, 4129, 211, 2483, 1756, 2091, 1736, 3135, 211,
	684, 2023, 1428, 2853, 204, 1381, 1314, 1160, 2043, 1987,
	204, 1148, 205, 2588, 4142, 4139, 2103, 1929, 205, 3178,
	3419, 3987, 3755, 2585, 3008, 4064, 2032, 1651, 1653, 3975,
	3046, 3435, 2715, 1503, 174, 3121, 2672, 2057, 4186, 4185,
	174, 3251, 3024, 2087, 1167, 3883, 2007, 2006, 2059, 4210,
	3683, 2061, 1168, 4130, 1349, 2108, 906, 2066, 904, 1557,
	2068, 2495, 4274, 3876, 2071, 902, 3868, 3717, 900, 3469,
	948, 946, 948, 2149, 2904, 2905, 2907, 2908, 3473, 1359,
	1005, 1644, 1005, 2037, 2041, 897, 2092, 2147, 3468, 1005,
	3462, 1315, 1840, 1840, 1191, 3026, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 2181, 1005, 1558, 1005, 1005, 1005, 1005, 3472, 690,
	1460, 1885, 1460, 2168, 888, 979, 1834, 1834, 1556, 945,
	2078, 1154, 2079, 2045, 2046, 3458, 1005, 1360, 693, 1005,
	1005, 1403, 3456, 2040, 3416, 2040, 3415, 1005, 3124, 3002,
	2858, 1005, 1175, 1005, 1005, 2857, 2306, 2095, 2096, 2856,
	2855, 1191, 2813, 1175, 2595, 2594, 2179, 1005, 1005, 1005,
	1005, 742, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	2590, 1645, 210, 1166, 2581, 1169, 1501, 2126, 2573, 3074,
	2163, 2572, 2571, 2570, 1627, 1628, 1630, 1631, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1174, 2143, 4211,
	2177, 1005, 2282, 2283, 2082, 1166, 2549, 2536, 1174, 2466,
	2251, 947, 2192, 1126, 212, 1596, 2282, 2298, 2205, 2206,
	1191, 2349, 2348, 2513, 2307, 2669, 4214, 1837, 1837, 1126,
	2209, 1393, 1391, 1392, 1390, 1889, 1888, 2511, 3235, 1897,
	1899, 2005, 2344, 2167, 2180, 1005, 1191, 2166, 2173, 2165,
	3797, 1414, 928, 743, 2162, 928, 928, 1355, 1631, 2477,
	211, 2366, 2366, 2380, 948, 2282, 2523, 2297, 2400, 2402,
	2175, 204, 894, 948, 2406, 2547, 2502, 948, 2196, 205,
	2430, 2197, 2198, 2100, 2513, 1367, 2458, 1167, 1926, 2908,
	3679, 1316, 2535, 2158, 2566, 1168, 2153, 1569, 2511, 2308,
	2305, 174, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 3851,
	4215, 2786, 3696, 3242, 3431, 2559, 2560, 1311, 2455, 1167,
	1922, 1828, 1828, 2278, 2559, 2560, 2178, 1168, 1122, 2301,
	2266, 1496, 2422, 1092, 1555, 2179, 2559, 2560, 4238, 2295,
	2266, 3422, 2801, 2080, 1927, 1928, 2534, 1191, 1789, 1513,
	2274, 2116, 1892, 1601, 2771, 4185, 2444, 2272, 1517, 1452,
	2093, 163, 1770, 1165, 2042, 948, 944, 661, 2111, 3241,
	2094, 2161, 1923, 2526, 1124, 2471, 236, 1840, 2421, 2177,
	1589, 1573, 2102, 2375, 2105, 2106, 2107, 1152, 2391, 2362,
	1124, 2404, 2176, 2492, 2765, 2310, 2587, 2427, 2428, 3023,
	2542, 2412, 2413, 4217, 1525, 1191, 2423, 1875, 2429, 3716,
	2434, 3457, 3479, 2440, 2441, 3455, 809, 3853, 1800, 1311,
	1787, 1525, 613, 1936, 2310, 3296, 2586, 1742, 2469, 2515,
	3444, 1834, 1929, 2578, 1005, 1005, 2584, 1005, 1774, 3123,
	3093, 3669, 2589, 2119, 1497, 1940, 2569, 608, 1169, 2548,
	2346, 3478, 2774, 4230, 1894, 2347, 2493, 2800, 2350, 2514,
	2351, 2352, 3677, 1552, 2486, 660, 2582, 4202, 2629, 2160,
	2248, 2632, 2567, 2634, 3665, 2490, 3796, 1777, 1734, 1735,
	1169, 1502, 898, 2644, 898, 3089, 2491, 2489, 1120, 1893,
	1120, 898, 1772, 2657, 899, 2551, 2683, 2496, 2148, 1937,
	2112, 2546, 740, 2262, 739, 2178, 4126, 1121, 745, 744,
	1775, 898, 2146, 1133, 2674, 1311, 1311, 2674, 1311, 2157,
	1377, 3082, 2620, 1121, 3088, 3666, 2518, 4241, 2623, 2304,
	1311, 2260, 2625, 2552, 2528, 2531, 1540, 3293, 1773, 2525,
	2729, 2120, 1837, 2479, 939, 1311, 883, 4201, 2653, 2824,
	2310, 1948, 1131, 1932, 1500, 2113, 883, 4223, 2703, 2698,
	3081, 2619, 4174, 2538, 1375, 802, 2773, 2962, 690, 941,
	4216, 2176, 3575, 2737, 2738, 2550, 1413, 2822, 2464, 941,
	3574, 1005, 1354, 3432, 2744, 2745, 2746, 693, 2568, 2770,
	1947, 1541, 1931, 2754, 1941, 2755, 1993, 1992, 2733, 3175,
	3678, 3443, 1357, 2498, 1320, 2561, 2563, 2564, 2565, 1570,
	2793, 2794, 3294, 2626, 940, 2762, 163, 4043, 2500, 3988,
	2685, 2638, 4002, 2752, 2246, 1005, 2714, 2249, 4254, 2054,
	2704, 1005, 1005, 1920, 2648, 2689, 1828, 1776, 2735, 2692,
	790, 2693, 2739, 3852, 2740, 2667, 2690, 2256, 3176, 3025,
	1134, 2501, 2694, 4127, 2678, 1942, 1943, 884, 883, 1377,
	1567, 2776, 2512, 2778, 2257, 2749, 2524, 884, 1938, 2258,
	2499, 1920, 3102, 2263, 3736, 2756, 2245, 2758, 2772, 2760,
	776, 941, 2699, 2701, 1920, 2705, 1005, 1005, 662, 3005,
	2716, 659, 1005, 2819, 1912, 2159, 1729, 3661, 2769, 1913,
	3793, 3571, 3662, 2700, 3809, 1005, 1005, 1974, 1939, 895,
	1960, 1005, 1005, 4195, 3175, 2820, 4075, 1005, 2697, 2825,
	1568, 4005, 4154, 1571, 1460, 2815, 1005, 1005, 1005, 1621,
	1622, 4155, 1005, 1959, 3702, 2265, 4173, 2310, 4125, 2961,
	1965, 2816, 1005, 2273, 810, 1972, 2863, 3664, 1901, 1902,
	1973, 1652, 2292, 1512, 1514, 609, 2115, 1600, 1624, 1005,
	1681, 3667, 2846, 2792, 3057, 1955, 2426, 2118, 1498, 884,
	2751, 2783, 4242, 2110, 2802, 2782, 4041, 4221, 2439, 2757,
	2837, 2759, 947, 2761, 3063, 2192, 3309, 2787, 4252, 1927,
	1928, 1151, 1623, 3746, 803, 804, 3565, 3399, 1146, 3576,
	2841, 2842, 2382, 3253, 1572, 2845, 2781, 1914, 2784, 1944,
	4042, 1770, 2779, 3056, 2513, 4008, 4124, 1956, 4184, 610,
	885, 3065, 4182, 3792, 1916, 1005, 1005, 1005, 2529, 1929,
	885, 1528, 2247, 2259, 1005, 1005, 1005, 1951, 4023, 1005,
	3916, 3519, 2261, 3162, 2013, 1774, 1767, 948, 2814, 1005,
	1126, 1191, 1144, 1971, 2618, 1005, 3737, 1005, 2954, 2955,
	3500, 611, 3486, 612, 1139, 1126, 600, 4222, 1610, 791,
	792, 3484, 1611, 3572, 3663, 1610, 1132, 3064, 1945, 2821,
	2195, 1605, 1930, 1191, 1777, 1886, 1918, 1774, 2823, 3257,
	3859, 1629, 2852, 2996, 3858, 1126, 3620, 3838, 1191, 2424,
	4224, 4172, 3923, 3362, 3974, 2976, 3520, 3466, 4247, 3347,
	3670, 3418, 2937, 3682, 3940, 1840, 3163, 1775, 3155, 1191,
	3681, 3038, 3034, 1883, 2658, 2652, 1777, 2642, 2956, 1651,
	1653, 2185, 885, 2036, 1005, 2025, 3001, 4153, 4255, 2055,
	2018, 1772, 3794, 2001, 938, 3292, 886, 2966, 1005, 2553,
	2702, 1452, 2990, 805, 806, 4009, 886, 4053, 3015, 1775,
	1840, 1609, 3254, 2985, 3030, 3031, 3932, 3412, 1609, 1834,
	3522, 3760, 3487, 2154, 3021, 1879, 1005, 1311, 3933, 1610,
	2743, 1165, 3047, 1644, 2964, 3051, 2989, 1773, 3027, 2932,
	2933, 2934, 887, 1881, 1919, 2965, 2948, 636, 1920, 2639,
	2974, 2982, 887, 3577, 3898, 1416, 2977, 2978, 2994, 3934,
	1611, 1124, 1311, 2975, 1834, 3069, 3070, 1611, 2418, 3071,
	3048, 1882, 1191, 3053, 3054, 2101, 1124, 3896, 793, 794,
	2963, 1311, 3839, 3049, 3035, 1681, 1311, 3029, 3045, 3105,
	1968, 3044, 3108, 2186, 1776, 1284, 3113, 3115, 1296, 1299,
	3077, 3096, 3097, 2807, 2785, 3098, 1124, 1311, 886, 2998,
	2999, 3000, 1542, 1311, 1949, 1311, 3621, 3060, 3936, 1191,
	3348, 3006, 1609, 2980, 3080, 2981, 684, 3578, 2970, 3349,
	1837, 2530, 3100, 1966, 3935, 4246, 1776, 1311, 2420, 3375,
	3022, 2959, 3680, 2419, 3140, 2958, 3091, 1311, 2463, 1917,
	3028, 3937, 3060, 1645, 887, 2554, 2555, 1952, 3485, 1299,
	1299, 2462, 2461, 1126, 1385, 945, 3039, 3171, 2460, 3491,
	3154, 3060, 1967, 4010, 3149, 1837, 3060, 1386, 1917, 2729,
	3066, 3126, 3073, 3129, 2646, 3413, 3981, 1529, 2729, 3847,
	3728, 3084, 3212, 2034, 1121, 3033, 3131, 3777, 1299, 1120,
	4192, 1399, 3092, 3087, 1915, 1311, 1311, 3095, 1812, 1121,
	1397, 808, 3180, 3894, 1962, 1120, 3101, 2736, 2971, 3111,
	3118, 3110, 1962, 2624, 1828, 2622, 3117, 1311, 1506, 3079,
	3122, 3836, 3103, 3486, 4061, 4050, 2997, 3199, 3627, 1121,
	4079, 3364, 3484, 964, 4056, 3982, 2317, 4194, 3192, 4144,
	3090, 3012, 3013, 1587, 3014, 1585, 3133, 3995, 3776, 3164,
	697, 1191, 2551, 1564, 1191, 690, 2969, 1562, 3837, 1828,
	3109, 1539, 3236, 3815, 3094, 3116, 3085, 1122, 3172, 1122,
	3086, 3848, 1537, 1535, 693, 1625, 1626, 1627, 1628, 1630,
	1631, 2973, 1533, 1531, 1005, 1522, 163, 163, 3619, 3490,
	1005, 1005, 948, 3179, 1005, 1005, 1005, 3177, 1005, 3230,
	3197, 3198, 635, 3125, 3193, 3210, 3186, 1005, 1840, 1520,
	3189, 4057, 3983, 3214, 1124, 1395, 1005, 3248, 3188, 1005,
	3152, 3190, 3191, 2929, 3269, 1191, 3194, 3232, 3195, 3016,
	3196, 2894, 3247, 3487, 1005, 2361, 2357, 2826, 2643, 2580,
	2544, 2488, 1191, 1807, 1803, 3238, 1588, 3239, 3231, 3240,
	1484, 3938, 1840, 1840, 1005, 1005, 3939, 1005, 1005, 1005,
	2145, 3170, 1834, 3255, 4119, 3272, 2930, 3250, 3249, 1605,
	2972, 2767, 2766, 3703, 2316, 1005, 2742, 3281, 3282, 1005,
	2174, 1840, 1840, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 3252, 1005, 3244, 3482, 1834, 1834, 2355, 3229,
	1005, 1005, 1840, 1398, 2156, 3104, 3691, 1005, 3222, 1586,
	1551, 1584, 1396, 807, 2123, 2359, 2360, 2358, 1005, 1563,
	4170, 1998, 1867, 1561, 4196, 1834, 1834, 1538, 1713, 1126,
	1126, 1495, 1371, 1005, 4049, 3277, 3758, 1121, 1536, 1534,
	3708, 3654, 1912, 3518, 3288, 3510, 3471, 1913, 1532, 1530,
	3289, 1521, 3245, 3295, 3297, 3298, 1834, 3304, 3438, 3485,
	3311, 3436, 1191, 1837, 3417, 3158, 3153, 3145, 2696, 698,
	699, 2691, 3380, 2670, 2656, 1519, 2649, 2636, 2354, 2356,
	3359, 1394, 2621, 3321, 3324, 3322, 3319, 2075, 2073, 3326,
	3320, 2070, 2067, 2062, 3224, 3351, 2060, 1005, 2205, 3312,
	2056, 2047, 3397, 3398, 1997, 1995, 1978, 1837, 1837, 3223,
	163, 1963, 1946, 1005, 1005, 3352, 3409, 3410, 3411, 1933,
	1921, 3167, 3119, 2144, 3360, 3366, 1101, 2205, 3327, 3112,
	1013, 4162, 1614, 1814, 1972, 4186, 1837, 1837, 4089, 3782,
	3775, 1296, 2805, 1005, 1005, 3774, 3715, 3650, 3371, 3372,
	3396, 1102, 3150, 3368, 3369, 1914, 2730, 1828, 3355, 1905,
	1351, 3925, 3156, 2533, 3530, 3382, 2513, 1837, 1929, 2114,
	1005, 1437, 1916, 2189, 240, 240, 240, 3383, 603, 604,
	2511, 619, 603, 619, 629, 634, 701, 700, 2033, 652,
	1124, 1124, 1311, 2513, 658, 1582, 1583, 2140, 1436, 2139,
	240, 1828, 1828, 4088, 2121, 3684, 3299, 2532, 3710, 1518,
	896, 1840, 3960, 3451, 3453, 3628, 3446, 3450, 787, 3606,
	3205, 3206, 2556, 3421, 240, 3467, 2537, 1618, 3395, 3318,
	1828, 1828, 2806, 4188, 1918, 674, 4180, 1615, 614, 1311,
	702, 703, 1971, 3461, 1621, 1622, 1005, 3465, 1621, 1622,
	233, 4149, 2635, 2142, 1126, 1005, 1103, 3532, 1876, 3489,
	2585, 1828, 3506, 3512, 2593, 1834, 2683, 2592, 3464, 2575,
	3437, 1437, 3439, 1311, 1311, 1311, 2539, 1624, 2551, 3477,
	3541, 1437, 3225, 3226, 3227, 3228, 2577, 4048, 3527, 1311,
	3493, 625, 4018, 2541, 3507, 597, 4218, 3523, 3526, 2576,
	2729, 3229, 3480, 3845, 4015, 3488, 2540, 1623, 1191, 3508,
	3222, 1623, 2383, 3513, 3545, 730, 3980, 3912, 3891, 3509,
	3499, 773, 3390, 1121, 1121, 3157, 2677, 2405, 1871, 3524,
	1191, 3557, 3470, 1005, 1005, 603, 603, 1821, 3564, 1005,
	1005, 1840, 1919, 240, 1005, 1005, 1920, 1005, 3511, 3004,
	3525, 1005, 901, 903, 905, 4245, 2900, 2901, 3405, 1621,
	1622, 4081, 1005, 3528, 3533, 1322, 4082, 3039, 4081, 3534,
	2505, 2506, 3598, 4082, 2503, 2504, 1837, 4017, 1005, 3546,
	3547, 3540, 2022, 3551, 3476, 3067, 2312, 3548, 3554, 3552,
	3580, 3555, 4198, 1505, 3401, 1834, 3224, 2505, 3588, 1504,
	2503, 2345, 1566, 3913, 3877, 1565, 3711, 3563, 3538, 3579,
	3707, 3223, 3539, 3706, 3594, 1124, 1120, 3516, 3400, 3300,
	3592, 3568, 3573, 3106, 3068, 1707, 1706, 4232, 4203, 3971,
	3872, 1120, 3830, 3827, 3739, 3646, 3556, 3536, 1126, 3494,
	3492, 3434, 1296, 3429, 3187, 1084, 1126, 3161, 3160, 2764,
	1191, 2748, 1191, 2747, 2687, 2662, 2637, 2481, 2480, 1126,
	2277, 1120, 2141, 2138, 2137, 2136, 1912, 2135, 2050, 2049,
	1828, 1913, 2048, 3633, 2031, 1191, 2008, 2004, 2003, 2002,
	2000, 1999, 1581, 3220, 1580, 1526, 1423, 1422, 1421, 1420,
	1419, 1418, 3618, 1417, 1415, 1410, 1409, 1408, 1005, 3651,
	3652, 1407, 1915, 1406, 1366, 1365, 1837, 1364, 1363, 1362,
	3636, 1361, 1356, 1350, 1348, 1347, 1182, 1181, 1122, 1180,
	3685, 3675, 1179, 1150, 1149, 1191, 1877, 907, 3676, 893,
	3850, 163, 3639, 1191, 1122, 3668, 3632, 3630, 3631, 1575,
	84, 3687, 3688, 3635, 1358, 3625, 718, 78, 1121, 1969,
	2989, 3640, 3643, 3712, 3433, 3713, 866, 3629, 4078, 3686,
	1344, 1311, 1311, 4001, 3653, 3634, 725, 4063, 3055, 2596,
	2122, 1527, 2124, 2984, 2446, 4040, 3602, 3674, 2862, 1914,
	3967, 3729, 3808, 2315, 3225, 3226, 3227, 3228, 1711, 1191,
	3726, 2941, 3714, 3705, 1311, 80, 1916, 989, 1035, 1124,
	1828, 3735, 3734, 3724, 3655, 3738, 3420, 1124, 2719, 3718,
	3751, 3699, 3732, 3731, 3701, 3749, 1825, 3723, 1827, 955,
	1124, 1005, 1194, 1887, 995, 1903, 1896, 3474, 2482, 2365,
	3725, 1311, 1311, 1311, 1012, 1009, 1829, 3769, 1831, 1011,
	1010, 1830, 1191, 1730, 3778, 1008, 1824, 3515, 3514, 3756,
	3765, 2645, 3761, 3781, 1005, 1005, 1005, 3730, 1918, 3770,
	3748, 3745, 2681, 1402, 868, 3750, 1891, 2271, 2299, 2851,
	1704, 970, 1191, 991, 2296, 1142, 980, 1005, 969, 1120,
	1005, 1005, 3763, 2967, 3762, 2946, 3174, 3389, 2184, 734,
	1005, 2897, 2302, 1840, 1135, 2388, 2381, 2377, 1005, 1005,
	3787, 3785, 3019, 2671, 1591, 3690, 1683, 2682, 3542, 3543,
	3544, 3784, 1177, 1191, 973, 1311, 3698, 3789, 3700, 2269,
	3795, 1695, 3805, 2831, 1452, 2194, 3181, 2987, 2475, 1191,
	4085, 3800, 1121, 3308, 2012, 1100, 1137, 1005, 1099, 2433,
	1121, 1098, 4069, 4066, 1005, 3549, 2789, 1834, 3138, 1880,
	3817, 2497, 1005, 1121, 1840, 1673, 3811, 3146, 985, 1295,
	2952, 3213, 1005, 1368, 1147, 1005, 1919, 657, 997, 1672,
	1920, 2615, 3822, 652, 1005, 2614, 3977, 3832, 3823, 3824,
	1164, 1191, 1163, 3826, 1162, 3037, 4253, 3430, 209, 2799,
	1612, 1604, 1311, 1311, 206, 208, 240, 207, 240, 240,
	1287, 3831, 240, 240, 1302, 3871, 3740, 3393, 1834, 1909,
	2993, 3854, 1693, 4147, 3448, 3130, 1698, 21, 240, 3855,
	1324, 20, 3882, 19, 1299, 3833, 2383, 2383, 3140, 1191,
	105, 40, 1311, 18, 3873, 3906, 3869, 119, 135, 3897,
	134, 133, 132, 131, 137, 1353, 130, 3911, 1910, 129,
	1005, 1005, 124, 3886, 3890, 3895, 128, 1370, 1837, 1302,
	3887, 3889, 3910, 240, 240, 127, 1287, 3924, 126, 1005,
	1005, 1299, 3885, 3943, 3944, 125, 240, 3879, 3922, 3905,
	123, 122, 3928, 121, 1412, 120, 1005, 1840, 118, 3918,
	3919, 117, 3947, 3927, 3765, 3921, 240, 116, 240, 240,
	3941, 1287, 240, 1302, 3863, 3864, 3926, 115, 114, 113,
	3861, 1005, 112, 652, 1005, 240, 240, 111, 110, 1837,
	109, 108, 3920, 3984, 107, 106, 1915, 648, 3878, 645,
	3955, 3880, 3881, 1005, 57, 3959, 56, 104, 787, 3973,
	103, 1834, 3956, 3957, 3965, 17, 2383, 2383, 2383, 38,
	14, 3972, 1828, 1284, 61, 62, 3990, 16, 13, 33,
	83, 95, 94, 34, 92, 1120, 1120, 91, 32, 3989,
	1296, 15, 89, 88, 1005, 1005, 31, 3884, 29, 11,
	9, 8, 4004, 3874, 35, 1005, 1791, 12, 1005, 5,
	1311, 168, 167, 170, 166, 3997, 1452, 4003, 169, 82,
	1311, 1311, 165, 3999, 1116, 164, 81, 240, 4020, 27,
	10, 4022, 160, 1828, 4012, 4013, 3907, 1311, 4019, 4011,
	3504, 76, 4016, 3910, 240, 4031, 162, 161, 159, 158,
	157, 1005, 1005, 4025, 77, 74, 156, 155, 75, 154,
	4028, 25, 4029, 4030, 6, 60, 4027, 7, 235, 235,
	599, 4036, 1837, 4037, 3790, 3233, 4035, 98, 99, 4034,
	4060, 36, 4058, 72, 1005, 1005, 3786, 1005, 3788, 71,
	70, 4045, 24, 4068, 4071, 59, 1299, 1299, 23, 197,
	4024, 196, 195, 194, 4083, 4059, 193, 192, 4090, 187,
	4087, 186, 191, 189, 4080, 188, 190, 185, 200, 199,
	201, 3998, 4098, 198, 4044, 4073, 4103, 4077, 203, 184,
	182, 178, 1005, 1005, 1005, 4102, 177, 181, 183, 180,
	4101, 4091, 179, 176, 4092, 202, 4094, 1296, 152, 4097,
	153, 67, 151, 4131, 150, 1005, 149, 4072, 148, 147,
	4076, 146, 145, 4115, 4116, 66, 1828, 4118, 4136, 4117,
	3828, 22, 2, 1, 0, 1122, 0, 0, 0, 4134,
	0, 0, 0, 0, 0, 1296, 0, 1296, 4156, 0,
	1122, 0, 0, 0, 0, 4165, 4158, 0, 0, 4167,
	0, 0, 1005, 0, 4160, 0, 0, 0, 4171, 4157,
	1120, 4166, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 0, 0, 0, 4187, 4163, 4164,
	4190, 4177, 4178, 0, 4168, 0, 4183, 4181, 0, 0,
	4068, 603, 4179, 4071, 0, 4189, 4191, 3888, 4193, 0,
	1005, 0, 1005, 0, 4208, 0, 4087, 4205, 4200, 0,
	4213, 4197, 240, 4212, 240, 0, 4204, 4206, 240, 0,
	4199, 0, 0, 4207, 0, 4209, 0, 0, 0, 0,
	0, 1324, 1287, 240, 0, 240, 0, 4225, 0, 0,
	240, 1324, 619, 0, 4227, 240, 1324, 0, 0, 0,
	4234, 0, 652, 0, 4233, 4239, 4236, 0, 0, 1005,
	1005, 4240, 0, 0, 0, 4243, 4146, 1005, 0, 1005,
	1005, 0, 4249, 0, 0, 0, 0, 0, 0, 4258,
	4260, 0, 4256, 4262, 0, 4261, 0, 0, 4257, 0,
	0, 0, 2683, 242, 0, 0, 4259, 0, 0, 4267,
	0, 4265, 0, 4270, 4269, 0, 4271, 0, 4272, 0,
	0, 4273, 4277, 4276, 0, 4275, 4268, 0, 4278, 0,
	1005, 4282, 0, 0, 4284, 4281, 1621, 1622, 4285, 0,
	4287, 0, 0, 0, 4288, 0, 0, 0, 0, 1621,
	1622, 3669, 4250, 4251, 1120, 0, 2383, 2383, 1652, 0,
	0, 0, 1120, 0, 0, 1624, 0, 0, 0, 0,
	0, 1652, 0, 0, 0, 1120, 0, 0, 1624, 0,
	0, 0, 0, 0, 3665, 0, 1189, 0, 3658, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 1122, 1623,
	0, 0, 0, 4283, 3656, 0, 0, 0, 0, 1643,
	0, 0, 1623, 3660, 0, 1452, 1452, 1640, 0, 0,
	0, 0, 1643, 0, 0, 240, 0, 0, 240, 0,
	1640, 0, 1452, 0, 0, 3666, 0, 0, 0, 0,
	0, 0, 0, 0, 2383, 2383, 2383, 2383, 2383, 2383,
	2383, 2383, 2383, 2383, 2383, 2383, 2383, 2383, 2383, 2383,
	2383, 2383, 2383, 0, 2383, 0, 0, 0, 3268, 0,
	0, 0, 0, 0, 0, 3659, 0, 0, 240, 968,
	0, 3263, 240, 0, 0, 2275, 240, 0, 1646, 1647,
	1648, 1649, 240, 0, 0, 0, 0, 0, 1629, 0,
	1693, 1646, 1647, 1648, 1649, 240, 0, 240, 0, 240,
	0, 1629, 0, 603, 0, 0, 0, 0, 0, 2612,
	0, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 0, 1296, 0, 1651, 1653, 0, 240,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 1651,
	1653, 2604, 2602, 0, 2387, 0, 0, 2022, 2606, 2608,
	2598, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 1638, 1639, 0, 652, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 69,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1644, 0, 73, 240, 3661, 1287, 240,
	0, 0, 3662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 240, 0, 240, 79, 240, 0, 240, 0, 240,
	1186, 0, 0, 0, 0, 0, 1294, 3664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2150,
	0, 3667, 2151, 0, 2152, 0, 664, 2828, 2829, 0,
	0, 85, 1296, 1296, 1122, 1122, 240, 0, 0, 0,
	1650, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	86, 97, 0, 1650, 0, 0, 0, 634, 0, 0,
	1645, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	2600, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2613, 2605, 2603, 2607, 2609, 2599, 2601, 0, 87,
	1427, 0, 1427, 1427, 2611, 2900, 2901, 0, 2918, 2919,
	2920, 1296, 0, 0, 0, 0, 0, 0, 0, 1469,
	1470, 0, 0, 0, 0, 0, 3274, 0, 0, 0,
	0, 0, 0, 0, 3663, 0, 0, 2616, 0, 669,
	0, 0, 0, 0, 0, 0, 0, 2923, 2924, 2925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3670, 0, 0, 0, 0, 0, 0, 0, 2915, 0,
	0, 0, 0, 0, 0, 0, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1806, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 1574, 0, 677, 1621, 1622, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 1652, 671, 0, 0,
	0, 0, 603, 1624, 0, 0, 0, 0, 1907, 240,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 240, 0, 171, 93, 2906, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 240, 1302,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	2617, 675, 210, 0, 0, 1640, 0, 0, 0, 2610,
	782, 968, 0, 0, 136, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 2921, 0, 0, 1275, 240, 1302, 0, 619, 240,
	0, 0, 0, 0, 212, 0, 0, 0, 2387, 0,
	0, 0, 0, 0, 0, 0, 3262, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 138, 2916,
	0, 0, 0, 0, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 175, 2522, 670, 0, 1629, 0, 0, 0,
	211, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 240, 1990, 0, 0, 0, 205,
	0, 0, 0, 676, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 1651, 1653, 673, 0, 2387, 2387,
	0, 174, 668, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	1639, 0, 1299, 1122, 0, 0, 0, 0, 0, 240,
	2627, 1122, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 1122, 0, 0, 1810, 1644, 1294,
	0, 0, 0, 0, 1324, 0, 0, 240, 0, 2917,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 672,
	2022, 0, 0, 2666, 0, 0, 0, 0, 0, 0,
	0, 0, 678, 2522, 0, 603, 0, 0, 2686, 0,
	0, 2383, 0, 667, 240, 0, 0, 240, 0, 0,
	0, 240, 0, 240, 0, 0, 0, 0, 1287, 0,
	240, 240, 0, 1302, 1302, 0, 0, 0, 2387, 2387,
	2387, 0, 0, 2712, 787, 0, 2522, 2522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2383, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 3265, 3266, 240,
	1287, 240, 0, 0, 1324, 0, 1324, 0, 1645, 1287,
	0, 1287, 0, 1287, 0, 0, 0, 0, 0, 0,
	0, 2912, 2913, 2914, 0, 0, 0, 0, 2911, 2909,
	2910, 2902, 2903, 2904, 2905, 2907, 2908, 0, 240, 240,
	240, 240, 1287, 240, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 240, 3328, 3329, 3330, 3331, 3332,
	3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342,
	3343, 3344, 3345, 3346, 0, 3350, 0, 0, 0, 0,
	0, 0, 0, 2208, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 2017, 2383, 0, 0,
	778, 0, 0, 0, 1641, 1637, 2028, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 1404,
	0, 2039, 0, 2039, 0, 0, 68, 0, 781, 780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 0, 0, 73, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2313, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 1299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 968, 0, 0, 0,
	2017, 0, 1275, 2098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2117, 0, 0, 0, 100, 0,
	0, 0, 0, 86, 97, 2127, 0, 2129, 0, 2131,
	240, 2133, 0, 2134, 0, 2456, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	603, 0, 69, 0, 0, 603, 0, 0, 603, 1769,
	0, 603, 603, 0, 0, 0, 0, 603, 73, 0,
	2155, 0, 87, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2387, 2387,
	0, 2522, 2522, 240, 0, 1302, 2508, 0, 2522, 1275,
	0, 3041, 0, 0, 85, 0, 0, 0, 0, 2522,
	3041, 0, 2522, 3041, 3041, 0, 0, 0, 100, 0,
	0, 0, 0, 86, 97, 0, 0, 240, 240, 1302,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 240, 0, 0, 1287, 0, 0, 0, 90, 0,
	0, 0, 0, 0, 0, 0, 2522, 0, 3107, 2522,
	1302, 0, 87, 2522, 2522, 1302, 2387, 2387, 2387, 2387,
	2387, 2387, 2387, 2387, 2387, 2387, 2387, 2387, 2387, 2387,
	2387, 2387, 2387, 2387, 2387, 954, 2387, 0, 171, 93,
	0, 96, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 3134, 0, 0,
	3136, 2522, 0, 0, 240, 210, 0, 0, 240, 0,
	1302, 0, 0, 782, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2666, 1621,
	1622, 1287, 0, 240, 1296, 0, 2522, 2453, 603, 0,
	0, 0, 0, 0, 0, 2522, 0, 212, 0, 0,
	0, 1652, 240, 0, 0, 0, 240, 240, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 0, 240, 2666, 175, 0, 2666, 0, 0,
	0, 0, 1623, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 2028, 204, 0, 0, 0, 0, 0,
	1640, 0, 205, 0, 68, 0, 0, 0, 171, 93,
	1299, 96, 0, 0, 0, 0, 0, 0, 0, 3243,
	69, 0, 1287, 240, 779, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 73, 1621, 1622, 0,
	0, 0, 0, 782, 0, 0, 0, 136, 0, 0,
	0, 2817, 0, 0, 0, 0, 0, 0, 240, 1652,
	0, 0, 0, 0, 0, 0, 1624, 1275, 0, 0,
	0, 1646, 1647, 1648, 1649, 79, 0, 212, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 85, 0, 3306, 175, 0, 0, 1640, 1651,
	1653, 0, 0, 211, 0, 0, 100, 0, 0, 0,
	0, 86, 97, 0, 204, 0, 0, 0, 0, 0,
	0, 2017, 205, 0, 1638, 1639, 0, 0, 2028, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1465, 0, 0, 0, 0, 2810,
	0, 0, 3814, 1644, 0, 0, 0, 0, 2688, 0,
	87, 1427, 0, 0, 0, 1427, 0, 1427, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 3841,
	0, 0, 0, 1275, 0, 2741, 0, 0, 0, 0,
	0, 603, 603, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 0, 2750, 0, 2753, 0, 0, 0, 1275,
	0, 0, 0, 1324, 1324, 0, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 1324, 1324, 1324,
	2953, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 2775, 1294, 2777, 1294, 2472, 2780, 0, 0,
	0, 1644, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 2979, 0, 0, 0, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2992, 0, 0,
	1427, 0, 0, 0, 0, 652, 0, 0, 2808, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 3010, 0,
	0, 954, 0, 0, 0, 0, 171, 93, 0, 96,
	1275, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3964, 0,
	0, 0, 0, 210, 1302, 240, 0, 0, 0, 0,
	0, 782, 0, 0, 0, 136, 240, 0, 1326, 0,
	1332, 1650, 1338, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 1275, 240,
	0, 1645, 0, 240, 0, 212, 0, 0, 0, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 0, 0, 2522, 240, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2712, 2712, 175, 0, 0, 0, 787, 787, 2522,
	68, 211, 2666, 2666, 1453, 0, 787, 2522, 0, 0,
	0, 0, 204, 0, 0, 0, 69, 0, 0, 0,
	205, 1471, 0, 1476, 0, 0, 240, 0, 2992, 0,
	0, 0, 73, 1485, 0, 1490, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 0, 0, 1547, 0, 3603, 1553, 0, 0,
	0, 0, 0, 2387, 0, 0, 0, 0, 85, 0,
	0, 2900, 2901, 0, 2918, 2919, 2920, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 86, 97, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2387, 0, 0, 1657, 1652, 0, 0, 0, 240, 0,
	0, 1624, 0, 0, 1324, 0, 240, 0, 0, 1670,
	1290, 0, 0, 1189, 0, 0, 87, 3032, 0, 240,
	0, 0, 0, 0, 2915, 0, 0, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 2522, 2522, 2522, 0,
	0, 3076, 3078, 1640, 2028, 0, 0, 0, 1692, 1324,
	0, 0, 0, 0, 1705, 0, 0, 2522, 0, 3041,
	0, 0, 1324, 1324, 240, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 3285, 0, 1302, 240, 1302, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2522, 3301, 2522, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 2522, 0,
	0, 0, 0, 3742, 1629, 0, 0, 0, 0, 2387,
	0, 240, 90, 0, 0, 2922, 0, 0, 3147, 0,
	240, 0, 3151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 0, 1671, 2921, 1763, 1763,
	1763, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 93, 1324, 96, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 1427, 1638, 1639, 0,
	1294, 1294, 0, 0, 0, 2916, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 1659, 0, 782, 0, 0,
	0, 136, 0, 0, 0, 0, 1644, 3209, 0, 0,
	0, 3392, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 954, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 1658, 138, 0, 3246, 0, 1294,
	0, 1275, 0, 0, 0, 2522, 0, 3041, 0, 175,
	3835, 0, 0, 0, 0, 0, 0, 211, 240, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 3258, 0, 0, 0, 205, 968, 0, 0,
	0, 0, 0, 0, 652, 2917, 1650, 0, 0, 0,
	0, 968, 0, 1287, 0, 0, 0, 0, 1463, 0,
	0, 0, 0, 0, 0, 0, 1645, 1302, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3835, 0, 2900,
	2901, 1662, 2918, 2919, 2920, 2522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3915, 0, 0, 0,
	3273, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2900, 2901, 0, 2918,
	2919, 2920, 0, 0, 0, 0, 0, 240, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2915, 0, 0, 0, 0, 2912, 2913, 2914,
	0, 3306, 1275, 0, 2911, 2909, 2910, 2902, 2903, 2904,
	2905, 2907, 2908, 0, 1660, 0, 0, 3835, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 0, 0, 0, 3611, 2915,
	0, 0, 3610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2906, 0, 3742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 3041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2906, 0,
	0, 0, 1324, 0, 1324, 2921, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4054,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 240,
	0, 3638, 0, 2916, 0, 0, 0, 0, 0, 2028,
	0, 0, 2921, 0, 0, 0, 240, 2522, 0, 0,
	2028, 0, 0, 0, 3648, 0, 0, 0, 0, 0,
	3503, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 3517, 1275, 0,
	2916, 0, 0, 0, 0, 0, 0, 0, 3306, 2183,
	0, 2187, 0, 0, 0, 1275, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	0, 2250, 0, 2252, 2253, 2254, 2255, 0, 0, 0,
	3566, 0, 0, 2917, 0, 0, 0, 0, 0, 0,
	3835, 0, 0, 0, 0, 2279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	2294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 2522, 0, 0, 2324, 2327, 2330, 2333,
	2917, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1189, 0, 0, 0, 1275, 0, 0, 0, 2379,
	0, 2390, 2392, 2397, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 3806, 0, 0, 0, 0, 0, 0, 1657, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 1670, 2912, 2913, 2914, 0, 2522,
	0, 0, 2911, 2909, 2910, 2902, 2903, 2904, 2905, 2907,
	2908, 0, 3806, 2712, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 2712, 2208, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 2912, 2913, 2914, 0, 0, 0, 1014, 2911,
	2909, 2910, 2902, 2903, 2904, 2905, 2907, 2908, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3689, 0,
	2208, 0, 0, 0, 0, 0, 0, 0, 1652, 0,
	0, 2028, 241, 241, 241, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 241, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 241, 0, 0, 2028, 0, 1640, 1661, 0,
	0, 1671, 0, 0, 3757, 0, 0, 1651, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 2630, 2631, 0, 2633, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 1275, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 1651, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3842, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 1275, 0, 1275, 0, 0, 0, 0,
	2763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 1662, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 1675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 1275, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 1275, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 1657, 1652, 0,
	0, 3954, 1294, 0, 0, 1624, 0, 0, 0, 0,
	1645, 0, 0, 1670, 0, 2811, 2812, 0, 0, 1660,
	0, 2818, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1623,
	2832, 2833, 1275, 2875, 0, 0, 2294, 2876, 0, 1643,
	0, 0, 0, 0, 0, 2840, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2866, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4021, 0, 0, 0, 1275, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 1641, 1637, 1629, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2397, 2397, 2397, 1275, 1661, 0, 0,
	1671, 0, 0, 709, 0, 0, 1651, 1653, 1763, 0,
	0, 0, 1275, 0, 0, 0, 2957, 0, 0, 0,
	0, 0, 1667, 4062, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	4084, 710, 0, 727, 0, 0, 0, 0, 968, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 4096, 0,
	1644, 0, 0, 0, 1275, 0, 0, 711, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 735, 954, 0, 0, 0, 0, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 1658, 0,
	0, 733, 1275, 0, 241, 1195, 241, 241, 0, 1195,
	241, 241, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 3058, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 1195, 716, 0, 0,
	1650, 0, 737, 0, 0, 0, 677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	1645, 241, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 241, 241, 0, 0,
	241, 0, 1195, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 1195, 241, 241, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 968, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 1195, 0, 1660, 0,
	0, 719, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 2290, 0, 720, 241, 2291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 2201, 0, 0, 0, 0, 0, 3260,
	3261, 0, 0, 3264, 0, 722, 0, 3267, 740, 0,
	739, 0, 0, 0, 723, 0, 3271, 0, 0, 0,
	0, 0, 0, 0, 0, 3278, 0, 724, 2957, 0,
	0, 0, 732, 0, 0, 0, 0, 741, 0, 738,
	0, 0, 0, 3290, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3313, 3314, 0, 3315, 3316, 3317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3323, 0, 0, 0, 3325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3353,
	3354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3374, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 241, 241, 241, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3414, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3423, 3426, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 68,
	0, 44, 43, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3447, 0, 69, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 0, 46,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 45, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 48, 64, 0, 0, 0, 0,
	0, 0, 49, 241, 1195, 1195, 241, 85, 0, 0,
	0, 142, 0, 0, 1195, 1763, 0, 0, 0, 47,
	0, 100, 0, 0, 3535, 0, 86, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 50, 0, 0,
	241, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 241, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3581, 3582, 0, 0, 0, 0, 3586, 3587,
	0, 0, 0, 3590, 3591, 0, 0, 241, 0, 0,
	3595, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 3599, 0, 0, 0, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 0, 0, 3604, 0, 0,
	0, 0, 1195, 0, 1195, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 1195, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 241, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 1195, 1195, 1195,
	0, 90, 749, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 51, 750, 0, 0, 0, 0, 241, 241,
	0, 241, 0, 241, 0, 241, 0, 241, 0, 55,
	0, 0, 0, 751, 0, 65, 0, 0, 0, 0,
	54, 171, 93, 0, 96, 0, 0, 0, 52, 0,
	0, 0, 143, 770, 0, 0, 1001, 0, 0, 53,
	0, 0, 0, 0, 241, 0, 0, 3426, 210, 0,
	0, 0, 752, 0, 0, 0, 58, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 753, 990, 102, 0, 0,
	239, 239, 239, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 1195, 0, 0, 754, 0, 0, 755, 0,
	0, 0, 0, 0, 0, 0, 691, 677, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	691, 769, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	3426, 0, 0, 0, 0, 0, 0, 174, 0, 1195,
	3, 0, 0, 0, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3801, 3802, 3803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2201, 0, 0, 3812,
	3813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	929, 0, 757, 0, 0, 0, 0, 3821, 1195, 1123,
	0, 949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 758, 0, 0, 0, 0,
	0, 241, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 1110,
	0, 0, 0, 3426, 0, 0, 0, 676, 0, 0,
	0, 3860, 0, 0, 759, 0, 0, 0, 774, 775,
	772, 3867, 0, 0, 954, 0, 767, 0, 0, 760,
	0, 0, 0, 3875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 768, 0, 0,
	0, 0, 0, 0, 0, 762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 763, 0,
	0, 0, 0, 771, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 678, 0, 0, 3426,
	3426, 0, 241, 0, 0, 0, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	3976, 0, 0, 3979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3426, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 954, 954, 241, 0, 0, 0, 241,
	0, 241, 0, 0, 3426, 0, 0, 3426, 241, 241,
	0, 0, 0, 1195, 1195, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 2201, 0, 0, 0, 0, 0, 241, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 241, 241, 241,
	0, 241, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4114, 4114, 4114, 241, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 239, 239, 0, 0, 239, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 691, 0, 0, 0, 0, 0,
	0, 4114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	239, 0, 0, 0, 0, 0, 102, 0, 102, 3426,
	102, 3426, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 239, 239, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4114, 4244,
	0, 0, 0, 0, 0, 0, 4248, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 949, 102, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 102, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 241, 0, 241, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	1195, 0, 0, 0, 1037, 0, 0, 0, 1686, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 1195, 1691, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	241, 1195, 0, 1195, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 1195, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	1123, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 241, 241, 0, 0, 0, 239,
	1785, 239, 0, 0, 0, 0, 691, 0, 0, 0,
	0, 691, 0, 1195, 1195, 0, 0, 0, 1783, 0,
	1786, 241, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0, 1195,
	0, 241, 1195, 241, 0, 0, 0, 1657, 1652, 0,
	0, 0, 0, 0, 0, 1624, 0, 1127, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 239, 0,
	0, 0, 239, 0, 0, 0, 0, 1661, 239, 0,
	1671, 0, 0, 0, 0, 0, 1651, 1653, 0, 0,
	0, 239, 0, 239, 0, 239, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 239, 0, 0, 0, 1659,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 239, 0, 0, 239, 0, 0, 0, 0,
	949, 0, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 691, 239, 0, 239,
	0, 239, 0, 239, 241, 239, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 1662, 0, 241, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 1195, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	929, 0, 0, 929, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 1195, 0, 0, 0,
	0, 1127, 0, 0, 0, 1127, 0, 0, 1660, 1127,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 1195, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 4055, 0, 0, 0, 245, 0, 2268, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 1691, 0, 1127, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 1652, 0, 0, 0, 683, 0, 1127, 1624,
	0, 0, 0, 0, 1127, 1123, 0, 1670, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	683, 0, 1127, 0, 0, 0, 0, 0, 1195, 1110,
	1195, 0, 0, 1623, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 1786, 0, 0, 0, 0,
	0, 1640, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 102, 0,
	0, 239, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 241, 0, 241, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 239, 1195,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 1661, 0, 239, 1671, 0, 0, 1195, 241, 0,
	1651, 1653, 1195, 0, 0, 0, 0, 0, 0, 0,
	239, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 691, 0, 0, 0, 1195,
	1195, 1195, 0, 1659, 102, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	1195, 0, 102, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 239, 0, 0, 0, 239, 0, 239,
	0, 0, 0, 0, 0, 0, 239, 239, 0, 0,
	0, 1195, 0, 1195, 0, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 239, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 239, 1127, 239, 1127, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 241, 0, 1841, 1662,
	1195, 1195, 0, 0, 239, 239, 239, 239, 0, 239,
	0, 239, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 1195, 0, 0,
	1195, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	1127, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1192, 0, 1195, 0, 1192, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 0, 241, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 1785, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 0, 0, 0, 0, 1127, 0,
	1127, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 1312, 0, 1127, 1127,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 239,
	0, 1127, 0, 1127, 1127, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 1785, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 102, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 102, 0, 0, 102, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 1841, 1841, 1127, 0,
	0, 0, 691, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 239, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 949, 0, 0, 1127, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 102, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 239,
	0, 239, 0, 0, 1624, 0, 0, 1127, 0, 0,
	0, 0, 1670, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 1623, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	0, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 1671,
	0, 1841, 0, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 1123, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 1127,
	1638, 1639, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 1110, 1110, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 1312, 0, 0, 0, 0, 0, 1669,
	0, 0, 1192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1127,
	1127, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 1650,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 1662, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 239, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 1312, 0, 1312, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 1312, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 1312, 1312, 1312, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 683, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 0, 1193, 0, 0, 3609, 1193, 0, 0, 102,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 0, 0, 0, 0, 1313,
	0, 0, 1123, 0, 0, 1313, 0, 0, 0, 1313,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 1313, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 1127, 1127, 0, 1192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 1313, 0, 0, 0, 1127, 0, 0,
	0, 0, 0, 239, 0, 239, 0, 0, 0, 1127,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1841,
	0, 0, 0, 1127, 0, 0, 1192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 1192, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 1127, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 1127, 0, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1192, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 1127, 0, 1127,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 0, 0, 0, 1127, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 1127,
	1127, 0, 0, 0, 1193, 0, 0, 0, 0, 1621,
	1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 1652, 0, 1313, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 1193, 1127, 0, 0, 1127, 0,
	0, 1312, 1312, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 1623, 239, 239, 0, 1312, 0, 0, 0,
	0, 0, 1643, 0, 0, 0, 0, 0, 2268, 0,
	1640, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1841, 0, 0,
	239, 1646, 1647, 1648, 1649, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1841, 0, 0, 0,
	0, 1313, 1313, 239, 0, 0, 0, 0, 0, 0,
	1661, 1193, 0, 1671, 0, 0, 0, 0, 102, 1651,
	1653, 0, 0, 0, 0, 0, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 0, 1668, 0, 102,
	0, 0, 0, 0, 1638, 1639, 0, 0, 0, 0,
	0, 0, 0, 1127, 1127, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1644, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 102, 0, 0, 0, 1313,
	0, 1313, 0, 1313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1313,
	1313, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 1645, 1313, 1313, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1192, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 1192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1192, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 1127, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1193,
	0, 1660, 0, 1127, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 0, 1127, 1312, 0, 0, 0, 0, 0, 3276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1192, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 1312, 0, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 1312,
	0, 1312, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 1193, 0, 0, 0, 0,
	1127, 0, 0, 0, 1127, 0, 1127, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 1193, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 1192, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1127, 1127, 0, 0, 0,
	0, 0, 1193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 0, 0, 0, 0, 0, 0,
	1193, 0, 0, 0, 0, 1127, 1127, 1127, 1192, 0,
	0, 0, 0, 0, 1313, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 1657, 1652, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 1841, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 1127,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 1643, 0, 0, 0,
	1313, 1313, 0, 1313, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 0, 0, 1841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1192, 0,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 1647, 1648, 1649, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 0, 0, 1671, 0, 0,
	0, 0, 0, 1651, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 1668, 0, 0, 0, 0, 0, 0, 1638, 1639,
	0, 1841, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	1312, 1312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 1192, 0, 0, 1650, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1192, 1645, 0, 0,
	0, 0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1662, 0, 0, 1657, 1652, 0, 0, 0,
	0, 0, 0, 1624, 0, 0, 1193, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	0, 0, 0, 1193, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1660, 1192, 0, 1192, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0, 0,
	0, 1192, 0, 2878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 1313, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 0, 1661, 0, 1313, 1671, 1192,
	0, 0, 0, 0, 1651, 1653, 0, 1193, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	1667, 1313, 1668, 0, 0, 0, 0, 1312, 1312, 1638,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 1659, 1313, 0,
	1313, 0, 0, 0, 1193, 1192, 0, 0, 1644, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 1312, 1312,
	0, 0, 0, 0, 0, 0, 1658, 0, 1192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1192, 0,
	1313, 1313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 1621, 1622,
	0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 1645, 1192,
	0, 1312, 0, 0, 0, 0, 0, 0, 0, 1657,
	1652, 0, 0, 0, 0, 1192, 1193, 1624, 0, 1193,
	0, 0, 0, 1662, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 0, 0, 0, 0, 1192, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1193, 0, 0,
	0, 0, 0, 0, 0, 1192, 1660, 0, 1312, 0,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0,
	1646, 1647, 1648, 1649, 2877, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 1661,
	0, 0, 1671, 0, 1624, 0, 0, 0, 1651, 1653,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 0, 1668, 0, 0, 0,
	0, 0, 0, 1638, 1639, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 1659, 0, 0, 0, 0, 1640, 1193, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 1312, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 1661, 0, 0, 1671,
	0, 0, 0, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 1645, 0, 0, 0, 0, 1313, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 0, 0, 0, 1313, 1313,
	1313, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 0, 1193, 1635, 1636, 1642, 1663, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	0, 0, 0, 0, 0, 1193, 0, 0, 2874, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 1645,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 1652,
	0, 0, 0, 0, 1662, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1193, 0, 1193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	1193, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 2873, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 0, 0, 0, 0, 1313, 1313, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 0, 0, 0, 0, 1313,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 1313, 1313, 0,
	0, 1669, 0, 0, 0, 0, 0, 1193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 1193, 0,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 1193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1313, 1313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 0, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 2872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1190, 0, 1313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 1313, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 1196, 255, 256, 1197,
	1198, 1199, 1313, 1200, 545, 1201, 1202, 1203, 1204, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 1205, 550, 267, 268, 269, 270,
	271, 272, 1206, 1207, 0, 273, 551, 552, 553, 1208,
	274, 275, 554, 1209, 1276, 1210, 276, 277, 278, 279,
	280, 281, 282, 0, 1211, 284, 285, 286, 283, 1212,
	287, 0, 288, 289, 290, 291, 292, 293, 1213, 294,
	295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216, 1218,
	1219, 1220, 299, 300, 301, 302, 0, 303, 555, 556,
	1221, 307, 304, 305, 1222, 308, 306, 1223, 309, 310,
	311, 1224, 1225, 312, 313, 314, 1226, 315, 316, 1227,
	317, 318, 319, 1228, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 1229,
	246, 1230, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 1231, 337, 1232, 1233, 1069, 338,
	339, 561, 562, 340, 341, 1234, 342, 563, 1235, 564,
	343, 1236, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 1237, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 1238, 1070, 357, 568,
	569, 1239, 570, 1240, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 1241, 371, 373, 372, 1242, 374, 572,
	1075, 375, 376, 1076, 1243, 377, 378, 379, 1244, 1245,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 1246, 248, 1079, 408, 409, 1247, 573, 410,
	574, 412, 413, 1248, 0, 414, 0, 1249, 1250, 416,
	417, 418, 1251, 1252, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 1253, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 1254, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 1255, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 1256, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 1257, 481, 482, 480,
	483, 484, 485, 1258, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 1259,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 1260, 507, 508, 0, 506, 1261, 509,
	510, 511, 512, 513, 514, 327, 515, 1262, 516, 586,
	587, 588, 589, 1263, 523, 1264, 517, 518, 590, 519,
	591, 1265, 520, 521, 522, 0, 524, 525, 1266, 1267,
	526, 527, 528, 530, 531, 529, 532, 1268, 533, 1269,
	0, 534, 535, 536, 592, 593, 594, 1270, 538, 537,
	539, 595, 1271, 1272, 1273, 1274, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 2431, 0, 0, 0, 0, 0, 0,
	0, 2432, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 0,
	3284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3286, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 1190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3637, 249, 250, 251, 252,
	253, 254, 1196, 255, 256, 1197, 1198, 1199, 0, 1200,
	545, 1201, 1202, 1203, 1204, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	1205, 550, 267, 268, 269, 270, 271, 272, 1206, 1207,
	0, 273, 551, 552, 553, 1208, 274, 275, 554, 1209,
	1276, 1210, 276, 277, 278, 279, 280, 281, 282, 0,
	1211, 284, 285, 286, 283, 1212, 287, 0, 288, 289,
	290, 291, 292, 293, 1213, 294, 295, 296, 1068, 297,
	298, 1214, 1215, 1217, 1216, 1218, 1219, 1220, 299, 300,
	301, 302, 0, 303, 555, 556, 1221, 307, 304, 305,
	1222, 308, 306, 1223, 309, 310, 311, 1224, 1225, 312,
	313, 314, 1226, 315, 316, 1227, 317, 318, 319, 1228,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 1229, 246, 1230, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	1231, 337, 1232, 1233, 1069, 338, 339, 561, 562, 340,
	341, 1234, 342, 563, 1235, 564, 343, 1236, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 1071, 349, 350,
	1237, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 1238, 1070, 357, 568, 569, 1239, 570, 1240,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 1241,
	371, 373, 372, 1242, 374, 572, 1075, 375, 376, 1076,
	1243, 377, 378, 379, 1244, 1245, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 1246, 248,
	1079, 408, 409, 1247, 573, 410, 574, 412, 413, 1248,
	0, 414, 0, 1249, 1250, 416, 417, 418, 1251, 1252,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 1253, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 1254, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 1255, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 1256,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 1257, 481, 482, 480, 483, 484, 485, 1258,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 1259, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 1260,
	507, 508, 0, 506, 1261, 509, 510, 511, 512, 513,
	514, 327, 515, 1262, 516, 586, 587, 588, 589, 1263,
	523, 1264, 517, 518, 590, 519, 591, 1265, 520, 521,
	522, 0, 524, 525, 1266, 1267, 526, 527, 528, 530,
	531, 529, 532, 1268, 533, 1269, 0, 534, 535, 536,
	592, 593, 594, 1270, 538, 537, 539, 595, 1271, 1272,
	1273, 1274, 540, 541, 596, 542, 543, 544, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3807, 249, 250, 251, 252, 253,
	254, 1196, 255, 256, 1197, 1198, 1199, 0, 1200, 545,
	1201, 1202, 1203, 1204, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 1205,
	550, 267, 268, 269, 270, 271, 272, 1206, 1207, 0,
	273, 551, 552, 553, 1208, 274, 275, 554, 1209, 1276,
	1210, 276, 277, 278, 279, 280, 281, 282, 0, 1211,
	284, 285, 286, 283, 1212, 287, 0, 288, 289, 290,
	291, 292, 293, 1213, 294, 295, 296, 1068, 297, 298,
	1214, 1215, 1217, 1216, 1218, 1219, 1220, 299, 300, 301,
	302, 0, 303, 555, 556, 1221, 307, 304, 305, 1222,
	308, 306, 1223, 309, 310, 311, 1224, 1225, 312, 313,
	314, 1226, 315, 316, 1227, 317, 318, 319, 1228, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 1229, 246, 1230, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 1231,
	337, 1232, 1233, 1069, 338, 339, 561, 562, 340, 341,
	1234, 342, 563, 1235, 564, 343, 1236, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 1237,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 1238, 1070, 357, 568, 569, 1239, 570, 1240, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 1241, 371,
	373, 372, 1242, 374, 572, 1075, 375, 376, 1076, 1243,
	377, 378, 379, 1244, 1245, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 1246, 248, 1079,
	408, 409, 1247, 573, 410, 574, 412, 413, 1248, 0,
	414, 0, 1249, 1250, 416, 417, 418, 1251, 1252, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 1253, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 1254, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 1255, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 1256, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 1257, 481, 482, 480, 483, 484, 485, 1258, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 1259, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 1260, 507,
	508, 0, 506, 1261, 509, 510, 511, 512, 513, 514,
	327, 515, 1262, 516, 586, 587, 588, 589, 1263, 523,
	1264, 517, 518, 590, 519, 591, 1265, 520, 521, 522,
	0, 524, 525, 1266, 1267, 526, 527, 528, 530, 531,
	529, 532, 1268, 533, 1269, 0, 534, 535, 536, 592,
	593, 594, 1270, 538, 537, 539, 595, 1271, 1272, 1273,
	1274, 540, 541, 596, 542, 543, 544, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3697, 249, 250, 251, 252, 253, 254,
	1196, 255, 256, 1197, 1198, 1199, 0, 1200, 545, 1201,
	1202, 1203, 1204, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 1205, 550,
	267, 268, 269, 270, 271, 272, 1206, 1207, 0, 273,
	551, 552, 553, 1208, 274, 275, 554, 1209, 1276, 1210,
	276, 277, 278, 279, 280, 281, 282, 0, 1211, 284,
	285, 286, 283, 1212, 287, 0, 288, 289, 290, 291,
	292, 293, 1213, 294, 295, 296, 1068, 297, 298, 1214,
	1215, 1217, 1216, 1218, 1219, 1220, 299, 300, 301, 302,
	0, 303, 555, 556, 1221, 307, 304, 305, 1222, 308,
	306, 1223, 309, 310, 311, 1224, 1225, 312, 313, 314,
	1226, 315, 316, 1227, 317, 318, 319, 1228, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 1229, 246, 1230, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 1231, 337,
	1232, 1233, 1069, 338, 339, 561, 562, 340, 341, 1234,
	342, 563, 1235, 564, 343, 1236, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 1071, 349, 350, 1237, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	1238, 1070, 357, 568, 569, 1239, 570, 1240, 359, 360,
	1072, 571, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 1241, 371, 373,
	372, 1242, 374, 572, 1075, 375, 376, 1076, 1243, 377,
	378, 379, 1244, 1245, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 1246, 248, 1079, 408,
	409, 1247, 573, 410, 574, 412, 413, 1248, 0, 414,
	0, 1249, 1250, 416, 417, 418, 1251, 1252, 419, 420,
	575, 1080, 421, 1081, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 1253, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 1254, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	1255, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 1256, 458, 459,
	460, 1082, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	1257, 481, 482, 480, 483, 484, 485, 1258, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 1259, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 1260, 507, 508,
	0, 506, 1261, 509, 510, 511, 512, 513, 514, 327,
	515, 1262, 516, 586, 587, 588, 589, 1263, 523, 1264,
	517, 518, 590, 519, 591, 1265, 520, 521, 522, 0,
	524, 525, 1266, 1267, 526, 527, 528, 530, 531, 529,
	532, 1268, 533, 1269, 0, 534, 535, 536, 592, 593,
	594, 1270, 538, 537, 539, 595, 1271, 1272, 1273, 1274,
	540, 541, 596, 542, 543, 544, 1190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3567, 249, 250, 251, 252, 253, 254, 1196,
	255, 256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202,
	1203, 1204, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 1205, 550, 267,
	268, 269, 270, 271, 272, 1206, 1207, 0, 273, 551,
	552, 553, 1208, 274, 275, 554, 1209, 1276, 1210, 276,
	277, 278, 279, 280, 281, 282, 0, 1211, 284, 285,
	286, 283, 1212, 287, 0, 288, 289, 290, 291, 292,
	293, 1213, 294, 295, 296, 1068, 297, 298, 1214, 1215,
	1217, 1216, 1218, 1219, 1220, 299, 300, 301, 302, 0,
	303, 555, 556, 1221, 307, 304, 305, 1222, 308, 306,
	1223, 309, 310, 311, 1224, 1225, 312, 313, 314, 1226,
	315, 316, 1227, 317, 318, 319, 1228, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 1229, 246, 1230, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 1231, 337, 1232,
	1233, 1069, 338, 339, 561, 562, 340, 341, 1234, 342,
	563, 1235, 564, 343, 1236, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 1071, 349, 350, 1237, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 1238,
	1070, 357, 568, 569, 1239, 570, 1240, 359, 360, 1072,
	571, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 1241, 371, 373, 372,
	1242, 374, 572, 1075, 375, 376, 1076, 1243, 377, 378,
	379, 1244, 1245, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 1246, 248, 1079, 408, 409,
	1247, 573, 410, 574, 412, 413, 1248, 0, 414, 0,
	1249, 1250, 416, 417, 418, 1251, 1252, 419, 420, 575,
	1080, 421, 1081, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 1253, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 1254, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 1255,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 1256, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 1257,
	481, 482, 480, 483, 484, 485, 1258, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 1259, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 1260, 507, 508, 0,
	506, 1261, 509, 510, 511, 512, 513, 514, 327, 515,
	1262, 516, 586, 587, 588, 589, 1263, 523, 1264, 517,
	518, 590, 519, 591, 1265, 520, 521, 522, 0, 524,
	525, 1266, 1267, 526, 527, 528, 530, 531, 529, 532,
	1268, 533, 1269, 0, 534, 535, 536, 592, 593, 594,
	1270, 538, 537, 539, 595, 1271, 1272, 1273, 1274, 540,
	541, 596, 542, 543, 544, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3302, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3132, 249, 250, 251, 252, 253, 254, 1196, 255, 256,
	1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 1205, 550, 267, 268, 269,
	270, 271, 272, 1206, 1207, 0, 273, 551, 552, 553,
	1208, 274, 275, 554, 1209, 1276, 1210, 276, 277, 278,
	279, 280, 281, 282, 0, 1211, 284, 285, 286, 283,
	1212, 287, 0, 288, 289, 290, 291, 292, 293, 1213,
	294, 295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216,
	1218, 1219, 1220, 299, 300, 301, 302, 0, 303, 555,
	556, 1221, 307, 304, 305, 1222, 308, 306, 1223, 309,
	310, 311, 1224, 1225, 312, 313, 314, 1226, 315, 316,
	1227, 317, 318, 319, 1228, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	1229, 246, 1230, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 1231, 337, 1232, 1233, 1069,
	338, 339, 561, 562, 340, 341, 1234, 342, 563, 1235,
	564, 343, 1236, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 1237, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 1238, 1070, 357,
	568, 569, 1239, 570, 1240, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1241, 371, 373, 372, 1242, 374,
	572, 1075, 375, 376, 1076, 1243, 377, 378, 379, 1244,
	1245, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 1246, 248, 1079, 408, 409, 1247, 573,
	410, 574, 412, 413, 1248, 0, 414, 0, 1249, 1250,
	416, 417, 418, 1251, 1252, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 1253, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 1254, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 1255, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 1256, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 1257, 481, 482,
	480, 483, 484, 485, 1258, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	1259, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 1260, 507, 508, 0, 506, 1261,
	509, 510, 511, 512, 513, 514, 327, 515, 1262, 516,
	586, 587, 588, 589, 1263, 523, 1264, 517, 518, 590,
	519, 591, 1265, 520, 521, 522, 0, 524, 525, 1266,
	1267, 526, 527, 528, 530, 531, 529, 532, 1268, 533,
	1269, 0, 534, 535, 536, 592, 593, 594, 1270, 538,
	537, 539, 595, 1271, 1272, 1273, 1274, 540, 541, 596,
	542, 543, 544, 1190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2314,
	249, 250, 251, 252, 253, 254, 1196, 255, 256, 1197,
	1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 1205, 550, 267, 268, 269, 270,
	271, 272, 1206, 1207, 0, 273, 551, 552, 553, 1208,
	274, 275, 554, 1209, 1276, 1210, 276, 277, 278, 279,
	280, 281, 282, 0, 1211, 284, 285, 286, 283, 1212,
	287, 0, 288, 289, 290, 291, 292, 293, 1213, 294,
	295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216, 1218,
	1219, 1220, 299, 300, 301, 302, 0, 303, 555, 556,
	1221, 307, 304, 305, 1222, 308, 306, 1223, 309, 310,
	311, 1224, 1225, 312, 313, 314, 1226, 315, 316, 1227,
	317, 318, 319, 1228, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 1229,
	246, 1230, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 1231, 337, 1232, 1233, 1069, 338,
	339, 561, 562, 340, 341, 1234, 342, 563, 1235, 564,
	343, 1236, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 1237, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 1238, 1070, 357, 568,
	569, 1239, 570, 1240, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 1241, 371, 373, 372, 1242, 374, 572,
	1075, 375, 376, 1076, 1243, 377, 378, 379, 1244, 1245,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 1246, 248, 1079, 408, 409, 1247, 573, 410,
	574, 412, 413, 1248, 0, 414, 0, 1249, 1250, 416,
	417, 418, 1251, 1252, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 1253, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 1254, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 1255, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 1256, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 1257, 481, 482, 480,
	483, 484, 485, 1258, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 1259,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 1260, 507, 508, 0, 506, 1261, 509,
	510, 511, 512, 513, 514, 327, 515, 1262, 516, 586,
	587, 588, 589, 1263, 523, 1264, 517, 518, 590, 519,
	591, 1265, 520, 521, 522, 0, 524, 525, 1266, 1267,
	526, 527, 528, 530, 531, 529, 532, 1268, 533, 1269,
	0, 534, 535, 536, 592, 593, 594, 1270, 538, 537,
	539, 595, 1271, 1272, 1273, 1274, 540, 541, 596, 542,
	543, 544, 1288, 0, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 249, 250, 251, 252, 253, 254, 1196, 255, 256,
	1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 1205, 550, 267, 268, 269,
	270, 271, 272, 1206, 1207, 0, 273, 551, 552, 553,
	1208, 274, 275, 554, 1209, 1276, 1210, 276, 277, 278,
	279, 280, 281, 282, 0, 1211, 284, 285, 286, 283,
	1212, 287, 0, 288, 289, 290, 291, 292, 293, 1213,
	294, 295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216,
	1218, 1219, 1220, 299, 300, 301, 302, 0, 303, 555,
	556, 1221, 307, 304, 305, 1222, 308, 306, 1223, 309,
	310, 311, 1224, 1225, 312, 313, 314, 1226, 315, 316,
	1227, 317, 318, 319, 1228, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	1229, 246, 1230, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 1231, 337, 1232, 1233, 1069,
	338, 339, 561, 562, 340, 341, 1234, 342, 563, 1235,
	564, 343, 1236, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 1237, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 1238, 1070, 357,
	568, 569, 1239, 570, 1240, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1241, 371, 373, 372, 1242, 374,
	572, 1075, 375, 376, 1076, 1243, 377, 378, 379, 1244,
	1245, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 1246, 248, 1079, 408, 409, 1247, 573,
	410, 574, 412, 413, 1248, 0, 414, 0, 1249, 1250,
	416, 417, 418, 1251, 1252, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 1253, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 1254, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 1255, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 1256, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 1257, 481, 482,
	480, 483, 484, 485, 1258, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	1259, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 1260, 507, 508, 0, 506, 1261,
	509, 510, 511, 512, 513, 514, 327, 515, 1262, 516,
	586, 587, 588, 589, 1263, 523, 1264, 517, 518, 590,
	519, 591, 1265, 520, 521, 522, 0, 524, 525, 1266,
	1267, 526, 527, 528, 530, 531, 529, 532, 1268, 533,
	1269, 0, 534, 535, 536, 592, 593, 594, 1270, 538,
	537, 539, 595, 1271, 1272, 1273, 1274, 540, 541, 596,
	542, 543, 544, 1187, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 1196, 255, 256,
	1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 1205, 550, 267, 268, 269,
	270, 271, 272, 1206, 1207, 0, 273, 551, 552, 553,
	1208, 274, 275, 554, 1209, 1276, 1210, 276, 277, 278,
	279, 280, 281, 282, 0, 1211, 284, 285, 286, 283,
	1212, 287, 0, 288, 289, 290, 291, 292, 293, 1213,
	294, 295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216,
	1218, 1219, 1220, 299, 300, 301, 302, 0, 303, 555,
	556, 1221, 307, 304, 305, 1222, 308, 306, 1223, 309,
	310, 311, 1224, 1225, 312, 313, 314, 1226, 315, 316,
	1227, 317, 318, 319, 1228, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	1229, 246, 1230, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 1231, 337, 1232, 1233, 1069,
	338, 339, 561, 562, 340, 341, 1234, 342, 563, 1235,
	564, 343, 1236, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 1237, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 1238, 1070, 357,
	568, 569, 1239, 570, 1240, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1241, 371, 373, 372, 1242, 374,
	572, 1075, 375, 376, 1076, 1243, 377, 378, 379, 1244,
	1245, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 1246, 248, 1079, 408, 409, 1247, 573,
	410, 574, 412, 413, 1248, 0, 414, 0, 1249, 1250,
	416, 417, 418, 1251, 1252, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 1253, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 1254, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 1255, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 1256, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 1257, 481, 482,
	480, 483, 484, 485, 1258, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	1259, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 1260, 507, 508, 0, 506, 1261,
	509, 510, 511, 512, 513, 514, 327, 515, 1262, 516,
	586, 587, 588, 589, 1263, 523, 1264, 517, 518, 590,
	519, 591, 1265, 520, 521, 522, 0, 524, 525, 1266,
	1267, 526, 527, 528, 530, 531, 529, 532, 1268, 533,
	1269, 0, 534, 535, 536, 592, 593, 594, 1270, 538,
	537, 539, 595, 1271, 1272, 1273, 1274, 540, 541, 596,
	542, 543, 544, 2289, 0, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 2286, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 2287, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 2285,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	2288, 0, 0, 0, 0, 0, 0, 988, 2284, 0,
	950, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 210, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 212, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 1461, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 204, 540, 541, 596, 542, 543,
	544, 963, 205, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 1004, 976, 977,
	978, 974, 975, 987, 1696, 1694, 0, 0, 986, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 0, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	210, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 212, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 0,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 1461, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 204,
	540, 541, 596, 542, 543, 544, 963, 205, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 1004, 976, 977, 978, 974, 975, 987, 1696,
	2830, 0, 0, 986, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 210, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 212, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 1461, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 204, 540, 541, 596, 542, 543,
	544, 963, 205, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 1004, 976, 977,
	978, 974, 975, 987, 1696, 1694, 0, 0, 986, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 2393, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 2398, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 2394, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 2395,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 592, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 963, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 0, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 2334, 986, 1004, 976, 977, 978, 974, 975,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 2332, 0, 2331,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 0, 988, 2329, 0, 2328, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 2326, 0, 2325, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 0, 0, 988, 2323, 0,
	1549, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 1548, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 953, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 967, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 1004, 976, 977, 978, 974, 975,
	987, 988, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 4074, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 967, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 1004,
	976, 977, 978, 974, 975, 987, 988, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 2203, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 2202, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 1004, 976, 977, 978, 974, 975,
	987, 988, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 967, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 1004,
	976, 977, 978, 974, 975, 987, 988, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 3870, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 967, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 1004, 976, 977, 978, 974, 975,
	987, 988, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 3529, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 1764,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 0,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 3280, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 1004, 976, 977, 978,
	974, 975, 987, 988, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 1764, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 986, 1004, 976, 977, 978, 974, 975, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 303, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 2398, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 347, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 1004, 976,
	977, 978, 974, 975, 987, 988, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 1694, 0, 2403, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	2401, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 2389, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 0, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 2378, 986, 1004, 976, 977, 978,
	974, 975, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 0, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 2376, 986, 2367, 2374, 977, 978, 974, 975, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 2370, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 2371, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	2372, 2369, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 2373, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	2368, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 2364, 986,
	2367, 2374, 977, 978, 974, 975, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 2370, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 2371, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 2372, 2369, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 2373, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 2368, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 1702, 0, 988, 0, 0,
	0, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 2182, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 1554, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 0, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 1491, 986, 1004, 976, 977, 978,
	974, 975, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 0, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 1486, 986, 1004, 976, 977, 978, 974, 975, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 303, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 347, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 1477, 986,
	1004, 976, 977, 978, 974, 975, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 0, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 1472, 986, 1004, 976, 977,
	978, 974, 975, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 0, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 0,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 592, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 963, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 0, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 1454, 986, 1004, 976, 977, 978, 974, 975,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 1340,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1339, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 1334, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1333, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 1327, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 4113, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 4112, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 4111, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 4113, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 4112, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 2797,
	2798, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 2795, 2796, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 2190, 2191,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 0, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 1004,
	976, 977, 978, 974, 975, 987, 2386, 0, 0, 0,
	0, 0, 0, 2384, 2385, 0, 249, 250, 251, 252,
	253, 254, 988, 255, 256, 0, 986, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	0, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 2790, 2791,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 1901, 1902, 0, 249, 250, 251, 252, 253,
	254, 988, 255, 256, 0, 986, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 0, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 4113,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 0, 1031, 0, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 0, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 0,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 4112, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 950, 0, 1125, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 0, 986, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 1027, 0,
	273, 551, 552, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 1066, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 1111, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 248, 1079,
	408, 409, 0, 1032, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 1117, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 1119, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 1063, 0, 507,
	508, 0, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 1064, 519, 1065, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 1461,
	593, 594, 0, 538, 537, 539, 595, 0, 1125, 0,
	204, 540, 541, 596, 542, 543, 544, 0, 205, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1115, 1028,
	1788, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 1027, 0,
	273, 551, 552, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 1066, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 1111, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 248, 1079,
	408, 409, 0, 1032, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 1117, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 1119, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 1063, 0, 507,
	508, 0, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 1064, 519, 1065, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 1461,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	204, 540, 541, 596, 542, 543, 544, 0, 205, 0,
	0, 0, 2950, 0, 1125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	1788, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 1027, 0, 273, 551, 552, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 1066, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1111, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 248, 1079, 408, 409, 0, 1032,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 1117,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 1119, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 1063, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 1064,
	519, 1065, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 0, 1107, 0, 1125, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 1115, 0, 1113, 1028, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 1111, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 1117, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 1119, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 1125, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 1115, 1028, 1113, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 1111, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 1117, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 1119, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 1125, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 1115, 1028, 1113, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 1119, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 950, 0, 1310, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1687, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 1461,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	204, 540, 541, 596, 542, 543, 544, 0, 205, 0,
	0, 0, 1458, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 210, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 212,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 1461, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 204, 540, 541, 596,
	542, 543, 544, 0, 205, 0, 0, 0, 0, 0,
	1310, 1309, 0, 0, 0, 0, 1307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 1276, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 1070, 357, 568, 569, 0, 570,
	0, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 1075, 375, 376,
	1076, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	0, 1079, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 1310,
	1309, 0, 0, 0, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 1483, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	1276, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 1070, 357, 568, 569, 0, 570, 0,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 1075, 375, 376, 1076,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 0,
	1079, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 1310, 1984,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 3204, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 1983,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 1310, 1309, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	1483, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 1276, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 1070, 357, 568, 569, 0, 570, 0, 359, 360,
	1072, 571, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 1075, 375, 376, 1076, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 0, 0, 1079, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1125, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 0, 1467,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 950, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	210, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 212, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 1461, 593,
	594, 0, 538, 537, 539, 595, 243, 0, 0, 204,
	540, 541, 596, 542, 543, 544, 0, 205, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 174,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 1401, 0, 243, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1802, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 243, 2713,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1405, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 243, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	4266, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 0, 243, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 3148, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 0, 243, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 1405, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 243, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 2684,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 243, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 3305, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 0, 799, 0, 682, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 2086, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 689, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 797, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 687, 509, 510, 511, 512, 688, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 0, 680, 0, 682,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 692, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	689, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 687, 509, 510, 511, 512, 688,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 682, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 692, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 689,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 687, 509, 510, 511, 512, 688, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 682, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 692, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 689, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 2125, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 687, 509, 510, 511, 512, 688, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 682, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 692, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 689, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 1865, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 687, 509, 510, 511, 512, 688, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 1864, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 682, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 692, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 689, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 1818, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	687, 509, 510, 511, 512, 688, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 1817, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 1839,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	692, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 0, 1845, 0, 265, 1835, 266, 1851,
	0, 1858, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 1861, 1862, 0, 0, 274, 275, 0, 0,
	1276, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 1051, 303, 1849, 1848, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 1847, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1856, 1857, 340,
	341, 0, 342, 0, 0, 0, 343, 0, 344, 345,
	346, 347, 348, 0, 0, 0, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 1070, 357, 1842, 1843, 0, 1838, 0,
	359, 360, 1072, 0, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 0, 1075, 375, 376, 1076,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 0,
	1079, 408, 409, 0, 0, 410, 1850, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 0, 1080, 421, 1081, 0, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 1832, 1833, 0, 434, 0, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1846, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 0, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1844, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1860, 501, 502, 503, 504, 0, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1852, 1853, 1854, 1855, 0,
	523, 0, 517, 518, 0, 519, 0, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	0, 1836, 1859, 0, 538, 537, 539, 0, 0, 0,
	0, 0, 540, 541, 0, 542, 543, 544, 1310, 1309,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 1826, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 3475, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 1310, 1309, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 1276, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 1070, 357, 568, 569, 0, 570, 0, 359, 360,
	1072, 571, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 1075, 375, 376, 1076, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 0, 0, 1079, 408,
	409, 3120, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1310, 1309, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 1276, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 0, 0,
	0, 0, 0, 0, 3061, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	571, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 1075, 375, 376, 1076, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 0, 1079, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 3062, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 1511,
	0, 1310, 1309, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 692, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 1276, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 1510, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 1070, 357, 568, 569, 0,
	570, 0, 359, 360, 1072, 571, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 1075, 375,
	376, 1076, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	0, 0, 1079, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 1509, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	1508, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	1451, 0, 1310, 1309, 0, 0, 0, 0, 1307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 1276, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1450, 566, 567, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 571, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 1075,
	375, 376, 1076, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 0, 1079, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 1380, 0, 1310, 1309, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 1276, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1379, 566, 567,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 1070, 357, 568,
	569, 0, 570, 0, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	1075, 375, 376, 1076, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 0, 0, 1079, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 1345, 0, 1310, 1309, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 1305, 0, 1310, 1309, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 1276, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 1304,
	566, 567, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 1070,
	357, 568, 569, 0, 570, 0, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 1075, 375, 376, 1076, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 0, 0, 1079, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 1310, 1309, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1310, 1309, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 1276, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	1874, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 1070, 357, 568,
	569, 0, 570, 0, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	1075, 375, 376, 1076, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 0, 0, 1079, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1310, 1309, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 1276, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 571, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 1075,
	375, 376, 1076, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 0, 1079, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 1310, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 1276, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	571, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 1075, 375, 376, 1076, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 0, 1079, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 2523, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 2520, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 2527, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 2726, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 2526, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 2723,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 2725, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	2722, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 2525,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 2724, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	2523, 274, 275, 554, 0, 0, 2517, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	2520, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 2527, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 2526, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 2516, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 2525, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	2524, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1576, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 1579,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	1577, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	1578, 537, 539, 595, 1280, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1282, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 1117, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 1277, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 1279, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 1117, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1183, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1185, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 1117, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 628, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 627,
	253, 254, 617, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 620, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 621, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 622, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 616, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 617, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 620, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 621, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 622, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 1117,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 3083, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 2655, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 2654, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 2099, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 2016,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 2021, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 2020,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 2009, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	2011, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1980, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 1117, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1443,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 1442, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	1434, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1433, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 248, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 1431, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1430, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1426, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1425, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1383, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 1298, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 1291, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 1293, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 598, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 234, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 243, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 620, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 621,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	622, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 2132, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 243, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 2130, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 243,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	2128, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 2064, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 243, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 2058, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 2027, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	786, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 785, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 784, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 2726, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 3733, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 607, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	606, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 605, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 243, 2713, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 243, 3743, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 243,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 3449, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 2437, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 243, 2713, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	2710, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 2109,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 2097, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 650, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 1157, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 1155, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 651, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 647, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 1158, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 646, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 650, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 640, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 651, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 647, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 1466, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 646, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 1447, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1446, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1440,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 1439, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	1389, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1388, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 1374, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1373, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1369, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1301, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 1285, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 650, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 1157, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 1155, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 651, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 647, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 1158, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 646, 587, 588, 589, 0, 523, 0,
	517, 1156, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 1138, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 243, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 249, 250, 251, 252, 253, 254, 656, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 650, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 640, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 638, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	639, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	651, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 641, 465, 0, 466, 467,
	473, 474, 468, 469, 647, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 642, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 646, 587, 588, 589, 0, 523, 0, 517,
	644, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 632, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 633, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 630, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 624, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 602, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 3165, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 3114, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	3052, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 3050, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 3036, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 2664, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 633, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 2044,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 0, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1411, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1352, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 1090, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 0,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 0, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 0, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 0, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 1643, 0, 0, 0, 0, 0,
	1624, 0, 1640, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 1659, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1662, 1657, 1652, 0, 0, 1650, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	1662, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 2291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 4051, 0, 0,
	0, 1661, 0, 0, 1671, 0, 0, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 1621, 1622,
	0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 1657,
	1652, 0, 0, 0, 1644, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 1658, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 1652, 0, 0, 0, 0,
	0, 0, 1624, 0, 1650, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	1646, 1647, 1648, 1649, 0, 0, 1623, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 1643, 0, 0, 1662,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 1661,
	0, 0, 1671, 0, 0, 0, 0, 0, 1651, 1653,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 1667, 0, 1668, 1670, 0, 0,
	0, 0, 0, 1638, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 1623, 0, 1646, 1647, 1648, 1649, 0,
	0, 0, 1644, 1643, 0, 1629, 0, 0, 0, 0,
	0, 1640, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 1669, 0, 1661, 0, 3963, 1671, 0, 0,
	0, 0, 0, 1651, 1653, 0, 0, 0, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 1668, 0, 0, 0, 0, 0, 0, 1638, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 1659, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1645, 0, 1671, 0, 0, 1669, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 1667, 1662, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 1662, 0, 1635, 1636, 1642, 1663, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	0, 0, 0, 0, 3962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 1662,
	0, 0, 1670, 0, 0, 1660, 0, 0, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 0, 0, 0, 1623, 3810,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 1623, 0, 0, 3671, 1646, 1647, 1648,
	1649, 0, 0, 1643, 0, 0, 0, 1629, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 1671,
	0, 0, 0, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 1659, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 0, 1671, 0, 0, 0, 0, 1669,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 1658, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 1650, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 0, 1662,
	0, 0, 1640, 0, 0, 0, 0, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 3614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 1661, 0, 0, 1671, 3613, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 1621,
	1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	1657, 1652, 0, 0, 0, 1644, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 1658, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1652, 0, 0, 0,
	0, 0, 0, 1624, 0, 1650, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 1646, 1647, 1648, 1649, 0, 0, 1623, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 1643, 0, 0,
	1662, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	1661, 0, 0, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 1667, 0, 1668, 1670, 0,
	0, 0, 0, 0, 1638, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 1623, 0, 1646, 1647, 1648, 1649,
	0, 0, 0, 1644, 1643, 0, 1629, 0, 0, 0,
	0, 0, 1640, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 1669, 0, 1661, 0, 3612, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 1668, 0, 0, 0, 0, 0, 0, 1638,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 1659, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1645, 0, 1671, 0, 0, 1669, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1658, 1667, 1662, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 1660, 0, 1662, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 0, 0, 0, 0, 3310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 1652, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	1662, 0, 0, 1670, 0, 0, 1660, 0, 0, 0,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 1623,
	2870, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 1623, 0, 0, 2869, 1646, 1647,
	1648, 1649, 0, 0, 1643, 0, 0, 0, 1629, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 0, 0,
	1671, 0, 0, 0, 0, 0, 1651, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 1659,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 1671, 0, 0, 0, 0,
	1669, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 1658, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1652, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 1650, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	1662, 0, 0, 1640, 0, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 2868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 1661, 0, 0, 1671, 2867, 0, 0,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 1644, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 1658, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1652, 0, 0, 0,
	0, 2805, 0, 1624, 0, 0, 1650, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 1623, 0, 0,
	0, 0, 1629, 4176, 0, 0, 0, 1643, 0, 0,
	0, 1662, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 0, 1671, 0, 0, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2806, 0, 0, 0, 0, 1667, 0, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 0, 0, 1644, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 1669, 1661, 2834, 0, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 1668, 0, 0, 0, 0, 0, 0, 1638,
	1639, 0, 0, 0, 0, 0, 0, 0, 4175, 0,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 1645, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 1657, 1652, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 1658, 0, 0, 1662,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 1650, 0,
	0, 2411, 0, 0, 0, 0, 0, 0, 1621, 1622,
	0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	1652, 0, 0, 0, 2410, 0, 0, 1624, 0, 0,
	0, 0, 1660, 1662, 0, 1670, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 1646, 1647, 1648, 1649, 0,
	0, 1623, 0, 0, 0, 1629, 0, 2930, 0, 0,
	2929, 1643, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 1661, 0, 0, 1671, 0, 0,
	0, 0, 0, 1651, 1653, 0, 1657, 1652, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 1667,
	0, 1668, 1670, 0, 0, 0, 1660, 0, 1638, 1639,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 1659, 0, 1623, 0,
	1646, 1647, 1648, 1649, 0, 0, 0, 1644, 1643, 0,
	1629, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1669, 0, 1661,
	0, 0, 1671, 0, 0, 0, 0, 0, 1651, 1653,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 0, 1668, 0, 0, 0,
	0, 0, 0, 1638, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 1647, 1648,
	1649, 1659, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 1661, 1645, 0, 1671,
	0, 0, 1669, 0, 0, 1651, 1653, 0, 1657, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	1658, 1667, 1662, 1668, 1670, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	1643, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 947, 0,
	0, 0, 0, 0, 0, 1660, 0, 1662, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 1661, 1645,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	1657, 1652, 0, 0, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 1667, 1662, 1668, 1670, 0, 0, 0,
	1660, 0, 1638, 1639, 1635, 1636, 1642, 1663, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	1659, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 1643, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 1657, 1652, 0,
	0, 0, 2931, 0, 0, 1624, 0, 0, 0, 1658,
	0, 0, 0, 1670, 0, 0, 0, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 1623,
	0, 1646, 1647, 1648, 1649, 0, 0, 0, 0, 1643,
	0, 1629, 0, 0, 0, 0, 2936, 1640, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 1645, 0, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 1662, 1668, 0, 0,
	0, 0, 0, 0, 1638, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 1659, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 1644, 3291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 1622,
	0, 1654, 1655, 1656, 1664, 1665, 1666, 1661, 0, 0,
	1671, 0, 0, 1669, 0, 0, 1651, 1653, 0, 1657,
	1652, 0, 0, 0, 2871, 0, 0, 1624, 0, 0,
	0, 1658, 1667, 0, 1668, 1670, 0, 0, 0, 1660,
	0, 1638, 1639, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1659,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1643, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	1646, 1647, 1648, 1649, 0, 0, 0, 0, 1657, 1652,
	1629, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	1650, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	1645, 0, 1671, 0, 0, 0, 0, 0, 1651, 1653,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 1667, 1662, 1668, 0, 1640, 0,
	0, 1660, 0, 1638, 1639, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	1658, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1661, 0,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 1657, 1652, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 1658,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	1660, 1650, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 1662, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 0, 1661, 0, 0,
	1671, 1640, 0, 0, 0, 0, 1651, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 1660,
	0, 1638, 1639, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 1661, 0, 0, 1671, 0, 0, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 1667, 0, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	1650, 0, 0, 1659, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 1669, 1662, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 1645, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1661, 1662,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 841, 0, 883, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 862, 847, 846, 0, 0,
	0, 1669, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 848, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 891, 0, 0, 0, 0, 0,
	0, 0, 859, 860, 0, 0, 0, 0, 0, 0,
	0, 876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 884, 853, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 854, 0, 0, 0, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 855,
	0, 0, 0, 0, 0, 0, 0, 845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 856, 857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 864, 863, 0, 0, 0, 0, 0,
	0, 858, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	888, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	852, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 0, 880, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 889,
	874, 0, 867, 865, 0, 870, 0, 0, 0, 0,
	0, 871, 0, 0, 843, 0, 886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 887, 0, 0, 0, 0, 0, 0, 0,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 879,
}
var sqlPact = [...]int{

	8531, -1000, -1000, -1000, -1000, 250, -1000, -1000, 249, 248,
	232, 231, 230, 228, 215, 214, 212, -1000, -1000, -1000,
	-1000, -1000, -1000, 211, -1000, -1000, 209, -1000, 207, 204,
	198, -1000, -1000, 197, -1000, 196, -1000, -1000, -1000, -1000,
	187, 185, 184, 78365, 77874, 78849, 2118, 95446, 83703, 1980,
	70046, 94955, 69555, 94464, 93973, 2555, 183, -1000, 93482, 182,
	181, 178, -1000, 92991, -1000, 1812, -1000, 177, 4624, 57255,
	171, 168, 167, 2768, 165, -1000, 164, 162, -1000, 7877,
	1594, -1000, 156, 152, -1000, 8798, 5308, 82728, 151, 150,
	2198, 149, 148, 56763, 144, 141, 2123, 2719, -1000, -1000,
	1910, -1000, -1000, 140, 139, 136, 135, 134, 133, 132,
	126, 125, 124, -1000, 122, 121, 118, 116, 115, 112,
	111, 110, -1000, 109, 108, 106, 105, 103, 100, 98,
	92, 89, 88, 86, 85, -1000, 107352, 84, 1830, 1613,
	1596, 1593, 1586, 1584, 1007, 83, 82, 81, 80, 77,
	75, 74, 73, 72, -1000, 69, 68, 65, 64, 63,
	61, 59, 58, 157, 57, 50, 49, 47, 40, 34,
	33, 2102, -1000, 1457, 1335, 27185, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 101254, 95930, 27, -31, 26, -1000,
	3054, 978, 47392, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 316,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 523,
	1997, 795, -1000, -1000, -1000, 92507, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2116, 13, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 794, -1000, 2104, 281, 2047, -1000, -1000,
	-1000, -1000, -1000, 95930, -1000, 1052, -1000, -1000, 3452, 3451,
	1945, 789, 92023, -1000, 1535, -1000, 960, 28730, -1000, 1248,
	-1000, 28730, 315, -1000, -1000, -1000, -1000, -1000, -1000, 3450,
	3447, 3445, 3444, -1000, -1000, 69064, 20951, 68573, 68082, 91532,
	20450, 77383, 76892, 91041, 64171, 1047, -1000, -1000, -1000, 1397,
	-1000, -1000, -1000, -1000, -1000, -1000, -1, 61666, 3287, 95930,
	-1000, 313, -1000, -1000, -1000, -1000, -1000, -1000, 40791, 884,
	40264, 726, 39737, 716, -1000, -1000, -1000, 63670, -1000, 3443,
	3442, 1124, 3441, 2995, 100770, 1703, 3440, 1794, 1223, 3439,
	3437, 3436, 3435, 3433, 3432, 1406, 90550, 2787, 90059, 1726,
	63169, 1046, 76401, 78849, 2461, 89568, 1351, 1350, -1000, -1000,
	-1000, -1000, 2833, 2718, 2709, 53334, -1000, -1000, 3431, 3429,
	3425, 3424, 3423, 100286, 1697, 3422, 2323, 3421, 3419, 3418,
	3417, 3416, 3415, 3414, -1000, 75910, 1043, 75419, 74928, 3126,
	89077, 74437, 88586, 62668, 39210, 1044, -1000, -1000, -1000, 49370,
	6242, 5448, 88095, 51373, 78849, 78849, -1000, -1000, -1000, -1000,
	-1000, 38683, 760, 38156, 1038, -1000, -1000, 49876, 2692, -1000,
	-1000, -1000, -1000, 37629, 453, 37102, 986, 95930, -1000, 2786,
	1889, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2112, 1561, 3321, 2533, 62167, 1907, 1416,
	3067, 2827, 2803, 1468, 3413, 2389, 2801, 2800, 2791, 2790,
	2779, 1748, 2390, 408, 26658, 2765, 1632, 36575, 1437, 1485,
	2775, 2771, 3330, 1871, 1855, 1939, 67591, 3412, 3410, 3039,
	2763, 2761, 2688, -1000, -1000, -1000, -1000, 1438, -1000, -1000,
	-1000, -1000, -1000, 70530, -1000, -1000, 1230, -1000, -1000, 1230,
	-1000, -1000, -1000, -1000, -1000, 1321, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1457, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2214, -1000,
	1911, -1000, -1000, 2266, 3035, 3035, 3035, 3099, 494, 491,
	-1000, 157, -1000, -1000, 106785, -1000, -1000, 41306, 41306, 41306,
	41306, 41306, 41306, 41306, 2000, -1000, 787, -1000, -1000, 830,
	-1000, 786, 651, -1000, -1000, -1000, -1000, -1000, -1000, 784,
	-1000, -1000, -1000, -1000, -1000, -1000, 3287, -1000, 23508, -1000,
	-1000, -1000, 446, 780, 41306, -1000, -1000, 3351, 3350, 968,
	-1000, 297, 966, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2783, 776, 775, -1000, 771,
	768, 766, 765, 763, -1000, -1000, -1000, 759, 754, 750,
	748, 746, 744, 743, 741, -1000, 1916, -1000, -1000, -1000,
	-1000, -1000, -1000, 703, 699, 699, 699, -1000, 1037, -1000,
	-1000, -1000, 362, 697, 358, 695, 690, 688, -1000, 740,
	737, 736, 735, 733, 731, 729, 728, 727, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1035, -1000, -1000, -1000, -1000, -4,
	95930, -1000, 523, -4, -1000, -1000, 725, -1000, 30802, 30802,
	30802, -1000, -1000, 2098, 41306, -1000, 2268, -1000, 6, 6,
	934, 48372, -1000, 46394, 934, 452, 852, 52842, -1000, 2686,
	-1000, -1000, 721, 286, -1000, -1000, -1000, -1000, 21450, 2685,
	95930, 95930, 78849, 78849, 78849, 2932, 41306, -1000, -1000, 59211,
	95930, 79333, 3230, 59695, 58722, 95930, 2777, -1000, 3016, -1000,
	-1000, 95930, -1000, 41306, -1000, 3221, 1503, 65159, 3146, -16,
	-1000, -1000, -1000, -1000, -1000, -1000, 2282, 2289, 1171, 2143,
	1791, -1000, 28730, 2984, -1000, -1000, -1000, 285, 21450, -1000,
	-1000, -1000, -1000, -1000, 3373, 2903, 1459, -1000, 2140, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1747, 2902,
	-1000, 1946, 2895, 1745, -1000, -1000, 2301, -1000, -1000, 3010,
	-1000, -1000, 1904, 2894, 7, -1000, -1000, 2277, -1000, -1000,
	1944, -1000, -1000, 1005, 2889, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 73946, 50874, 49876, 61666, -10, -1000,
	-1000, -1000, -1000, -28, -1000, 19949, 106785, -1000, -1000, -1000,
	-1000, 1766, 106785, 913, -1000, -1000, 2888, -1000, 106785, 876,
	-1000, -1000, 2887, -1000, 2776, -1000, -1000, -1000, -1000, 3409,
	-1000, 3408, 2210, 3407, 3406, 3405, -1000, 1621, 1895, 3404,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 73462, 2096, -1000,
	-1000, 72480, -1000, 2207, -1000, 72971, 1042, -1000, 1005, 2202,
	-1000, 82237, 982, -1000, 3402, 3116, 2490, 1005, 2200, -1000,
	-1000, -1000, -1000, -1000, 54803, -1000, 54803, -1000, 54803, -1000,
	1519, -1000, 99802, 6, 6, 3287, -1000, -1000, -1000, -1000,
	-1000, 2884, 3400, 3397, 3396, -1000, 95930, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 188, 2883, -1000, -1000, 81753, 188,
	2879, -1000, 188, 2876, -1000, 81269, -1000, -1000, 2127, 2875,
	-1000, 192, 2874, -1000, -1000, 189, 2871, -1000, -1000, -65,
	2870, -1000, -1000, 106785, -1000, -1000, -1000, -34, -1000, -1000,
	-1000, 978, -1000, 48864, -1000, 48864, 87604, 64670, 983, 774,
	56271, 106785, -1000, -1000, -1000, -1000, 106785, -1000, -1000, -1000,
	-113, -1000, -1000, 64670, 49876, 106785, -1000, -1000, -1000, -1000,
	106785, -1000, -1000, -1000, 64670, 72480, -1000, 87113, 71996, -1000,
	-1000, 1404, 2351, -1000, -1000, -1000, 64670, 1268, 64670, 64670,
	64670, -1000, 86622, -1000, -1000, 1926, 1712, 3012, 1909, 78849,
	-1000, 1888, -1000, -1000, -1000, 3056, -1000, 2769, -1000, 58233,
	80785, -1000, 80301, -1000, 79817, -1000, 78849, -1000, 78849, -1000,
	3395, 3393, 3392, -1000, 3391, 3046, -1000, 106785, 3044, -1000,
	3390, 3139, 2765, 106785, -1000, 2878, 1615, 1601, 95930, -1000,
	-1000, 95930, -1000, 95930, -1000, -1000, -1000, 1432, -1000, -1000,
	2280, -1000, -1000, -1000, -1000, 78849, -1000, -1000, -1000, -1000,
	-1000, -1000, 2759, -1000, 1640, -1000, 1816, -1000, 1375, -1000,
	-1000, 193, -1000, -1000, -16, -1000, 99318, -1000, 2266, -1000,
	95930, -1000, 2273, 2714, 2725, 1478, 2128, 2377, -1000, 36048,
	2322, 43881, 2138, 157, -1000, -1000, 157, 157, 28215, -1000,
	-1000, 59695, 59695, 21450, 1340, 41306, 41306, 41306, 41306, 41306,
	41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306,
	41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306,
	41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306,
	1982, 41306, 1316, 41306, 41306, 41306, 41306, 1931, -1000, -1000,
	1861, 577, 1883, -1000, 3278, 3278, 3278, 911, 911, 107106,
	107106, 637, 3388, 830, -1000, 41306, -1000, 120, 41306, 21951,
	-1000, 491, 7695, 2275, -1000, 490, 22478, -1000, -1000, -1000,
	23508, 651, 35521, 41306, 1028, 106785, -1000, -1000, 1588, 3308,
	19450, 2726, 2567, 720, 713, 647, 26131, 25604, 25077, 24550,
	629, 41306, 41306, 41306, 41306, 41306, 41306, 41306, 41306, -1000,
	-1000, 3323, -1000, 3308, -1000, -1000, -1000, -1000, 3308, 1332,
	1331, 3308, -1000, 3308, 3308, 2672, 2672, 35006, 34479, 33952,
	44396, 33425, 41306, 24023, 32898, 32371, -1000, 95930, -4, 3220,
	41306, 158, -1000, 105657, -1000, 158, 158, 718, -35, 106785,
	2385, 2385, 47882, 2226, 2008, 2008, 2008, -1000, 934, 15429,
	934, 85649, 2023, 934, 934, 279, 299, 475, 45904, 2268,
	85649, 807, 717, 24, 20, 17, -1000, -1000, 16, 10,
	-1000, -1000, 78849, 715, 21951, 21450, 274, 1420, -40, 2451,
	2445, 2444, -1000, 2431, 1754, -43, 1315, 78849, 95930, -112,
	-1000, 5786, -52, -1000, 1295, 272, 3308, -1000, -1000, -1000,
	-1000, -1000, 3386, 3385, -1000, 1034, 712, 706, 875, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 703, 699, 699,
	699, -1000, 362, 697, 358, 695, 690, 688, -1000, -1000,
	-1000, -1000, -1000, 2683, 78849, 95930, -28, 79333, 78849, 927,
	-54, 1133, -16, -1000, -1000, -1000, 65159, 1230, -1000, 1811,
	-1000, -1000, -1000, -1000, -1000, -1000, 1400, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 968, -1000, -1000, -1000, -1000, -1000,
	-1000, 3296, 3292, -6, -1000, -1000, 21450, -1000, -17, 1768,
	1627, -1000, 67100, 2298, 3047, 3003, 1501, -1000, 1428, 1313,
	3098, 70530, 3166, 3196, 792, -1000, 2682, -1000, -1000, 957,
	1622, 1617, 1312, 70530, 1946, -1000, 59695, -1000, 2396, 3094,
	1367, 1379, 1367, 1367, 1358, -1000, 70530, 1614, 1289, 1288,
	-1000, 1287, 1284, -1000, -22, 3159, 3189, 104, -1000, 2681,
	1280, -1000, -1000, 78849, 21450, 1512, 1502, 1610, 1276, -7,
	-1000, 3156, 3153, 1261, 1260, -1000, 4408, -1000, 64670, 1716,
	2865, 2530, 919, 2528, -1000, -1000, 919, -10, 61666, 95930,
	267, -1000, 120, 41306, 41306, 120, 41306, 120, 3138, -1000,
	-1000, 2860, -1000, -1000, -1000, 3384, 1865, 2317, -1000, -1000,
	682, 2194, 2680, 95930, 2470, -12, 78849, -1000, 2859, 1946,
	2192, -1000, -1000, 71505, -1000, 2857, 523, 2191, -1000, 656,
	3383, -1000, 98834, -1000, 3016, 1343, 2856, 1086, 764, 3219,
	-1000, 764, 55293, -1000, 95930, -1000, -1000, 95930, -1000, -1000,
	-1000, 3382, -1000, 78849, -1000, -1000, 78849, 188, 2854, -1000,
	78849, -1000, 78849, 186, 2851, -1000, -1000, 95930, -1000, 78849,
	78849, -1000, 95930, 95930, 64670, 64670, 4495, 66132, -55, -62,
	474, -1000, 86138, 95930, 1082, 66616, 95930, 2972, 1002, 49876,
	-1000, -63, -113, 2522, 983, 983, 919, -1000, 919, -1000,
	78849, 2721, -1000, -1000, 64670, 983, 983, 983, -1000, -1000,
	-1000, -1000, 3381, 3379, -1000, -1000, -1000, 1003, 78849, 95930,
	78849, -1000, -1000, 95930, -1000, 95930, -1000, 1003, 95930, 1003,
	95930, 1003, 95930, -1000, -1000, -1000, -1000, -1000, -1000, 120,
	41306, -1000, -1000, 3377, 1552, -1000, 2717, -1000, 2716, -1000,
	44, -1000, -1000, -1000, -1000, -1000, 1799, 78849, 78849, 78849,
	78849, 95930, 78849, -1000, 70530, -1000, 2273, 2714, -1000, -1000,
	-1000, -1000, -1000, -1000, 1657, 2059, -1000, 2376, -1000, 1463,
	-1000, -1000, -1000, 106785, 44895, -1000, -1000, 106785, 1787, -1000,
	43366, 42851, -1000, -1000, 1605, 78849, 2453, -1000, 2453, -185,
	-1000, 105293, 2375, 78849, -1000, -1000, -1000, -1000, -1000, 953,
	1225, 1225, 1296, 1296, 1296, 1296, 3167, 1346, 2278, 411,
	493, 493, 317, 317, 317, 317, 317, 493, 251, 911,
	911, 251, 251, 251, 251, 251, 911, 911, 911, 493,
	493, 493, 107106, 106899, 5836, 41306, 41306, 1258, 1851, 577,
	5718, 41306, 7355, 7355, 7355, 7355, -1000, 1977, -1000, -1000,
	-1000, -1000, 2679, 681, 44396, 44396, -1000, -1000, -1000, -1000,
	22993, 41306, -1000, -1000, -1000, -1000, 31844, -1000, -1000, 104971,
	-290, 473, -136, 0, -1000, 41306, 41306, 41306, 471, -1000,
	265, 41306, 95930, -1000, 102230, 805, -84, -1000, -70, 1396,
	-1000, 41306, -1000, -1000, 1256, -1000, 1255, 1251, 1246, -1000,
	680, 470, -1000, 263, -1000, 1987, 679, 678, 41306, -1000,
	-1000, -1000, -1000, -1000, 104650, -1000, -1000, 104565, -1000, -1000,
	104200, -1000, -1000, 104113, -1000, -1000, -1000, 106377, 14786, 14414,
	14247, 7246, 13883, 13502, -77, 467, -78, 465, 952, 951,
	464, 463, 460, -79, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -88, 456, -1000, 2673, -136, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 455, -1000, 449, -1000, 106516,
	-136, 448, 6370, -1000, 44396, 44396, 44396, -1000, 444, -1000,
	105562, -1000, 106195, 31329, 31329, 31329, 442, 106108, 41306, -136,
	-91, -1000, -93, -1000, -1000, 578, -94, 980, 30802, 46900,
	21450, -1000, 980, 980, 41306, -1000, 41306, 2422, -1000, -1000,
	-1000, 2418, 1819, 2385, 47882, -1000, -1000, -1000, -1000, 85649,
	-1000, 3287, 2600, -1000, 85649, -1000, -1000, 95930, 523, -1000,
	85649, 85649, 21450, 934, -1000, 934, 85649, 664, -1000, -1000,
	-1000, -1000, -1000, 441, 51862, 0, 261, 21450, 1005, -1000,
	2448, 2448, 2448, 2448, -1000, -1000, 95930, 1245, -11, -73,
	3255, -1000, 1915, -1000, 59695, -1000, 820, 1029, 21450, -1000,
	-1000, -1000, 674, -1000, 3308, 3308, -1000, 3308, 95930, 2671,
	143, 129, 1024, 28730, -1000, 1230, -1000, -1000, 1491, -1000,
	1857, -1000, 1175, -1000, -1000, -1000, -1000, 28730, -1000, 2231,
	95930, 95930, 78849, -1000, 95930, -1000, 2189, 98350, 2188, 59695,
	95930, -1000, -1000, 670, 669, 2363, 2360, 1080, 95930, 95930,
	2355, 97866, 97382, 95930, 2021, 41306, 61182, 2087, 2949, 120,
	120, -1000, -1000, 120, 667, 1259, 78849, 78849, 95930, 78849,
	1715, -1000, -1000, -1000, -1000, -1000, 71014, -1000, -1000, 3322,
	3319, -1000, 1367, -1000, -1000, -1000, 1367, 1946, 1679, 95930,
	78849, 61182, 1608, 95930, 1917, 120, 120, -1000, -1000, 120,
	666, 21450, 1866, -1000, 2737, 95930, 3348, 95930, 95930, 95930,
	61182, 3036, 96898, 95930, 95930, 61182, 4408, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 60693, 1089, 1005, 1607,
	1244, 70530, 49876, 1000, 49876, 2497, -1000, -1000, 18951, -1000,
	106785, 106785, -1000, 106785, -1000, 57744, 95930, -1000, 1039, 95930,
	66616, 971, 2850, 54313, -28, 983, 64670, 78849, -12, 95930,
	-1000, 1946, 2849, 523, 2185, -1000, 64670, 3218, 2848, 662,
	3376, 3375, -1000, 2095, 2183, -1000, -1000, 96414, 2913, 869,
	95930, 980, 47882, 1900, -1000, 52353, 1064, 95930, 1785, 102,
	-1000, -1000, -1000, 29, 95930, -1000, 3372, -1000, -1000, 188,
	-1000, 78849, 188, 188, -1000, 78849, 78849, 2127, -1000, 192,
	-1000, 189, -1000, -65, -1000, -1000, 4495, 4495, 983, -209,
	660, -1000, 914, 912, 50375, 64670, -99, -1000, -1000, -1000,
	-1000, -1000, 78849, 95930, 761, 2489, 95930, -100, -1000, 260,
	655, -1000, 3101, -1000, -1000, 1002, 49876, 2669, -1000, -1000,
	1022, -1000, 1359, 983, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 5, -28, -28, -1000, 1003, -1000, 1003,
	-1000, 1003, -1000, 106785, -1000, -1000, 1527, 1471, 95930, -1000,
	21450, 95930, 78849, 21450, 78849, 2713, 2712, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1097, -1000, 1787, 2054, -1000,
	651, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2261, -1000, -13, 28215, 2149, -1000, -1000, 78849, 4, 41306,
	41306, 4803, 4288, 41306, 44396, 44396, -1000, 41306, 4275, -1000,
	-1000, -1000, -1000, -1000, 2666, 646, 41306, 59695, 6788, 4694,
	-1000, 440, 12638, 251, -1000, 41306, -1000, 439, 30287, -1000,
	105744, -42, -101, -1000, 15941, -136, -102, -1000, -1000, 817,
	-1000, 2840, -1000, 41306, 105926, 2233, 1901, 1714, 1559, 3308,
	3344, 18452, -1000, 55782, 984, 2032, 104018, -1000, -1000, -1000,
	-1000, 59695, 59695, 41306, 41306, -1000, 41306, 41306, 41306, -1000,
	-1000, -1000, 3308, 954, -1000, -1000, -1000, 954, -1000, -1000,
	1367, -1000, 1367, -1000, 41306, -1000, -1000, 2665, 41306, -1000,
	59695, 59695, 44396, 44396, 44396, 44396, 44396, 44396, 44396, 44396,
	44396, 44396, 44396, 44396, 44396, 44396, 44396, 44396, 44396, 44396,
	44396, 2337, 44396, 3275, 3275, 3275, -1000, 2711, 2665, 41306,
	41306, 59695, 427, 426, 423, -1000, 41306, -136, -1000, -1000,
	4495, 645, -1000, 2196, -1000, 2562, -1000, 41306, -1000, -111,
	-1000, 2268, -1000, -1000, 2562, 2562, -110, 106785, 47882, 47882,
	-1000, 643, 41306, 2416, -1000, -1000, 804, -284, -1000, 900,
	-1000, -1000, -1000, -1000, -1000, 523, -1000, -1000, -1000, 257,
	85649, 85649, 803, -1000, -115, -1000, -1000, -116, -1000, 3215,
	420, 21450, -1000, -1000, 3029, -1000, -1000, -1000, -1000, -1000,
	-1000, -28, 95930, 95930, 2046, 3343, -1000, 3316, 816, 800,
	253, 3308, 412, 398, 393, -28, 95930, 95930, 95930, -1000,
	2413, -1000, -16, -1000, -1000, -1000, 41306, -1000, -1000, 3020,
	1242, 1240, -1000, -1000, 2847, -1000, 2178, -1000, 1068, -1000,
	1756, -1000, 41306, 41306, 641, 638, 3371, 1738, 3369, 1081,
	2844, 2127, 2841, 2127, -1000, -1000, 956, -1000, 106785, -1000,
	-1000, -1000, -1000, 633, 627, -1000, -17, 1707, 1598, 1021,
	-1000, -1000, 41306, 41306, 85165, -1000, 425, 3010, 2, -1000,
	-1000, 1583, 1238, -1000, -1000, -1000, -1000, 1946, 1579, 1231,
	-1000, -1000, -1000, 1019, -1000, -1000, 1018, -1000, -1000, 41306,
	-1000, -22, 1166, 3152, 2174, 78849, 1164, -1000, 1145, -1000,
	-1000, -1000, 3149, 2127, 2829, 1203, -1000, -1000, -1000, -1000,
	-1000, 60194, -1000, 95930, 78849, 1606, 919, -1000, 2613, 919,
	1000, 2631, -1000, 2455, 3368, 78849, 3367, 391, -122, -23,
	59695, 3213, -1000, 2114, 583, 78849, 938, -1000, 3287, -1000,
	-1000, -1000, -1000, 78849, 3212, 2828, 1005, 120, 78849, 3342,
	-1000, -1000, 78849, 2826, 2093, 2173, 2283, 869, 65648, -1000,
	1005, 2028, -53, -1000, 1785, 29760, 3005, -123, -1000, -1000,
	-1000, 980, 55293, 47882, 41306, 3365, -125, -1000, -1000, 188,
	-1000, -1000, -1000, 186, -1000, -1000, -1000, -1000, -1000, -1000,
	84192, 84192, 64670, 64670, 64670, 983, 95930, 95930, 66616, -1000,
	616, 95930, 95930, 615, -1000, 95930, 95930, 3364, 64670, -25,
	612, -1000, 898, 896, 895, -1000, -1000, -1000, -1000, -1000,
	-1000, -113, 120, -1000, 2044, 78849, -1000, 17953, -1000, -1000,
	-1000, -1000, -1000, 1003, -1000, -1000, 1934, 2131, 1934, 1757,
	1749, -1000, 2050, -1000, -1000, -1000, -1000, 2394, 3034, 21450,
	3163, 7355, 41306, 41306, 234, 559, 536, 7355, 41306, 41306,
	59695, 10659, -138, 41306, 41306, -1000, 41306, 799, 106785, 3339,
	41306, 390, 388, -1000, -1000, -1000, 3294, -1000, -1000, -1000,
	106785, 41306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 386,
	-1000, 159, -1000, -1000, -1000, 101738, -1000, 41306, 384, 3091,
	-1000, 378, 375, 11654, 6391, 103790, 103469, 103384, 373, -1000,
	-1000, 371, 370, 106785, 2711, 106785, -1000, -1000, 1085, 1085,
	1327, 1327, 1327, 1327, 3275, 614, 843, 929, 511, 511,
	511, 897, 569, 569, 511, 511, 511, 2630, 2324, 602,
	6835, -1000, -1000, 106785, 106785, 363, -1000, -1000, -1000, -136,
	360, 4495, -1000, 2556, 3087, 106785, -1000, 47882, 2556, 2556,
	-1000, -1000, 1819, 95930, 106785, 47882, -1000, 2600, -1000, 16451,
	-1000, 21450, -1000, -1000, -1000, -1000, 3287, -1000, 51862, -1000,
	601, -1000, 14, 3029, -1000, 890, -1000, -28, -28, -1000,
	-1000, 797, 3363, 811, 21450, 356, -1000, -1000, -1000, -28,
	-28, -28, -1000, 2963, 106785, 95930, 95930, 95930, 2824, -1000,
	4264, -1000, 1080, 103019, -141, -1000, 105293, 41306, 95930, -1000,
	-1000, 1729, 2359, 1115, -1000, 3058, 95930, -1000, 95930, -1000,
	-1000, 95930, 95930, 78849, 95930, 2782, -144, 106785, -29, -1000,
	888, -1000, 1353, -1000, 17454, 95930, 78849, 95930, 78849, 1969,
	2739, -149, 21450, -1000, 3338, 3335, 2823, 3064, 3331, 95930,
	-1000, 95930, 78849, 2962, -1000, -1000, -1000, -1000, 1577, 1143,
	1000, -36, 600, -1000, 886, -1000, -1000, 885, 1000, -1000,
	64670, 49876, -1000, 523, -1000, 2484, -1000, 83212, 2073, 120,
	-1000, 3362, 84681, 598, -1000, 2041, -1000, 714, 1946, 120,
	78849, -1000, -1000, 523, 355, -37, -1000, 1072, 21450, 78849,
	2819, 2285, 869, 65648, -1000, 1343, 2377, -1000, -45, -1000,
	657, 120, 2028, -1000, -53, 106785, -1000, 883, -1000, -1000,
	-1000, -151, -1000, -1000, 350, -1000, 2961, 2956, -1000, 2561,
	41306, 596, 595, 95930, 2955, -1000, -1000, -152, 2799, 2799,
	64670, 49876, 64670, 1002, -1000, 2170, -1000, -1000, -1000, -1000,
	-1000, 21450, 1597, -1000, 594, 592, -1000, -1000, -1000, -1000,
	3034, 7355, 7355, 41306, 41306, 41306, 7355, 10659, -158, -1000,
	7355, 7355, -136, -1000, -1000, 105744, -1000, -1000, -1000, 106785,
	-1000, 16955, 1937, -1000, 102932, -1000, 28215, -1000, -1000, 41306,
	41306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 44396,
	2605, 591, 59695, -1000, -1000, 332, 1008, 41306, 41306, 2268,
	1008, 1008, -1000, -159, -1000, -1000, -1000, 3287, 14, -1000,
	-1000, 3361, 21450, -1000, 64670, 809, -1000, 3360, -1000, -1000,
	-1000, -1000, -1000, -1000, 95930, -1000, 95930, -1000, 21450, 95930,
	2580, 2159, -1000, -1000, 2354, 590, 44396, 78849, 874, -1000,
	3204, 2574, 1771, 41306, 2149, -160, -161, 2156, -1000, -1000,
	2152, 41306, -1000, 59695, 589, 2127, 2127, -166, -167, -1000,
	-1000, 41306, 1142, 95930, 29245, -1000, 3358, 3010, -1000, -1000,
	-1000, -1000, 95930, 41306, 1139, -1000, -1000, -1000, 3329, 2127,
	21450, -1000, 2127, 2127, 3064, 1110, 95930, 78849, -1000, 2292,
	2292, 64670, 49876, -1000, -65, 1000, 3211, 1917, 2518, -1000,
	-1000, -1000, -1000, 2349, -1000, -1000, 95930, 2326, 985, -1000,
	-168, -1000, 882, 873, 66616, 971, 967, -1000, -1000, -1000,
	523, 3210, -1000, 3328, 585, 95930, 2092, 581, 21450, -1000,
	869, 65648, -1000, 2913, 1785, -1000, 2168, 95930, 3001, -1000,
	2377, 577, -1000, 983, 572, 568, 2447, 2447, -173, 41306,
	41306, -175, 566, 983, -1000, -176, -1000, -1000, -1000, -1000,
	-75, -1000, 848, 847, -1000, -1000, 78849, 78849, 41306, 41306,
	-1000, 7355, 7355, 7355, -1000, 326, -1000, -1000, 2028, 3084,
	-1000, -128, 102837, 102609, 301, 44396, 59695, -182, -1000, -1000,
	95930, 106785, -136, -1000, -1000, -1000, 665, -1000, -1000, 3357,
	-1000, -1000, 1964, -1000, -1000, -1000, 95930, 2171, -1000, 1079,
	41306, 6835, 557, 41306, -1000, 3209, -1000, 2479, 2629, 2484,
	556, -1000, -1000, -1000, -1000, -1000, 1071, 1822, -1000, -1000,
	106785, 3064, 41306, -1000, -1000, 546, 543, 106785, 539, 868,
	2589, -1000, -1000, -1000, -1000, 106785, 538, 3152, -1000, -1000,
	-1000, -1000, 2127, 78849, -1000, -1000, -1000, -183, -1000, -1000,
	1827, 120, 971, -1000, 1956, 2073, 537, -1000, -1000, 2067,
	2401, -1000, 84681, 28730, 28730, 325, 3197, 967, -1000, 3298,
	-1000, 3185, 120, -1000, 41306, -1000, 78849, 41306, 2090, 65648,
	-1000, 2283, -1000, -1000, -184, 95930, 1785, -1000, -1000, 64670,
	64670, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1071, -189, -192, -1000, 64670, -1000, -1000, 2170,
	-1000, 95930, -1000, 95930, -1000, -1000, -194, -197, -1000, 1986,
	41306, 28215, -1000, -1000, 301, -200, -1000, -135, -1000, 3180,
	-1000, -1000, -1000, -1000, 2817, 2552, 102280, 2251, 95930, 10095,
	-1000, 2628, -1000, -1000, 1917, 95930, 2484, 2551, 78849, 1075,
	-207, 1934, 1934, 41306, 27700, 1951, 41306, -1000, -1000, 3064,
	-1000, 2571, 3286, -1000, 2067, 78849, 95930, -1000, 3053, -1000,
	2954, -1000, -1000, -1000, 2484, 120, -1000, -1000, 120, -1000,
	-208, 1072, -221, 78849, -1000, 2285, 980, -1000, -1000, -222,
	-227, 1771, 1071, 979, -228, -1000, -229, -234, -1000, -1000,
	324, 42336, 42336, 42336, -136, -185, -1000, 95930, 535, 2723,
	996, -1000, 2068, 1887, 194, 1091, -1000, -1000, 2574, -239,
	-1000, 993, 523, -1000, 41306, 1071, -241, -1000, 1060, -242,
	-1000, 1059, -244, -1000, 2581, -1000, -249, 2127, 990, 3137,
	-1000, -1000, -1000, -1000, 522, -250, -1000, -1000, 2155, -1000,
	1917, 985, -1000, 1071, 513, 1771, 512, -1000, 2928, 983,
	983, 2484, 1771, 980, 510, 983, -1000, -1000, -1000, 2805,
	-1000, 45394, 2122, 1739, 105199, 2805, 2805, -1000, -1000, 95930,
	3113, -1000, 2074, 2070, 1441, -1000, -1000, -1000, -1000, -1000,
	-1000, 980, -1000, 3110, 2251, 106785, 2484, -1000, 1934, 2505,
	-1000, 1934, 2579, -1000, 1948, -1000, -1000, -1000, 2804, 3293,
	95930, -1000, 95930, 1723, 1643, 3356, 971, 2067, 1771, 41306,
	2484, 41306, 1285, -1000, -1000, 1917, 2484, -1000, -1000, -1000,
	1681, 3194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	863, -1000, 2938, -1000, 1095, 2055, 2055, -1000, 858, 2068,
	-1000, -1000, 508, -1000, 498, -1000, 1623, -1000, -1000, -256,
	-1000, -1000, 3355, -1000, 2067, -1000, 2484, -258, 1917, -261,
	-1000, 1493, 979, 1917, 1704, -1000, -1000, 2016, 41821, 41306,
	-1000, 3263, -1000, -1000, 2347, -1000, 41306, 2574, 41306, 41306,
	2036, 2126, -1000, -1000, 1917, 1071, 979, 1771, 55293, 980,
	979, -1000, -1000, -1000, 106785, -1000, -1000, -1000, 106785, -1000,
	-263, -266, 53824, -1000, -1000, -1000, 979, 1771, 980, 2484,
	-236, -1000, 980, 1917, 1138, -209, 84192, 980, 2484, -1000,
	1917, -1000, -1000, -1000, 496, -271, -1000, 1917, 979, 41306,
	-1000, 979, 980, -274, 980, -1000, 1917, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4083, 4082, 4081, 4075, 4072, 4071, 4069, 4068, 4066,
	4064, 4062, 4061, 4060, 4058, 4055, 4053, 4052, 4049, 4048,
	4047, 4046, 4041, 4040, 4039, 4038, 4033, 4030, 4029, 4028,
	4027, 4026, 4025, 4023, 4022, 4021, 4019, 4017, 4016, 4013,
	4012, 4011, 4009, 4008, 4005, 4002, 4000, 3999, 3993, 3991,
	3988, 3987, 3985, 3984, 36, 3977, 3975, 3974, 3971, 3969,
	3968, 3967, 3966, 3965, 3964, 3960, 3959, 3958, 3957, 3956,
	3951, 3950, 3946, 44, 3942, 235, 3940, 3939, 3936, 3935,
	3932, 3929, 3928, 3924, 3923, 3922, 3921, 3919, 234, 3917,
	113, 3916, 3914, 3911, 3910, 3909, 232, 3908, 3906, 3903,
	3902, 242, 3901, 3898, 3897, 3894, 3893, 3892, 3891, 3890,
	3889, 68, 131, 3888, 3887, 35, 3885, 3884, 3880, 3879,
	3875, 3870, 3867, 3866, 3864, 3859, 214, 3857, 230, 3855,
	3854, 3851, 3850, 3848, 3847, 3842, 3839, 3838, 3837, 3827,
	3821, 3818, 3815, 3813, 3811, 3810, 3805, 3798, 3795, 3786,
	3782, 3779, 3776, 3774, 3773, 3772, 3771, 3770, 3768, 3767,
	241, 157, 3763, 3761, 229, 227, 3760, 3753, 3751, 3747,
	3745, 110, 8, 38, 3744, 3743, 58, 63, 69, 83,
	82, 71, 3740, 88, 3737, 102, 46, 3736, 19, 2,
	136, 224, 8956, 198, 3727, 3725, 3724, 208, 163, 3721,
	203, 3720, 3719, 3718, 3717, 80, 74, 150, 151, 142,
	143, 148, 3716, 3715, 86, 61, 41, 33, 3714, 3712,
	3710, 3060, 106, 3706, 226, 212, 133, 3705, 3701, 3699,
	1675, 3698, 37, 3697, 210, 60, 101, 13, 104, 3693,
	123, 32, 3691, 135, 50, 3690, 153, 78, 96, 8916,
	3934, 3689, 85, 49, 84, 1936, 158, 139, 171, 190,
	169, 184, 175, 144, 161, 3688, 215, 3687, 3180, 62,
	127, 3685, 3681, 3679, 64, 164, 87, 3678, 3675, 52,
	9, 3, 7, 149, 11, 103, 17, 3673, 16, 3672,
	3671, 3668, 3665, 26, 141, 3664, 240, 3663, 56, 39,
	23, 3660, 29, 178, 3658, 195, 115, 3657, 3656, 221,
	177, 138, 3655, 73, 196, 3653, 3651, 3649, 3644, 3642,
	117, 1, 111, 3637, 3636, 128, 204, 168, 3634, 43,
	3633, 3632, 145, 81, 120, 238, 107, 181, 93, 192,
	166, 194, 3627, 3626, 3625, 155, 3624, 3622, 185, 126,
	3621, 3619, 170, 243, 34, 53, 197, 65, 162, 134,
	3618, 172, 3617, 3616, 239, 154, 179, 12, 18, 76,
	108, 3615, 5, 199, 129, 279, 95, 3613, 5499, 2362,
	1491, 3608, 3606, 116, 97, 51, 98, 124, 225, 57,
	3605, 3604, 2753, 3603, 3601, 3600, 3599, 152, 3598, 3597,
	3596, 114, 125, 189, 3594, 79, 67, 15, 119, 296,
	237, 92, 191, 201, 218, 3593, 147, 3592, 45, 105,
	3581, 167, 216, 3578, 3577, 156, 3576, 118, 259, 47,
	132, 3575, 188, 3573, 3571, 3570, 3569, 3568, 3566, 3565,
	165, 202, 3564, 3559, 3558, 122, 160, 3556, 222, 276,
	223, 75, 40, 3555, 72, 3669, 3554, 54, 206, 90,
	140, 3553, 435, 42, 0, 11515, 9924, 7348, 10626, 3552,
	4253, 3549, 3548, 3546, 173, 112, 3543, 3542, 3538, 89,
	3536, 55, 3534, 3532, 48, 3531, 20, 14, 10, 24,
	22, 936, 294, 3528, 3527, 91, 109, 99, 3525, 236,
	193, 3521, 3518, 3513, 3512, 77, 3510, 31, 3508, 28,
	3506, 3505, 30, 6, 25, 3504, 3503, 207, 3502, 182,
	211, 3501, 130, 3500, 3168, 121, 3499, 3498, 220, 66,
	3497, 219, 3496, 3165, 3493, 3490, 21, 3488, 3486, 205,
	146, 180, 3484, 3479, 137, 3477, 3476, 3474, 217, 3470,
	3469, 27, 3465, 4, 3460, 3459, 174, 3140, 3457, 3456,
	59, 3375, 159,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 528, 528, 21, 35, 22, 36,
	15, 529, 529, 529, 529, 28, 23, 37, 25, 25,
	25, 25, 25, 174, 174, 174, 174, 20, 20, 31,
	31, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 527, 527, 210, 210,
	209, 204, 204, 530, 530, 211, 211, 211, 213, 213,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 429,
	429, 429, 460, 460, 460, 543, 543, 544, 544, 544,
	544, 544, 114, 114, 331, 331, 331, 43, 43, 43,
	43, 43, 522, 522, 176, 176, 176, 178, 178, 177,
	177, 177, 177, 64, 64, 535, 535, 536, 536, 534,
	537, 537, 537, 175, 175, 175, 110, 110, 110, 110,
	111, 111, 112, 112, 179, 179, 179, 181, 181, 180,
	180, 180, 180, 180, 180, 180, 180, 185, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 462,
	462, 463, 463, 170, 170, 171, 171, 171, 171, 172,
	172, 173, 173, 173, 57, 182, 182, 184, 184, 183,
	183, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 161,
	161, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 546,
	546, 547, 547, 548, 548, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 295, 295, 267, 267, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 520, 520, 310, 310,
	420, 420, 75, 75, 330, 330, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 519, 258, 258, 82, 82, 82, 260,
	260, 81, 81, 81, 311, 311, 87, 87, 87, 87,
	268, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 422, 422, 89, 89, 89, 390, 390, 93,
	93, 93, 346, 346, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 524, 524, 303, 303, 224, 224, 224, 224, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 166, 166,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 540,
	540, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	454, 454, 319, 319, 452, 452, 471, 471, 453, 453,
	272, 272, 272, 272, 272, 273, 273, 273, 461, 461,
	461, 461, 461, 461, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 167, 167, 168, 169, 169, 169,
	169, 148, 148, 148, 160, 160, 160, 160, 160, 160,
	160, 151, 151, 151, 138, 138, 129, 129, 129, 129,
	129, 129, 129, 133, 133, 133, 133, 133, 133, 133,
	133, 130, 130, 140, 140, 140, 140, 140, 134, 134,
	135, 135, 137, 137, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 131, 131, 131, 131, 142, 142, 142,
	142, 353, 353, 353, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 159, 159, 159, 159, 159,
	159, 538, 538, 539, 539, 155, 155, 155, 155, 155,
	155, 404, 404, 149, 149, 149, 149, 154, 154, 154,
	154, 336, 336, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 550, 550, 550, 157, 157, 145, 145, 158, 158,
	158, 158, 158, 158, 158, 158, 144, 144, 144, 143,
	143, 143, 143, 136, 521, 521, 517, 517, 517, 517,
	517, 517, 517, 517, 518, 518, 523, 523, 98, 98,
	98, 98, 98, 106, 106, 106, 106, 106, 99, 99,
	99, 99, 99, 101, 101, 100, 100, 100, 100, 65,
	65, 65, 14, 14, 14, 66, 66, 188, 188, 188,
	189, 189, 280, 280, 280, 280, 186, 186, 187, 187,
	67, 67, 551, 551, 551, 531, 531, 531, 532, 532,
	532, 532, 532, 532, 274, 274, 275, 275, 370, 370,
	370, 370, 370, 278, 278, 278, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 281, 281, 212, 212, 212,
	284, 285, 285, 282, 282, 283, 283, 283, 287, 287,
	286, 289, 289, 288, 369, 480, 480, 482, 482, 482,
	482, 482, 482, 482, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 552, 552, 478, 478, 478,
	479, 474, 474, 475, 475, 475, 475, 475, 276, 276,
	277, 277, 277, 277, 476, 477, 301, 301, 407, 481,
	481, 483, 483, 485, 553, 553, 553, 553, 553, 553,
	554, 554, 554, 368, 368, 367, 367, 293, 293, 486,
	486, 486, 486, 487, 487, 487, 487, 487, 490, 489,
	488, 488, 488, 488, 488, 69, 69, 69, 333, 333,
	332, 332, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 163, 163, 227,
	227, 63, 63, 63, 12, 12, 12, 533, 533, 533,
	68, 68, 68, 68, 68, 68, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 526, 526, 525, 525, 228, 228,
	556, 556, 74, 74, 74, 74, 74, 74, 74, 423,
	423, 424, 424, 62, 62, 62, 62, 62, 354, 354,
	352, 352, 351, 351, 300, 300, 406, 232, 232, 205,
	205, 205, 27, 26, 19, 19, 24, 24, 39, 39,
	39, 39, 42, 42, 38, 38, 38, 38, 40, 40,
	34, 34, 541, 541, 542, 542, 102, 102, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 109, 109, 109,
	109, 118, 118, 162, 162, 162, 162, 162, 162, 162,
	44, 44, 44, 44, 56, 56, 56, 56, 116, 558,
	558, 558, 117, 117, 117, 557, 557, 225, 225, 364,
	364, 365, 365, 559, 559, 366, 366, 366, 366, 219,
	218, 220, 220, 61, 61, 61, 214, 214, 215, 215,
	216, 216, 217, 217, 560, 560, 96, 96, 96, 165,
	165, 266, 266, 266, 361, 361, 361, 294, 294, 238,
	238, 363, 363, 363, 363, 329, 329, 329, 164, 164,
	308, 308, 321, 321, 322, 322, 417, 417, 323, 115,
	115, 192, 192, 190, 190, 190, 190, 190, 190, 190,
	190, 197, 197, 198, 198, 199, 199, 200, 201, 201,
	201, 201, 312, 312, 202, 202, 202, 191, 191, 191,
	193, 193, 193, 193, 193, 193, 193, 196, 196, 196,
	196, 203, 203, 203, 195, 195, 497, 497, 497, 499,
	499, 501, 501, 500, 500, 496, 496, 498, 498, 555,
	555, 335, 335, 335, 291, 292, 290, 290, 298, 298,
	296, 297, 297, 299, 299, 405, 405, 405, 206, 206,
	206, 326, 326, 326, 326, 327, 327, 357, 357, 355,
	355, 355, 355, 356, 356, 358, 358, 358, 359, 359,
	360, 360, 325, 325, 386, 386, 194, 194, 194, 305,
	305, 305, 306, 306, 376, 376, 376, 376, 376, 376,
	377, 377, 375, 375, 375, 375, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 409, 410, 410, 307, 307,
	411, 362, 362, 515, 515, 515, 516, 516, 403, 403,
	412, 412, 412, 412, 412, 412, 401, 401, 402, 402,
	418, 419, 419, 339, 339, 339, 339, 337, 337, 340,
	340, 340, 340, 338, 338, 413, 413, 413, 413, 328,
	328, 414, 414, 414, 414, 415, 371, 372, 372, 425,
	425, 425, 425, 427, 304, 304, 304, 304, 304, 473,
	472, 472, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 441, 441, 441, 441, 441, 441, 441, 441, 442,
	442, 442, 442, 442, 442, 442, 428, 428, 428, 428,
	428, 432, 432, 432, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 433, 433, 438, 438, 439,
	439, 439, 434, 435, 440, 440, 440, 440, 561, 561,
	444, 444, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 430, 430, 430, 437, 437, 437, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	347, 347, 349, 349, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 380, 380, 380, 380, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	491, 491, 491, 491, 491, 491, 491, 491, 382, 382,
	494, 494, 495, 495, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 502, 502, 503, 503, 505, 505, 506,
	506, 507, 508, 508, 508, 509, 510, 510, 504, 504,
	511, 511, 511, 511, 512, 512, 513, 513, 513, 513,
	513, 514, 514, 514, 514, 514, 392, 392, 393, 393,
	399, 399, 399, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 229,
	229, 229, 229, 229, 317, 317, 315, 315, 315, 318,
	318, 316, 316, 314, 314, 313, 313, 389, 389, 387,
	387, 391, 391, 341, 341, 443, 443, 443, 443, 443,
	443, 443, 443, 342, 342, 342, 350, 343, 343, 344,
	344, 344, 344, 344, 383, 384, 345, 345, 345, 385,
	385, 394, 398, 398, 397, 396, 396, 395, 395, 373,
	373, 374, 374, 324, 324, 562, 562, 320, 320, 416,
	416, 416, 416, 270, 270, 309, 309, 269, 269, 261,
	261, 262, 262, 262, 262, 302, 302, 400, 400, 445,
	445, 446, 446, 447, 447, 448, 448, 449, 450, 451,
	388, 388, 248, 247, 235, 236, 246, 245, 244, 234,
	237, 241, 242, 243, 239, 240, 254, 253, 252, 259,
	250, 251, 421, 233, 263, 263, 264, 264, 264, 265,
	265, 265, 265, 230, 230, 231, 231, 255, 255, 256,
	257, 257, 249, 249, 249, 221, 221, 221, 222, 222,
	223, 223, 459, 459, 456, 456, 456, 457, 457, 457,
	458, 458, 458, 458, 455, 455, 455, 455, 455, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 465, 465, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 467, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 470, 470,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 2, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 3, 6, 6, 3, 11, 14, 1, 2, 3,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 1, 3, 11, 12, 8,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 3, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 2,
	3, 2, 2, 8, 11, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 2, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 529, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -162, -167,
	-168, -169, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-163, -164, -165, 31, 30, 97, 78, 148, 123, 131,
	186, 341, 377, 388, 369, 358, -123, -124, 405, -44,
	-56, -117, -116, 71, 124, 364, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -545, 99,
	-498, -78, -81, -109, -549, 136, 155, 204, -99, -100,
	330, -104, -105, 371, -107, -108, 373, 156, -51, -50,
	150, -190, -192, -121, -122, -166, -129, -130, -131, -132,
	-133, -134, -135, -136, -137, -138, -139, -140, -141, -159,
	-142, -143, -144, -145, -150, -146, -147, -148, -149, -151,
	-152, -154, -155, -156, -157, -158, 409, -153, 463, 47,
	423, 80, 140, 381, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -59, -61, -62, -65, -66, -67,
	-74, -68, -69, -497, -79, -80, -83, -85, -86, -82,
	-84, 370, -193, -191, 526, 477, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -30, -35, -36, -32, -33,
	-31, -34, -37, -38, -39, -40, -41, -42, -26, -28,
	-29, -27, -15, -25, 496, 504, -196, -194, -195, -203,
	397, 485, 439, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, -268, 2, -250, -255, -256, -257, -249,
	-221, -467, -470, 4, -464, -468, 161, 213, 294, 21,
	22, 23, 24, 25, 26, 28, 29, 40, 41, 43,
	42, 44, 45, 46, 47, 51, 53, 57, 58, 59,
	60, 61, 62, 66, 71, 72, 77, 78, 79, 80,
	81, 82, 83, 89, 86, 87, 88, 91, 93, 94,
	95, 96, 97, 98, 100, 101, 102, 104, 105, 113,
	114, 115, 116, 118, 123, 124, 127, 122, 126, 129,
	130, 131, 134, 135, 136, 138, 139, 141, 142, 143,
	145, 146, 148, 149, 150, 153, 151, 446, 152, 154,
	155, 156, 157, 167, 168, 169, 174, 176, 180, 181,
	184, 185, 187, 191, 193, 194, 195, 196, 197, 203,
	204, 206, 207, 208, 209, 214, 215, 219, 216, 225,
	226, 230, 231, 232, 234, 238, 239, 240, 241, 242,
	243, 245, 247, 246, 249, 252, 253, 256, 257, 258,
	261, 262, 263, 264, 266, 267, 270, 268, 271, 269,
	273, 274, 275, 272, 278, 276, 280, 281, 282, 292,
	290, 286, 287, 283, 288, 284, 285, 289, 296, 297,
	300, 201, 302, 303, 306, 324, 310, 311, 312, 315,
	316, 319, 322, 323, 325, 326, 327, 328, 329, 330,
	331, 332, 334, 335, 339, 341, 342, 344, 346, 347,
	348, 349, 350, 351, 352, 355, 354, 356, 358, 364,
	369, 366, 367, 368, 370, 371, 372, 373, 375, 376,
	377, 379, 380, 381, 382, 384, 386, 387, 390, 391,
	406, 407, 425, 388, 389, 392, 393, 394, 395, 396,
	400, 398, 399, 401, 402, 403, 405, 408, 409, 411,
	412, 413, 414, 415, 416, 419, 421, 422, 423, 424,
	426, 429, 430, 431, 432, 427, 438, 435, 436, 440,
	441, 442, 443, 444, 445, 447, 449, 457, 458, 460,
	463, 464, 465, 455, 467, 468, 471, 472, 473, 476,
	474, 475, 477, 479, 482, 483, 484, 490, 489, 491,
	497, 498, 500, 501, 502, 35, 48, 49, 52, 54,
	56, 67, 68, 69, 73, 119, 120, 147, 158, 159,
	170, 182, 183, 188, 190, 198, 199, 200, 220, 221,
	223, 228, 250, 299, 301, 317, 321, 336, 337, 338,
	340, 353, 383, 417, 428, 433, 450, 451, 452, 453,
	459, 461, 485, 486, 487, 492, 499, -268, 2, -250,
	308, -243, 2, -221, -221, 341, 27, 2, 27, 335,
	399, 441, 443, 2, -524, -303, 2, 27, -224, -221,
	99, 186, 397, -243, 2, -524, -303, 24, 2, -221,
	2, -225, 2, 388, -221, 267, 2, 529, 91, 258,
	72, 383, 402, -126, 458, -125, 450, 392, -127, -454,
	2, 278, -221, 529, 529, 529, 27, -233, -221, 439,
	213, 115, 436, 529, 2, 439, 327, 489, 398, 115,
	350, 213, 465, 392, -533, 267, 379, 189, 478, -522,
	2, -517, 4, -468, -464, -262, -261, 439, 444, 115,
	-257, -249, 519, -256, 529, 529, 529, 2, 231, 232,
	349, 348, 402, 403, 529, 529, 529, 390, 2, 26,
	64, 90, 95, 121, 157, 177, 180, 313, -546, 324,
	347, 401, 438, 447, 460, -532, 424, 66, 392, -531,
	-533, 267, 465, 134, -351, 115, 258, 185, 472, 443,
	441, 470, 127, 219, 475, 474, 529, 529, 26, 64,
	75, 95, 134, 157, 177, 180, -548, 324, 347, 386,
	401, 438, 447, 460, 2, 489, 267, 398, 439, 213,
	115, 465, 392, -533, 390, 391, 345, -90, 2, 526,
	31, 30, 405, -185, 439, 224, 2, -221, 529, 529,
	2, 231, 232, 390, 391, 529, 529, 178, -517, 2,
	529, 529, 2, 231, 232, 390, 391, 224, 2, 66,
	394, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 2, -160, 402, 424, 195, 45, 44, 72, 27,
	346, 77, 328, 116, 142, 187, 213, 214, 239, 90,
	91, -353, 43, 232, 231, 391, -538, 390, -404, 440,
	393, 399, 435, 243, 388, 458, 99, 479, 380, 502,
	350, 351, 151, 4, 115, 278, 404, 450, 258, 387,
	331, 82, 529, -555, 2, 439, -557, 2, 458, 458,
	2, -557, 2, -557, 2, -557, 2, -558, 458, 499,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, -191, -193, -192,
	529, 529, 529, 529, 529, 529, 529, -160, 402, 2,
	72, 27, -296, -298, 469, 222, 144, 314, -190, -192,
	2, -497, -452, 2, -378, -471, -380, 517, 518, 510,
	437, 65, 293, 503, -392, 121, 470, 308, -470, -381,
	-394, 147, 383, -318, 8, 9, 5, 6, 7, -230,
	-382, -388, 462, 160, 298, -265, 530, 10, 526, -494,
	-192, -393, 36, 190, 63, -456, -264, -231, -428, 223,
	-263, -249, -491, -492, 4, -464, -465, -457, -431, -439,
	-435, -436, -442, -221, -467, 75, 107, 108, 106, 111,
	110, 260, 259, 112, 109, 404, 478, 64, 35, 198,
	199, 228, 299, 200, 73, -493, 135, -466, 220, 221,
	417, 49, 353, 170, 120, 119, 301, 54, 52, 486,
	-440, 117, 450, 451, 452, 453, 182, 183, 56, 158,
	159, 321, 338, 433, 459, 461, 188, 250, 103, 179,
	218, 202, 227, 229, 233, 251, 254, 279, 291, 295,
	318, 320, 378, 410, -561, 487, 428, 67, 68, -499,
	354, -500, -243, -499, 529, 529, 531, 529, -290, -291,
	-292, 2, 27, 132, 526, 2, -408, 2, -409, -413,
	-192, 244, -412, 526, -410, 524, -250, 309, -495, 384,
	-491, -492, -230, -249, -264, 4, -464, -466, 528, -293,
	526, 115, 439, 76, 213, -346, 526, -221, 27, 308,
	454, 531, -390, 526, 308, 178, 311, -221, 489, 2,
	2, 406, 2, 526, -126, 69, 458, 42, 402, -365,
	2, -366, -218, -219, -220, -418, 230, 344, 352, 505,
	502, -452, -540, 178, 509, 454, -452, -319, 528, 2,
	2, 2, 2, 2, -413, 198, -250, 2, -247, -455,
	4, -464, -468, -465, -469, -467, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 63, 64, 70, 74,
	76, 85, 90, 99, 106, 107, 109, 108, 110, 111,
	112, 121, 125, 128, 132, 133, 137, 140, 144, 160,
	162, 175, 177, 178, 186, 189, 192, 205, 217, 222,
	224, 244, 248, 255, 259, 260, 293, 298, 304, 308,
	309, 313, 314, 333, 343, 357, 374, 397, 404, 420,
	434, 439, 448, 454, 456, 462, 469, 470, 478, 480,
	488, 493, 494, 495, 496, -470, 75, 2, -413, 198,
	2, -252, 198, -413, -255, 2, -234, -221, 2, -246,
	-455, 2, -269, 198, -250, -251, -255, -253, 2, -255,
	-259, 2, -221, -462, 198, 2, -459, 10, -458, 5,
	4, -464, -468, -465, 489, 224, 454, 531, -309, -261,
	-262, -451, 8, -302, -221, 528, -378, 2, -115, -101,
	2, 175, -378, 198, 2, -115, 198, 2, -378, 198,
	2, -115, 198, 2, -535, 2, -462, 2, 2, 460,
	2, 95, 198, -221, 439, 114, 2, 368, -547, 386,
	464, 2, 2, 2, 2, 2, 2, 439, -239, 2,
	-221, 175, -259, 198, 2, 398, -556, 354, -462, 198,
	2, 489, -253, 2, -253, 213, 226, -234, 198, 2,
	443, 441, 443, 441, 178, 2, 224, 2, 224, 2,
	-414, 2, -415, -409, -250, 524, 2, 2, 2, 2,
	2, 198, -221, 439, 114, 2, 242, 2, 2, 2,
	2, 2, 2, 2, -311, 198, 2, -250, 489, -311,
	198, 2, -311, 198, 2, -352, 2, 85, -234, 198,
	2, -258, 198, 2, -253, -260, 198, 2, -259, -463,
	198, 2, -462, -378, 2, -115, 2, -422, 2, -421,
	-458, 485, -90, 526, -90, 526, 402, 526, -462, -250,
	-250, -378, 2, -115, -101, 2, -378, 2, -115, 2,
	-112, -111, -462, 526, 178, -378, 2, -115, -101, 2,
	-378, 2, -115, 2, -185, 175, 2, 115, 439, -160,
	2, 175, 480, 2, 8, 2, 205, -462, 393, 351,
	167, 2, 406, 2, 407, 72, -353, 502, 72, 178,
	2, 178, 2, -336, 2, 496, 2, -521, 2, 308,
	178, 2, 178, 2, 178, 2, 178, 2, 178, 2,
	348, 403, 232, 2, -115, 493, -101, -378, 493, 2,
	-539, 175, 391, -378, 2, 457, 241, 152, 178, -336,
	2, 178, 2, 178, 2, 5, 2, 349, 425, 2,
	230, 344, 425, 2, -250, -550, 2, 439, 489, 398,
	2, 2, 86, 87, 178, 2, 178, 2, 178, 502,
	2, -328, -413, -364, -365, -364, 454, -296, -298, -160,
	406, 2, -197, -326, -199, 175, -355, -356, -200, 255,
	162, 304, -201, -335, 27, 132, -335, -335, 58, 527,
	527, 11, 12, 74, 40, 517, 518, 519, 520, 173,
	521, 522, 515, 516, 514, 507, 508, 512, 236, 237,
	92, 511, 509, 84, 265, 385, 163, 164, 165, 166,
	365, 211, 33, 212, 14, 15, 16, 32, 313, 254,
	503, 202, 410, 510, 17, 18, 19, 227, 229, 295,
	48, 205, -229, -271, -378, -378, -378, -378, -378, -378,
	-378, 320, 526, -324, -373, 524, -192, 526, 526, 526,
	-451, -192, -378, -392, 527, -316, 526, -192, -392, -387,
	526, 383, 524, 526, -395, -378, 5, 5, 5, 526,
	528, -502, 497, 175, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 340,
	-433, 526, -432, 526, -432, -432, 490, -430, 526, 504,
	498, 526, -430, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 490, 531, -499, -293,
	526, -320, -416, -378, 519, -320, -320, 308, -313, -378,
	103, -339, 233, 279, 179, 251, 378, 218, -375, 530,
	-375, -403, 504, -192, -410, -249, -192, -412, 526, -408,
	-403, -91, -451, -75, -88, -96, -115, -128, -164, -165,
	519, -250, 526, 178, 526, 528, -455, 178, -302, -234,
	-250, -263, -264, -269, 131, -313, -517, 465, 392, -302,
	-224, 37, -389, -425, -426, -473, 530, -472, -428, -438,
	-434, -437, 336, 337, -457, 52, 486, -440, 223, 4,
	-464, -466, 220, 221, 417, 49, 353, 170, 120, 119,
	301, 54, 450, 451, 452, 453, 182, 183, 56, 487,
	428, 67, 68, -517, 465, 392, -302, 175, -352, -454,
	-313, 37, -365, 2, 121, -459, 42, -559, 531, 253,
	-273, 264, 292, 194, 309, 500, 302, -461, 5, 4,
	-388, -400, 121, 258, 223, -445, -447, 8, -446, 9,
	-448, 517, 518, -453, -452, 105, 528, -455, -208, 366,
	405, -207, 23, 28, 136, 483, 153, -283, 215, 323,
	327, 147, 421, 473, -528, -529, 389, 445, 446, 88,
	302, 405, 366, 147, -332, -334, 37, 113, 282, 322,
	59, 208, 269, 270, 423, 492, 147, 405, 366, 323,
	-529, 96, 366, -529, -210, 421, 473, -528, -529, 389,
	366, -209, -283, 147, 530, 23, 366, 405, 323, -543,
	-544, 136, 28, 366, 323, -525, -496, 496, 147, -413,
	198, -536, -111, 245, 5, 10, -111, -309, 531, 531,
	-455, 519, 391, 390, 147, 147, 147, 147, 175, 2,
	2, 293, 2, 2, 2, 180, -531, -548, 2, 2,
	-250, 198, -295, 308, -520, -310, 439, -250, 293, -252,
	198, 2, -255, 489, -525, 293, -254, 198, -250, 37,
	526, 2, -352, 2, 213, -496, 293, -414, -266, -250,
	-409, -266, 405, -243, 37, -375, -375, 147, 2, 2,
	2, -221, -211, 531, 62, 372, 147, -311, 198, -211,
	147, -211, 147, -270, 198, -269, -211, 147, -211, 531,
	147, -211, 531, 147, 531, 147, 527, 531, -422, -422,
	-462, -173, 496, 178, 99, 526, 526, -185, -419, 531,
	-418, -463, -112, -462, -462, -520, -234, 2, -250, 2,
	439, 234, -462, -173, 205, -462, -462, -462, -454, 27,
	407, 2, 348, 403, 87, 407, 2, -250, 439, 115,
	213, 78, -523, 175, -518, 379, -517, -250, 115, -250,
	115, -250, 115, -250, -250, 2, 2, 2, 2, 83,
	83, 2, 44, -539, 175, 2, 457, 2, 457, 2,
	-221, -221, -221, 424, 253, -250, 175, 439, 213, 439,
	213, 115, 439, -211, 531, -225, -197, -326, -454, -327,
	-326, -198, -197, -200, 175, 352, 474, 282, 408, 238,
	-356, -355, 27, -378, -360, 169, 281, -378, -358, -380,
	517, 518, -446, -448, -312, 302, -191, -191, -191, -299,
	-405, -378, 343, 213, -427, -425, -425, -248, -455, 450,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, 254, 202, 410, 48, 205,
	-378, 454, -378, -378, -378, -378, 276, 293, 298, 462,
	160, 471, 132, 302, -562, 434, 39, -385, -192, -317,
	526, -399, 34, 420, 27, -392, 526, 2, -373, -378,
	-374, -314, -313, -313, 527, 488, 27, 132, 519, 2,
	527, 531, 37, 527, -378, -314, -391, -387, -313, -398,
	-397, 493, -347, -348, 501, 272, 118, 196, 271, -349,
	396, -449, 8, -455, 519, -503, 168, 189, 526, 527,
	2, 527, 2, 527, -378, 2, 527, -378, 2, 527,
	-378, 2, 527, -378, 2, 527, 2, -378, -378, -378,
	-378, -378, -378, -378, -313, 8, -449, -449, 450, 450,
	-449, -449, -449, -441, 336, 256, 337, 184, 275, 273,
	274, 183, -441, -341, 2, -443, -313, 4, 501, 272,
	118, 196, 271, 396, 5, -341, 2, -342, 2, -378,
	-313, -343, -379, -380, 517, 518, 510, -392, -344, 2,
	-378, -314, -378, 55, 248, 456, -345, -378, 178, -313,
	-313, 2, -313, 2, -500, 37, -313, -305, 531, 178,
	37, 4, -305, -305, 526, 527, 531, -340, 193, 268,
	263, -340, -408, -339, 233, -337, 318, -337, -337, -403,
	-235, 524, 532, -455, -403, -402, -401, 37, -243, 315,
	-403, -403, 528, 527, -402, 525, -515, 526, 529, 529,
	529, 529, 529, -250, 526, -313, -455, 528, 426, 527,
	227, 227, 227, 227, 384, 527, 454, -519, -258, -260,
	496, -90, 310, 527, 531, -304, 36, 524, 528, -449,
	2, 2, -444, 490, 526, 526, -348, 526, 178, -519,
	-260, -303, -254, -540, 527, 458, -366, -272, 352, 419,
	367, 400, 436, 8, 9, 8, 9, 531, -455, 531,
	-541, 90, 454, 76, 392, -369, 198, 76, -474, -237,
	90, -475, -221, 70, 470, 343, 177, 145, -541, 90,
	343, -541, 90, 90, 405, 424, 454, 58, -413, 40,
	40, 27, -115, 249, 178, 502, 439, 213, 392, 454,
	-413, -334, -425, 113, 269, 270, 58, -450, -445, 517,
	518, -450, 58, -450, -450, -450, 496, -252, -413, 392,
	454, 454, 454, 454, 531, 40, 40, 27, -115, 249,
	178, 454, -269, -235, 484, 41, 484, 454, 41, 392,
	454, 531, 41, 41, 454, 454, -526, -226, 102, 288,
	262, 289, 94, 285, 93, 284, 100, 286, 101, 287,
	491, 296, 61, 283, -227, -228, 329, 482, -462, 405,
	366, 147, 205, -419, 205, -419, -261, -221, 528, -115,
	-378, -378, -115, -378, -115, 44, 147, 2, -556, 242,
	526, -276, 293, 178, -302, -420, 224, 531, -310, 147,
	-333, -332, 293, -254, 198, 2, 147, -293, 293, 141,
	526, 350, 2, -236, 198, -222, -221, -352, -214, 442,
	147, -330, 480, -361, -115, 526, 121, 37, -361, -321,
	-322, -417, -323, -237, 526, -243, -221, 2, -250, -311,
	-211, 147, -311, -311, -211, 531, 147, -234, -253, -258,
	-259, -260, -462, -463, -90, -421, 527, 527, 527, -172,
	312, -171, -221, 5, -185, 480, -275, -370, -369, -478,
	-479, -474, 254, 213, 470, 226, 161, -294, -238, -237,
	114, -179, 496, -111, 527, -419, 205, -173, -173, -419,
	-419, -250, 175, -462, -173, -173, -173, 2, 2, -336,
	-250, -234, -269, -250, -302, -302, -336, -234, -336, -234,
	-336, -234, -115, -378, 2, 402, 175, 175, 528, -336,
	350, 115, 439, 327, 213, -250, -269, -250, -269, -234,
	-250, -413, -327, -198, 309, 238, 408, -358, -359, -380,
	383, 384, -359, 383, 384, 8, 9, 8, 9, -202,
	412, 297, -311, 531, -205, 38, 128, 238, -250, 502,
	143, -378, -378, 454, -562, 434, -385, 143, -378, 276,
	298, 462, 160, 471, 132, 302, 178, 526, -379, -379,
	527, -315, -378, -378, 525, 534, 527, -298, 531, -296,
	-378, -313, -313, 527, 528, -313, -302, 525, 525, 531,
	527, -396, -397, 137, -378, 454, 454, 454, 454, 526,
	527, 528, -508, 319, 526, 526, -378, 527, 527, 527,
	527, 37, 531, 531, 531, 527, 531, 531, 531, 527,
	527, 527, 531, 527, 502, 502, 527, 527, 527, 527,
	531, 527, 531, 527, 178, 527, 527, -350, 333, 527,
	11, 12, 517, 518, 519, 520, 173, 521, 522, 515,
	516, 514, 507, 508, 509, 84, 265, 385, 14, 15,
	16, 227, 205, -379, -379, -379, 527, -383, -384, 178,
	175, 37, -345, -345, -345, 527, 178, -313, 527, 527,
	526, -501, 267, 293, 527, -372, -371, 494, -416, -306,
	2, -408, -245, -455, -372, -372, -313, -378, 233, 233,
	-338, 480, 308, -340, -408, -402, -451, -377, -376, 176,
	38, 128, 290, 201, -402, -243, -293, -402, -402, -455,
	-403, -403, -401, 527, -516, -451, 527, -307, -411, -495,
	-298, 528, -455, -182, -496, -161, 5, 298, -161, -161,
	-161, -302, 454, 454, 24, 334, -425, 524, 525, 8,
	-455, 526, -449, -449, -449, -302, 178, 178, 178, -331,
	496, -452, -365, 468, 81, 352, 450, -452, -207, 366,
	-237, -237, -250, -259, 293, -369, 198, -213, 293, -425,
	-244, -221, 526, 526, 238, 238, 480, -237, -244, 238,
	198, -237, 198, -244, -244, -527, 352, 303, -378, -460,
	-459, 112, 404, 257, 350, 294, -208, 366, 405, -115,
	-115, -115, 526, -540, 480, 131, -250, -269, -250, -259,
	-254, 405, 366, 291, -263, -450, -450, -332, 405, 366,
	-259, -252, -460, 392, -234, -209, -115, -115, -115, 526,
	-235, -210, 366, 5, 198, -237, 5, -221, -237, -259,
	-460, -544, 23, -237, 198, -237, -259, -460, -226, -462,
	298, 476, -525, 392, 454, -413, -111, -176, 496, -111,
	-170, 209, 519, -522, -221, 489, -221, -274, -277, -275,
	-237, -188, -189, 498, 496, 147, -267, -250, 524, -173,
	-462, -250, -259, 147, -293, 293, -462, 37, 147, 526,
	2, 2, 308, 293, -236, 198, -215, 138, -560, 509,
	-234, -372, -306, -329, -363, 374, 308, -294, 485, -243,
	-329, -308, 531, 178, 509, 528, -294, 2, -211, -311,
	-211, -211, -269, -270, -211, -211, -211, -90, -90, -173,
	531, 526, 509, 509, 526, -462, -462, 527, 531, -250,
	-236, 213, 213, -242, -222, 527, 531, 528, 526, -181,
	312, -180, 139, 240, 225, 413, 414, 415, 416, 130,
	-179, -112, 178, -52, 496, 439, -173, 530, -336, -336,
	-336, 402, 402, -221, -246, -234, -250, -247, -269, 175,
	175, 474, -359, 309, 261, -405, -206, 300, -250, 530,
	-378, -378, 143, 143, -378, -379, -379, -378, 143, 178,
	526, -378, -389, 32, 32, 527, 531, -374, -378, 527,
	488, -298, -298, 527, 519, -455, 530, 527, -387, 140,
	-378, 448, 272, 196, 271, -349, 271, -349, -349, -449,
	5, -455, 519, -509, -240, 526, -221, 494, -297, 314,
	527, -427, -425, -378, -378, -378, -378, -378, -449, -430,
	-430, -445, -445, -378, -383, -378, -427, -425, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, 132, 293, 302,
	-379, -384, -383, -378, -378, -425, 527, 527, 527, -313,
	-90, 526, 267, -325, 189, -378, -419, 531, -325, -325,
	527, -408, -408, 526, -378, 233, 525, 531, 533, 509,
	-293, 528, -401, -402, 525, 527, 531, 527, 531, -362,
	37, 527, -455, -184, -183, 129, 51, -302, -302, 311,
	5, 8, 524, 525, 528, -449, 527, 527, 527, -302,
	-302, -302, 114, 282, -378, 454, 454, 147, 293, 482,
	-480, -475, 145, -378, -300, -406, -378, 526, 526, 2,
	-204, 136, 405, -542, 2, 480, 147, -211, 147, -211,
	500, 526, 526, 454, 392, 496, -313, -378, -174, 121,
	-454, -529, 530, -529, 530, 392, 454, 392, 454, 496,
	496, -313, 454, -429, 46, 25, 293, -253, 454, 454,
	-211, 147, 465, 405, -462, 298, -259, -254, 405, 366,
	-419, -178, 312, -177, 139, 376, 130, 240, -419, -176,
	178, 224, 2, -254, 2, 527, 527, 531, -481, 37,
	306, 306, 526, -250, -71, 496, -418, -451, -252, 37,
	147, -525, -115, -254, -423, -424, 5, -250, 147, 308,
	293, -216, 247, -560, -459, -496, -298, -329, -320, 294,
	89, 527, -372, -322, -306, -378, 2, 527, -211, -211,
	-171, -172, -462, -462, -462, -173, -185, -185, -370, -278,
	526, -236, -222, 526, -185, -238, 2, -463, 531, 526,
	509, 509, 509, -419, -115, 312, -250, 519, -336, -285,
	-284, 327, 302, -285, 383, 383, 309, 169, 243, -205,
	-235, -378, -378, 143, 32, 32, -378, -378, -389, 527,
	-378, -378, -313, 525, 5, -378, 527, 527, 8, -378,
	527, 528, -510, -221, -378, 527, 58, 527, 527, 531,
	531, 527, 527, 527, 527, 527, 527, 527, -384, 178,
	132, 302, 526, 527, 527, -90, -386, 192, 58, -408,
	-386, -386, -338, -302, -408, -376, -235, 524, -455, -451,
	-411, 526, 528, -183, 509, 525, 2, 524, -455, 527,
	114, -237, -237, -369, 147, -482, 90, -484, 74, 161,
	99, 293, 298, 470, 343, 70, 121, 357, -552, 37,
	506, 527, 527, 531, -205, -300, -302, 293, 431, 121,
	293, 121, 114, 465, 77, -237, -244, -302, -302, -250,
	-259, 154, 527, 531, 509, 2, 519, 519, -259, -254,
	-259, -252, 325, 154, 527, -235, 5, 5, 147, -232,
	74, 5, -237, -237, -253, 114, 392, 454, -176, 531,
	526, 509, 509, -176, -463, -111, -293, -281, 216, -237,
	-479, -476, -477, 343, -483, -485, 161, 343, -115, 2,
	-187, -186, -221, 5, 526, -276, 312, 525, -333, -115,
	-254, -293, 527, 531, -354, 480, -235, -250, 147, -217,
	246, -560, -459, -214, -357, -355, 133, 526, 308, -115,
	-298, 509, 527, 527, 114, 114, 207, 146, -300, 526,
	526, -302, 114, 527, -180, -181, -462, -111, -462, -179,
	-53, -54, 213, 90, 332, -247, 439, 213, 526, 526,
	-205, -378, -378, -378, 527, -298, -455, 519, -504, 327,
	527, -405, -378, -378, -379, 178, 526, -389, 527, -505,
	495, -378, -313, -505, -505, 527, -451, 2, -462, 524,
	2, -369, -244, -248, -241, -221, 161, 198, 298, 238,
	526, -379, -250, 526, 2, 29, -553, 125, 217, -368,
	-554, 98, 432, 206, -406, -206, 527, 527, 298, 298,
	-378, -425, 526, -211, -211, 527, 527, -378, 454, -454,
	97, -452, 2, -529, -234, -378, 454, 5, -211, -248,
	-211, -211, -232, 465, -259, -254, -177, -178, -462, -111,
	-176, 37, -282, -283, 205, -481, 238, -241, 238, -551,
	496, 527, 531, 509, 509, -274, -188, -72, -73, 455,
	-418, -293, 37, 5, 526, -221, 308, 526, -235, -560,
	-459, -215, -329, 294, -302, 90, -357, -385, -173, 526,
	526, -279, 79, 91, 122, 197, 181, 214, 424, 429,
	27, -279, 527, -300, -300, 527, 526, -173, 527, 531,
	27, 526, 27, 526, -250, -269, -313, -313, 527, -298,
	58, 531, 527, 527, -379, -389, 527, -506, -507, -240,
	525, 2, -484, -241, 293, 480, -378, -223, 526, -378,
	37, 217, 126, 203, -281, 526, -367, 480, 357, -232,
	-300, 526, 526, 526, 509, 178, 526, -429, -211, -253,
	527, -534, 355, -115, -188, 325, 526, -280, 308, 114,
	282, -186, -452, -452, 527, 37, -73, 9, 37, -115,
	-300, -250, -300, 308, -459, -216, 527, -244, -329, -463,
	-463, -367, 527, 527, -463, -54, -302, -302, 527, 527,
	-511, 350, 384, 191, -313, -299, 527, 531, 37, 147,
	193, 527, -486, 266, -221, 527, 126, 203, -282, -302,
	-281, 193, -250, -530, 480, 527, -287, -286, -284, -289,
	-288, -284, -313, -452, 97, 325, -313, -232, -537, 179,
	-536, 5, 10, -280, -250, -301, -407, -237, 80, 114,
	-281, -115, -115, 527, -354, 527, -250, -217, -372, 527,
	527, -368, -367, -189, 496, 527, 527, 527, 527, -512,
	-513, 48, 467, 105, -378, -512, -512, -507, -509, 161,
	496, -487, -490, -489, 308, 411, 179, 326, 527, 431,
	492, -553, 527, 496, -293, -378, -367, 527, 531, 485,
	527, 531, 485, 527, 178, 527, -211, -175, 496, 44,
	526, 527, 531, 342, 127, 136, -282, -551, -367, 526,
	-368, 526, 133, -173, -173, -281, -368, -372, -173, -514,
	145, -513, 339, 174, 383, 339, 174, -514, -514, -241,
	53, -489, 308, -490, 308, 474, 127, -372, 53, -486,
	-281, -286, 205, -288, 178, 325, 150, -536, 29, -302,
	-407, 384, 384, 2, -188, -280, -368, -300, -281, -300,
	294, 474, -282, -281, 105, 189, 449, 282, 32, 509,
	-488, 282, 372, 62, 405, -488, 509, -487, 526, 526,
	390, 527, 2, -280, -281, 527, -282, 527, 405, -189,
	-282, 383, 316, -513, -378, 22, 298, 121, -378, -553,
	-313, -313, 312, -212, 62, 372, -282, -367, -189, -368,
	-321, -372, -189, 527, 527, -172, 526, -189, -368, -372,
	-281, -372, -372, -282, 454, -172, -372, -281, -282, 526,
	527, -282, -189, -313, -189, -372, 527, -372, -282,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1183,
	1185, 1187, 1189, 0, 706, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 868, 870,
	0, 559, 561, 0, 873, 875, 0, 0, 581, 582,
	0, 1269, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 659, 661, 663, 665, 667, 669,
	671, 673, 675, 676, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, -2, 702, -2, -2,
	0, -2, -2, -2, 1201, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 363, 364, 366, 368, 370, 372,
	375, 377, 379, 1327, 419, 421, 423, 425, 427, 429,
	431, 0, -2, 1339, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 83, 84, 85, 86, 87,
	88, 89, 90, 66, 67, 69, 70, 71, 75, 76,
	77, 78, 81, 64, 0, 0, 1300, 1302, 1304, 1306,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 481, 485, 488, 490, 492, 496, 499,
	505, 507, 509, 466, 467, 470, 1960, 1977, 1978, 1979,
	1982, 1983, 1984, 1985, 1986, 1987, 2376, 2457, 2458, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 468, 469, 1028,
	0, 533, 531, 1953, 534, 2195, 536, 538, 406, 407,
	408, 409, 410, 411, 0, 552, 544, 551, 553, 555,
	556, 557, 558, 528, 526, 0, 552, 2012, 550, 1181,
	1182, 1166, 1167, 2233, 1208, 0, 193, 571, -2, -2,
	-2, 2342, -2, 603, -2, 610, 2346, 2235, 615, 0,
	617, -2, 620, 1184, 1186, 1188, 704, 705, 1963, 0,
	0, 0, 0, 34, 35, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1077, 1078, 1079, 0,
	201, 203, -2, -2, -2, -2, 0, 0, 2273, 2061,
	1921, 1979, 1924, 1919, 282, 284, 286, 287, 0, 0,
	0, 0, 0, 0, 312, 315, 317, -2, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 923, 915,
	916, 1132, 0, 0, 0, 0, 414, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 343, 471, 472, 0,
	1328, 1328, 0, 0, 0, 0, 256, 247, 869, 871,
	872, 0, 0, 0, 0, 560, 562, 0, 0, 229,
	874, 876, 877, 0, 0, 0, 0, 0, 258, 0,
	0, 576, 578, 580, 645, 647, 649, 651, 653, 655,
	657, 660, 662, 664, 666, 668, 670, 672, 674, 677,
	679, 681, 683, 685, 687, 689, 691, 693, 695, 697,
	699, 701, 711, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 793, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 714, 716, 717, 718, 0, 773, 791,
	792, 801, 703, 0, 1068, 1329, 1210, 1191, 1205, 1210,
	1193, 1194, 1195, 1196, 1197, 1202, 1204, 1198, 1199, 1200,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 365,
	367, 369, 371, 373, 376, 378, 380, -2, 1298, 1299,
	420, 422, 424, 426, 428, 430, 432, 563, 0, 565,
	0, 715, -2, 0, 1333, 1333, 1333, 0, 0, 1299,
	1297, 0, 568, 569, 624, 625, 1564, 0, 0, 0,
	0, 0, 0, 0, 1818, 1650, 0, 626, -2, 1681,
	1683, 2317, 2342, 1817, 1685, 1686, 1687, 1688, 1689, 0,
	1691, 1692, 1693, 1694, 1695, 1696, 0, 1698, 0, 1703,
	1704, 1705, 0, 2324, 1898, 1973, -2, 0, 0, 2330,
	1969, 0, 1784, 1721, -2, -2, 1996, 1975, 1496, 1497,
	1498, 1499, 1500, -2, -2, 2359, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 0, 2305, 2325,
	2326, 2331, 2333, 2327, 2314, 1746, 2073, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1523, 1532, -2, -2, -2, -2, -2, -2, -2, 2318,
	2319, 2336, 2339, 2345, 2350, 2351, 2323, 2332, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 1524, -2, -2, -2, -2, 1316,
	2206, 1319, 1028, 1317, 1301, 1303, 0, 1305, 0, 0,
	0, 1310, 1336, 1334, 0, 1377, 1314, 1315, 1395, 1395,
	1419, 0, 1400, 0, 1419, 1328, 1445, 0, 1406, 2225,
	1722, 1723, 0, 1979, 1974, -2, -2, 2357, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 535, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 1207, 1131, 573,
	574, 0, 598, 0, 602, 2313, -2, 2020, 2244, -2,
	606, 1211, 1215, 1216, 1217, 1218, 0, 0, 0, 0,
	0, 612, 0, 0, 599, 600, 618, 621, 0, 707,
	708, 709, 710, 63, 0, 2325, 1445, 65, 0, 1943,
	2004, 2005, 2006, 2007, 2008, 2358, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2359, 68, 0, 2325,
	72, 0, 2325, 0, -2, 79, 0, 1949, 82, 0,
	1946, 91, 0, 2325, 0, 1918, -2, 0, 178, 1957,
	0, 894, 1959, -2, 2325, 1076, 259, 260, 1992, 1993,
	2000, 2001, 2002, 2003, 0, 0, 0, 0, 861, 1915,
	1920, 862, 1939, 863, 1925, 0, 288, 289, 290, 291,
	292, 0, 293, 2325, 295, 296, 0, 298, 299, 2325,
	301, 302, 0, 304, 0, 214, 215, 320, 321, 0,
	323, 0, 2325, 0, 0, 0, 329, -2, 344, 0,
	341, 332, 333, 335, 336, 337, 338, 0, 384, 382,
	1954, 0, 889, 2325, 891, 0, 0, 1111, -2, 2325,
	1073, 0, 1117, 1113, 0, -2, 0, 1326, 2325, 1225,
	919, 920, 921, 922, 0, 403, 0, 1238, 0, 1240,
	0, 1259, 1451, 1395, 1395, 0, 345, 346, 347, 348,
	349, 2325, 0, 0, 0, 354, 0, 356, 357, 358,
	359, 360, 361, 362, 167, 2325, 437, 464, 0, 167,
	2325, 440, 167, 2325, 443, 0, 446, 1130, 167, 2325,
	449, 167, 2325, 452, 454, 167, 2325, 458, 459, 461,
	2325, 463, 261, 1177, 1178, 1179, 1180, 0, -2, 522,
	1962, -2, 474, 0, 475, 0, -2, 0, 273, 0,
	0, 878, 879, 880, 881, 882, 885, 886, 887, 888,
	1432, 232, 230, 0, 0, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 0, 0, 583, 0, 0, 712,
	713, 0, 0, 723, 724, 725, 0, 273, 2236, 2203,
	2093, 732, 0, 735, 738, -2, 0, 0, 0, 0,
	742, 0, 747, 748, 749, 0, 751, 867, 753, 0,
	0, 755, 0, 759, 0, 762, 0, 764, 0, 766,
	-2, -2, -2, 777, -2, 0, 780, 782, 0, 784,
	-2, 0, 793, 789, 790, 0, 0, 0, 0, 809,
	810, 0, 815, 0, 818, 819, 820, 0, 822, 823,
	0, 825, 826, 827, 828, 0, 830, 831, -2, -2,
	835, 837, 0, 844, 0, 848, 0, 852, 0, 719,
	720, 167, 1449, 1190, -2, 1192, 0, -2, 0, 564,
	0, 567, 1356, 1284, 1281, 0, 1353, 1354, 1285, 0,
	0, 0, 1292, 0, 1331, 1332, 0, 0, 0, 1271,
	1272, 0, 0, 0, 0, 1823, 1824, 1825, 1826, 1827,
	1828, 1831, 1832, 1829, 1830, 1833, 1834, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 1837, 1838, 0, 0, 1840,
	0, 1842, 0, 0, 0, 0, 0, 0, 1629, 1631,
	1906, 0, 0, 1839, 1569, 1570, 1571, 1572, 1573, 1608,
	1609, 0, 0, 1682, 1903, 1902, 1684, 0, 1854, 0,
	1697, -2, 0, 1818, 1849, 0, 0, 1706, 1707, 1708,
	0, 0, 1854, 0, 0, 1897, 1718, 1719, 1561, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1509, 0, 1511, 0, 1512, 1513, 1520, 1533, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	1878, -2, 0, 0, 0, 0, 1525, 0, 1318, 0,
	0, 1381, 1907, 1911, 1912, 1381, 1381, 0, 0, 1855,
	1442, 1442, 0, 0, 1438, 1438, 1438, 1436, 1419, 0,
	1419, 1429, 0, 1419, 1419, 0, -2, 1400, 0, 0,
	1429, 0, 1413, 510, 512, 514, 516, 517, 518, 520,
	1446, 1447, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 2282, 2235, 540,
	554, 1328, 0, 1857, 1468, 1472, 0, 1474, 1475, 1476,
	1477, 1478, 0, 0, 1469, -2, 1521, 1523, 1544, 1997,
	1998, 1999, 1504, 1505, 1506, 1507, 1508, 1516, 1503, 1503,
	1503, 1514, 1543, 1535, 1543, 1539, 1489, 1490, 1491, 1526,
	1527, 1528, 1529, 0, 2282, 2235, 546, 0, 0, 0,
	0, 0, -2, 608, 613, 614, 0, 0, 1213, 0,
	1219, 635, 636, 637, 1221, 1222, 0, 611, 638, 639,
	640, 641, 642, 643, 0, 1927, 1928, 1929, 1930, 1933,
	1934, 0, 0, 609, 628, 616, 0, 622, 92, 1163,
	0, 131, 0, 1163, 1163, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 116, 127, 104, 105, 0,
	0, 0, 0, 0, 73, 1050, 0, 1053, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 0, 0,
	115, 0, 0, 110, 94, 0, 0, 0, 117, 129,
	0, 158, 160, 0, 0, 0, 0, 0, 0, 177,
	185, 0, 0, 0, 0, 1074, 0, 1325, 0, 0,
	2325, 0, 1432, 2131, -2, -2, 1432, 860, 0, 0,
	1980, 1923, 0, 0, 0, 0, 0, 0, 0, 322,
	324, 0, 326, 327, 328, 0, 1110, 0, 334, 374,
	999, 2325, 0, 0, 401, 396, 0, 398, 0, 1049,
	2325, 1047, 1958, 0, 1071, 0, 1028, 2325, 1956, 0,
	0, 1118, 1989, 1127, 1131, 1227, 0, 405, 0, 1241,
	1243, 0, 0, 1452, 0, 1454, 1455, 0, 351, 352,
	353, 0, 433, 0, 165, 166, 0, 167, 2325, 438,
	0, 441, 0, 167, 2325, 1913, 447, 0, 450, 0,
	0, 456, 0, 0, 0, 0, 1328, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 236, 0,
	1431, 0, 1432, 230, 273, 273, 1432, 585, 1432, 587,
	0, 0, 726, 727, 0, 273, 273, 273, 733, 734,
	736, 737, -2, -2, 845, 739, 740, 812, 0, 0,
	0, 811, 752, 0, 854, 2221, 865, 812, 2061, 812,
	2061, 812, 2061, 763, 765, 768, 804, 776, 781, 0,
	0, 786, 794, -2, 0, 796, 0, 798, 0, 800,
	812, 813, 816, 821, 824, 829, 0, 0, 0, 0,
	0, 0, 0, 1067, 0, 1203, 1356, 1284, 566, 1275,
	1355, 1276, 1283, 1286, 0, 0, 1288, 0, 1290, 0,
	1351, 1352, 1359, 1360, 0, 1370, 1371, 1363, 0, -2,
	0, 0, 1366, 1367, 1294, 0, 1311, 1312, 1313, 1340,
	1343, 1141, 0, 2457, 1565, 1463, 1566, 1567, 1942, 0,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	-2, -2, -2, -2, -2, -2, -2, -2, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, -2,
	-2, -2, 1606, 1607, -2, 1841, 1843, 0, 1906, 0,
	-2, 0, -2, -2, -2, -2, 1626, 0, 1628, 1633,
	1635, 1637, 0, 0, 0, 0, 1905, 1647, 1889, 1890,
	0, 0, 1820, 1821, 1822, 1632, 0, 1651, 1904, 1901,
	0, 0, 1853, 1339, 1710, 0, 0, 0, 0, 1717,
	1702, 1851, 0, 1850, 0, 0, 0, 1861, 0, 1896,
	1892, 0, 1940, 1560, 1547, 1548, 1549, 1550, 1551, 1552,
	1562, 0, 1937, 1966, 1972, 1794, 0, 0, 0, 1747,
	1748, 1749, 1750, 1751, 0, 1753, 1754, 0, 1756, 1757,
	0, 1759, 1760, 0, 1762, 1763, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 0, 0, 1766, 0, 1864, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1768, 0, 1770, 1855,
	1875, 0, 0, 1652, 0, 0, 0, 1818, 0, 1773,
	1855, 1883, 0, 0, 0, 0, 0, 1855, 0, 1888,
	0, 1780, 0, 1782, 1320, 0, 0, 1458, 0, 0,
	0, 1910, 1458, 1458, 0, 1376, 0, 0, 1439, 1440,
	1441, 0, 0, 1442, 0, 1433, 1437, 1434, 1435, 1429,
	1392, 0, 0, 1944, 1429, 1398, 1428, 0, 1028, 1418,
	1429, 1429, 0, -2, 1402, 1419, 0, 0, 511, 513,
	515, 519, 521, 0, 0, 1339, -2, 0, -2, 1027,
	0, 0, 0, 0, 530, 532, 0, 0, 453, 0,
	0, 524, 0, 527, 0, 1459, 1462, 0, 0, 1473,
	1479, 1480, 0, -2, 0, 0, 1545, 0, 0, 0,
	0, 0, 196, 0, 601, 0, 1212, 1220, 0, 632,
	0, 634, 0, 1931, 1935, 1932, 1936, 0, 623, 0,
	0, 0, 0, 1162, 0, 135, 2325, 0, 169, 0,
	0, 992, 1950, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 1051, 1052, 1054, 1061, 1063, 0, 1057, 1938, 0,
	0, 1058, 0, 1060, 1062, 1064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 107, 0,
	0, 0, 0, 1917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1106, 1104, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 0, 0, -2, 0,
	0, 0, 0, 206, 0, 264, 1916, 1926, 0, 883,
	884, 294, 297, 300, 303, 202, 0, 330, 0, 0,
	925, 900, 0, 0, 383, 273, 0, 0, 397, 0,
	1045, 1048, 0, 1028, 2325, 1085, 0, 0, 0, 0,
	0, 0, 1116, 0, 2325, 1945, 1988, 1989, 1229, 1235,
	0, 1458, 0, 1257, 1244, 0, 0, 0, 1257, 1261,
	1262, 1264, 1265, 0, 0, 1453, 0, 355, 465, 167,
	435, 0, 167, 167, 444, 0, 0, 167, 455, 167,
	460, 167, 262, 462, 473, 523, 1328, 1328, 273, 271,
	2178, 269, 266, 268, 0, 0, 0, 926, 928, 929,
	930, 931, 0, 1989, 0, 2120, 1989, 0, 1247, 1249,
	0, 226, 0, 233, 231, 236, 0, 0, 395, 584,
	589, 721, 0, 273, 729, 730, 731, 770, 806, 741,
	743, 744, 745, 0, 866, 864, 754, 812, 757, 812,
	760, 812, 779, 783, 788, 795, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 849, 850, 851,
	853, 1450, 1279, 1280, 1282, 0, 1291, 0, 0, 1365,
	-2, -2, 1364, 1368, 1369, -2, -2, -2, -2, 1287,
	0, 1296, 1293, 0, 1350, 1139, 1140, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1648, 0, -2, 1627,
	1630, 1634, 1636, 1638, 0, 0, 0, 0, 0, 0,
	1844, 0, 1846, 1649, 1899, 1902, 1816, 0, 0, 1338,
	1339, 1339, 0, 1716, 0, 1852, 0, 1859, 1860, 0,
	1709, 0, 1893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 1752, 1755, 1758,
	1761, 0, 0, 0, 0, 1741, 0, 0, 0, 1745,
	1515, 1501, 0, 1543, 1541, 1542, 1536, 1543, 1540, 1493,
	0, 1492, 0, 1765, 0, 1767, 1769, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1655, 1656, 1657, 1772, 1881, 1882, 0,
	0, 0, 0, 0, 0, 1778, 0, 1887, 1779, 1781,
	1328, 0, 1321, 0, 1378, 1373, 1457, 0, 1908, 1432,
	1380, 1382, 1909, 1947, 1373, 1373, 0, 1856, 0, 0,
	1423, 0, 0, 0, 1425, 1396, 0, 0, 1390, 0,
	1386, 1387, 1388, 1389, 1397, 1028, 1427, 1399, 1403, 1966,
	0, 1429, 0, 1414, 0, 1416, 1448, 0, 1408, 1411,
	0, 0, 1981, 274, 0, 305, 309, 310, 306, 307,
	308, 539, 0, 0, 0, 0, 1858, 0, 1464, 0,
	1470, 0, 0, 0, 0, 545, 0, 0, 0, 192,
	0, 597, -2, 630, 631, 633, 0, 629, 132, 1163,
	0, 0, 1144, 1146, 0, 137, 2325, 146, 0, 966,
	0, 1948, 0, 0, 0, 0, 0, 1165, 0, 0,
	2325, 167, 2325, 167, 149, 152, 0, 157, 154, 155,
	182, 183, 184, 0, 0, 957, 93, 1163, 0, 96,
	100, 108, 0, 0, 0, 114, 0, 0, 0, 1148,
	1154, 0, 0, 1055, 1056, 1059, 1065, 74, 0, 0,
	1152, 1158, 80, 0, 1143, 159, 98, 102, 109, 0,
	1160, 95, 0, 181, 0, 0, 0, 173, 0, 174,
	175, 186, 0, 167, 2325, 0, 892, 893, 1105, 1069,
	1070, 0, 1075, 0, 0, 0, 1432, 198, 0, 1432,
	206, 0, 1922, 0, 0, 0, 0, 0, 0, 924,
	1010, 0, 897, 0, 0, 0, 389, 385, 0, 394,
	400, 399, 890, 0, 0, 0, -2, 0, 0, 1120,
	1114, 1115, 0, 0, 0, 2325, 1231, 1235, 0, 1234,
	1326, 1339, 404, 1236, 1257, 0, 0, 0, 1246, 1242,
	1239, 1458, 0, 0, 0, 0, 0, 350, 434, 167,
	439, 442, 1914, 167, 448, 451, 457, 476, 477, 248,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 935,
	0, 1989, 1989, 0, 1952, 0, 0, 0, 0, 234,
	0, 237, 0, 0, 0, 242, 243, 244, 245, 246,
	227, 1432, 0, 586, 0, 0, 728, 0, 756, 758,
	761, 797, 799, 812, 838, 839, 952, 0, 952, 0,
	0, 1289, 0, 1362, 1295, 1344, 1345, 0, 1141, 0,
	1568, 1611, 0, 0, -2, 0, 0, 1615, 0, 0,
	0, -2, 0, 0, 0, 1845, 1847, 0, 1901, 1711,
	0, 0, 0, 1715, 1699, 1700, 0, 1819, 1862, 1891,
	1895, 0, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 0,
	1941, 1967, 1971, 1792, 1793, 1797, 1955, 0, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	1538, 0, 0, 1863, 1874, 1876, 1653, 1654, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, -2, -2,
	-2, 1671, 1672, 1673, -2, -2, -2, 0, 0, 0,
	1877, 1879, 1880, 1884, 1885, 0, 1775, 1776, 1777, 1886,
	0, 1328, 1322, 1375, 0, 1456, 1379, 0, 1375, 1375,
	1335, 1421, 0, 0, 1444, 0, 1393, 0, 1394, 0,
	1426, 0, 1401, 1404, 1405, 1415, 0, 1407, 0, 1410,
	0, 1711, -2, 275, 277, 0, 280, 542, 543, 541,
	525, 0, 0, 1466, 0, 0, 1518, 1522, 1546, 548,
	549, 547, 194, 0, 1430, 0, 0, 0, 0, 168,
	964, 991, 0, 0, 0, 1134, 1141, 0, 0, 997,
	139, 0, 0, 0, 147, 0, 0, 144, 0, 151,
	156, 0, 0, 0, 0, 0, 0, 111, 112, 113,
	0, 118, 0, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 1138, 0, 0,
	188, 0, 0, 0, 1108, 1109, 1149, 1155, 0, 0,
	206, 204, 0, 207, 0, 210, 211, 0, 206, 200,
	0, 0, 325, 1028, 331, 946, 998, 0, 1000, 0,
	898, 0, 0, 999, 381, 0, 388, 0, 1049, 0,
	0, 1072, 1083, 1028, 0, 1119, 1121, 1129, 0, 0,
	0, 1233, 1235, 0, 1226, 1227, 1358, 1237, 1255, -2,
	0, 0, 1339, 1263, 1260, 1266, 1267, 0, 436, 445,
	270, 0, 265, 267, 0, 251, 0, 0, 927, 932,
	0, 0, 0, 0, 0, 1248, 1250, 0, 0, 0,
	0, 0, 0, 236, 257, 0, 722, 746, 807, 840,
	951, 0, 0, 842, 0, 0, 1361, 1348, 1349, 1346,
	1141, 1613, 1617, 0, 0, 0, 1619, -2, 0, 1641,
	-2, -2, 1848, 1900, 1690, 1339, 1712, 1714, 1701, 1894,
	1563, 0, 1799, 1796, 0, 1783, 0, 1736, 1737, 0,
	0, 1740, 1742, 1743, 1744, 1502, 1495, 1494, 1873, 0,
	0, 0, 0, 1774, 1323, 0, 1788, 0, 0, 1383,
	1788, 1788, 1422, 0, 1424, 1391, 1384, 0, 1967, 1417,
	1409, 0, 0, 278, 0, 1460, 1465, 0, 1471, 1517,
	195, 133, 134, 136, 0, 965, 0, 968, 0, 0,
	0, 0, 975, 976, 0, 0, 0, 0, 0, 985,
	0, 1014, 1024, 0, 1350, 0, 0, 0, 141, 162,
	0, 0, 1164, 0, 0, 167, 167, 0, 0, 1145,
	1147, 0, 0, 0, 0, 121, 0, 0, 1150, 1156,
	1153, 1159, 0, 0, 0, 1161, 179, 180, 0, 167,
	0, 172, 167, 167, 1138, 0, 0, 0, 197, 0,
	0, 0, 0, 199, 263, 206, 0, 954, 0, 1010,
	1002, 1003, 1004, 0, 1009, 1011, 0, 0, 912, 899,
	0, 908, 0, 0, 925, 900, 0, 386, 1046, 1080,
	1028, 0, 1112, 0, 0, 0, 0, 0, 0, 1223,
	1235, 0, 1228, 1229, 1257, 1357, 0, 0, 0, 1245,
	1358, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 238, 0, 239, 240, 241, 228,
	588, 590, 0, 0, 596, 950, 0, 0, 0, 0,
	1347, 1621, -2, -2, 1642, 0, 1968, 1970, 1339, 0,
	1785, 1341, 0, 0, -2, 0, 0, 0, 1324, 1307,
	0, 1374, 1372, 1308, 1309, 1443, 0, 1412, 279, 0,
	1467, 138, 0, 969, 970, 1951, 972, 0, 974, 977,
	0, 980, 1991, 0, 984, 0, 993, 1015, 0, 946,
	0, 1020, 1021, 1022, 1135, 1136, 1026, 0, 140, 142,
	161, 1138, 0, 143, 150, 0, 0, 97, 0, 0,
	2052, 124, 122, 120, 1142, 99, 0, 181, 187, 1137,
	176, 189, 167, 0, 1151, 1157, 208, 0, 209, 212,
	0, 0, 900, 953, 0, 1001, 0, 1012, 1013, 902,
	0, 901, 0, 0, 0, 0, 0, 387, 390, 0,
	393, 0, 0, 1122, 0, 1128, 0, 0, 0, 0,
	1230, 1231, 402, 1251, 0, 0, 1257, 1268, 250, 0,
	0, 933, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 934, 1026, 0, 0, 990, 0, 255, 235, 0,
	592, 0, 594, 0, 841, 843, 0, 0, 1713, 1803,
	0, 0, 1738, 1739, -2, 0, 1679, 1787, 1789, 0,
	1385, 1461, 967, 971, 0, 0, 0, 1032, 0, 0,
	986, 0, 1018, 1019, 954, 0, 946, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 171, 190, 1138,
	205, 222, 0, 1081, 902, 0, 0, 910, 0, 913,
	0, 909, 906, 907, 946, 0, 391, 392, 0, 1084,
	0, 1129, 0, 0, 1232, 1233, 1458, 1254, 1258, 0,
	0, 1024, 1026, 900, 0, 591, 0, 0, 846, 847,
	0, 0, 0, 0, 1798, 1342, 1680, 0, 0, 0,
	0, 979, 1037, 0, 0, 0, 1016, 1017, 1014, 0,
	995, 0, 1028, 145, 0, 1026, 0, 958, 0, 0,
	961, 0, 0, 125, 2052, 123, 0, 167, 225, 0,
	219, 217, 218, 895, 0, 0, 1006, 1008, 0, 914,
	954, 912, 1082, 1026, 0, 1024, 0, 1224, 0, 273,
	273, 946, 1024, 1458, 0, 273, 593, 595, 1795, 1815,
	1804, -2, 2284, 2058, 0, 1815, 1815, 1790, 1791, 0,
	0, 981, 1033, 1034, 0, 1029, 1030, 1031, 1990, 982,
	983, 1458, 1023, 0, 1032, 163, 946, 955, 0, 0,
	956, 0, 0, 128, 0, 130, 191, 213, 0, 0,
	0, 1005, 0, 0, 0, 0, 900, 902, 1024, 0,
	946, 0, 0, 252, 253, 954, 946, 989, 254, 1800,
	0, 0, 1806, 1807, 1808, 1809, 1810, 1801, 1802, 973,
	0, 1035, 0, 1036, 0, 0, 0, 994, 0, 1037,
	148, 959, 0, 962, 0, 126, 0, 220, 221, 0,
	1007, 903, 0, 905, 902, 911, 946, 0, 954, 0,
	1252, 0, 900, 954, 0, 1812, 1813, 0, 0, 0,
	1038, 0, 1041, 1042, 0, 1039, 0, 1014, 0, 0,
	0, 949, 904, 896, 954, 1026, 900, 1024, 0, 1458,
	900, 1811, 1814, 1805, 978, 1040, 1043, 1044, 1025, 996,
	0, 0, 0, 945, 947, 948, 900, 1024, 1458, 946,
	1458, 987, 1458, 954, 0, 223, 0, 1458, 946, 1125,
	954, 1253, 988, 960, 0, 0, 1123, 954, 900, 0,
	224, 900, 1458, 0, 1458, 1126, 954, 1124, 963,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 515, 3, 521, 516, 3,
	526, 527, 519, 517, 531, 518, 528, 520, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 534, 3,
	507, 509, 508, 512, 530, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 524, 3, 525, 522, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 532, 514, 533, 510,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 511,
	57850, 513, 57851, 523, 57852, 529, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1217
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1232
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1233
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1242
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1260
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1261
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1358
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1383
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1400
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1404
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1425
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1457
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1465
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1490
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1505
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1519
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1529
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1533
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1543
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1554
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1561
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1573
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1588
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1597
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1602
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1616
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1627
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1647
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1656
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1667
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1673
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1699
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1704
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1824
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1873
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2034
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2038
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2092
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2175
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2183
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2210
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2327
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2344
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2442
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2486
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2566
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2575
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2581
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2586
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2591
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2601
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2605
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2624
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2632
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2708
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2868
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2906
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2907
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2914
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2915
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2916
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2917
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2918
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2934
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2938
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2942
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2950
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2951
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2968
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2969
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3054
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3082
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3117
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3145
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3171
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3172
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3175
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3386
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3437
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3446
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3470
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3478
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3555
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3588
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3806
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4023
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4028
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4033
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4034
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4047
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4179
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4180
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4182
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4186
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4218
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4237
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.str = "client_encoding"
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.str = "timezone"
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4282
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4297
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4345
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4354
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4379
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4461
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = true
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = true
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = false
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4663
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4667
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = true
		}
	case 802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = false
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4718
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = true
		}
	case 812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = false
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4761
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4768
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4789
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4815
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4846
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4858
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4866
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4903
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4926
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4942
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4949
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5082
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "RESUME")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5343
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5358
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{

			sqlVAL.union.val = nil
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = nil
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5392
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5403
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5408
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5413
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 910:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5440
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5454
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5469
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5554
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5557
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5560
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5567
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5583
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5588
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.str = ""
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 960:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 963:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5777
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5791
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5802
		{
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5803
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5901
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5912
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5929
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5954
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6019
		{
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6020
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6021
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6023
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6180
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6189
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6236
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = true
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6301
		{

			sqlVAL.union.val = true
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = false
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6316
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6330
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6342
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6354
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6364
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = nil
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6476
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6493
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6495
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6497
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6499
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6501
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6503
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6541
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6559
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6578
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6595
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6612
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = false
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = true
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = false
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = true
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = false
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.str = ""
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6723
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6729
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6799
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6805
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6817
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6823
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6837
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6843
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6860
		{
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6861
		{
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6864
		{
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6865
		{
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6876
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6894
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6953
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6961
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6972
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6977
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6978
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6997
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7029
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7031
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7051
		{
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7052
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7080
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7095
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.str = ""
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.str = ""
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.str = ""
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.str = ""
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7208
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7237
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7255
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7259
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7317
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7344
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7386
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7418
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7603
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7604
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7666
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7726
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = true
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7780
		{
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = nil
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7794
		{
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = true
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = false
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = false
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = true
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7824
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7865
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7886
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7891
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7920
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8008
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8009
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8012
		{
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8013
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8066
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8068
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8105
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8110
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8115
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8126
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8157
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8196
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8206
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8252
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8282
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8315
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8317
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = nil
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = true
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = false
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.str = tree.AstFull
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.str = tree.AstRight
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.str = tree.AstInner
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8435
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.str = tree.AstHash
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.str = ""
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8532
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8584
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8592
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8593
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8611
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8613
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8621
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8641
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8650
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8702
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8703
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = types.Geography
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8728
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8736
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8762
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8770
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = nil
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = types.Int2
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = types.Int
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = types.Float4
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = types.Float
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8813
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8821
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8829
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = types.Bool
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8843
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = types.Float
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8862
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8868
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8890
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = types.String
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = true
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = false
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = types.Date
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8947
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8961
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8978
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8995
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = true
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = false
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = false
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = types.Interval
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9019
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = nil
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9148
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9526
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9548
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9747
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9773
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9797
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9827
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9838
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9839
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9863
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9929
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10054
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10059
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10077
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10095
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10100
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10110
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10115
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10125
		{
			return unimplemented(sqllex, "treat")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.str = ""
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10300
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10397
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = tree.Any
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = tree.Some
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = tree.All
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = tree.Div
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = tree.LT
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = tree.GT
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = tree.LE
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.GE
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = tree.NE
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = tree.Like
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10759
		{
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10839
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10912
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10928
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10948
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10977
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11155
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11175
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.str = ""
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
