// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:719
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12639

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1447,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 369,
	-2, 0,
	-1, 73,
	236, 221,
	498, 221,
	-2, 0,
	-1, 84,
	224, 1204,
	238, 1204,
	254, 365,
	380, 365,
	390, 975,
	425, 365,
	437, 975,
	482, 975,
	509, 365,
	535, 975,
	-2, 0,
	-1, 90,
	130, 1447,
	231, 1447,
	520, 1447,
	521, 1447,
	-2, 0,
	-1, 106,
	147, 1418,
	166, 1418,
	179, 1418,
	234, 1418,
	267, 1418,
	332, 1418,
	342, 1418,
	515, 1418,
	-2, 1389,
	-1, 145,
	155, 840,
	253, 840,
	383, 807,
	442, 807,
	481, 807,
	501, 840,
	503, 807,
	-2, 0,
	-1, 147,
	4, 1449,
	21, 1449,
	22, 1449,
	23, 1449,
	24, 1449,
	25, 1449,
	26, 1449,
	27, 1449,
	28, 1449,
	30, 1449,
	31, 1449,
	37, 1449,
	42, 1449,
	43, 1449,
	45, 1449,
	46, 1449,
	47, 1449,
	48, 1449,
	49, 1449,
	50, 1449,
	51, 1449,
	53, 1449,
	54, 1449,
	55, 1449,
	56, 1449,
	58, 1449,
	59, 1449,
	60, 1449,
	61, 1449,
	62, 1449,
	63, 1449,
	64, 1449,
	68, 1449,
	69, 1449,
	70, 1449,
	71, 1449,
	73, 1449,
	74, 1449,
	75, 1449,
	79, 1449,
	80, 1449,
	81, 1449,
	82, 1449,
	83, 1449,
	84, 1449,
	85, 1449,
	88, 1449,
	89, 1449,
	90, 1449,
	91, 1449,
	92, 1449,
	94, 1449,
	96, 1449,
	97, 1449,
	98, 1449,
	99, 1449,
	100, 1449,
	101, 1449,
	103, 1449,
	104, 1449,
	105, 1449,
	107, 1449,
	108, 1449,
	116, 1449,
	117, 1449,
	118, 1449,
	119, 1449,
	121, 1449,
	122, 1449,
	123, 1449,
	125, 1449,
	126, 1449,
	127, 1449,
	129, 1449,
	130, 1449,
	132, 1449,
	133, 1449,
	134, 1449,
	137, 1449,
	138, 1449,
	139, 1449,
	141, 1449,
	142, 1449,
	144, 1449,
	145, 1449,
	146, 1449,
	148, 1449,
	149, 1449,
	150, 1449,
	151, 1449,
	152, 1449,
	153, 1449,
	154, 1449,
	155, 1449,
	156, 1449,
	157, 1449,
	158, 1449,
	159, 1449,
	160, 1449,
	161, 1449,
	162, 1449,
	163, 1449,
	165, 1449,
	171, 1449,
	172, 1449,
	173, 1449,
	174, 1449,
	178, 1449,
	180, 1449,
	184, 1449,
	185, 1449,
	186, 1449,
	187, 1449,
	188, 1449,
	189, 1449,
	190, 1449,
	191, 1449,
	192, 1449,
	193, 1449,
	194, 1449,
	195, 1449,
	196, 1449,
	198, 1449,
	199, 1449,
	201, 1449,
	202, 1449,
	204, 1449,
	205, 1449,
	206, 1449,
	207, 1449,
	208, 1449,
	209, 1449,
	210, 1449,
	211, 1449,
	212, 1449,
	214, 1449,
	215, 1449,
	217, 1449,
	218, 1449,
	219, 1449,
	220, 1449,
	224, 1449,
	225, 1449,
	226, 1449,
	227, 1449,
	228, 1449,
	231, 1449,
	232, 1449,
	233, 1449,
	235, 1449,
	237, 1449,
	238, 1449,
	240, 1449,
	242, 1449,
	243, 1449,
	244, 1449,
	246, 1449,
	250, 1449,
	251, 1449,
	252, 1449,
	253, 1449,
	254, 1449,
	255, 1449,
	257, 1449,
	258, 1449,
	259, 1449,
	261, 1449,
	262, 1449,
	264, 1449,
	265, 1449,
	268, 1449,
	272, 1449,
	273, 1449,
	274, 1449,
	277, 1449,
	278, 1449,
	279, 1449,
	280, 1449,
	282, 1449,
	283, 1449,
	284, 1449,
	285, 1449,
	286, 1449,
	287, 1449,
	288, 1449,
	289, 1449,
	290, 1449,
	291, 1449,
	292, 1449,
	293, 1449,
	294, 1449,
	295, 1449,
	296, 1449,
	297, 1449,
	298, 1449,
	299, 1449,
	300, 1449,
	301, 1449,
	302, 1449,
	303, 1449,
	305, 1449,
	307, 1449,
	308, 1449,
	309, 1449,
	310, 1449,
	311, 1449,
	312, 1449,
	313, 1449,
	314, 1449,
	315, 1449,
	316, 1449,
	317, 1449,
	318, 1449,
	320, 1449,
	322, 1449,
	324, 1449,
	325, 1449,
	327, 1449,
	328, 1449,
	329, 1449,
	330, 1449,
	331, 1449,
	334, 1449,
	337, 1449,
	338, 1449,
	339, 1449,
	340, 1449,
	343, 1449,
	344, 1449,
	345, 1449,
	347, 1449,
	349, 1449,
	350, 1449,
	351, 1449,
	352, 1449,
	353, 1449,
	354, 1449,
	355, 1449,
	356, 1449,
	357, 1449,
	358, 1449,
	359, 1449,
	360, 1449,
	362, 1449,
	363, 1449,
	364, 1449,
	365, 1449,
	366, 1449,
	367, 1449,
	368, 1449,
	369, 1449,
	370, 1449,
	371, 1449,
	372, 1449,
	373, 1449,
	374, 1449,
	375, 1449,
	376, 1449,
	378, 1449,
	379, 1449,
	381, 1449,
	382, 1449,
	383, 1449,
	384, 1449,
	385, 1449,
	386, 1449,
	387, 1449,
	388, 1449,
	389, 1449,
	390, 1449,
	391, 1449,
	392, 1449,
	394, 1449,
	396, 1449,
	397, 1449,
	398, 1449,
	403, 1449,
	405, 1449,
	406, 1449,
	407, 1449,
	408, 1449,
	409, 1449,
	410, 1449,
	411, 1449,
	412, 1449,
	414, 1449,
	415, 1449,
	416, 1449,
	418, 1449,
	419, 1449,
	420, 1449,
	421, 1449,
	422, 1449,
	423, 1449,
	425, 1449,
	426, 1449,
	427, 1449,
	428, 1449,
	429, 1449,
	430, 1449,
	431, 1449,
	432, 1449,
	433, 1449,
	434, 1449,
	435, 1449,
	437, 1449,
	438, 1449,
	439, 1449,
	440, 1449,
	441, 1449,
	442, 1449,
	444, 1449,
	445, 1449,
	446, 1449,
	447, 1449,
	448, 1449,
	449, 1449,
	451, 1449,
	452, 1449,
	453, 1449,
	454, 1449,
	455, 1449,
	456, 1449,
	457, 1449,
	459, 1449,
	461, 1449,
	462, 1449,
	463, 1449,
	464, 1449,
	465, 1449,
	466, 1449,
	467, 1449,
	468, 1449,
	469, 1449,
	470, 1449,
	471, 1449,
	472, 1449,
	473, 1449,
	474, 1449,
	475, 1449,
	477, 1449,
	478, 1449,
	480, 1449,
	481, 1449,
	483, 1449,
	484, 1449,
	485, 1449,
	486, 1449,
	487, 1449,
	488, 1449,
	489, 1449,
	490, 1449,
	491, 1449,
	493, 1449,
	494, 1449,
	495, 1449,
	496, 1449,
	497, 1449,
	499, 1449,
	501, 1449,
	502, 1449,
	503, 1449,
	504, 1449,
	505, 1449,
	506, 1449,
	508, 1449,
	509, 1449,
	510, 1449,
	511, 1449,
	513, 1449,
	514, 1449,
	517, 1449,
	518, 1449,
	519, 1449,
	520, 1449,
	521, 1449,
	522, 1449,
	523, 1449,
	525, 1449,
	528, 1449,
	529, 1449,
	530, 1449,
	531, 1449,
	532, 1449,
	533, 1449,
	535, 1449,
	536, 1449,
	537, 1449,
	538, 1449,
	543, 1449,
	544, 1449,
	545, 1449,
	546, 1449,
	547, 1449,
	548, 1449,
	-2, 0,
	-1, 148,
	1, 1305,
	128, 1305,
	242, 1305,
	321, 1305,
	378, 1305,
	387, 1305,
	552, 1305,
	576, 1305,
	-2, 0,
	-1, 150,
	1, 1305,
	576, 1305,
	-2, 0,
	-1, 151,
	1, 1305,
	576, 1305,
	-2, 0,
	-1, 152,
	1, 1305,
	498, 1305,
	576, 1305,
	-2, 0,
	-1, 181,
	147, 1417,
	166, 1417,
	179, 1417,
	234, 1417,
	267, 1417,
	332, 1417,
	342, 1417,
	515, 1417,
	-2, 1392,
	-1, 224,
	4, 1456,
	5, 1456,
	6, 1456,
	7, 1456,
	8, 1456,
	9, 1456,
	10, 1456,
	21, 1456,
	22, 1456,
	23, 1456,
	24, 1456,
	25, 1456,
	26, 1456,
	27, 1456,
	28, 1456,
	30, 1456,
	31, 1456,
	37, 1456,
	38, 1456,
	42, 1456,
	43, 1456,
	44, 1456,
	45, 1456,
	46, 1456,
	47, 1456,
	48, 1456,
	49, 1456,
	50, 1456,
	51, 1456,
	53, 1456,
	54, 1456,
	55, 1456,
	56, 1456,
	58, 1456,
	59, 1456,
	60, 1456,
	61, 1456,
	62, 1456,
	63, 1456,
	64, 1456,
	65, 1456,
	66, 1456,
	67, 1456,
	68, 1456,
	69, 1456,
	70, 1456,
	71, 1456,
	73, 1456,
	74, 1456,
	75, 1456,
	77, 1456,
	79, 1456,
	80, 1456,
	81, 1456,
	82, 1456,
	83, 1456,
	84, 1456,
	85, 1456,
	88, 1456,
	89, 1456,
	90, 1456,
	91, 1456,
	92, 1456,
	94, 1456,
	96, 1456,
	97, 1456,
	98, 1456,
	99, 1456,
	100, 1456,
	101, 1456,
	103, 1456,
	104, 1456,
	105, 1456,
	106, 1456,
	107, 1456,
	108, 1456,
	109, 1456,
	110, 1456,
	111, 1456,
	112, 1456,
	113, 1456,
	114, 1456,
	115, 1456,
	116, 1456,
	117, 1456,
	118, 1456,
	119, 1456,
	120, 1456,
	121, 1456,
	122, 1456,
	123, 1456,
	124, 1456,
	125, 1456,
	126, 1456,
	127, 1456,
	129, 1456,
	130, 1456,
	132, 1456,
	133, 1456,
	134, 1456,
	137, 1456,
	138, 1456,
	139, 1456,
	141, 1456,
	142, 1456,
	144, 1456,
	145, 1456,
	146, 1456,
	148, 1456,
	149, 1456,
	150, 1456,
	151, 1456,
	152, 1456,
	153, 1456,
	154, 1456,
	155, 1456,
	156, 1456,
	157, 1456,
	158, 1456,
	159, 1456,
	160, 1456,
	161, 1456,
	162, 1456,
	163, 1456,
	164, 1456,
	165, 1456,
	171, 1456,
	172, 1456,
	173, 1456,
	174, 1456,
	178, 1456,
	180, 1456,
	183, 1456,
	184, 1456,
	185, 1456,
	186, 1456,
	187, 1456,
	188, 1456,
	189, 1456,
	190, 1456,
	191, 1456,
	192, 1456,
	193, 1456,
	194, 1456,
	195, 1456,
	196, 1456,
	198, 1456,
	199, 1456,
	201, 1456,
	202, 1456,
	204, 1456,
	205, 1456,
	206, 1456,
	207, 1456,
	208, 1456,
	209, 1456,
	210, 1456,
	211, 1456,
	212, 1456,
	213, 1456,
	214, 1456,
	215, 1456,
	217, 1456,
	218, 1456,
	219, 1456,
	220, 1456,
	224, 1456,
	225, 1456,
	226, 1456,
	227, 1456,
	228, 1456,
	230, 1456,
	231, 1456,
	232, 1456,
	233, 1456,
	235, 1456,
	237, 1456,
	238, 1456,
	239, 1456,
	240, 1456,
	241, 1456,
	242, 1456,
	243, 1456,
	244, 1456,
	245, 1456,
	246, 1456,
	250, 1456,
	251, 1456,
	252, 1456,
	253, 1456,
	254, 1456,
	255, 1456,
	257, 1456,
	258, 1456,
	259, 1456,
	261, 1456,
	262, 1456,
	263, 1456,
	264, 1456,
	265, 1456,
	266, 1456,
	268, 1456,
	272, 1456,
	273, 1456,
	274, 1456,
	275, 1456,
	276, 1456,
	277, 1456,
	278, 1456,
	279, 1456,
	280, 1456,
	282, 1456,
	283, 1456,
	284, 1456,
	285, 1456,
	286, 1456,
	287, 1456,
	288, 1456,
	289, 1456,
	290, 1456,
	291, 1456,
	292, 1456,
	293, 1456,
	294, 1456,
	295, 1456,
	296, 1456,
	297, 1456,
	298, 1456,
	299, 1456,
	300, 1456,
	301, 1456,
	302, 1456,
	303, 1456,
	305, 1456,
	306, 1456,
	307, 1456,
	308, 1456,
	309, 1456,
	310, 1456,
	311, 1456,
	312, 1456,
	313, 1456,
	314, 1456,
	315, 1456,
	316, 1456,
	317, 1456,
	318, 1456,
	319, 1456,
	320, 1456,
	321, 1456,
	322, 1456,
	323, 1456,
	324, 1456,
	325, 1456,
	326, 1456,
	327, 1456,
	328, 1456,
	329, 1456,
	330, 1456,
	331, 1456,
	334, 1456,
	338, 1456,
	339, 1456,
	340, 1456,
	343, 1456,
	344, 1456,
	345, 1456,
	346, 1456,
	347, 1456,
	348, 1456,
	349, 1456,
	350, 1456,
	351, 1456,
	352, 1456,
	353, 1456,
	354, 1456,
	355, 1456,
	356, 1456,
	357, 1456,
	358, 1456,
	359, 1456,
	360, 1456,
	362, 1456,
	363, 1456,
	364, 1456,
	365, 1456,
	366, 1456,
	367, 1456,
	368, 1456,
	369, 1456,
	370, 1456,
	371, 1456,
	372, 1456,
	373, 1456,
	374, 1456,
	375, 1456,
	376, 1456,
	378, 1456,
	379, 1456,
	381, 1456,
	382, 1456,
	383, 1456,
	384, 1456,
	385, 1456,
	386, 1456,
	387, 1456,
	388, 1456,
	389, 1456,
	390, 1456,
	391, 1456,
	392, 1456,
	394, 1456,
	396, 1456,
	397, 1456,
	398, 1456,
	403, 1456,
	405, 1456,
	406, 1456,
	407, 1456,
	408, 1456,
	409, 1456,
	410, 1456,
	411, 1456,
	412, 1456,
	414, 1456,
	415, 1456,
	416, 1456,
	417, 1456,
	418, 1456,
	419, 1456,
	420, 1456,
	421, 1456,
	422, 1456,
	423, 1456,
	425, 1456,
	426, 1456,
	427, 1456,
	428, 1456,
	429, 1456,
	430, 1456,
	431, 1456,
	432, 1456,
	433, 1456,
	434, 1456,
	435, 1456,
	437, 1456,
	438, 1456,
	439, 1456,
	440, 1456,
	441, 1456,
	442, 1456,
	443, 1456,
	444, 1456,
	445, 1456,
	446, 1456,
	447, 1456,
	448, 1456,
	449, 1456,
	450, 1456,
	451, 1456,
	452, 1456,
	453, 1456,
	454, 1456,
	455, 1456,
	456, 1456,
	457, 1456,
	459, 1456,
	461, 1456,
	462, 1456,
	463, 1456,
	464, 1456,
	465, 1456,
	466, 1456,
	467, 1456,
	468, 1456,
	469, 1456,
	470, 1456,
	471, 1456,
	472, 1456,
	473, 1456,
	474, 1456,
	475, 1456,
	477, 1456,
	478, 1456,
	479, 1456,
	480, 1456,
	481, 1456,
	483, 1456,
	484, 1456,
	485, 1456,
	486, 1456,
	487, 1456,
	488, 1456,
	489, 1456,
	490, 1456,
	491, 1456,
	493, 1456,
	494, 1456,
	495, 1456,
	496, 1456,
	497, 1456,
	499, 1456,
	501, 1456,
	502, 1456,
	503, 1456,
	504, 1456,
	505, 1456,
	506, 1456,
	507, 1456,
	508, 1456,
	509, 1456,
	510, 1456,
	511, 1456,
	513, 1456,
	514, 1456,
	516, 1456,
	517, 1456,
	518, 1456,
	519, 1456,
	520, 1456,
	521, 1456,
	522, 1456,
	523, 1456,
	524, 1456,
	525, 1456,
	528, 1456,
	529, 1456,
	530, 1456,
	531, 1456,
	532, 1456,
	533, 1456,
	535, 1456,
	536, 1456,
	537, 1456,
	538, 1456,
	543, 1456,
	544, 1456,
	545, 1456,
	546, 1456,
	547, 1456,
	548, 1456,
	549, 1456,
	557, 1456,
	564, 1456,
	565, 1456,
	566, 1456,
	573, 1456,
	577, 1456,
	-2, 0,
	-1, 712,
	4, 1202,
	21, 1202,
	22, 1202,
	23, 1202,
	24, 1202,
	25, 1202,
	26, 1202,
	27, 1202,
	28, 1202,
	30, 1202,
	31, 1202,
	37, 1202,
	42, 1202,
	43, 1202,
	45, 1202,
	46, 1202,
	47, 1202,
	48, 1202,
	49, 1202,
	50, 1202,
	51, 1202,
	53, 1202,
	54, 1202,
	55, 1202,
	56, 1202,
	58, 1202,
	59, 1202,
	60, 1202,
	61, 1202,
	62, 1202,
	63, 1202,
	64, 1202,
	68, 1202,
	69, 1202,
	70, 1202,
	71, 1202,
	73, 1202,
	74, 1202,
	75, 1202,
	79, 1202,
	80, 1202,
	81, 1202,
	82, 1202,
	83, 1202,
	84, 1202,
	85, 1202,
	88, 1202,
	89, 1202,
	90, 1202,
	91, 1202,
	92, 1202,
	94, 1202,
	96, 1202,
	97, 1202,
	98, 1202,
	99, 1202,
	100, 1202,
	101, 1202,
	103, 1202,
	104, 1202,
	105, 1202,
	107, 1202,
	108, 1202,
	116, 1202,
	117, 1202,
	118, 1202,
	119, 1202,
	121, 1202,
	122, 1202,
	123, 1202,
	125, 1202,
	126, 1202,
	127, 1202,
	129, 1202,
	130, 1202,
	132, 1202,
	133, 1202,
	134, 1202,
	137, 1202,
	138, 1202,
	139, 1202,
	141, 1202,
	142, 1202,
	144, 1202,
	145, 1202,
	146, 1202,
	148, 1202,
	149, 1202,
	150, 1202,
	151, 1202,
	152, 1202,
	153, 1202,
	154, 1202,
	155, 1202,
	156, 1202,
	157, 1202,
	158, 1202,
	159, 1202,
	160, 1202,
	161, 1202,
	162, 1202,
	163, 1202,
	165, 1202,
	171, 1202,
	172, 1202,
	173, 1202,
	174, 1202,
	178, 1202,
	180, 1202,
	184, 1202,
	185, 1202,
	186, 1202,
	187, 1202,
	188, 1202,
	189, 1202,
	190, 1202,
	191, 1202,
	192, 1202,
	193, 1202,
	194, 1202,
	195, 1202,
	196, 1202,
	198, 1202,
	199, 1202,
	201, 1202,
	202, 1202,
	204, 1202,
	205, 1202,
	206, 1202,
	207, 1202,
	208, 1202,
	209, 1202,
	210, 1202,
	211, 1202,
	212, 1202,
	214, 1202,
	215, 1202,
	217, 1202,
	218, 1202,
	219, 1202,
	220, 1202,
	224, 1202,
	225, 1202,
	226, 1202,
	227, 1202,
	228, 1202,
	231, 1202,
	232, 1202,
	233, 1202,
	235, 1202,
	237, 1202,
	238, 1202,
	240, 1202,
	242, 1202,
	243, 1202,
	244, 1202,
	246, 1202,
	250, 1202,
	251, 1202,
	252, 1202,
	253, 1202,
	254, 1202,
	255, 1202,
	257, 1202,
	258, 1202,
	259, 1202,
	261, 1202,
	262, 1202,
	264, 1202,
	265, 1202,
	268, 1202,
	272, 1202,
	273, 1202,
	274, 1202,
	277, 1202,
	278, 1202,
	279, 1202,
	280, 1202,
	282, 1202,
	283, 1202,
	284, 1202,
	285, 1202,
	286, 1202,
	287, 1202,
	288, 1202,
	289, 1202,
	290, 1202,
	291, 1202,
	292, 1202,
	293, 1202,
	294, 1202,
	295, 1202,
	296, 1202,
	297, 1202,
	298, 1202,
	299, 1202,
	300, 1202,
	301, 1202,
	302, 1202,
	303, 1202,
	305, 1202,
	307, 1202,
	308, 1202,
	309, 1202,
	310, 1202,
	311, 1202,
	312, 1202,
	313, 1202,
	314, 1202,
	315, 1202,
	316, 1202,
	317, 1202,
	318, 1202,
	320, 1202,
	322, 1202,
	324, 1202,
	325, 1202,
	327, 1202,
	328, 1202,
	329, 1202,
	330, 1202,
	331, 1202,
	334, 1202,
	338, 1202,
	339, 1202,
	340, 1202,
	343, 1202,
	344, 1202,
	345, 1202,
	347, 1202,
	349, 1202,
	350, 1202,
	351, 1202,
	352, 1202,
	353, 1202,
	354, 1202,
	355, 1202,
	356, 1202,
	357, 1202,
	358, 1202,
	359, 1202,
	360, 1202,
	362, 1202,
	363, 1202,
	364, 1202,
	365, 1202,
	366, 1202,
	367, 1202,
	368, 1202,
	369, 1202,
	370, 1202,
	371, 1202,
	372, 1202,
	373, 1202,
	374, 1202,
	375, 1202,
	376, 1202,
	378, 1202,
	379, 1202,
	381, 1202,
	382, 1202,
	383, 1202,
	384, 1202,
	385, 1202,
	386, 1202,
	387, 1202,
	388, 1202,
	389, 1202,
	390, 1202,
	391, 1202,
	392, 1202,
	394, 1202,
	396, 1202,
	397, 1202,
	398, 1202,
	403, 1202,
	405, 1202,
	406, 1202,
	407, 1202,
	408, 1202,
	409, 1202,
	410, 1202,
	411, 1202,
	412, 1202,
	414, 1202,
	415, 1202,
	416, 1202,
	418, 1202,
	419, 1202,
	420, 1202,
	421, 1202,
	422, 1202,
	423, 1202,
	425, 1202,
	426, 1202,
	427, 1202,
	428, 1202,
	429, 1202,
	430, 1202,
	431, 1202,
	432, 1202,
	433, 1202,
	434, 1202,
	435, 1202,
	437, 1202,
	438, 1202,
	439, 1202,
	440, 1202,
	441, 1202,
	442, 1202,
	444, 1202,
	445, 1202,
	446, 1202,
	447, 1202,
	448, 1202,
	449, 1202,
	451, 1202,
	452, 1202,
	453, 1202,
	454, 1202,
	455, 1202,
	456, 1202,
	457, 1202,
	459, 1202,
	461, 1202,
	462, 1202,
	463, 1202,
	464, 1202,
	465, 1202,
	466, 1202,
	467, 1202,
	468, 1202,
	469, 1202,
	470, 1202,
	471, 1202,
	472, 1202,
	473, 1202,
	474, 1202,
	475, 1202,
	477, 1202,
	478, 1202,
	480, 1202,
	481, 1202,
	483, 1202,
	484, 1202,
	485, 1202,
	486, 1202,
	487, 1202,
	488, 1202,
	489, 1202,
	490, 1202,
	491, 1202,
	493, 1202,
	494, 1202,
	495, 1202,
	496, 1202,
	497, 1202,
	499, 1202,
	501, 1202,
	502, 1202,
	503, 1202,
	504, 1202,
	505, 1202,
	506, 1202,
	508, 1202,
	509, 1202,
	510, 1202,
	511, 1202,
	513, 1202,
	514, 1202,
	517, 1202,
	518, 1202,
	519, 1202,
	520, 1202,
	521, 1202,
	522, 1202,
	523, 1202,
	525, 1202,
	528, 1202,
	529, 1202,
	530, 1202,
	531, 1202,
	532, 1202,
	533, 1202,
	535, 1202,
	536, 1202,
	537, 1202,
	538, 1202,
	543, 1202,
	544, 1202,
	545, 1202,
	546, 1202,
	547, 1202,
	548, 1202,
	-2, 0,
	-1, 731,
	182, 2213,
	498, 2213,
	556, 2213,
	575, 2213,
	-2, 0,
	-1, 732,
	182, 2314,
	498, 2314,
	556, 2314,
	575, 2314,
	-2, 0,
	-1, 733,
	182, 2200,
	498, 2200,
	556, 2200,
	575, 2200,
	-2, 0,
	-1, 735,
	182, 2443,
	498, 2443,
	556, 2443,
	575, 2443,
	-2, 0,
	-1, 737,
	182, 2482,
	498, 2482,
	556, 2482,
	575, 2482,
	-2, 0,
	-1, 744,
	182, 2341,
	498, 2341,
	556, 2341,
	575, 2341,
	-2, 643,
	-1, 773,
	575, 2149,
	578, 2149,
	-2, 906,
	-1, 774,
	575, 2151,
	578, 2151,
	-2, 907,
	-1, 775,
	575, 2150,
	578, 2150,
	-2, 908,
	-1, 776,
	578, 2076,
	-2, 909,
	-1, 799,
	179, 235,
	-2, 0,
	-1, 822,
	44, 2123,
	-2, 0,
	-1, 823,
	535, 1180,
	-2, 976,
	-1, 839,
	4, 1585,
	21, 1585,
	22, 1585,
	23, 1585,
	24, 1585,
	25, 1585,
	26, 1585,
	27, 1585,
	28, 1585,
	30, 1585,
	31, 1585,
	37, 1585,
	42, 1585,
	43, 1585,
	45, 1585,
	46, 1585,
	47, 1585,
	48, 1585,
	49, 1585,
	50, 1585,
	51, 1585,
	53, 1585,
	54, 1585,
	55, 1585,
	56, 1585,
	58, 1585,
	59, 1585,
	60, 1585,
	61, 1585,
	62, 1585,
	63, 1585,
	64, 1585,
	68, 1585,
	69, 1585,
	70, 1585,
	71, 1585,
	73, 1585,
	74, 1585,
	75, 1585,
	79, 1585,
	80, 1585,
	81, 1585,
	82, 1585,
	83, 1585,
	84, 1585,
	85, 1585,
	88, 1585,
	89, 1585,
	90, 1585,
	91, 1585,
	92, 1585,
	94, 1585,
	96, 1585,
	97, 1585,
	98, 1585,
	99, 1585,
	100, 1585,
	101, 1585,
	103, 1585,
	104, 1585,
	105, 1585,
	107, 1585,
	108, 1585,
	116, 1585,
	117, 1585,
	118, 1585,
	119, 1585,
	121, 1585,
	122, 1585,
	123, 1585,
	125, 1585,
	126, 1585,
	127, 1585,
	129, 1585,
	130, 1585,
	132, 1585,
	133, 1585,
	134, 1585,
	137, 1585,
	138, 1585,
	139, 1585,
	141, 1585,
	142, 1585,
	144, 1585,
	145, 1585,
	146, 1585,
	148, 1585,
	149, 1585,
	150, 1585,
	151, 1585,
	152, 1585,
	153, 1585,
	154, 1585,
	155, 1585,
	156, 1585,
	157, 1585,
	158, 1585,
	159, 1585,
	160, 1585,
	161, 1585,
	162, 1585,
	163, 1585,
	165, 1585,
	171, 1585,
	172, 1585,
	173, 1585,
	174, 1585,
	178, 1585,
	180, 1585,
	184, 1585,
	185, 1585,
	186, 1585,
	187, 1585,
	188, 1585,
	189, 1585,
	190, 1585,
	191, 1585,
	192, 1585,
	193, 1585,
	194, 1585,
	195, 1585,
	196, 1585,
	198, 1585,
	199, 1585,
	201, 1585,
	202, 1585,
	204, 1585,
	205, 1585,
	206, 1585,
	207, 1585,
	208, 1585,
	209, 1585,
	210, 1585,
	211, 1585,
	212, 1585,
	214, 1585,
	215, 1585,
	217, 1585,
	218, 1585,
	219, 1585,
	220, 1585,
	224, 1585,
	225, 1585,
	226, 1585,
	227, 1585,
	228, 1585,
	231, 1585,
	232, 1585,
	233, 1585,
	235, 1585,
	237, 1585,
	238, 1585,
	240, 1585,
	242, 1585,
	243, 1585,
	244, 1585,
	246, 1585,
	250, 1585,
	251, 1585,
	252, 1585,
	253, 1585,
	254, 1585,
	255, 1585,
	257, 1585,
	258, 1585,
	259, 1585,
	261, 1585,
	262, 1585,
	264, 1585,
	265, 1585,
	268, 1585,
	272, 1585,
	273, 1585,
	274, 1585,
	277, 1585,
	278, 1585,
	279, 1585,
	280, 1585,
	282, 1585,
	283, 1585,
	284, 1585,
	285, 1585,
	286, 1585,
	287, 1585,
	288, 1585,
	289, 1585,
	290, 1585,
	291, 1585,
	292, 1585,
	293, 1585,
	294, 1585,
	295, 1585,
	296, 1585,
	297, 1585,
	298, 1585,
	299, 1585,
	300, 1585,
	301, 1585,
	302, 1585,
	303, 1585,
	305, 1585,
	307, 1585,
	308, 1585,
	309, 1585,
	310, 1585,
	311, 1585,
	312, 1585,
	313, 1585,
	314, 1585,
	315, 1585,
	316, 1585,
	317, 1585,
	318, 1585,
	320, 1585,
	322, 1585,
	324, 1585,
	325, 1585,
	327, 1585,
	328, 1585,
	329, 1585,
	330, 1585,
	331, 1585,
	334, 1585,
	338, 1585,
	339, 1585,
	340, 1585,
	343, 1585,
	344, 1585,
	345, 1585,
	347, 1585,
	349, 1585,
	350, 1585,
	351, 1585,
	352, 1585,
	353, 1585,
	354, 1585,
	355, 1585,
	356, 1585,
	357, 1585,
	358, 1585,
	359, 1585,
	360, 1585,
	362, 1585,
	363, 1585,
	364, 1585,
	365, 1585,
	366, 1585,
	367, 1585,
	368, 1585,
	369, 1585,
	370, 1585,
	371, 1585,
	372, 1585,
	373, 1585,
	374, 1585,
	375, 1585,
	376, 1585,
	378, 1585,
	379, 1585,
	381, 1585,
	382, 1585,
	383, 1585,
	384, 1585,
	385, 1585,
	386, 1585,
	387, 1585,
	388, 1585,
	389, 1585,
	390, 1585,
	391, 1585,
	392, 1585,
	394, 1585,
	396, 1585,
	397, 1585,
	398, 1585,
	403, 1585,
	405, 1585,
	406, 1585,
	407, 1585,
	408, 1585,
	409, 1585,
	410, 1585,
	411, 1585,
	412, 1585,
	414, 1585,
	415, 1585,
	416, 1585,
	418, 1585,
	419, 1585,
	420, 1585,
	421, 1585,
	422, 1585,
	423, 1585,
	425, 1585,
	426, 1585,
	427, 1585,
	428, 1585,
	429, 1585,
	430, 1585,
	431, 1585,
	432, 1585,
	433, 1585,
	434, 1585,
	435, 1585,
	437, 1585,
	438, 1585,
	439, 1585,
	440, 1585,
	441, 1585,
	442, 1585,
	444, 1585,
	445, 1585,
	446, 1585,
	447, 1585,
	448, 1585,
	449, 1585,
	451, 1585,
	452, 1585,
	453, 1585,
	454, 1585,
	455, 1585,
	456, 1585,
	457, 1585,
	459, 1585,
	461, 1585,
	462, 1585,
	463, 1585,
	464, 1585,
	465, 1585,
	466, 1585,
	467, 1585,
	468, 1585,
	469, 1585,
	470, 1585,
	471, 1585,
	472, 1585,
	473, 1585,
	474, 1585,
	475, 1585,
	477, 1585,
	478, 1585,
	480, 1585,
	481, 1585,
	483, 1585,
	484, 1585,
	485, 1585,
	486, 1585,
	487, 1585,
	488, 1585,
	489, 1585,
	490, 1585,
	491, 1585,
	493, 1585,
	494, 1585,
	495, 1585,
	496, 1585,
	497, 1585,
	499, 1585,
	501, 1585,
	502, 1585,
	503, 1585,
	504, 1585,
	505, 1585,
	506, 1585,
	508, 1585,
	509, 1585,
	510, 1585,
	511, 1585,
	513, 1585,
	514, 1585,
	517, 1585,
	518, 1585,
	519, 1585,
	520, 1585,
	521, 1585,
	522, 1585,
	523, 1585,
	525, 1585,
	528, 1585,
	529, 1585,
	530, 1585,
	531, 1585,
	532, 1585,
	533, 1585,
	535, 1585,
	536, 1585,
	537, 1585,
	538, 1585,
	543, 1585,
	544, 1585,
	545, 1585,
	546, 1585,
	547, 1585,
	548, 1585,
	-2, 0,
	-1, 847,
	254, 369,
	-2, 0,
	-1, 917,
	383, 808,
	442, 808,
	481, 808,
	503, 808,
	-2, 0,
	-1, 918,
	383, 807,
	442, 807,
	481, 807,
	503, 807,
	-2, 747,
	-1, 922,
	1, 854,
	572, 854,
	574, 854,
	576, 854,
	-2, 0,
	-1, 923,
	1, 782,
	572, 782,
	574, 782,
	576, 782,
	-2, 0,
	-1, 924,
	1, 786,
	572, 786,
	574, 786,
	576, 786,
	-2, 0,
	-1, 925,
	1, 905,
	179, 905,
	572, 905,
	574, 905,
	576, 905,
	-2, 0,
	-1, 933,
	1, 813,
	572, 813,
	574, 813,
	576, 813,
	-2, 0,
	-1, 939,
	1, 854,
	572, 854,
	574, 854,
	576, 854,
	-2, 0,
	-1, 940,
	1, 856,
	572, 856,
	574, 856,
	576, 856,
	-2, 0,
	-1, 941,
	1, 859,
	572, 859,
	574, 859,
	576, 859,
	-2, 0,
	-1, 947,
	1, 876,
	572, 876,
	574, 876,
	576, 876,
	-2, 0,
	-1, 948,
	1, 878,
	572, 878,
	574, 878,
	576, 878,
	-2, 0,
	-1, 999,
	166, 1460,
	179, 1460,
	267, 1460,
	332, 1460,
	-2, 1396,
	-1, 1014,
	166, 1459,
	179, 1459,
	267, 1459,
	332, 1459,
	-2, 1393,
	-1, 1040,
	575, 2148,
	-2, 651,
	-1, 1068,
	5, 2140,
	573, 2138,
	-2, 2129,
	-1, 1076,
	5, 2161,
	573, 2158,
	-2, 2149,
	-1, 1077,
	5, 2162,
	573, 2159,
	-2, 2150,
	-1, 1085,
	575, 2146,
	-2, 2128,
	-1, 1086,
	573, 2564,
	-2, 2147,
	-1, 1109,
	573, 2563,
	-2, 2163,
	-1, 1110,
	5, 1660,
	-2, 2534,
	-1, 1111,
	5, 1661,
	-2, 2535,
	-1, 1112,
	5, 1662,
	-2, 2549,
	-1, 1113,
	5, 1663,
	-2, 2513,
	-1, 1114,
	5, 1664,
	-2, 2547,
	-1, 1115,
	5, 1672,
	-2, 2526,
	-1, 1116,
	5, 1659,
	-2, 2522,
	-1, 1117,
	5, 1659,
	-2, 2521,
	-1, 1118,
	5, 1659,
	-2, 2540,
	-1, 1119,
	5, 1670,
	-2, 2515,
	-1, 1120,
	5, 1675,
	-2, 2514,
	-1, 1121,
	5, 1677,
	-2, 2559,
	-1, 1124,
	5, 1699,
	-2, 2552,
	-1, 1125,
	5, 1691,
	-2, 2553,
	-1, 1126,
	5, 1699,
	-2, 2554,
	-1, 1127,
	5, 1695,
	-2, 2555,
	-1, 1128,
	5, 1645,
	-2, 2527,
	-1, 1129,
	5, 1646,
	-2, 2528,
	-1, 1130,
	5, 1647,
	-2, 2516,
	-1, 1158,
	5, 1682,
	-2, 2560,
	-1, 1159,
	5, 1683,
	-2, 2550,
	-1, 1160,
	5, 1684,
	536, 1684,
	-2, 2517,
	-1, 1161,
	5, 1685,
	536, 1685,
	-2, 2518,
	-1, 1198,
	573, 2158,
	-2, 2149,
	-1, 1199,
	573, 2159,
	-2, 2150,
	-1, 1298,
	182, 2482,
	498, 2482,
	556, 2482,
	575, 2482,
	-2, 0,
	-1, 1301,
	1, 629,
	576, 629,
	-2, 1313,
	-1, 1428,
	405, 2124,
	444, 2124,
	566, 2124,
	-2, 2114,
	-1, 1439,
	577, 2124,
	-2, 2125,
	-1, 1444,
	1, 1177,
	572, 1177,
	574, 1177,
	576, 1177,
	-2, 1445,
	-1, 1492,
	390, 975,
	535, 975,
	-2, 364,
	-1, 1508,
	44, 2122,
	-2, 941,
	-1, 1515,
	1, 1177,
	572, 1177,
	574, 1177,
	576, 1177,
	-2, 1445,
	-1, 1523,
	4, 1202,
	21, 1202,
	22, 1202,
	23, 1202,
	24, 1202,
	25, 1202,
	26, 1202,
	27, 1202,
	28, 1202,
	30, 1202,
	31, 1202,
	37, 1202,
	42, 1202,
	43, 1202,
	45, 1202,
	46, 1202,
	47, 1202,
	48, 1202,
	49, 1202,
	50, 1202,
	51, 1202,
	53, 1202,
	54, 1202,
	55, 1202,
	56, 1202,
	58, 1202,
	59, 1202,
	60, 1202,
	61, 1202,
	62, 1202,
	63, 1202,
	64, 1202,
	68, 1202,
	69, 1202,
	70, 1202,
	71, 1202,
	73, 1202,
	74, 1202,
	75, 1202,
	79, 1202,
	80, 1202,
	81, 1202,
	82, 1202,
	83, 1202,
	84, 1202,
	85, 1202,
	88, 1202,
	89, 1202,
	90, 1202,
	91, 1202,
	92, 1202,
	94, 1202,
	96, 1202,
	97, 1202,
	98, 1202,
	99, 1202,
	100, 1202,
	101, 1202,
	103, 1202,
	104, 1202,
	105, 1202,
	107, 1202,
	108, 1202,
	116, 1202,
	117, 1202,
	118, 1202,
	119, 1202,
	121, 1202,
	122, 1202,
	123, 1202,
	125, 1202,
	126, 1202,
	127, 1202,
	129, 1202,
	130, 1202,
	132, 1202,
	133, 1202,
	134, 1202,
	137, 1202,
	138, 1202,
	139, 1202,
	141, 1202,
	142, 1202,
	144, 1202,
	145, 1202,
	146, 1202,
	148, 1202,
	149, 1202,
	150, 1202,
	151, 1202,
	152, 1202,
	153, 1202,
	154, 1202,
	155, 1202,
	156, 1202,
	157, 1202,
	158, 1202,
	159, 1202,
	160, 1202,
	161, 1202,
	162, 1202,
	163, 1202,
	171, 1202,
	172, 1202,
	173, 1202,
	174, 1202,
	178, 1202,
	180, 1202,
	184, 1202,
	185, 1202,
	186, 1202,
	187, 1202,
	188, 1202,
	189, 1202,
	190, 1202,
	191, 1202,
	192, 1202,
	193, 1202,
	194, 1202,
	195, 1202,
	196, 1202,
	198, 1202,
	199, 1202,
	201, 1202,
	202, 1202,
	204, 1202,
	205, 1202,
	206, 1202,
	207, 1202,
	208, 1202,
	209, 1202,
	210, 1202,
	211, 1202,
	212, 1202,
	214, 1202,
	215, 1202,
	217, 1202,
	218, 1202,
	219, 1202,
	220, 1202,
	225, 1202,
	226, 1202,
	227, 1202,
	228, 1202,
	231, 1202,
	232, 1202,
	233, 1202,
	235, 1202,
	237, 1202,
	238, 1202,
	240, 1202,
	242, 1202,
	243, 1202,
	244, 1202,
	246, 1202,
	250, 1202,
	251, 1202,
	252, 1202,
	253, 1202,
	254, 1202,
	255, 1202,
	257, 1202,
	258, 1202,
	259, 1202,
	261, 1202,
	262, 1202,
	264, 1202,
	265, 1202,
	268, 1202,
	272, 1202,
	273, 1202,
	274, 1202,
	277, 1202,
	278, 1202,
	279, 1202,
	280, 1202,
	282, 1202,
	283, 1202,
	284, 1202,
	285, 1202,
	286, 1202,
	287, 1202,
	288, 1202,
	289, 1202,
	290, 1202,
	291, 1202,
	292, 1202,
	293, 1202,
	294, 1202,
	295, 1202,
	296, 1202,
	297, 1202,
	298, 1202,
	299, 1202,
	300, 1202,
	301, 1202,
	302, 1202,
	303, 1202,
	305, 1202,
	307, 1202,
	308, 1202,
	309, 1202,
	310, 1202,
	311, 1202,
	312, 1202,
	313, 1202,
	314, 1202,
	315, 1202,
	316, 1202,
	317, 1202,
	318, 1202,
	320, 1202,
	324, 1202,
	325, 1202,
	327, 1202,
	328, 1202,
	329, 1202,
	330, 1202,
	331, 1202,
	334, 1202,
	336, 1202,
	338, 1202,
	339, 1202,
	340, 1202,
	343, 1202,
	344, 1202,
	345, 1202,
	347, 1202,
	349, 1202,
	350, 1202,
	351, 1202,
	352, 1202,
	353, 1202,
	354, 1202,
	355, 1202,
	356, 1202,
	357, 1202,
	358, 1202,
	359, 1202,
	360, 1202,
	362, 1202,
	363, 1202,
	364, 1202,
	365, 1202,
	366, 1202,
	367, 1202,
	368, 1202,
	369, 1202,
	370, 1202,
	371, 1202,
	372, 1202,
	373, 1202,
	374, 1202,
	375, 1202,
	376, 1202,
	378, 1202,
	379, 1202,
	381, 1202,
	382, 1202,
	383, 1202,
	384, 1202,
	385, 1202,
	386, 1202,
	387, 1202,
	388, 1202,
	389, 1202,
	390, 1202,
	391, 1202,
	392, 1202,
	394, 1202,
	396, 1202,
	397, 1202,
	398, 1202,
	403, 1202,
	405, 1202,
	406, 1202,
	407, 1202,
	408, 1202,
	409, 1202,
	410, 1202,
	411, 1202,
	412, 1202,
	414, 1202,
	415, 1202,
	416, 1202,
	418, 1202,
	419, 1202,
	420, 1202,
	421, 1202,
	422, 1202,
	423, 1202,
	425, 1202,
	426, 1202,
	427, 1202,
	428, 1202,
	429, 1202,
	430, 1202,
	431, 1202,
	432, 1202,
	433, 1202,
	434, 1202,
	435, 1202,
	437, 1202,
	438, 1202,
	439, 1202,
	440, 1202,
	441, 1202,
	442, 1202,
	444, 1202,
	445, 1202,
	446, 1202,
	447, 1202,
	448, 1202,
	449, 1202,
	451, 1202,
	452, 1202,
	453, 1202,
	454, 1202,
	455, 1202,
	456, 1202,
	457, 1202,
	459, 1202,
	461, 1202,
	462, 1202,
	463, 1202,
	464, 1202,
	465, 1202,
	466, 1202,
	467, 1202,
	468, 1202,
	469, 1202,
	470, 1202,
	471, 1202,
	472, 1202,
	473, 1202,
	474, 1202,
	475, 1202,
	477, 1202,
	478, 1202,
	480, 1202,
	481, 1202,
	483, 1202,
	484, 1202,
	485, 1202,
	486, 1202,
	487, 1202,
	488, 1202,
	489, 1202,
	490, 1202,
	491, 1202,
	493, 1202,
	494, 1202,
	495, 1202,
	496, 1202,
	497, 1202,
	499, 1202,
	501, 1202,
	502, 1202,
	503, 1202,
	504, 1202,
	505, 1202,
	506, 1202,
	508, 1202,
	509, 1202,
	510, 1202,
	511, 1202,
	513, 1202,
	514, 1202,
	517, 1202,
	518, 1202,
	519, 1202,
	520, 1202,
	521, 1202,
	522, 1202,
	523, 1202,
	525, 1202,
	528, 1202,
	529, 1202,
	530, 1202,
	531, 1202,
	532, 1202,
	533, 1202,
	535, 1202,
	536, 1202,
	537, 1202,
	538, 1202,
	543, 1202,
	544, 1202,
	545, 1202,
	546, 1202,
	547, 1202,
	548, 1202,
	-2, 0,
	-1, 1546,
	1, 502,
	572, 502,
	574, 502,
	576, 502,
	-2, 1416,
	-1, 1549,
	4, 2558,
	11, 2558,
	12, 2558,
	14, 2558,
	15, 2558,
	16, 2558,
	17, 2558,
	18, 2558,
	19, 2558,
	21, 2558,
	22, 2558,
	23, 2558,
	24, 2558,
	25, 2558,
	26, 2558,
	27, 2558,
	28, 2558,
	30, 2558,
	31, 2558,
	34, 2558,
	35, 2558,
	37, 2558,
	39, 2558,
	42, 2558,
	43, 2558,
	45, 2558,
	46, 2558,
	47, 2558,
	48, 2558,
	49, 2558,
	50, 2558,
	51, 2558,
	53, 2558,
	54, 2558,
	55, 2558,
	56, 2558,
	58, 2558,
	59, 2558,
	60, 2558,
	61, 2558,
	62, 2558,
	63, 2558,
	64, 2558,
	68, 2558,
	69, 2558,
	70, 2558,
	71, 2558,
	73, 2558,
	74, 2558,
	75, 2558,
	76, 2558,
	79, 2558,
	80, 2558,
	81, 2558,
	82, 2558,
	83, 2558,
	84, 2558,
	85, 2558,
	86, 2558,
	88, 2558,
	89, 2558,
	90, 2558,
	91, 2558,
	92, 2558,
	94, 2558,
	95, 2558,
	96, 2558,
	97, 2558,
	98, 2558,
	99, 2558,
	100, 2558,
	101, 2558,
	103, 2558,
	104, 2558,
	105, 2558,
	106, 2558,
	107, 2558,
	108, 2558,
	116, 2558,
	117, 2558,
	118, 2558,
	119, 2558,
	121, 2558,
	122, 2558,
	123, 2558,
	125, 2558,
	126, 2558,
	127, 2558,
	129, 2558,
	130, 2558,
	132, 2558,
	133, 2558,
	134, 2558,
	137, 2558,
	138, 2558,
	139, 2558,
	141, 2558,
	142, 2558,
	144, 2558,
	145, 2558,
	146, 2558,
	148, 2558,
	149, 2558,
	150, 2558,
	151, 2558,
	152, 2558,
	153, 2558,
	154, 2558,
	155, 2558,
	156, 2558,
	157, 2558,
	158, 2558,
	159, 2558,
	160, 2558,
	161, 2558,
	162, 2558,
	163, 2558,
	167, 2558,
	168, 2558,
	169, 2558,
	170, 2558,
	171, 2558,
	172, 2558,
	173, 2558,
	174, 2558,
	177, 2558,
	178, 2558,
	180, 2558,
	183, 2558,
	184, 2558,
	185, 2558,
	186, 2558,
	187, 2558,
	188, 2558,
	189, 2558,
	190, 2558,
	191, 2558,
	192, 2558,
	193, 2558,
	194, 2558,
	195, 2558,
	196, 2558,
	198, 2558,
	199, 2558,
	201, 2558,
	202, 2558,
	204, 2558,
	205, 2558,
	206, 2558,
	207, 2558,
	208, 2558,
	209, 2558,
	210, 2558,
	211, 2558,
	212, 2558,
	213, 2558,
	214, 2558,
	215, 2558,
	216, 2558,
	217, 2558,
	218, 2558,
	219, 2558,
	220, 2558,
	222, 2558,
	223, 2558,
	225, 2558,
	226, 2558,
	227, 2558,
	228, 2558,
	230, 2558,
	231, 2558,
	232, 2558,
	233, 2558,
	235, 2558,
	237, 2558,
	238, 2558,
	239, 2558,
	240, 2558,
	241, 2558,
	242, 2558,
	243, 2558,
	244, 2558,
	245, 2558,
	246, 2558,
	248, 2558,
	249, 2558,
	250, 2558,
	251, 2558,
	252, 2558,
	253, 2558,
	254, 2558,
	255, 2558,
	257, 2558,
	258, 2558,
	259, 2558,
	261, 2558,
	262, 2558,
	263, 2558,
	264, 2558,
	265, 2558,
	266, 2558,
	268, 2558,
	272, 2558,
	273, 2558,
	274, 2558,
	277, 2558,
	278, 2558,
	279, 2558,
	280, 2558,
	281, 2558,
	282, 2558,
	283, 2558,
	284, 2558,
	285, 2558,
	286, 2558,
	287, 2558,
	288, 2558,
	289, 2558,
	290, 2558,
	291, 2558,
	292, 2558,
	293, 2558,
	294, 2558,
	295, 2558,
	296, 2558,
	297, 2558,
	298, 2558,
	299, 2558,
	300, 2558,
	301, 2558,
	302, 2558,
	303, 2558,
	305, 2558,
	306, 2558,
	307, 2558,
	308, 2558,
	309, 2558,
	310, 2558,
	311, 2558,
	312, 2558,
	313, 2558,
	314, 2558,
	315, 2558,
	316, 2558,
	317, 2558,
	318, 2558,
	320, 2558,
	323, 2558,
	324, 2558,
	325, 2558,
	327, 2558,
	328, 2558,
	329, 2558,
	330, 2558,
	331, 2558,
	334, 2558,
	338, 2558,
	339, 2558,
	340, 2558,
	341, 2558,
	343, 2558,
	344, 2558,
	345, 2558,
	347, 2558,
	349, 2558,
	350, 2558,
	351, 2558,
	352, 2558,
	353, 2558,
	354, 2558,
	355, 2558,
	356, 2558,
	357, 2558,
	358, 2558,
	359, 2558,
	360, 2558,
	362, 2558,
	363, 2558,
	364, 2558,
	365, 2558,
	366, 2558,
	367, 2558,
	368, 2558,
	369, 2558,
	370, 2558,
	371, 2558,
	372, 2558,
	373, 2558,
	374, 2558,
	375, 2558,
	376, 2558,
	378, 2558,
	379, 2558,
	381, 2558,
	382, 2558,
	383, 2558,
	384, 2558,
	385, 2558,
	386, 2558,
	387, 2558,
	388, 2558,
	389, 2558,
	390, 2558,
	391, 2558,
	392, 2558,
	394, 2558,
	396, 2558,
	397, 2558,
	398, 2558,
	403, 2558,
	404, 2558,
	405, 2558,
	406, 2558,
	407, 2558,
	408, 2558,
	409, 2558,
	410, 2558,
	411, 2558,
	412, 2558,
	414, 2558,
	415, 2558,
	416, 2558,
	417, 2558,
	418, 2558,
	419, 2558,
	420, 2558,
	421, 2558,
	422, 2558,
	423, 2558,
	424, 2558,
	425, 2558,
	426, 2558,
	427, 2558,
	428, 2558,
	429, 2558,
	430, 2558,
	431, 2558,
	432, 2558,
	433, 2558,
	434, 2558,
	435, 2558,
	437, 2558,
	438, 2558,
	439, 2558,
	440, 2558,
	441, 2558,
	442, 2558,
	444, 2558,
	445, 2558,
	446, 2558,
	447, 2558,
	448, 2558,
	449, 2558,
	450, 2558,
	451, 2558,
	452, 2558,
	453, 2558,
	454, 2558,
	455, 2558,
	456, 2558,
	457, 2558,
	459, 2558,
	461, 2558,
	462, 2558,
	463, 2558,
	464, 2558,
	465, 2558,
	466, 2558,
	467, 2558,
	468, 2558,
	469, 2558,
	470, 2558,
	471, 2558,
	472, 2558,
	473, 2558,
	474, 2558,
	475, 2558,
	477, 2558,
	478, 2558,
	480, 2558,
	481, 2558,
	483, 2558,
	484, 2558,
	485, 2558,
	486, 2558,
	487, 2558,
	488, 2558,
	489, 2558,
	490, 2558,
	491, 2558,
	493, 2558,
	494, 2558,
	495, 2558,
	496, 2558,
	497, 2558,
	499, 2558,
	501, 2558,
	502, 2558,
	503, 2558,
	504, 2558,
	505, 2558,
	506, 2558,
	508, 2558,
	509, 2558,
	510, 2558,
	511, 2558,
	513, 2558,
	514, 2558,
	517, 2558,
	518, 2558,
	519, 2558,
	520, 2558,
	521, 2558,
	522, 2558,
	523, 2558,
	525, 2558,
	528, 2558,
	529, 2558,
	530, 2558,
	531, 2558,
	532, 2558,
	533, 2558,
	535, 2558,
	536, 2558,
	537, 2558,
	538, 2558,
	543, 2558,
	544, 2558,
	545, 2558,
	546, 2558,
	547, 2558,
	548, 2558,
	549, 2558,
	551, 2558,
	554, 2558,
	555, 2558,
	556, 2558,
	557, 2558,
	558, 2558,
	559, 2558,
	561, 2558,
	562, 2558,
	563, 2558,
	564, 2558,
	565, 2558,
	566, 2558,
	567, 2558,
	568, 2558,
	569, 2558,
	571, 2558,
	574, 2558,
	575, 2558,
	577, 2558,
	578, 2558,
	-2, 0,
	-1, 1554,
	182, 2443,
	498, 2443,
	556, 2443,
	575, 2443,
	-2, 0,
	-1, 1603,
	383, 808,
	442, 808,
	481, 808,
	503, 808,
	-2, 0,
	-1, 1630,
	1, 803,
	572, 803,
	574, 803,
	576, 803,
	-2, 0,
	-1, 1631,
	1, 841,
	572, 841,
	574, 841,
	576, 841,
	-2, 0,
	-1, 1632,
	1, 849,
	572, 849,
	574, 849,
	576, 849,
	-2, 0,
	-1, 1635,
	1, 812,
	572, 812,
	574, 812,
	576, 812,
	-2, 0,
	-1, 1637,
	1, 816,
	572, 816,
	574, 816,
	576, 816,
	-2, 0,
	-1, 1643,
	1, 823,
	572, 823,
	574, 823,
	576, 823,
	-2, 0,
	-1, 1671,
	1, 2504,
	572, 2504,
	574, 2504,
	575, 2504,
	576, 2504,
	-2, 874,
	-1, 1672,
	1, 2440,
	572, 2440,
	574, 2440,
	575, 2440,
	576, 2440,
	-2, 875,
	-1, 1690,
	1, 1308,
	576, 1308,
	-2, 1313,
	-1, 1693,
	166, 1459,
	179, 1459,
	267, 1459,
	332, 1459,
	-2, 1397,
	-1, 1787,
	147, 1418,
	166, 1418,
	179, 1418,
	234, 1418,
	267, 1418,
	332, 1418,
	342, 1418,
	515, 1418,
	-2, 1860,
	-1, 1847,
	574, 2010,
	-2, 0,
	-1, 1882,
	147, 1418,
	166, 1418,
	179, 1418,
	234, 1418,
	267, 1418,
	332, 1418,
	342, 1418,
	515, 1418,
	-2, 1546,
	-1, 1931,
	573, 1687,
	-2, 1675,
	-1, 2009,
	1, 631,
	576, 631,
	-2, 1313,
	-1, 2132,
	216, 236,
	-2, 2157,
	-1, 2133,
	216, 237,
	-2, 280,
	-1, 2235,
	1, 805,
	572, 805,
	574, 805,
	576, 805,
	-2, 0,
	-1, 2236,
	1, 843,
	572, 843,
	574, 843,
	576, 843,
	-2, 0,
	-1, 2237,
	1, 851,
	572, 851,
	574, 851,
	576, 851,
	-2, 0,
	-1, 2271,
	1, 825,
	572, 825,
	574, 825,
	576, 825,
	-2, 0,
	-1, 2321,
	422, 1486,
	423, 1486,
	-2, 1720,
	-1, 2352,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1740,
	-1, 2353,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1741,
	-1, 2354,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1742,
	-1, 2355,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1743,
	-1, 2356,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1744,
	-1, 2357,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1745,
	-1, 2358,
	95, 0,
	248, 0,
	249, 0,
	558, 0,
	559, 0,
	-2, 1746,
	-1, 2359,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1747,
	-1, 2371,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1759,
	-1, 2372,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1760,
	-1, 2373,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1761,
	-1, 2376,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1766,
	-1, 2382,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1770,
	-1, 2384,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1778,
	-1, 2385,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1779,
	-1, 2386,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1780,
	-1, 2387,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1781,
	-1, 2523,
	5, 2161,
	182, 2021,
	573, 2158,
	-2, 2149,
	-1, 2524,
	182, 2022,
	-2, 2509,
	-1, 2525,
	182, 2023,
	-2, 2340,
	-1, 2526,
	182, 2024,
	-2, 2229,
	-1, 2527,
	182, 2025,
	-2, 2281,
	-1, 2528,
	182, 2026,
	-2, 2325,
	-1, 2529,
	182, 2027,
	-2, 2438,
	-1, 2530,
	182, 2028,
	-2, 1843,
	-1, 2600,
	1, 1547,
	2, 1547,
	106, 1547,
	147, 1547,
	166, 1547,
	179, 1547,
	183, 1547,
	200, 1547,
	203, 1547,
	230, 1547,
	234, 1547,
	245, 1547,
	263, 1547,
	267, 1547,
	306, 1547,
	332, 1547,
	336, 1547,
	342, 1547,
	413, 1547,
	417, 1547,
	515, 1547,
	526, 1547,
	540, 1547,
	541, 1547,
	542, 1547,
	552, 1547,
	572, 1547,
	574, 1547,
	576, 1547,
	578, 1547,
	-2, 1546,
	-1, 2613,
	573, 2130,
	-2, 2144,
	-1, 2615,
	53, 1445,
	132, 1445,
	-2, 296,
	-1, 2640,
	573, 1686,
	-2, 1676,
	-1, 2813,
	1, 1177,
	572, 1177,
	574, 1177,
	576, 1177,
	-2, 1445,
	-1, 2978,
	337, 1489,
	-2, 2548,
	-1, 2979,
	337, 1490,
	-2, 2424,
	-1, 2983,
	422, 2087,
	423, 2087,
	-2, 1841,
	-1, 2984,
	422, 2091,
	423, 2091,
	-2, 1842,
	-1, 2985,
	422, 2088,
	423, 2088,
	-2, 1841,
	-1, 2986,
	422, 2092,
	423, 2092,
	-2, 1842,
	-1, 2999,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1768,
	-1, 3000,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1772,
	-1, 3006,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1774,
	-1, 3246,
	1, 628,
	572, 628,
	574, 628,
	576, 628,
	-2, 1313,
	-1, 3390,
	44, 2122,
	-2, 942,
	-1, 3395,
	1, 1177,
	572, 1177,
	574, 1177,
	576, 1177,
	-2, 1445,
	-1, 3499,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1776,
	-1, 3506,
	239, 0,
	241, 0,
	323, 0,
	-2, 1795,
	-1, 3573,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1824,
	-1, 3574,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1825,
	-1, 3575,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1826,
	-1, 3579,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1830,
	-1, 3580,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1831,
	-1, 3581,
	14, 0,
	15, 0,
	16, 0,
	554, 0,
	555, 0,
	556, 0,
	-2, 1832,
	-1, 3627,
	573, 2131,
	-2, 2145,
	-1, 3782,
	575, 2665,
	-2, 1371,
	-1, 3839,
	239, 0,
	241, 0,
	323, 0,
	-2, 1796,
	-1, 3842,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1799,
	-1, 3843,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1801,
	-1, 3938,
	575, 2146,
	-2, 1212,
	-1, 4068,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1800,
	-1, 4069,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 1802,
	-1, 4080,
	239, 0,
	-2, 1833,
	-1, 4246,
	239, 0,
	-2, 1834,
	-1, 4431,
	50, 0,
	213, 0,
	266, 0,
	450, 0,
	549, 0,
	557, 0,
	-2, 2512,
}

const sqlPrivate = 57344

const sqlLast = 119504

var sqlAct = [...]int{
	260, 4527, 4612, 3380, 2889, 3157, 4286, 2876, 4451, 4452,
	4484, 4125, 4441, 4278, 4430, 4412, 4308, 4553, 2056, 3379,
	4400, 4326, 4171, 3822, 4304, 4442, 1202, 4384, 4443, 4496,
	1456, 4381, 4112, 2129, 4199, 4178, 4364, 3538, 3991, 4250,
	2764, 4429, 4025, 4020, 4130, 3973, 3491, 4089, 2331, 4057,
	1270, 3934, 1274, 3774, 3766, 4187, 3412, 4005, 2746, 3715,
	2992, 3935, 2704, 1263, 3919, 1918, 4213, 2399, 2555, 4030,
	1702, 3325, 3406, 2065, 775, 3271, 3375, 2339, 3749, 2898,
	4085, 2176, 742, 2776, 3365, 3733, 3274, 3451, 2212, 2865,
	2911, 1888, 2332, 1991, 3735, 3453, 1334, 1966, 775, 2846,
	3630, 1570, 3172, 2836, 3878, 2134, 3180, 2900, 3200, 3140,
	1425, 3821, 2862, 849, 2908, 2897, 2860, 2891, 1857, 2124,
	2877, 3161, 1024, 3294, 2123, 2706, 3163, 4528, 3139, 1833,
	2336, 1191, 2075, 3598, 4251, 1795, 1432, 2593, 1568, 1510,
	2412, 3268, 1023, 172, 2907, 254, 770, 2790, 1268, 2118,
	2595, 4, 2100, 1015, 2107, 105, 2847, 253, 2976, 2745,
	1072, 2045, 2048, 1317, 1690, 1182, 1989, 1858, 2552, 2592,
	1242, 2432, 2396, 2441, 2035, 2303, 1547, 2573, 3207, 2301,
	2320, 2870, 2625, 3377, 1256, 1077, 1265, 2164, 1513, 1253,
	2901, 673, 2443, 776, 2689, 1303, 1036, 2624, 777, 2435,
	659, 1185, 2582, 1828, 681, 2563, 3257, 1164, 1867, 2413,
	2519, 1611, 1780, 181, 1877, 1874, 1704, 724, 182, 781,
	2485, 1703, 772, 2210, 1643, 1630, 2163, 1199, 823, 736,
	2189, 784, 2064, 172, 2302, 1538, 1545, 2325, 2304, 1451,
	4485, 1053, 842, 781, 4327, 1967, 684, 1964, 44, 676,
	43, 1187, 41, 1709, 32, 784, 1162, 30, 28, 3027,
	1689, 1462, 911, 931, 2203, 699, 3023, 3612, 1181, 3613,
	1455, 1980, 1636, 1980, 1980, 4625, 4615, 1980, 3159, 2572,
	3431, 1980, 1980, 4600, 4599, 4589, 4571, 2572, 2572, 2138,
	4129, 4569, 4515, 3422, 4473, 4129, 2138, 153, 4474, 4466,
	4464, 4461, 1577, 2572, 2572, 4462, 72, 4458, 46, 45,
	4427, 4459, 3431, 3230, 2138, 4426, 3421, 1563, 1019, 2138,
	864, 1019, 73, 4425, 4420, 148, 4419, 2001, 2001, 4410,
	2001, 4408, 4379, 4129, 3229, 4129, 4129, 4351, 77, 1020,
	4344, 2631, 4343, 4338, 2572, 2138, 2572, 4129, 4337, 67,
	4331, 4300, 4129, 1179, 2138, 3983, 48, 4248, 150, 4230,
	4227, 2631, 4224, 3809, 2138, 2991, 4129, 4180, 4145, 1165,
	1165, 4181, 2138, 4144, 3215, 4136, 47, 2138, 84, 2138,
	1919, 4135, 1978, 4128, 4096, 4129, 1000, 4129, 2138, 4070,
	4049, 999, 4038, 2631, 2001, 3968, 3431, 3956, 1312, 2572,
	3841, 2572, 50, 68, 2631, 3790, 1312, 3784, 3747, 3448,
	51, 3448, 3748, 3622, 3620, 57, 2572, 3623, 3621, 151,
	90, 3605, 3522, 2650, 2211, 2572, 2138, 49, 2565, 104,
	1213, 4352, 3602, 3518, 90, 101, 3447, 2572, 4252, 4243,
	3448, 3438, 1014, 1009, 3156, 3439, 3151, 3150, 2572, 1464,
	2572, 2572, 1476, 3103, 1998, 3077, 3069, 3104, 3067, 3078,
	3070, 3038, 2572, 3036, 2915, 2572, 1075, 1470, 2001, 3037,
	2887, 2886, 2627, 52, 2199, 2199, 1166, 2673, 2630, 1464,
	2622, 2572, 2631, 2616, 2572, 2571, 2198, 2138, 1220, 2572,
	2199, 91, 4231, 2772, 1464, 224, 1717, 1718, 1168, 2001,
	1169, 3602, 2564, 2649, 2873, 4018, 3983, 3957, 2138, 3809,
	1214, 3439, 2767, 2688, 2014, 2069, 1979, 1995, 1998, 2842,
	1748, 2137, 2784, 2686, 1853, 1450, 3703, 1720, 3112, 3113,
	2438, 3130, 3131, 3132, 3494, 3470, 1875, 2112, 2609, 1613,
	2608, 226, 2607, 3423, 3112, 3113, 2606, 3130, 3131, 3132,
	2605, 3837, 3894, 224, 2572, 2468, 1170, 3026, 1717, 1718,
	1167, 1719, 3424, 1455, 1008, 1007, 1006, 3836, 1005, 1004,
	1079, 1739, 2953, 4234, 1003, 1002, 998, 997, 996, 995,
	1736, 994, 993, 992, 991, 990, 1276, 989, 988, 1720,
	225, 1717, 1718, 987, 986, 985, 1074, 984, 983, 226,
	982, 218, 909, 3127, 908, 3112, 3113, 907, 906, 905,
	219, 1051, 904, 903, 902, 1748, 2439, 901, 1981, 3127,
	1981, 1981, 1720, 1719, 1981, 900, 899, 898, 1981, 1981,
	897, 3835, 183, 896, 94, 4232, 895, 894, 893, 892,
	891, 890, 889, 888, 887, 886, 885, 884, 225, 883,
	882, 53, 1742, 1743, 1744, 1745, 1719, 1463, 881, 1475,
	880, 879, 1725, 878, 877, 56, 1739, 867, 224, 866,
	59, 862, 1581, 2731, 1469, 1736, 861, 855, 854, 69,
	841, 840, 798, 797, 58, 180, 97, 3853, 100, 3421,
	183, 796, 54, 1194, 3118, 795, 152, 2440, 224, 2437,
	787, 786, 785, 55, 757, 748, 224, 1747, 1749, 1214,
	3118, 145, 224, 747, 226, 746, 730, 1279, 1077, 248,
	62, 247, 246, 245, 1725, 145, 3503, 244, 4448, 243,
	1998, 242, 241, 1734, 1735, 1567, 224, 240, 239, 149,
	238, 1077, 237, 236, 226, 1077, 235, 1742, 1743, 1744,
	1745, 224, 226, 234, 233, 232, 3133, 1725, 226, 1287,
	231, 1337, 230, 225, 229, 1337, 1740, 228, 227, 1279,
	4032, 3118, 3133, 3640, 218, 3616, 3449, 3203, 3049, 3032,
	3112, 3113, 226, 219, 147, 2660, 2936, 1979, 1998, 2823,
	1077, 1995, 1077, 225, 1077, 2649, 2296, 226, 3128, 184,
	1279, 225, 1747, 1749, 218, 183, 2635, 225, 2614, 1638,
	2599, 2454, 218, 219, 3128, 3154, 224, 1122, 218, 2043,
	2000, 219, 1273, 1193, 2564, 1279, 1307, 219, 1734, 1735,
	1440, 225, 2206, 2855, 1464, 183, 1901, 4428, 1195, 3112,
	3113, 2452, 218, 183, 2442, 1279, 225, 1806, 224, 183,
	1279, 219, 3, 3155, 1717, 1718, 1878, 218, 1077, 1435,
	1077, 1740, 226, 1316, 1279, 1068, 219, 1321, 1797, 1458,
	1077, 1454, 1077, 183, 1444, 3128, 1323, 1201, 1748, 1716,
	4255, 1247, 1250, 4407, 1214, 1720, 224, 4315, 183, 1746,
	1519, 1522, 4240, 4084, 226, 4123, 4039, 1260, 3112, 3113,
	4017, 224, 1301, 3901, 3876, 1479, 3875, 3869, 1836, 1741,
	3868, 225, 2205, 1836, 3867, 1835, 1442, 1279, 3860, 1719,
	1835, 3859, 218, 3857, 781, 1330, 3852, 1422, 1427, 1739,
	1515, 219, 226, 3849, 3848, 1077, 784, 1839, 1077, 3746,
	3644, 3129, 1834, 225, 1717, 1718, 3118, 226, 1430, 3752,
	3643, 3642, 3626, 2872, 218, 1556, 2436, 3129, 3593, 1717,
	1718, 3592, 3591, 219, 3514, 1296, 3510, 3198, 1748, 1569,
	4034, 1508, 1453, 3147, 3138, 1720, 3111, 1452, 3108, 3107,
	3105, 225, 2644, 1748, 1746, 183, 2179, 1582, 172, 172,
	1720, 3076, 218, 1022, 3075, 3074, 225, 1550, 1552, 1804,
	1020, 219, 3701, 3071, 1741, 3118, 3068, 218, 1799, 1719,
	1742, 1743, 1744, 1745, 1525, 3048, 219, 1798, 3129, 1796,
	1725, 3031, 1595, 183, 1719, 3024, 2888, 2600, 2425, 1716,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1715, 183, 1797,
	1178, 4619, 2145, 1737, 1733, 2143, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 4563, 4562, 1307, 2633, 4529,
	1307, 1077, 3753, 4483, 3118, 1747, 1749, 1077, 4481, 3112,
	3113, 3124, 3125, 3126, 2857, 1203, 3540, 4371, 3123, 3121,
	3122, 3114, 3115, 3116, 3117, 3119, 3120, 3124, 3125, 3126,
	3221, 224, 1197, 4307, 3123, 3121, 3122, 3114, 3115, 3116,
	3117, 3119, 3120, 4296, 4293, 3152, 224, 4292, 1541, 3128,
	1725, 1721, 1722, 1723, 1724, 1726, 1727, 4235, 4291, 4272,
	1562, 4254, 4253, 4228, 1740, 1725, 1539, 2467, 4256, 3195,
	4212, 1688, 1576, 4211, 2402, 4197, 4194, 226, 1737, 1733,
	4193, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	1786, 1652, 226, 1694, 4141, 1747, 1749, 3122, 3114, 3115,
	3116, 3117, 3119, 3120, 4119, 4082, 4065, 4011, 3128, 224,
	1747, 1749, 1077, 1077, 1077, 1587, 4064, 4046, 1077, 4233,
	4045, 4008, 1604, 3984, 3893, 1199, 225, 1199, 3753, 3874,
	2408, 3810, 1855, 224, 3804, 1639, 3801, 218, 3690, 3689,
	3675, 225, 1337, 3674, 3672, 3608, 219, 4033, 3596, 3505,
	1077, 1784, 218, 775, 1740, 226, 1020, 3450, 3432, 1936,
	775, 219, 3398, 1279, 3337, 3304, 3273, 3223, 183, 1740,
	3053, 3052, 1691, 3047, 1904, 3118, 3015, 1000, 2835, 226,
	1842, 1841, 999, 183, 1915, 1840, 1864, 1746, 1837, 1829,
	1699, 1962, 3129, 1827, 1698, 2642, 1838, 1789, 2641, 1693,
	2611, 1794, 2856, 2604, 225, 2570, 2450, 1741, 1900, 1856,
	1851, 1712, 1713, 1695, 1850, 218, 1717, 1718, 1911, 1849,
	1848, 1847, 1846, 1845, 219, 1844, 1843, 1824, 225, 1279,
	1823, 1861, 1862, 1822, 1821, 1820, 1077, 1819, 1818, 218,
	1279, 1909, 1817, 2207, 1816, 1815, 183, 1720, 219, 1814,
	1813, 3129, 1812, 1885, 1165, 1811, 1717, 1718, 1077, 1810,
	1799, 1830, 1831, 1785, 1337, 1783, 1778, 1295, 1218, 1209,
	183, 172, 3897, 3114, 3115, 3116, 3117, 3119, 3120, 3845,
	2059, 1719, 1020, 3639, 3619, 3611, 3035, 1720, 2602, 4100,
	1544, 3899, 3638, 3112, 3113, 1798, 3219, 1741, 781, 1781,
	3427, 1896, 4560, 1320, 2007, 781, 3959, 1907, 4552, 2765,
	784, 4294, 1741, 4183, 2032, 4182, 2006, 784, 1313, 4037,
	3986, 1719, 3985, 2453, 2034, 3958, 2034, 1307, 1883, 1905,
	3121, 3122, 3114, 3115, 3116, 3117, 3119, 3120, 1876, 2034,
	3896, 1318, 1886, 39, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 2451, 3307, 3813, 3812, 1983, 3811, 3614,
	1854, 1319, 3434, 3433, 4188, 1312, 1836, 224, 1878, 3492,
	1686, 1548, 3073, 1835, 3072, 1912, 1880, 1895, 2750, 1894,
	2041, 1893, 1959, 1891, 2997, 2109, 1890, 1889, 3756, 1279,
	1279, 3114, 3115, 3116, 3117, 3119, 3120, 3330, 1312, 1337,
	2733, 1544, 2438, 2009, 1916, 1819, 4122, 1315, 1819, 3687,
	2020, 1603, 3382, 226, 3381, 980, 3275, 1312, 1653, 1808,
	2005, 1612, 1725, 4424, 3443, 2227, 2204, 4179, 4469, 2640,
	3159, 4454, 1309, 4440, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 3366, 2094, 3931, 2099, 2912, 1613, 2104,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 981, 2125,
	2180, 3712, 225, 3708, 3694, 3467, 3244, 4086, 3542, 2433,
	4463, 1852, 1832, 218, 4449, 3373, 2003, 2173, 3927, 3041,
	1518, 1447, 219, 1290, 1246, 2012, 4460, 3417, 2439, 3667,
	2130, 2135, 1279, 2037, 1279, 2781, 1279, 2027, 4287, 2778,
	4021, 4378, 252, 4269, 183, 2069, 3278, 1805, 2010, 3682,
	2895, 1314, 1279, 1279, 2869, 3359, 4513, 4512, 1018, 3486,
	3725, 3248, 2074, 1279, 1543, 4162, 1302, 1591, 3947, 1494,
	3928, 2634, 1486, 2311, 2674, 1279, 781, 1279, 1279, 1279,
	836, 4450, 4614, 4155, 978, 976, 974, 4147, 784, 3331,
	972, 1177, 1650, 2127, 4543, 2277, 1448, 969, 4107, 2692,
	775, 2275, 2214, 2169, 3116, 3117, 3119, 3120, 1310, 2440,
	1985, 2437, 3981, 1987, 2690, 3721, 3720, 1311, 3714, 1992,
	2174, 3707, 2692, 1994, 1453, 2186, 3724, 3705, 1997, 1452,
	3654, 1194, 2309, 1194, 3220, 3653, 3362, 2690, 1651, 3214,
	3046, 2202, 966, 3045, 3044, 1017, 3043, 3001, 2103, 2788,
	961, 2092, 2209, 1495, 2787, 2093, 2783, 1273, 2216, 2021,
	2774, 2763, 2762, 2231, 2759, 2758, 2737, 2723, 2217, 2623,
	2136, 2194, 2383, 1692, 1313, 1543, 3250, 2481, 2480, 2341,
	2225, 837, 2228, 2229, 2230, 4063, 1077, 1020, 1077, 1020,
	1649, 2215, 1313, 2183, 2154, 1077, 2866, 1320, 1936, 1936,
	1337, 2155, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 2196, 1077, 2156,
	1077, 1077, 1077, 1077, 1589, 781, 2681, 2192, 2188, 1531,
	2219, 1530, 3468, 1019, 2313, 1319, 2442, 784, 1320, 2300,
	2708, 1193, 1077, 1193, 1296, 1077, 1077, 3923, 2200, 1930,
	2201, 2310, 3924, 1077, 2294, 3906, 1195, 1077, 1195, 1077,
	1077, 1541, 1312, 2191, 3275, 2191, 3306, 1337, 1309, 1970,
	2218, 2204, 4544, 1077, 1077, 1077, 1077, 1490, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1309, 2026, 2025, 2223,
	2235, 2034, 2036, 2311, 1727, 2735, 1319, 1634, 1529, 1232,
	1528, 1503, 2253, 3926, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 2414, 2415, 3905, 3670, 1077, 2097, 3929,
	2226, 2615, 2289, 2308, 1588, 956, 956, 2414, 2430, 1199,
	2271, 1723, 1724, 1726, 1727, 1970, 1337, 1011, 1449, 956,
	4547, 1584, 2324, 2286, 2076, 1199, 1970, 1314, 2436, 2711,
	1013, 1013, 2309, 2476, 2243, 2956, 2236, 2398, 2722, 1666,
	2281, 1077, 1337, 2066, 1013, 1314, 2080, 2398, 1634, 2974,
	2297, 3120, 2522, 2522, 2536, 3731, 2414, 2305, 2754, 2556,
	2558, 4280, 1662, 1000, 2312, 2562, 1000, 1000, 2328, 2299,
	3960, 2329, 2330, 2298, 2429, 1633, 2062, 4573, 2433, 1020,
	2747, 2748, 2747, 2748, 1310, 1605, 1016, 2029, 1020, 1012,
	3112, 3113, 1020, 1311, 3730, 2747, 2748, 2237, 1648, 2587,
	2380, 2077, 1310, 4062, 2067, 2068, 4512, 1631, 2288, 2612,
	2307, 1311, 4548, 2989, 2407, 3678, 1685, 1601, 1070, 957,
	957, 2240, 3925, 1697, 2721, 1028, 2234, 3321, 1294, 1789,
	839, 838, 2410, 957, 2063, 2579, 2069, 1585, 2406, 3314,
	2244, 2959, 1279, 1279, 1165, 2404, 1633, 2193, 2427, 3476,
	2780, 1885, 3247, 755, 4446, 834, 3475, 833, 1613, 3932,
	2394, 1613, 2478, 1717, 1718, 3127, 3320, 2479, 1632, 2950,
	2482, 2310, 2483, 2484, 2815, 1514, 1933, 4282, 3313, 3691,
	1020, 1896, 2779, 2543, 1337, 2578, 2777, 1748, 3980, 2392,
	1197, 2442, 1197, 2669, 1720, 2531, 2601, 2547, 2031, 2663,
	172, 2560, 2691, 2518, 2081, 875, 3706, 2568, 2569, 2628,
	2295, 3531, 1908, 2814, 2584, 2585, 3943, 1936, 2580, 1645,
	1838, 4550, 1512, 3704, 3361, 2710, 1883, 2671, 1719, 2586,
	2695, 2591, 3328, 2734, 2597, 2598, 2030, 1866, 2337, 2338,
	2988, 2626, 1307, 2308, 970, 970, 970, 2668, 1273, 2782,
	971, 1590, 2757, 1337, 2276, 2636, 3118, 970, 1312, 753,
	2274, 1206, 1286, 2378, 671, 2697, 2381, 1279, 2736, 2700,
	2082, 2083, 2958, 4524, 2643, 4532, 1312, 2695, 1548, 1663,
	1548, 2285, 967, 1077, 1077, 4576, 1077, 2665, 2647, 1830,
	1831, 666, 3012, 2654, 2078, 2648, 4531, 2657, 2646, 2658,
	2088, 1204, 2955, 2072, 2621, 2677, 958, 958, 4501, 1279,
	2672, 3910, 2697, 2695, 1870, 2694, 2377, 3414, 2662, 2664,
	958, 3010, 1489, 4603, 2679, 4447, 2666, 3528, 2388, 1725,
	2142, 2141, 2538, 2839, 1461, 2079, 1468, 2755, 1474, 2087,
	1279, 3827, 2071, 2853, 1231, 2775, 2389, 2739, 2697, 2675,
	3826, 2390, 1279, 2696, 1279, 2395, 4556, 2680, 2442, 1492,
	3128, 1873, 2981, 2982, 2709, 3415, 2287, 2726, 1279, 4348,
	868, 3664, 2813, 2122, 1747, 1749, 1868, 2678, 2699, 2738,
	2703, 2749, 2751, 2752, 2753, 2713, 2716, 3692, 3663, 2110,
	1980, 4414, 2756, 4415, 1871, 2849, 2880, 3259, 2242, 2957,
	2696, 2110, 1561, 4360, 1566, 4549, 2845, 1207, 3529, 1077,
	3262, 2909, 4358, 3941, 1575, 1664, 1580, 1264, 4302, 2937,
	3679, 2938, 4445, 781, 2113, 2699, 856, 2121, 1930, 1930,
	2120, 4288, 4281, 1740, 2693, 784, 2696, 1869, 2698, 3340,
	4104, 3911, 3414, 2766, 959, 959, 1514, 2761, 2084, 2760,
	3249, 2106, 1660, 2913, 3290, 720, 1010, 1077, 959, 2894,
	3007, 2699, 1216, 1077, 1077, 1428, 754, 3174, 1439, 1264,
	2098, 1453, 3003, 2924, 2105, 1194, 2821, 1637, 2934, 1825,
	3217, 172, 2397, 3008, 2833, 2698, 2882, 3013, 3461, 2692,
	2884, 1194, 2914, 2843, 2818, 960, 960, 3454, 4000, 2820,
	2379, 1586, 1665, 3129, 2714, 2110, 2655, 2101, 2060, 960,
	3289, 3823, 2659, 756, 2875, 2864, 2885, 752, 1077, 1077,
	2961, 2698, 2963, 2085, 1077, 1661, 2670, 2038, 2039, 1264,
	1264, 2896, 2391, 4075, 4500, 2067, 2068, 1077, 1077, 2119,
	4523, 4398, 2393, 1077, 1077, 4389, 3295, 3738, 1872, 1077,
	3966, 689, 4346, 2883, 1777, 2442, 3736, 3051, 1077, 1077,
	1077, 1600, 1602, 3942, 1077, 2102, 2239, 1696, 2933, 2405,
	876, 2233, 1293, 2590, 1077, 2940, 1741, 4476, 2939, 2916,
	2942, 2583, 2944, 2920, 2946, 2921, 4477, 4577, 2424, 3004,
	4347, 1077, 3456, 2931, 4059, 3034, 3297, 2740, 2596, 3260,
	1866, 4554, 2969, 1019, 3738, 1193, 2941, 3455, 2943, 3544,
	2945, 869, 870, 3736, 2964, 2971, 4564, 2966, 2970, 2980,
	1195, 1193, 2918, 2919, 4010, 667, 3817, 3029, 3030, 3635,
	2954, 2324, 3033, 2925, 2926, 2927, 1195, 2975, 2990, 1221,
	3123, 3121, 3122, 3114, 3115, 3116, 3117, 3119, 3120, 2049,
	1870, 3828, 3488, 2543, 2972, 2050, 1618, 3173, 4309, 3296,
	2090, 4444, 3751, 4511, 3009, 1205, 3739, 857, 858, 1706,
	4604, 4509, 4325, 4261, 3011, 1933, 1933, 1870, 4196, 4108,
	4106, 1077, 1077, 1077, 3112, 3113, 4103, 3130, 3131, 3132,
	1077, 1077, 1077, 3002, 3772, 1077, 3402, 1873, 1020, 2162,
	668, 1863, 1219, 4555, 3872, 1077, 1199, 1337, 1212, 3025,
	4001, 1077, 2581, 1077, 3166, 3167, 1721, 1722, 1723, 1724,
	1726, 1727, 1199, 3739, 1873, 4058, 2069, 658, 1707, 4499,
	1871, 3824, 1892, 2543, 2543, 2095, 4557, 1981, 2327, 1868,
	1337, 4582, 2070, 3040, 3208, 3582, 2022, 669, 1706, 670,
	4205, 2116, 1199, 4138, 3734, 1337, 4137, 1871, 4116, 3127,
	4268, 1701, 3188, 3149, 2051, 2019, 3946, 3773, 3527, 3718,
	1705, 3666, 1936, 3945, 3269, 2091, 1337, 3403, 3182, 3168,
	3394, 2055, 3265, 2854, 2848, 2837, 2187, 1930, 2715, 2181,
	1279, 1279, 2317, 2175, 3213, 2167, 2148, 871, 872, 1483,
	1869, 1223, 4310, 3650, 729, 2114, 3597, 4365, 3457, 3458,
	3459, 3460, 3489, 1077, 4328, 4105, 3227, 3912, 3264, 1706,
	3178, 3263, 2282, 4475, 2015, 3775, 4026, 1077, 2834, 3737,
	2741, 3829, 1234, 4177, 4175, 1707, 3197, 4118, 2059, 3281,
	2017, 3277, 3276, 2995, 2115, 1936, 2973, 2224, 3176, 1705,
	3118, 2052, 2057, 859, 860, 2620, 3610, 3171, 3144, 3145,
	3146, 4060, 1635, 1077, 1279, 3170, 3112, 3113, 2619, 3183,
	2618, 2574, 3160, 2617, 1197, 3206, 2059, 2543, 2543, 2543,
	2018, 3194, 3743, 3201, 1872, 3187, 3737, 3231, 3232, 3134,
	1197, 1537, 3254, 3255, 3238, 1970, 3177, 1777, 3175, 3873,
	1279, 3186, 2841, 1307, 1017, 2577, 3202, 3189, 3190, 4275,
	1439, 1872, 3133, 3830, 1707, 1337, 3279, 2109, 3181, 3283,
	1705, 4126, 3266, 4172, 1279, 2109, 1548, 2318, 1523, 1279,
	3280, 3583, 3992, 3285, 2053, 3245, 3287, 3210, 3211, 3212,
	3584, 1535, 1524, 4581, 2719, 3673, 2576, 3332, 3444, 3251,
	3185, 2575, 1279, 2185, 3128, 3192, 1439, 3193, 1279, 3312,
	1279, 3292, 3369, 874, 1337, 4520, 4306, 3235, 3239, 3309,
	3944, 775, 4102, 3327, 3224, 3225, 2058, 3226, 2917, 3246,
	2060, 3343, 1279, 2819, 3346, 2817, 4043, 2089, 3351, 3353,
	1619, 3252, 2213, 1279, 4311, 3651, 1594, 3324, 3338, 2742,
	2743, 4368, 4375, 4362, 4276, 4114, 3341, 3879, 3599, 3323,
	1199, 2449, 1681, 2098, 3410, 4393, 3393, 4522, 1683, 1680,
	4465, 3348, 4127, 4295, 1678, 4081, 3355, 3931, 3298, 1657,
	3299, 1655, 3118, 1629, 1933, 1279, 1279, 3305, 3378, 1627,
	1625, 2096, 1623, 1621, 3871, 3316, 1615, 3408, 3742, 4115,
	3317, 1610, 3319, 1608, 3318, 4042, 3184, 3357, 1279, 3364,
	3927, 3367, 3333, 3401, 3920, 3209, 1533, 3141, 3339, 3300,
	3504, 2273, 3419, 3465, 3349, 2909, 3228, 3356, 3360, 3106,
	3014, 3918, 2838, 3311, 2909, 728, 4369, 3388, 3329, 4277,
	3922, 2773, 2732, 2645, 2290, 1903, 1337, 3129, 3395, 1337,
	1899, 1684, 1572, 3142, 3322, 3484, 3483, 1701, 2952, 2951,
	2097, 2923, 3928, 2306, 788, 2284, 781, 3371, 2448, 1644,
	2739, 3404, 3363, 2248, 3391, 1536, 2147, 1963, 784, 3347,
	1809, 3411, 1077, 3390, 3354, 1583, 3128, 1507, 1077, 1077,
	3436, 3437, 1077, 1077, 1077, 4439, 1077, 3463, 3710, 3709,
	3967, 3955, 3218, 3921, 2054, 1077, 1936, 3416, 4361, 3446,
	3442, 4024, 3972, 3916, 1077, 3418, 3425, 1077, 1020, 172,
	172, 3771, 1194, 1337, 3762, 1534, 3723, 3234, 3428, 3429,
	3236, 3237, 1077, 3440, 3685, 3240, 3683, 3241, 1194, 3242,
	1337, 4497, 3409, 3482, 4019, 3481, 3464, 873, 1682, 1679,
	1936, 1936, 1077, 1077, 1677, 1077, 1077, 1077, 3665, 1656,
	3342, 1654, 3397, 1628, 3524, 2172, 968, 3392, 1194, 1626,
	1624, 3507, 1622, 1620, 3490, 3270, 1614, 3124, 3125, 3126,
	3383, 1609, 3478, 1607, 3123, 3121, 3122, 3114, 3115, 3116,
	3117, 3119, 3120, 2867, 2859, 3387, 1532, 1077, 2272, 2852,
	2844, 1077, 2831, 1936, 1936, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 3487, 1077, 2816, 3556, 3462, 3129,
	2661, 3479, 1077, 1077, 1936, 2656, 2146, 2144, 2126, 1077,
	3485, 2111, 2086, 3430, 3472, 2073, 3473, 2061, 3474, 2002,
	1077, 1999, 1193, 3557, 3512, 1996, 1993, 1988, 1986, 3923,
	1982, 1199, 1199, 3523, 3924, 1077, 1973, 1195, 1193, 3407,
	4489, 3350, 3516, 3517, 1710, 1910, 3539, 2120, 3632, 3469,
	3546, 4513, 2023, 1195, 1335, 2967, 2993, 1924, 1433, 2543,
	2543, 3554, 1930, 2293, 1337, 3555, 1174, 2965, 1193, 4403,
	4048, 3628, 4041, 4040, 3615, 789, 790, 3594, 3530, 3532,
	3533, 3979, 3902, 1195, 2910, 3926, 2042, 973, 975, 977,
	1488, 4207, 2692, 1175, 2720, 4200, 1970, 1970, 3559, 2692,
	3534, 3929, 3783, 3561, 2268, 3633, 3634, 2690, 2291, 3586,
	2069, 1077, 1675, 1676, 2717, 2238, 1255, 2267, 2184, 3645,
	3646, 3647, 3461, 3553, 4402, 2245, 1254, 3631, 3948, 3587,
	3974, 3454, 1717, 1718, 1077, 1930, 3123, 3121, 3122, 3114,
	3115, 3116, 3117, 3119, 3120, 1606, 716, 2994, 4242, 3880,
	1711, 3858, 2292, 3655, 1085, 172, 2119, 3606, 3607, 3293,
	3603, 3604, 2725, 1720, 3595, 1077, 1077, 1717, 1718, 2744,
	1970, 2543, 2543, 2543, 2543, 2543, 2543, 2543, 2543, 2543,
	2543, 2543, 2543, 2543, 2543, 2543, 2543, 2543, 2543, 2543,
	3617, 2543, 1714, 3659, 2724, 1288, 1194, 1719, 1077, 1176,
	256, 256, 256, 1255, 661, 662, 1970, 677, 661, 677,
	687, 1255, 1222, 727, 4516, 792, 791, 745, 4507, 768,
	1279, 249, 751, 3618, 3925, 2725, 3456, 672, 256, 3717,
	1970, 824, 1719, 3695, 4470, 1970, 2830, 2270, 3759, 1936,
	2168, 3455, 3700, 3702, 1299, 3601, 853, 2778, 2786, 3699,
	3716, 4222, 256, 2785, 2768, 2727, 4353, 3669, 2770, 2729,
	4319, 3932, 4316, 4274, 3711, 4191, 3713, 3719, 655, 1279,
	4170, 2769, 2728, 793, 794, 1077, 3641, 3688, 3769, 3761,
	3750, 3625, 683, 1199, 1077, 3396, 3785, 2874, 3693, 2561,
	2008, 1197, 1917, 4551, 1279, 1279, 1279, 3792, 4124, 3914,
	2337, 3547, 3913, 4214, 3729, 3662, 3261, 1197, 3776, 1933,
	3216, 1279, 2739, 3741, 4395, 3744, 4215, 4580, 1455, 4396,
	3850, 3777, 3112, 3113, 4318, 3726, 1193, 4395, 2730, 3452,
	3780, 1337, 4396, 3757, 1717, 1718, 1264, 1197, 3758, 3765,
	4526, 1195, 2684, 2685, 2880, 2682, 2683, 4216, 2444, 3637,
	1593, 2684, 2682, 2337, 3562, 1337, 1592, 2477, 1077, 1077,
	3768, 3808, 4192, 3760, 1077, 1077, 1936, 2771, 4156, 1077,
	1077, 2909, 1077, 661, 661, 1659, 1077, 3975, 1658, 3971,
	3763, 256, 1933, 1264, 3590, 3970, 3846, 1077, 3636, 3778,
	3535, 3344, 1803, 3781, 1802, 4566, 4533, 4357, 4356, 3793,
	3794, 3795, 3786, 1077, 3787, 2824, 4355, 4218, 2827, 3791,
	2829, 3797, 3798, 3814, 3831, 3799, 1273, 3803, 1264, 1264,
	3802, 3805, 4257, 3806, 3779, 4173, 4151, 4101, 3728, 4098,
	4217, 3840, 4003, 3898, 3807, 3789, 3745, 3681, 3832, 3676,
	3844, 3400, 3457, 3458, 3459, 3460, 1930, 4219, 3732, 3399,
	3286, 3740, 3233, 2871, 3825, 3102, 2871, 3101, 3100, 3099,
	3098, 3097, 3096, 1199, 3095, 3094, 3093, 3092, 3091, 3090,
	1908, 1199, 3089, 3088, 3087, 1337, 3086, 1337, 3648, 3085,
	3084, 3083, 3649, 3082, 1199, 3081, 3080, 3079, 2949, 2930,
	1930, 1930, 2929, 2928, 2858, 1902, 2832, 1194, 1194, 3885,
	2718, 1337, 2652, 2638, 2637, 2409, 2269, 2266, 2265, 1428,
	2264, 2263, 2262, 2182, 2157, 2153, 2152, 2151, 2150, 2149,
	1976, 1975, 1974, 1972, 1674, 1673, 3684, 1616, 3686, 3870,
	1502, 2947, 1501, 1199, 1439, 1199, 1500, 1499, 1498, 1497,
	1496, 1491, 1487, 1930, 1930, 1485, 1484, 1328, 3815, 3820,
	1327, 1326, 1325, 2321, 1324, 1292, 1924, 1924, 3888, 1291,
	1241, 3796, 1240, 1239, 1337, 1238, 3940, 1237, 3882, 3883,
	3884, 1236, 1235, 3891, 1930, 1337, 3903, 3904, 1233, 3887,
	3951, 3952, 1228, 1227, 1226, 1225, 3939, 1224, 3908, 3881,
	3895, 1157, 3892, 2013, 3722, 1197, 979, 3886, 965, 172,
	4279, 3930, 1668, 1279, 1279, 3915, 3949, 89, 3877, 1493,
	811, 83, 2117, 3680, 936, 3201, 4392, 2044, 1477, 3270,
	1279, 3950, 4301, 819, 4377, 3288, 2789, 1193, 1193, 2247,
	1617, 3990, 1337, 2249, 3196, 2603, 4345, 1279, 3854, 3050,
	4249, 4074, 1195, 1195, 3976, 2447, 3977, 3963, 3978, 1807,
	3153, 85, 4016, 3988, 1061, 1107, 3999, 3998, 3969, 3917,
	3668, 2899, 1199, 3996, 3936, 3995, 3936, 1439, 1921, 1923,
	1027, 3993, 1279, 1279, 1279, 1264, 4027, 3982, 3965, 1340,
	4413, 2024, 1067, 2040, 1337, 3987, 4220, 2033, 2639, 4028,
	2521, 4221, 2539, 1933, 1084, 4047, 1077, 1077, 1077, 1081,
	1925, 1927, 1083, 1082, 4015, 3989, 1926, 1826, 1273, 1439,
	4031, 1439, 1080, 4044, 1337, 4022, 3994, 4012, 4009, 1077,
	4013, 1920, 1077, 1077, 3767, 2840, 2878, 3426, 4029, 1542,
	1540, 938, 1077, 2028, 2403, 1936, 2431, 1933, 1933, 3039,
	1077, 1077, 1800, 1042, 1063, 2428, 1217, 1052, 1041, 1194,
	3179, 3158, 2139, 4066, 3413, 1337, 3624, 1279, 4051, 3954,
	2316, 828, 3109, 2434, 1208, 4050, 4055, 2544, 2537, 2533,
	3243, 3962, 2868, 3964, 4053, 1687, 4088, 4052, 1779, 4054,
	4061, 1337, 2879, 1322, 1045, 2401, 1791, 3019, 2326, 1077,
	1933, 1933, 3420, 3936, 3199, 2632, 4399, 3543, 1077, 4036,
	4083, 2161, 1173, 1172, 1215, 1171, 1077, 4383, 1936, 1930,
	4380, 4077, 2108, 3800, 3376, 2016, 1077, 2676, 1210, 1077,
	1769, 1933, 3384, 4094, 4095, 1057, 1438, 3164, 1077, 3445,
	1504, 750, 4131, 1069, 1768, 1337, 2810, 2809, 4271, 1308,
	1306, 4097, 1305, 4134, 1304, 4540, 1279, 1279, 4602, 3677,
	223, 1230, 2987, 1708, 4110, 1700, 4109, 220, 4111, 222,
	221, 4071, 4099, 256, 4004, 256, 256, 3629, 1259, 256,
	1269, 3205, 4117, 4468, 3697, 3368, 23, 22, 21, 1193,
	109, 1289, 42, 20, 4161, 1337, 125, 144, 1279, 4185,
	745, 143, 117, 4176, 1195, 4152, 1197, 1197, 142, 141,
	4148, 140, 4190, 139, 146, 138, 1199, 1199, 137, 132,
	136, 135, 4158, 134, 256, 1924, 256, 256, 1259, 133,
	256, 256, 1269, 4164, 4206, 1077, 1077, 4201, 2543, 1194,
	4166, 3378, 4174, 256, 4169, 1457, 1930, 1194, 4165, 131,
	4202, 4150, 1077, 1936, 129, 4184, 130, 4204, 4168, 124,
	1194, 4167, 128, 127, 126, 123, 1481, 4225, 4226, 4189,
	122, 121, 4203, 120, 119, 4209, 4208, 4031, 4198, 118,
	4223, 116, 115, 114, 113, 1506, 112, 1269, 111, 110,
	1077, 256, 256, 1077, 1259, 2543, 741, 738, 61, 60,
	1199, 3301, 3302, 4238, 4239, 3303, 108, 107, 19, 1194,
	40, 1194, 1199, 745, 14, 256, 256, 4267, 4247, 65,
	66, 4153, 18, 2340, 13, 35, 88, 4237, 99, 98,
	36, 96, 95, 34, 17, 16, 15, 93, 853, 92,
	33, 31, 3334, 3335, 4258, 4266, 3336, 3936, 3936, 4263,
	11, 2059, 9, 1077, 1077, 8, 4289, 4163, 37, 1887,
	4305, 4283, 4284, 4290, 12, 1199, 1933, 5, 1199, 1193,
	177, 176, 1279, 179, 175, 178, 87, 1193, 174, 173,
	86, 29, 1279, 1279, 1195, 10, 4297, 169, 4186, 3755,
	1193, 80, 1195, 1439, 1439, 171, 4299, 170, 4241, 1279,
	168, 4336, 167, 166, 81, 1195, 78, 165, 82, 4312,
	2445, 256, 4317, 1077, 1077, 164, 4322, 79, 4321, 4324,
	163, 27, 6, 1077, 4329, 64, 7, 4330, 4056, 3466,
	256, 3936, 4334, 4335, 4341, 4333, 4342, 102, 1194, 1193,
	103, 1193, 38, 3936, 76, 4189, 75, 74, 2543, 4339,
	26, 4340, 63, 4332, 1195, 25, 1195, 207, 1197, 206,
	205, 204, 4350, 203, 1077, 1077, 202, 1077, 1439, 197,
	4354, 4370, 2977, 196, 4210, 4313, 4314, 201, 199, 4374,
	198, 4349, 200, 195, 4229, 4382, 4385, 1273, 1273, 210,
	209, 2172, 215, 1933, 4397, 214, 3936, 213, 4140, 3936,
	4373, 4372, 4142, 4143, 1273, 2613, 4394, 4418, 212, 211,
	208, 217, 4423, 194, 4422, 4391, 1970, 1077, 1077, 1077,
	4421, 193, 191, 187, 4404, 186, 4157, 190, 192, 4159,
	4160, 189, 4386, 188, 185, 4390, 216, 4409, 161, 4416,
	4401, 162, 71, 4417, 160, 159, 158, 157, 156, 1077,
	155, 154, 2539, 2539, 70, 24, 4457, 2, 1, 4435,
	4436, 4438, 4437, 0, 0, 0, 0, 0, 1193, 0,
	0, 0, 4453, 4455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 4471, 4480, 0, 4387, 0, 0,
	0, 0, 1264, 0, 4482, 0, 0, 4478, 0, 4494,
	0, 0, 1077, 0, 0, 0, 4493, 0, 0, 0,
	0, 4479, 0, 0, 4492, 1930, 4498, 0, 0, 0,
	0, 0, 4488, 0, 4486, 0, 0, 0, 661, 0,
	0, 258, 0, 4514, 0, 4504, 4505, 0, 1197, 4510,
	0, 4508, 4506, 0, 0, 4487, 1197, 2687, 0, 256,
	4518, 256, 1199, 4382, 1199, 256, 4385, 0, 2059, 1197,
	4521, 4519, 4517, 0, 4536, 4530, 4535, 4305, 1457, 1259,
	256, 4545, 256, 4534, 4525, 4538, 0, 256, 1457, 677,
	4542, 0, 1194, 1194, 256, 1457, 4546, 4541, 1930, 0,
	4559, 0, 1439, 0, 0, 0, 2539, 2539, 2539, 1977,
	4561, 4558, 0, 4537, 0, 4539, 0, 4401, 1197, 0,
	1197, 256, 0, 0, 4298, 2049, 0, 4570, 256, 4574,
	0, 2050, 1077, 1077, 4567, 4575, 0, 0, 4572, 4568,
	4565, 1077, 0, 1077, 1077, 0, 4578, 0, 0, 4587,
	0, 0, 0, 4584, 4593, 0, 4592, 4591, 0, 4598,
	4597, 4596, 0, 4595, 4590, 4594, 0, 0, 745, 3016,
	3017, 0, 4605, 4601, 0, 4606, 1194, 0, 0, 4608,
	0, 0, 4610, 0, 4611, 0, 4607, 0, 1194, 4613,
	1924, 0, 4616, 3936, 0, 3936, 0, 4609, 4618, 0,
	1077, 0, 4621, 0, 4623, 0, 4620, 4624, 4627, 4626,
	4617, 4585, 4586, 0, 0, 4613, 2880, 0, 0, 0,
	0, 0, 1193, 1193, 0, 2049, 1040, 0, 0, 0,
	0, 2050, 0, 1930, 0, 0, 0, 1195, 1195, 0,
	2051, 1194, 0, 0, 1194, 0, 0, 1197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2055, 0, 0,
	0, 0, 0, 1924, 4490, 4491, 1717, 1718, 4622, 0,
	4495, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 3135, 3136, 3137, 0, 0, 1193, 0,
	0, 1195, 256, 0, 0, 256, 0, 2052, 2057, 0,
	0, 1719, 0, 1195, 0, 0, 0, 0, 0, 0,
	2051, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 4467, 0, 0, 2055, 0, 0,
	0, 1717, 1718, 0, 0, 0, 0, 0, 0, 0,
	0, 1193, 0, 0, 1193, 0, 0, 0, 256, 0,
	3764, 0, 256, 0, 0, 1748, 1195, 256, 0, 1195,
	0, 0, 1720, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	2053, 256, 0, 0, 0, 661, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 2052, 2057, 745,
	0, 0, 1725, 853, 0, 0, 1739, 0, 3112, 3113,
	0, 3130, 3131, 3132, 0, 1736, 0, 0, 0, 3816,
	0, 0, 2058, 0, 0, 0, 2060, 0, 256, 0,
	1259, 256, 0, 0, 0, 0, 3112, 3113, 0, 3130,
	3131, 3132, 0, 0, 0, 745, 0, 1747, 1749, 0,
	1933, 0, 256, 0, 0, 0, 1264, 0, 0, 2246,
	0, 1197, 1197, 0, 256, 256, 3498, 256, 0, 256,
	0, 256, 0, 256, 0, 0, 2046, 0, 0, 0,
	2053, 0, 0, 3127, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 0, 0, 0, 2278, 1725, 1194, 2279,
	1194, 2280, 0, 0, 0, 2172, 1740, 0, 0, 0,
	0, 3127, 0, 256, 0, 2047, 0, 0, 0, 0,
	0, 0, 2058, 0, 0, 0, 2060, 0, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 727, 2539, 2539,
	0, 745, 1747, 1749, 1924, 1197, 0, 0, 0, 0,
	3165, 0, 1748, 0, 0, 0, 0, 1197, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 1766, 1734, 1735,
	0, 0, 0, 0, 3118, 0, 3253, 0, 0, 0,
	0, 0, 0, 3191, 0, 0, 0, 0, 1924, 1924,
	0, 0, 0, 1719, 0, 0, 0, 0, 3204, 0,
	2054, 1740, 3118, 1739, 0, 0, 0, 0, 0, 0,
	1197, 0, 1736, 1197, 0, 0, 0, 0, 0, 3222,
	0, 0, 0, 0, 0, 0, 0, 0, 1193, 0,
	1193, 0, 758, 0, 0, 0, 3133, 0, 0, 0,
	0, 1924, 1924, 1195, 0, 1195, 0, 0, 0, 1741,
	2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539,
	2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 0,
	2539, 0, 1924, 0, 0, 0, 0, 0, 3128, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 661, 0,
	2054, 0, 0, 0, 4002, 0, 3128, 0, 0, 0,
	0, 0, 0, 256, 0, 4014, 0, 0, 0, 0,
	0, 0, 661, 0, 1746, 0, 0, 0, 0, 256,
	1757, 661, 0, 1767, 0, 0, 0, 0, 4035, 1747,
	1749, 0, 0, 256, 1741, 3500, 3501, 0, 763, 0,
	0, 0, 1040, 0, 0, 0, 1040, 0, 256, 1269,
	0, 0, 0, 0, 0, 1734, 1735, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 1420, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 256, 1269, 3204, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2651, 0,
	2172, 3129, 0, 0, 256, 0, 0, 256, 0, 0,
	722, 256, 0, 256, 0, 0, 0, 1264, 1259, 0,
	256, 256, 0, 1269, 1269, 2667, 0, 0, 0, 3129,
	256, 0, 0, 0, 765, 0, 0, 3563, 3564, 3565,
	3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575,
	3576, 3577, 3578, 3579, 3580, 3581, 0, 3585, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 2707, 0, 0, 1197, 0, 1197,
	0, 0, 0, 0, 0, 0, 256, 1924, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 0, 256, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 1433,
	0, 1741, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 3124, 3125, 3126, 0, 0, 256, 0, 3123, 3121,
	3122, 3114, 3115, 3116, 3117, 3119, 3120, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3124,
	3125, 3126, 256, 2822, 0, 760, 3123, 3121, 3122, 3114,
	3115, 3116, 3117, 3119, 3120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1457, 0, 0,
	256, 0, 0, 0, 0, 764, 3520, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2863, 0,
	0, 0, 0, 3536, 1924, 0, 0, 0, 2707, 0,
	661, 0, 0, 0, 0, 0, 0, 0, 721, 2892,
	853, 0, 2707, 2707, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 1756, 762, 256, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 256, 1259, 256,
	0, 0, 0, 1457, 0, 1457, 1269, 256, 0, 0,
	1259, 0, 1259, 0, 1259, 0, 0, 0, 0, 0,
	2805, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4303, 0, 0, 0, 0, 0,
	256, 256, 256, 256, 1259, 0, 0, 1259, 0, 256,
	766, 256, 0, 2797, 2795, 4320, 0, 0, 0, 0,
	2799, 2801, 2791, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 1439, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 3627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 1717, 1718, 0, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1457,
	4405, 0, 0, 4406, 0, 1264, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 1717, 1718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2793, 0, 1748, 0, 1040,
	0, 0, 0, 0, 1720, 1420, 2807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2806, 2798, 2796,
	2800, 2802, 2792, 2794, 2808, 0, 0, 0, 1719, 0,
	0, 2804, 1742, 1743, 1744, 1745, 0, 0, 1739, 0,
	0, 0, 1725, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 2811, 0, 0, 2539, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 1767, 0, 0, 0, 0, 256, 1747, 1749, 3112,
	3113, 661, 3130, 3131, 3132, 0, 661, 0, 3497, 661,
	0, 0, 661, 661, 1763, 0, 1764, 0, 661, 0,
	0, 0, 3509, 1734, 1735, 0, 256, 0, 0, 1742,
	1743, 1744, 1745, 0, 2539, 0, 0, 0, 1457, 1725,
	1420, 1755, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	1457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 3127, 256, 256, 0, 0, 0,
	0, 0, 0, 0, 1747, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 2707, 2707, 256, 0, 3258, 0,
	1734, 1735, 0, 0, 0, 0, 1754, 2707, 0, 0,
	3272, 0, 0, 0, 0, 0, 0, 0, 2707, 3272,
	0, 2707, 3272, 0, 0, 3272, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 2812, 0, 0, 0, 256,
	256, 3258, 256, 0, 2803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3118, 0, 0, 0, 0,
	3890, 0, 3258, 256, 0, 3326, 3326, 0, 1259, 1746,
	0, 1924, 0, 0, 4080, 0, 0, 2539, 0, 0,
	0, 0, 0, 2707, 3900, 3345, 2707, 3258, 0, 1741,
	2707, 2707, 3258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 3133, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4120, 0, 0, 0, 256, 3372, 0, 0, 3374,
	2707, 0, 0, 256, 0, 0, 0, 256, 1189, 1269,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 3128,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 2863,
	0, 0, 1259, 0, 256, 1865, 1741, 2707, 0, 661,
	0, 0, 0, 0, 0, 0, 2707, 0, 0, 0,
	0, 1420, 0, 0, 251, 251, 657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 2863, 0,
	0, 2863, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0, 3863,
	0, 3471, 0, 3862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3477, 0,
	0, 1259, 256, 0, 256, 0, 0, 1335, 0, 0,
	1259, 0, 0, 0, 0, 0, 0, 0, 1420, 0,
	0, 0, 0, 0, 4246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4072, 0, 0,
	256, 0, 3129, 0, 0, 0, 0, 0, 0, 0,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 0, 0, 0, 1717, 1718, 0,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 4072, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	1753, 1748, 0, 0, 0, 0, 3541, 0, 1720, 0,
	1026, 0, 0, 0, 2340, 0, 1766, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 1718,
	0, 0, 1719, 0, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 1748, 0, 0, 0, 0, 0, 2340, 1720,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 3124, 3125, 3126, 0, 0, 0, 0, 3123,
	3121, 3122, 3114, 3115, 3116, 3117, 3119, 3120, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 256, 256, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 661, 661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 0, 1457,
	1457, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1767, 1457, 1457, 1457, 0, 0, 1747, 1749,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1725, 1763, 0, 1764, 0, 0,
	0, 0, 0, 0, 1734, 1735, 3326, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 1420, 0, 0, 0, 73, 0,
	1757, 0, 0, 1767, 0, 0, 0, 1740, 0, 1747,
	1749, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 1735, 0, 0, 1717,
	1718, 0, 0, 0, 0, 0, 0, 3326, 0, 1765,
	0, 0, 0, 1755, 84, 0, 0, 0, 256, 0,
	0, 0, 0, 1748, 0, 0, 0, 1754, 1740, 0,
	1720, 0, 0, 0, 0, 0, 3258, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 847, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 1719, 104, 0, 256, 0, 0,
	90, 101, 256, 0, 1739, 0, 0, 256, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 2707, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 2892, 2892, 0, 0,
	1741, 0, 853, 853, 2707, 0, 0, 0, 2863, 2863,
	0, 0, 853, 2707, 1109, 0, 0, 91, 0, 0,
	0, 0, 0, 0, 3005, 0, 1758, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 3855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 0, 1245,
	1245, 0, 0, 0, 0, 1756, 1734, 1735, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	3063, 0, 0, 1284, 3064, 0, 0, 0, 0, 1740,
	94, 0, 0, 0, 0, 0, 0, 256, 1332, 0,
	0, 0, 0, 1457, 1437, 256, 1026, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 1756, 0, 256, 0,
	0, 0, 0, 0, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 180, 97, 0, 100, 0, 0, 0, 2707, 2707,
	0, 3326, 0, 0, 0, 1459, 0, 1465, 0, 1471,
	2707, 0, 0, 0, 0, 0, 0, 3938, 224, 3938,
	1457, 1200, 0, 0, 0, 0, 848, 0, 2707, 0,
	3272, 145, 0, 0, 1457, 1457, 256, 3258, 0, 1557,
	1558, 0, 0, 0, 0, 0, 0, 0, 0, 3258,
	256, 3258, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 226, 0, 2707, 0, 2707, 256,
	0, 0, 0, 1559, 0, 1564, 0, 0, 1420, 0,
	0, 0, 1741, 0, 0, 1573, 0, 1578, 0, 0,
	147, 0, 0, 2707, 0, 0, 0, 0, 4006, 0,
	0, 0, 0, 0, 0, 184, 0, 256, 0, 0,
	0, 1420, 0, 225, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 218, 0, 1420, 0, 0, 0,
	0, 0, 0, 219, 0, 1667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3938, 1420, 0, 1457,
	1640, 0, 0, 1646, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2707, 0, 3272, 0, 0, 4113, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 1788, 0, 0, 0,
	0, 4132, 1801, 4132, 0, 0, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 1259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3258, 256, 0, 0, 0,
	0, 0, 843, 0, 0, 1420, 0, 1717, 1718, 0,
	0, 0, 0, 0, 0, 4113, 0, 0, 0, 0,
	0, 0, 0, 2707, 0, 0, 0, 0, 0, 0,
	72, 1748, 846, 845, 0, 0, 4195, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 1457, 1897,
	0, 0, 0, 0, 0, 0, 0, 1859, 1859, 1859,
	3938, 3938, 77, 0, 1906, 0, 1437, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 256, 256, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3541, 84, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 1437, 0, 0, 0, 0, 3326, 4260, 0,
	0, 4262, 3326, 4265, 0, 0, 0, 0, 0, 4113,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 847,
	1420, 0, 2998, 0, 3938, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 3938, 0, 90, 101,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 256, 0, 0,
	0, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4006, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 3938,
	0, 256, 3938, 0, 1420, 91, 0, 0, 1747, 1749,
	0, 0, 3272, 0, 0, 1200, 0, 0, 0, 1200,
	0, 1420, 0, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1734, 1735, 0, 0, 1457, 0,
	1457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3112, 3113, 1200, 3130, 3131, 3132, 0, 0,
	0, 0, 0, 0, 0, 0, 4359, 1740, 0, 0,
	0, 0, 0, 0, 0, 3508, 0, 4366, 0, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4132, 0, 0, 256, 0, 0, 0, 0, 0, 1200,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 2707, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 72, 0, 0, 0, 0, 3127, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 2159, 0, 77, 0, 2166, 3541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2178, 0, 0,
	0, 1200, 0, 0, 0, 1420, 1457, 0, 0, 0,
	0, 0, 0, 2190, 0, 2190, 0, 0, 0, 0,
	1746, 2197, 0, 0, 84, 0, 0, 0, 0, 180,
	97, 0, 100, 256, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 3118, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 847, 2166, 0, 848, 2221, 0, 0, 0, 145,
	0, 0, 0, 0, 4113, 104, 0, 0, 0, 0,
	90, 101, 0, 0, 0, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2254,
	0, 2256, 226, 2258, 0, 2260, 0, 2261, 0, 2707,
	3133, 0, 0, 0, 0, 0, 3938, 0, 3938, 0,
	0, 1457, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 0, 0, 0, 0, 91, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 2283, 0, 0,
	0, 225, 3128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 1457, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	0, 0, 0, 844, 0, 0, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 0, 0, 2707, 0,
	0, 2315, 0, 2319, 0, 0, 0, 0, 0, 0,
	2333, 0, 0, 2892, 0, 0, 0, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 0, 2382, 0, 2384, 2385, 2386, 2387, 1200,
	0, 1200, 1420, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 1200, 2411, 0, 0,
	0, 0, 0, 0, 0, 3129, 1420, 0, 1788, 0,
	0, 0, 2426, 1937, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2456, 2459,
	2462, 2465, 0, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	0, 180, 97, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 1718, 0, 0, 0,
	0, 2535, 0, 2546, 2548, 2553, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 848, 0, 0, 1748,
	0, 145, 0, 1200, 0, 0, 1720, 2610, 0, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 1200, 0,
	1719, 0, 0, 0, 0, 0, 1420, 0, 1420, 0,
	1739, 0, 0, 0, 0, 3124, 3125, 3126, 0, 1736,
	147, 0, 3123, 3121, 3122, 3114, 3115, 3116, 3117, 3119,
	3120, 0, 1420, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 2653, 0,
	0, 1245, 0, 0, 218, 1245, 0, 1245, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1553, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 1420, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1200, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 1734, 1735, 0, 0, 0, 0, 0, 0,
	1437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 1200, 0, 1200, 0,
	1200, 0, 0, 0, 2166, 0, 0, 0, 2825, 2826,
	0, 2828, 2178, 0, 0, 1420, 1200, 1200, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 1200,
	0, 1200, 1200, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1420, 0, 0, 0,
	0, 0, 2922, 0, 255, 255, 255, 0, 0, 0,
	847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2932, 1420, 2935, 104, 0, 0, 0, 0, 90,
	101, 0, 782, 0, 0, 0, 0, 72, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 782, 0, 1741, 0,
	1040, 0, 0, 0, 2960, 1437, 2962, 1437, 0, 77,
	0, 0, 0, 2968, 2948, 0, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 91, 0, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 1937, 1937, 1200, 0, 1245, 0, 0, 84,
	0, 1753, 1748, 0, 2996, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 1420, 1766, 1770, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 1739, 0, 90, 101, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2999, 3000, 1196, 0, 0, 0, 3006,
	0, 1200, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 3020, 3021,
	0, 0, 0, 0, 2426, 0, 0, 0, 0, 0,
	0, 0, 91, 3028, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3042,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 1200, 1725, 0, 3054, 0, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 97, 0, 100, 1040, 1040, 1200, 0, 0, 0,
	1757, 0, 0, 1767, 0, 0, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 848, 1763, 0, 1764, 0,
	145, 0, 0, 0, 0, 1734, 1735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 2629, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 2553, 2553, 2553, 1740, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 3169, 147,
	0, 0, 0, 0, 0, 0, 1200, 1200, 0, 0,
	0, 0, 0, 0, 184, 0, 1040, 0, 0, 0,
	1765, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 180, 97, 1754, 100,
	0, 0, 219, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 1245, 0, 0, 0, 1437,
	1437, 0, 0, 224, 1551, 0, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	3256, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 1026, 0, 0, 0, 0, 1200, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1200, 0, 3308, 3310, 147, 2178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 3291, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 1200, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 0, 3385, 0, 0,
	0, 3389, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 2422, 0, 0, 0, 2423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 255,
	255, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 3441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	255, 255, 0, 0, 255, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3480, 782, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2333, 0, 0,
	0, 0, 0, 3495, 3496, 0, 0, 3499, 0, 255,
	255, 3502, 0, 0, 0, 0, 0, 0, 0, 0,
	3506, 0, 0, 0, 0, 0, 0, 0, 0, 3513,
	0, 0, 3169, 0, 0, 1717, 1718, 0, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 3525, 2514, 2515,
	2516, 2517, 2510, 2511, 2512, 2513, 0, 0, 1753, 1748,
	0, 0, 0, 0, 0, 0, 1720, 3548, 3549, 0,
	3550, 3551, 3552, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	1739, 0, 3558, 0, 0, 0, 3560, 0, 0, 1736,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 2490,
	2491, 2492, 2493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3588, 3589, 0,
	1200, 1200, 2502, 2503, 2504, 2505, 2498, 2499, 2500, 2501,
	2506, 2507, 2508, 2509, 0, 3600, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3609, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 1200, 0, 0, 1200,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	1200, 0, 0, 0, 0, 2486, 2487, 2488, 2489, 2494,
	2495, 2496, 2497, 0, 1200, 1200, 0, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 3652, 0, 0, 0,
	0, 0, 0, 1763, 0, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 0, 0, 0, 0, 0, 3671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1937,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 1200, 0,
	0, 3696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 0, 1881, 1200, 1196, 0, 1765, 0, 255,
	0, 0, 2178, 0, 0, 0, 0, 0, 0, 1200,
	0, 0, 3754, 0, 255, 1881, 255, 0, 1200, 0,
	0, 782, 0, 1200, 0, 0, 2178, 0, 782, 0,
	0, 3770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 0, 0,
	0, 0, 1200, 0, 1200, 255, 0, 0, 1200, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 1200, 0, 1746, 3788,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3818, 1741, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 1200,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 3833, 3834, 0, 0, 0, 0, 3838,
	3839, 0, 0, 0, 3842, 3843, 0, 0, 0, 0,
	0, 3847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3851, 0, 0, 0, 0, 0, 0, 0,
	1200, 0, 0, 1200, 0, 0, 0, 0, 3856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 255, 0, 0, 782,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1937, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 255, 0, 0, 0,
	3953, 255, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 2178, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 255, 0, 1937, 1937, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 255, 0, 707, 255, 0, 0, 0, 0,
	0, 4023, 0, 0, 0, 1200, 1200, 0, 0, 0,
	0, 0, 0, 0, 690, 0, 255, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 782, 255,
	0, 255, 0, 255, 0, 255, 0, 255, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 4067, 4068, 4069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 2333, 0, 0, 4078, 4079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 695,
	0, 0, 0, 0, 0, 4087, 4090, 0, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 0, 0, 0, 4121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 0, 0, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 257, 257,
	0, 0, 722, 4133, 1200, 0, 0, 0, 0, 0,
	0, 4139, 0, 0, 0, 0, 0, 0, 0, 0,
	2178, 4146, 0, 1937, 1026, 257, 712, 0, 0, 0,
	0, 0, 0, 4154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 1200,
	1200, 0, 0, 0, 0, 709, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 0,
	0, 4236, 1437, 1196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 1200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 719, 0, 700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 720, 0, 701, 4270, 0, 0, 4273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 255, 0, 0, 0, 255, 0, 255, 0, 0,
	0, 0, 0, 0, 255, 255, 0, 0, 0, 0,
	721, 0, 0, 0, 255, 0, 0, 702, 0, 0,
	0, 717, 718, 715, 0, 4323, 0, 0, 0, 710,
	0, 0, 703, 0, 0, 0, 0, 1200, 1026, 1026,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 1200,
	0, 1200, 0, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 704, 0, 711, 1200, 0, 0, 0, 1062,
	106, 0, 255, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 706, 0, 2333,
	0, 0, 714, 0, 0, 0, 0, 1200, 4090, 1200,
	0, 0, 0, 0, 0, 0, 723, 4376, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 782, 0, 0, 1200,
	1026, 0, 0, 0, 4411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 255, 0, 0, 1200, 1200, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 707, 0, 0, 0, 0,
	0, 0, 4434, 4434, 4434, 0, 1200, 0, 0, 0,
	0, 1200, 0, 0, 0, 690, 0, 0, 0, 0,
	0, 691, 0, 0, 0, 0, 0, 4472, 0, 0,
	0, 0, 255, 0, 4456, 0, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 1200, 1200, 0,
	0, 255, 1001, 255, 0, 0, 0, 0, 1200, 692,
	261, 255, 0, 1021, 0, 0, 0, 0, 0, 0,
	693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4434, 1200, 0,
	0, 694, 0, 0, 255, 255, 255, 255, 0, 0,
	0, 0, 0, 255, 0, 255, 1183, 0, 0, 1937,
	0, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1200,
	695, 1200, 0, 0, 774, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 0, 1200, 0, 0, 774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 0, 698, 0, 0,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4434, 4579, 1200,
	0, 0, 0, 0, 0, 0, 4583, 712, 0, 0,
	1200, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 257, 257, 0, 0, 257, 0, 1282, 1200,
	0, 0, 1200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	1200, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 1282, 257, 257, 0, 1282, 257, 257, 0,
	1282, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	257, 0, 0, 0, 1717, 1718, 0, 1750, 1751, 1752,
	1760, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 700, 0, 1753, 1748, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	0, 0, 0, 1766, 1200, 0, 1282, 0, 257, 257,
	0, 0, 0, 720, 1196, 701, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 0, 1719,
	1196, 1282, 257, 257, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 1282, 0, 0, 1736, 0,
	0, 721, 0, 0, 0, 0, 0, 0, 702, 0,
	1881, 0, 717, 718, 715, 0, 0, 0, 0, 1200,
	710, 0, 1200, 703, 0, 0, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 0, 0, 1200, 0, 255, 0, 0, 0, 255,
	255, 0, 0, 704, 0, 711, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 705, 0, 0, 0, 257, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 706, 0,
	255, 0, 0, 714, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 708, 1767,
	0, 0, 0, 0, 0, 1747, 1749, 0, 0, 0,
	0, 0, 0, 255, 255, 0, 255, 0, 0, 0,
	0, 0, 1763, 1881, 1764, 0, 0, 0, 0, 0,
	0, 1734, 1735, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1765, 0, 0, 782,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 255, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	106, 0, 106, 0, 106, 0, 0, 0, 1196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 1753, 1748, 0, 1200, 1746, 1200, 0,
	0, 1720, 0, 0, 1021, 106, 106, 0, 0, 1766,
	0, 0, 257, 0, 0, 0, 0, 1741, 106, 0,
	106, 0, 0, 1282, 0, 0, 0, 257, 257, 257,
	106, 0, 106, 0, 257, 1719, 0, 0, 0, 0,
	0, 257, 0, 1758, 1282, 1739, 255, 0, 255, 0,
	0, 0, 0, 0, 1736, 0, 0, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 0, 0, 1338, 0, 0, 0, 1280,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	1280, 0, 1756, 0, 0, 1282, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 1280, 0, 0, 0, 0,
	0, 3861, 1757, 0, 0, 1767, 0, 0, 0, 0,
	0, 1747, 1749, 1001, 0, 1280, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	1764, 0, 0, 1782, 1280, 0, 0, 1734, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 1793, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 1196,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	1282, 1282, 257, 0, 0, 0, 0, 0, 0, 0,
	1282, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 257,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 1879, 0, 1882, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 257, 0,
	0, 1078, 0, 1746, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 0, 1282, 0, 1282, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1282, 257, 0, 0, 257, 1758,
	0, 0, 0, 0, 0, 0, 1282, 0, 1282, 1282,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 257, 0, 257, 0, 257, 0, 257, 0,
	257, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 255, 0, 0, 0,
	257, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 1196, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 3511, 0, 0,
	0, 1282, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 0, 0, 0, 255, 0, 0,
	774, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1196, 0, 0, 0, 0, 0, 1282, 0, 1196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1021, 1881, 1021, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 257, 0, 0, 0, 0, 0, 0, 1280,
	1280, 0, 0, 0, 255, 0, 255, 0, 0, 1338,
	0, 257, 0, 0, 257, 0, 0, 0, 257, 0,
	257, 0, 0, 255, 0, 0, 0, 257, 257, 0,
	0, 0, 0, 1282, 1282, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 1282, 0, 0, 0, 1001,
	0, 0, 1001, 1001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 800,
	1881, 0, 1280, 0, 1280, 257, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 802,
	0, 0, 1280, 1280, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 2400, 0, 0,
	0, 0, 0, 257, 1282, 1280, 0, 1280, 1280, 1280,
	0, 0, 0, 1021, 0, 0, 0, 0, 1282, 0,
	0, 0, 1787, 804, 0, 821, 1787, 0, 0, 257,
	774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 806, 0, 257, 0, 0,
	1282, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 829, 0, 0, 0, 0,
	0, 807, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 1282, 0, 0, 827, 0, 0, 0, 1183, 0,
	0, 0, 0, 1282, 0, 1282, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 257, 0, 801, 0, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 257, 0, 257, 0, 808, 0,
	255, 809, 0, 0, 257, 0, 0, 106, 1281, 0,
	0, 0, 831, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 257, 257,
	257, 0, 0, 0, 0, 0, 257, 0, 257, 0,
	0, 0, 1339, 0, 0, 0, 1339, 0, 0, 0,
	1281, 0, 0, 0, 1881, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 257,
	0, 255, 255, 0, 0, 0, 0, 257, 0, 0,
	830, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 1338, 0, 1881, 0,
	0, 0, 0, 0, 106, 1281, 0, 0, 810, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 812,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 1881, 0, 255, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 106, 721, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 799, 0, 822, 0,
	0, 0, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 1280, 0, 0, 0, 0, 0, 106,
	0, 820, 106, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 0, 0,
	0, 816, 834, 0, 833, 0, 0, 255, 817, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 1282, 0,
	0, 0, 818, 0, 0, 0, 0, 826, 0, 0,
	0, 0, 0, 835, 0, 832, 0, 0, 0, 0,
	0, 723, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	0, 1282, 1282, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 257, 257, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 2400, 0, 0, 0, 1282, 0, 0, 0, 0,
	0, 0, 1280, 0, 1280, 0, 257, 257, 0, 257,
	0, 0, 1787, 1339, 0, 0, 257, 0, 1280, 0,
	1881, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	257, 1282, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 0,
	1282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 0, 0, 0, 0, 257, 1282,
	0, 1282, 0, 0, 0, 1282, 0, 0, 0, 0,
	1281, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	257, 1281, 0, 1282, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 1282, 0, 0,
	0, 0, 0, 0, 257, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	0, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 0, 257,
	1282, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1281, 1281, 0, 0, 0, 0, 0, 257, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 106, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 1281, 0, 1281, 0, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 106,
	0, 0, 106, 1281, 1281, 0, 0, 0, 0, 0,
	1338, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 1281, 0, 1281, 1281,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 1183,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 0, 0, 0, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 1280, 0,
	1280, 0, 0, 0, 1338, 257, 0, 0, 1339, 0,
	0, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1282, 1280, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 257,
	0, 0, 0, 910, 257, 956, 0, 0, 0, 0,
	1282, 0, 0, 0, 0, 1280, 1280, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	918, 0, 0, 0, 0, 1282, 1282, 1282, 1280, 0,
	0, 0, 0, 1339, 0, 0, 932, 916, 915, 0,
	0, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 1282, 0, 0, 917, 1338, 0, 0, 1338,
	920, 0, 0, 0, 0, 964, 0, 0, 0, 0,
	0, 0, 106, 0, 929, 930, 1282, 0, 0, 0,
	0, 0, 0, 946, 0, 0, 0, 0, 0, 0,
	1183, 1183, 0, 0, 0, 0, 0, 0, 0, 957,
	922, 0, 0, 0, 0, 0, 0, 0, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 0, 1281, 1281, 0, 923, 0, 0, 0,
	0, 1753, 1748, 1338, 0, 955, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 0, 925,
	0, 0, 0, 1739, 0, 0, 0, 914, 0, 0,
	0, 0, 1736, 0, 0, 0, 1282, 0, 1282, 0,
	0, 0, 0, 0, 0, 926, 927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 0, 934, 933, 0, 0, 0, 0,
	0, 0, 928, 0, 1339, 0, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 0, 0, 961, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 257, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 958, 257, 0, 257,
	1281, 0, 0, 0, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 257, 0, 0, 0,
	1757, 0, 0, 1767, 0, 0, 106, 0, 0, 1747,
	1749, 1281, 0, 0, 1282, 1282, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 1281, 1763, 921, 1764, 0,
	963, 1282, 1183, 0, 257, 1734, 1735, 0, 0, 1281,
	0, 0, 0, 1282, 257, 0, 0, 0, 1282, 0,
	0, 0, 919, 1755, 0, 0, 950, 951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 953,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 1282, 1282, 1282, 0, 0, 0, 0,
	948, 0, 0, 0, 0, 1282, 0, 962, 944, 0,
	937, 935, 0, 940, 0, 0, 0, 0, 0, 941,
	1765, 0, 912, 0, 959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 952, 0, 942, 0,
	1280, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 960, 1282, 0, 1282, 0,
	0, 0, 0, 945, 0, 0, 0, 0, 0, 0,
	0, 0, 924, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 1282, 0, 0, 0, 947, 0, 0, 1280,
	0, 257, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 1741, 1183, 0, 0, 0, 0, 0, 0, 949,
	1183, 0, 0, 0, 1280, 1280, 1280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 1280, 0, 0, 0, 0, 1282, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 1282, 1282, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 0, 0, 1282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 257, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	106, 0, 0, 0, 0, 3066, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 1338, 0, 0,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 1338, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1281, 1281, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 1282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1282, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	1282, 0, 0, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 1280, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 1338, 0, 0, 0, 0, 1280, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 257, 0, 0,
	1281, 0, 1280, 1280, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 1281,
	0, 1281, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 0, 2400, 0, 0,
	0, 1717, 1718, 1281, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 1338, 0, 1280, 0, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1281, 1281, 0, 0,
	0, 1338, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 1281,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 1339, 0, 0,
	1339, 0, 0, 0, 0, 0, 1280, 1280, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 0, 0, 1338, 0, 1725, 1280, 1717,
	1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1748, 1339, 0, 0, 0, 0, 0,
	1720, 0, 0, 1757, 0, 0, 1767, 0, 1766, 0,
	0, 1339, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 1764, 0, 0, 1719, 0, 0, 0, 1734, 1735,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 106, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 1754, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 1280,
	0, 1757, 0, 0, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1763, 0, 1764,
	0, 0, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 1746, 0, 0, 0, 0, 0, 3065, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 1281, 1281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 1281, 1717, 1718, 0, 1750, 1751, 1752, 1760,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 1753, 1748, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1717,
	1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 1756, 0, 0,
	1720, 0, 1731, 1732, 1738, 1759, 1737, 1733, 1766, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 3062, 0, 0, 0,
	0, 0, 1717, 1718, 1719, 1750, 1751, 1752, 1760, 1761,
	1762, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 1748, 0, 0, 1742,
	1743, 1744, 1745, 1720, 0, 0, 1339, 0, 1339, 1725,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 1719, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 1739, 1767, 0,
	0, 0, 0, 0, 1747, 1749, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	0, 1763, 0, 1764, 0, 1725, 0, 0, 0, 0,
	1734, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 0,
	0, 1757, 0, 1740, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 0, 0, 1281, 1281, 0, 1763, 1725, 1764,
	0, 0, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 1281, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 1339, 1755, 0, 0, 0, 1281, 0,
	0, 0, 0, 1754, 1757, 0, 0, 1767, 0, 1740,
	0, 0, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 1764, 1281, 1281, 1281, 0, 0, 0, 1734,
	1735, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 1765, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 1754,
	0, 0, 1740, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 1765, 0, 1339, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1281, 1281, 0,
	0, 1756, 0, 0, 0, 1741, 1731, 1732, 1738, 1759,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	3061, 1758, 0, 0, 0, 0, 1339, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 3060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1336,
	0, 0, 0, 1281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 1281, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 1341, 273, 274, 1342, 1343, 1344,
	1281, 1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 1350, 608, 284, 285, 286, 287, 288, 289,
	1351, 1352, 0, 290, 609, 610, 611, 1353, 291, 292,
	612, 1354, 1283, 1355, 293, 294, 295, 296, 297, 298,
	299, 0, 1356, 301, 302, 303, 300, 304, 1357, 305,
	0, 306, 307, 308, 309, 310, 311, 1358, 312, 313,
	314, 1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364,
	1365, 317, 318, 319, 320, 0, 321, 613, 614, 1366,
	325, 322, 323, 1367, 326, 324, 1368, 327, 328, 329,
	1369, 1370, 330, 331, 332, 1371, 333, 334, 1372, 335,
	336, 337, 1373, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 1374,
	262, 1375, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 1376, 356, 1377, 1378, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 1379, 368, 621, 1380, 622, 369, 1381, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 1144, 375,
	376, 1382, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 1383, 1143, 384, 626, 627, 1384,
	628, 1385, 386, 387, 1145, 629, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1386, 398, 400, 399, 1387, 401, 630, 1148, 402,
	403, 1149, 1388, 404, 0, 0, 0, 405, 406, 409,
	1389, 1390, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1391, 264, 1152, 448,
	449, 1392, 631, 450, 632, 452, 453, 1393, 0, 454,
	0, 1394, 1395, 456, 457, 458, 1396, 1397, 459, 460,
	633, 1153, 461, 1154, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 1398, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 1399, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 1400, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 1401, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 1402, 532, 533, 531, 534, 535, 536, 1403, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 1404, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 1405, 562, 563, 0, 559, 551, 1406, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 1407, 572, 644,
	645, 646, 647, 1408, 581, 1409, 573, 574, 575, 648,
	576, 649, 1410, 577, 578, 579, 580, 0, 582, 583,
	1411, 1412, 584, 585, 586, 588, 589, 587, 590, 1413,
	591, 1414, 0, 592, 593, 594, 650, 651, 652, 1415,
	596, 595, 597, 653, 1416, 1417, 1418, 1419, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 2588, 0, 0, 0,
	0, 0, 0, 0, 2589, 265, 267, 266, 268, 269,
	270, 271, 272, 1341, 273, 274, 1342, 1343, 1344, 0,
	1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 1350, 608, 284, 285, 286, 287, 288, 289, 1351,
	1352, 0, 290, 609, 610, 611, 1353, 291, 292, 612,
	1354, 1283, 1355, 293, 294, 295, 296, 297, 298, 299,
	0, 1356, 301, 302, 303, 300, 304, 1357, 305, 0,
	306, 307, 308, 309, 310, 311, 1358, 312, 313, 314,
	1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365,
	317, 318, 319, 320, 0, 321, 613, 614, 1366, 325,
	322, 323, 1367, 326, 324, 1368, 327, 328, 329, 1369,
	1370, 330, 331, 332, 1371, 333, 334, 1372, 335, 336,
	337, 1373, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 1374, 262,
	1375, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 1376, 356, 1377, 1378, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 1379, 368, 621, 1380, 622, 369, 1381, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	1382, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 1383, 1143, 384, 626, 627, 1384, 628,
	1385, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	1386, 398, 400, 399, 1387, 401, 630, 1148, 402, 403,
	1149, 1388, 404, 0, 0, 0, 405, 406, 409, 1389,
	1390, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1391, 264, 1152, 448, 449,
	1392, 631, 450, 632, 452, 453, 1393, 0, 454, 0,
	1394, 1395, 456, 457, 458, 1396, 1397, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 1398, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 1399, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 1400, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 1401, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	1402, 532, 533, 531, 534, 535, 536, 1403, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 1404, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	1405, 562, 563, 0, 559, 551, 1406, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 1407, 572, 644, 645,
	646, 647, 1408, 581, 1409, 573, 574, 575, 648, 576,
	649, 1410, 577, 578, 579, 580, 0, 582, 583, 1411,
	1412, 584, 585, 586, 588, 589, 587, 590, 1413, 591,
	1414, 0, 592, 593, 594, 650, 651, 652, 1415, 596,
	595, 597, 653, 1416, 1417, 1418, 1419, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 0, 0, 0,
	3519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3521, 265, 267, 266, 268, 269, 270, 271, 272,
	1341, 273, 274, 1342, 1343, 1344, 0, 1345, 603, 1346,
	1347, 1348, 1349, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 1350, 608,
	284, 285, 286, 287, 288, 289, 1351, 1352, 0, 290,
	609, 610, 611, 1353, 291, 292, 612, 1354, 1283, 1355,
	293, 294, 295, 296, 297, 298, 299, 0, 1356, 301,
	302, 303, 300, 304, 1357, 305, 0, 306, 307, 308,
	309, 310, 311, 1358, 312, 313, 314, 1141, 315, 316,
	1359, 1360, 1362, 1361, 1363, 1364, 1365, 317, 318, 319,
	320, 0, 321, 613, 614, 1366, 325, 322, 323, 1367,
	326, 324, 1368, 327, 328, 329, 1369, 1370, 330, 331,
	332, 1371, 333, 334, 1372, 335, 336, 337, 1373, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 1374, 262, 1375, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	1376, 356, 1377, 1378, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 1379, 368,
	621, 1380, 622, 369, 1381, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 1382, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	1383, 1143, 384, 626, 627, 1384, 628, 1385, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 1386, 398, 400,
	399, 1387, 401, 630, 1148, 402, 403, 1149, 1388, 404,
	0, 0, 0, 405, 406, 409, 1389, 1390, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 1391, 264, 1152, 448, 449, 1392, 631, 450,
	632, 452, 453, 1393, 0, 454, 0, 1394, 1395, 456,
	457, 458, 1396, 1397, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 1398, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 1399, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 1400, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 1401, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 1402, 532, 533,
	531, 534, 535, 536, 1403, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 1404, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 1405, 562, 563,
	0, 559, 551, 1406, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 1407, 572, 644, 645, 646, 647, 1408,
	581, 1409, 573, 574, 575, 648, 576, 649, 1410, 577,
	578, 579, 580, 0, 582, 583, 1411, 1412, 584, 585,
	586, 588, 589, 587, 590, 1413, 591, 1414, 0, 592,
	593, 594, 650, 651, 652, 1415, 596, 595, 597, 653,
	1416, 1417, 1418, 1419, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3889, 265, 267, 266, 268, 269, 270, 271,
	272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345, 603,
	1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 1350,
	608, 284, 285, 286, 287, 288, 289, 1351, 1352, 0,
	290, 609, 610, 611, 1353, 291, 292, 612, 1354, 1283,
	1355, 293, 294, 295, 296, 297, 298, 299, 0, 1356,
	301, 302, 303, 300, 304, 1357, 305, 0, 306, 307,
	308, 309, 310, 311, 1358, 312, 313, 314, 1141, 315,
	316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317, 318,
	319, 320, 0, 321, 613, 614, 1366, 325, 322, 323,
	1367, 326, 324, 1368, 327, 328, 329, 1369, 1370, 330,
	331, 332, 1371, 333, 334, 1372, 335, 336, 337, 1373,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 1374, 262, 1375, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 1376, 356, 1377, 1378, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1379,
	368, 621, 1380, 622, 369, 1381, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 1382, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1383, 1143, 384, 626, 627, 1384, 628, 1385, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1386, 398,
	400, 399, 1387, 401, 630, 1148, 402, 403, 1149, 1388,
	404, 0, 0, 0, 405, 406, 409, 1389, 1390, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1391, 264, 1152, 448, 449, 1392, 631,
	450, 632, 452, 453, 1393, 0, 454, 0, 1394, 1395,
	456, 457, 458, 1396, 1397, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1398, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 1399,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 1400, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1401, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1402, 532,
	533, 531, 534, 535, 536, 1403, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 1404, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 1405, 562,
	563, 0, 559, 551, 1406, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 1407, 572, 644, 645, 646, 647,
	1408, 581, 1409, 573, 574, 575, 648, 576, 649, 1410,
	577, 578, 579, 580, 0, 582, 583, 1411, 1412, 584,
	585, 586, 588, 589, 587, 590, 1413, 591, 1414, 0,
	592, 593, 594, 650, 651, 652, 1415, 596, 595, 597,
	653, 1416, 1417, 1418, 1419, 598, 599, 654, 600, 601,
	602, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4073, 265,
	267, 266, 268, 269, 270, 271, 272, 1341, 273, 274,
	1342, 1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 1350, 608, 284, 285, 286,
	287, 288, 289, 1351, 1352, 0, 290, 609, 610, 611,
	1353, 291, 292, 612, 1354, 1283, 1355, 293, 294, 295,
	296, 297, 298, 299, 0, 1356, 301, 302, 303, 300,
	304, 1357, 305, 0, 306, 307, 308, 309, 310, 311,
	1358, 312, 313, 314, 1141, 315, 316, 1359, 1360, 1362,
	1361, 1363, 1364, 1365, 317, 318, 319, 320, 0, 321,
	613, 614, 1366, 325, 322, 323, 1367, 326, 324, 1368,
	327, 328, 329, 1369, 1370, 330, 331, 332, 1371, 333,
	334, 1372, 335, 336, 337, 1373, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 1374, 262, 1375, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 1376, 356, 1377,
	1378, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 1379, 368, 621, 1380, 622,
	369, 1381, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 1144, 375, 376, 1382, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 1383, 1143, 384,
	626, 627, 1384, 628, 1385, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 1386, 398, 400, 399, 1387, 401,
	630, 1148, 402, 403, 1149, 1388, 404, 0, 0, 0,
	405, 406, 409, 1389, 1390, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1391,
	264, 1152, 448, 449, 1392, 631, 450, 632, 452, 453,
	1393, 0, 454, 0, 1394, 1395, 456, 457, 458, 1396,
	1397, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 1398,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 1399, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 1400, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 1401, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 1402, 532, 533, 531, 534, 535,
	536, 1403, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 1404, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 1405, 562, 563, 0, 559, 551,
	1406, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	1407, 572, 644, 645, 646, 647, 1408, 581, 1409, 573,
	574, 575, 648, 576, 649, 1410, 577, 578, 579, 580,
	0, 582, 583, 1411, 1412, 584, 585, 586, 588, 589,
	587, 590, 1413, 591, 1414, 0, 592, 593, 594, 650,
	651, 652, 1415, 596, 595, 597, 653, 1416, 1417, 1418,
	1419, 598, 599, 654, 600, 601, 602, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3961, 265, 267, 266, 268, 269,
	270, 271, 272, 1341, 273, 274, 1342, 1343, 1344, 0,
	1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 1350, 608, 284, 285, 286, 287, 288, 289, 1351,
	1352, 0, 290, 609, 610, 611, 1353, 291, 292, 612,
	1354, 1283, 1355, 293, 294, 295, 296, 297, 298, 299,
	0, 1356, 301, 302, 303, 300, 304, 1357, 305, 0,
	306, 307, 308, 309, 310, 311, 1358, 312, 313, 314,
	1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364, 1365,
	317, 318, 319, 320, 0, 321, 613, 614, 1366, 325,
	322, 323, 1367, 326, 324, 1368, 327, 328, 329, 1369,
	1370, 330, 331, 332, 1371, 333, 334, 1372, 335, 336,
	337, 1373, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 1374, 262,
	1375, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 1376, 356, 1377, 1378, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 1379, 368, 621, 1380, 622, 369, 1381, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	1382, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 1383, 1143, 384, 626, 627, 1384, 628,
	1385, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	1386, 398, 400, 399, 1387, 401, 630, 1148, 402, 403,
	1149, 1388, 404, 0, 0, 0, 405, 406, 409, 1389,
	1390, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1391, 264, 1152, 448, 449,
	1392, 631, 450, 632, 452, 453, 1393, 0, 454, 0,
	1394, 1395, 456, 457, 458, 1396, 1397, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 1398, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 1399, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 1400, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 1401, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	1402, 532, 533, 531, 534, 535, 536, 1403, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 1404, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	1405, 562, 563, 0, 559, 551, 1406, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 1407, 572, 644, 645,
	646, 647, 1408, 581, 1409, 573, 574, 575, 648, 576,
	649, 1410, 577, 578, 579, 580, 0, 582, 583, 1411,
	1412, 584, 585, 586, 588, 589, 587, 590, 1413, 591,
	1414, 0, 592, 593, 594, 650, 651, 652, 1415, 596,
	595, 597, 653, 1416, 1417, 1418, 1419, 598, 599, 654,
	600, 601, 602, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3819, 265, 267, 266, 268, 269, 270, 271, 272, 1341,
	273, 274, 1342, 1343, 1344, 0, 1345, 603, 1346, 1347,
	1348, 1349, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 1350, 608, 284,
	285, 286, 287, 288, 289, 1351, 1352, 0, 290, 609,
	610, 611, 1353, 291, 292, 612, 1354, 1283, 1355, 293,
	294, 295, 296, 297, 298, 299, 0, 1356, 301, 302,
	303, 300, 304, 1357, 305, 0, 306, 307, 308, 309,
	310, 311, 1358, 312, 313, 314, 1141, 315, 316, 1359,
	1360, 1362, 1361, 1363, 1364, 1365, 317, 318, 319, 320,
	0, 321, 613, 614, 1366, 325, 322, 323, 1367, 326,
	324, 1368, 327, 328, 329, 1369, 1370, 330, 331, 332,
	1371, 333, 334, 1372, 335, 336, 337, 1373, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 1374, 262, 1375, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 1376,
	356, 1377, 1378, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 1379, 368, 621,
	1380, 622, 369, 1381, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 1144, 375, 376, 1382, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 1383,
	1143, 384, 626, 627, 1384, 628, 1385, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 1386, 398, 400, 399,
	1387, 401, 630, 1148, 402, 403, 1149, 1388, 404, 0,
	0, 0, 405, 406, 409, 1389, 1390, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1391, 264, 1152, 448, 449, 1392, 631, 450, 632,
	452, 453, 1393, 0, 454, 0, 1394, 1395, 456, 457,
	458, 1396, 1397, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 1398, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 1399, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 1400, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 1401, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 1402, 532, 533, 531,
	534, 535, 536, 1403, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	1404, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 1405, 562, 563, 0,
	559, 551, 1406, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 1407, 572, 644, 645, 646, 647, 1408, 581,
	1409, 573, 574, 575, 648, 576, 649, 1410, 577, 578,
	579, 580, 0, 582, 583, 1411, 1412, 584, 585, 586,
	588, 589, 587, 590, 1413, 591, 1414, 0, 592, 593,
	594, 650, 651, 652, 1415, 596, 595, 597, 653, 1416,
	1417, 1418, 1419, 598, 599, 654, 600, 601, 602, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3537, 265, 267, 266,
	268, 269, 270, 271, 272, 1341, 273, 274, 1342, 1343,
	1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 1350, 608, 284, 285, 286, 287, 288,
	289, 1351, 1352, 0, 290, 609, 610, 611, 1353, 291,
	292, 612, 1354, 1283, 1355, 293, 294, 295, 296, 297,
	298, 299, 0, 1356, 301, 302, 303, 300, 304, 1357,
	305, 0, 306, 307, 308, 309, 310, 311, 1358, 312,
	313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361, 1363,
	1364, 1365, 317, 318, 319, 320, 0, 321, 613, 614,
	1366, 325, 322, 323, 1367, 326, 324, 1368, 327, 328,
	329, 1369, 1370, 330, 331, 332, 1371, 333, 334, 1372,
	335, 336, 337, 1373, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	1374, 262, 1375, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 1376, 356, 1377, 1378, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 1379, 368, 621, 1380, 622, 369, 1381,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 1382, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 1383, 1143, 384, 626, 627,
	1384, 628, 1385, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 1386, 398, 400, 399, 1387, 401, 630, 1148,
	402, 403, 1149, 1388, 404, 0, 0, 0, 405, 406,
	409, 1389, 1390, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1391, 264, 1152,
	448, 449, 1392, 631, 450, 632, 452, 453, 1393, 0,
	454, 0, 1394, 1395, 456, 457, 458, 1396, 1397, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 1398, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 1399, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 1400,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 1401,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 1402, 532, 533, 531, 534, 535, 536, 1403,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 1404, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 1405, 562, 563, 0, 559, 551, 1406, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 1407, 572,
	644, 645, 646, 647, 1408, 581, 1409, 573, 574, 575,
	648, 576, 649, 1410, 577, 578, 579, 580, 0, 582,
	583, 1411, 1412, 584, 585, 586, 588, 589, 587, 590,
	1413, 591, 1414, 0, 592, 593, 594, 650, 651, 652,
	1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419, 598,
	599, 654, 600, 601, 602, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3370, 265, 267, 266, 268, 269, 270, 271,
	272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345, 603,
	1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 1350,
	608, 284, 285, 286, 287, 288, 289, 1351, 1352, 0,
	290, 609, 610, 611, 1353, 291, 292, 612, 1354, 1283,
	1355, 293, 294, 295, 296, 297, 298, 299, 0, 1356,
	301, 302, 303, 300, 304, 1357, 305, 0, 306, 307,
	308, 309, 310, 311, 1358, 312, 313, 314, 1141, 315,
	316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317, 318,
	319, 320, 0, 321, 613, 614, 1366, 325, 322, 323,
	1367, 326, 324, 1368, 327, 328, 329, 1369, 1370, 330,
	331, 332, 1371, 333, 334, 1372, 335, 336, 337, 1373,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 1374, 262, 1375, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 1376, 356, 1377, 1378, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1379,
	368, 621, 1380, 622, 369, 1381, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 1382, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1383, 1143, 384, 626, 627, 1384, 628, 1385, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1386, 398,
	400, 399, 1387, 401, 630, 1148, 402, 403, 1149, 1388,
	404, 0, 0, 0, 405, 406, 409, 1389, 1390, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1391, 264, 1152, 448, 449, 1392, 631,
	450, 632, 452, 453, 1393, 0, 454, 0, 1394, 1395,
	456, 457, 458, 1396, 1397, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1398, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 1399,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 1400, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1401, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1402, 532,
	533, 531, 534, 535, 536, 1403, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 1404, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 1405, 562,
	563, 0, 559, 551, 1406, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 1407, 572, 644, 645, 646, 647,
	1408, 581, 1409, 573, 574, 575, 648, 576, 649, 1410,
	577, 578, 579, 580, 0, 582, 583, 1411, 1412, 584,
	585, 586, 588, 589, 587, 590, 1413, 591, 1414, 0,
	592, 593, 594, 650, 651, 652, 1415, 596, 595, 597,
	653, 1416, 1417, 1418, 1419, 598, 599, 654, 600, 601,
	602, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2446, 265,
	267, 266, 268, 269, 270, 271, 272, 1341, 273, 274,
	1342, 1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 1350, 608, 284, 285, 286,
	287, 288, 289, 1351, 1352, 0, 290, 609, 610, 611,
	1353, 291, 292, 612, 1354, 1283, 1355, 293, 294, 295,
	296, 297, 298, 299, 0, 1356, 301, 302, 303, 300,
	304, 1357, 305, 0, 306, 307, 308, 309, 310, 311,
	1358, 312, 313, 314, 1141, 315, 316, 1359, 1360, 1362,
	1361, 1363, 1364, 1365, 317, 318, 319, 320, 0, 321,
	613, 614, 1366, 325, 322, 323, 1367, 326, 324, 1368,
	327, 328, 329, 1369, 1370, 330, 331, 332, 1371, 333,
	334, 1372, 335, 336, 337, 1373, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 1374, 262, 1375, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 1376, 356, 1377,
	1378, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 1379, 368, 621, 1380, 622,
	369, 1381, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 1144, 375, 376, 1382, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 1383, 1143, 384,
	626, 627, 1384, 628, 1385, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 1386, 398, 400, 399, 1387, 401,
	630, 1148, 402, 403, 1149, 1388, 404, 0, 0, 0,
	405, 406, 409, 1389, 1390, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1391,
	264, 1152, 448, 449, 1392, 631, 450, 632, 452, 453,
	1393, 0, 454, 0, 1394, 1395, 456, 457, 458, 1396,
	1397, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 1398,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 1399, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 1400, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 1401, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 1402, 532, 533, 531, 534, 535,
	536, 1403, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 1404, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 1405, 562, 563, 0, 559, 551,
	1406, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	1407, 572, 644, 645, 646, 647, 1408, 581, 1409, 573,
	574, 575, 648, 576, 649, 1410, 577, 578, 579, 580,
	0, 582, 583, 1411, 1412, 584, 585, 586, 588, 589,
	587, 590, 1413, 591, 1414, 0, 592, 593, 594, 650,
	651, 652, 1415, 596, 595, 597, 653, 1416, 1417, 1418,
	1419, 598, 599, 654, 600, 601, 602, 1431, 0, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2140, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 1341, 273, 274, 1342, 1343, 1344,
	0, 1345, 603, 1346, 1347, 1348, 1349, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 1350, 608, 284, 285, 286, 287, 288, 289,
	1351, 1352, 0, 290, 609, 610, 611, 1353, 291, 292,
	612, 1354, 1283, 1355, 293, 294, 295, 296, 297, 298,
	299, 0, 1356, 301, 302, 303, 300, 304, 1357, 305,
	0, 306, 307, 308, 309, 310, 311, 1358, 312, 313,
	314, 1141, 315, 316, 1359, 1360, 1362, 1361, 1363, 1364,
	1365, 317, 318, 319, 320, 0, 321, 613, 614, 1366,
	325, 322, 323, 1367, 326, 324, 1368, 327, 328, 329,
	1369, 1370, 330, 331, 332, 1371, 333, 334, 1372, 335,
	336, 337, 1373, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 1374,
	262, 1375, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 1376, 356, 1377, 1378, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 1379, 368, 621, 1380, 622, 369, 1381, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 1144, 375,
	376, 1382, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 1383, 1143, 384, 626, 627, 1384,
	628, 1385, 386, 387, 1145, 629, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1386, 398, 400, 399, 1387, 401, 630, 1148, 402,
	403, 1149, 1388, 404, 0, 0, 0, 405, 406, 409,
	1389, 1390, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 1391, 264, 1152, 448,
	449, 1392, 631, 450, 632, 452, 453, 1393, 0, 454,
	0, 1394, 1395, 456, 457, 458, 1396, 1397, 459, 460,
	633, 1153, 461, 1154, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 1398, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 1399, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 1400, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 1401, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 1402, 532, 533, 531, 534, 535, 536, 1403, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 1404, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 1405, 562, 563, 0, 559, 551, 1406, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 1407, 572, 644,
	645, 646, 647, 1408, 581, 1409, 573, 574, 575, 648,
	576, 649, 1410, 577, 578, 579, 580, 0, 582, 583,
	1411, 1412, 584, 585, 586, 588, 589, 587, 590, 1413,
	591, 1414, 0, 592, 593, 594, 650, 651, 652, 1415,
	596, 595, 597, 653, 1416, 1417, 1418, 1419, 598, 599,
	654, 600, 601, 602, 1333, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 1341, 273, 274, 1342, 1343, 1344, 0, 1345, 603,
	1346, 1347, 1348, 1349, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 1350,
	608, 284, 285, 286, 287, 288, 289, 1351, 1352, 0,
	290, 609, 610, 611, 1353, 291, 292, 612, 1354, 1283,
	1355, 293, 294, 295, 296, 297, 298, 299, 0, 1356,
	301, 302, 303, 300, 304, 1357, 305, 0, 306, 307,
	308, 309, 310, 311, 1358, 312, 313, 314, 1141, 315,
	316, 1359, 1360, 1362, 1361, 1363, 1364, 1365, 317, 318,
	319, 320, 0, 321, 613, 614, 1366, 325, 322, 323,
	1367, 326, 324, 1368, 327, 328, 329, 1369, 1370, 330,
	331, 332, 1371, 333, 334, 1372, 335, 336, 337, 1373,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 1374, 262, 1375, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 1376, 356, 1377, 1378, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 1379,
	368, 621, 1380, 622, 369, 1381, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 1382, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 1383, 1143, 384, 626, 627, 1384, 628, 1385, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1386, 398,
	400, 399, 1387, 401, 630, 1148, 402, 403, 1149, 1388,
	404, 0, 0, 0, 405, 406, 409, 1389, 1390, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1391, 264, 1152, 448, 449, 1392, 631,
	450, 632, 452, 453, 1393, 0, 454, 0, 1394, 1395,
	456, 457, 458, 1396, 1397, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 1398, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 1399,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 1400, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 1401, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 1402, 532,
	533, 531, 534, 535, 536, 1403, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 1404, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 1405, 562,
	563, 0, 559, 551, 1406, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 1407, 572, 644, 645, 646, 647,
	1408, 581, 1409, 573, 574, 575, 648, 576, 649, 1410,
	577, 578, 579, 580, 0, 582, 583, 1411, 1412, 584,
	585, 586, 588, 589, 587, 590, 1413, 591, 1414, 0,
	592, 593, 594, 650, 651, 652, 1415, 596, 595, 597,
	653, 1416, 1417, 1418, 1419, 598, 599, 654, 600, 601,
	602, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1341, 273, 274, 1342,
	1343, 1344, 0, 1345, 603, 1346, 1347, 1348, 1349, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 1350, 608, 284, 285, 286, 287,
	288, 289, 1351, 1352, 0, 290, 609, 610, 611, 1353,
	291, 292, 612, 1354, 1283, 1355, 293, 294, 295, 296,
	297, 298, 299, 0, 1356, 301, 302, 303, 300, 304,
	1357, 305, 0, 306, 307, 308, 309, 310, 311, 1358,
	312, 313, 314, 1141, 315, 316, 1359, 1360, 1362, 1361,
	1363, 1364, 1365, 317, 318, 319, 320, 0, 321, 613,
	614, 1366, 325, 322, 323, 1367, 326, 324, 1368, 327,
	328, 329, 1369, 1370, 330, 331, 332, 1371, 333, 334,
	1372, 335, 336, 337, 1373, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 1374, 262, 1375, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 1376, 356, 1377, 1378,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 1379, 368, 621, 1380, 622, 369,
	1381, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 1382, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 1383, 1143, 384, 626,
	627, 1384, 628, 1385, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1386, 398, 400, 399, 1387, 401, 630,
	1148, 402, 403, 1149, 1388, 404, 0, 0, 0, 405,
	406, 409, 1389, 1390, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 1391, 264,
	1152, 448, 449, 1392, 631, 450, 632, 452, 453, 1393,
	0, 454, 0, 1394, 1395, 456, 457, 458, 1396, 1397,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 1398, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 1399, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	1400, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	1401, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 1402, 532, 533, 531, 534, 535, 536,
	1403, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 1404, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 1405, 562, 563, 0, 559, 551, 1406,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 1407,
	572, 644, 645, 646, 647, 1408, 581, 1409, 573, 574,
	575, 648, 576, 649, 1410, 577, 578, 579, 580, 0,
	582, 583, 1411, 1412, 584, 585, 586, 588, 589, 587,
	590, 1413, 591, 1414, 0, 592, 593, 594, 650, 651,
	652, 1415, 596, 595, 597, 653, 1416, 1417, 1418, 1419,
	598, 599, 654, 600, 601, 602, 2421, 0, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 2418, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 2419,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 2417, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	2420, 0, 0, 0, 0, 0, 0, 1060, 2416, 0,
	1022, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 224, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	226, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 1549,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	218, 598, 599, 654, 600, 601, 602, 1035, 0, 219,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 1792, 1790, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 224, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 226, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 1549, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 218, 598, 599, 654, 600, 601, 602, 1035,
	0, 219, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1792, 3018, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 224, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 226, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 1549, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 218, 598, 599, 654, 600, 601,
	602, 1035, 0, 219, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1792, 1790, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 2549, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 2554, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 2550, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 2551, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	2466, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 2464, 0, 2463, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 2461, 0, 2460, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	2458, 0, 2457, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 2455, 0, 1642, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 1641, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	1025, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 1039, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 1060, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	4388, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 1039, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 2335, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 2334,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	1039, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 4149, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 1039, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	3782, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1860, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 0, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 3515, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1860, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	0, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	2554, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 1060, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 1790, 0, 2559, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	2557, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 2545, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 2534, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 2532, 1058, 2523, 2530, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 2526, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 2527, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 2528, 419,
	2525, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 2529, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 2524, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 2520, 1058, 2523, 2530,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 2526, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 2527, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 2528, 419, 2525, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 2529,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 2524, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 1798, 0, 1060,
	0, 0, 0, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 2314,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 1647, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	1579, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 1574, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 1565, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 1560, 1058, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 1473, 1058, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1472, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	1467, 1058, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1466, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 0, 0,
	0, 1060, 0, 0, 1460, 1058, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 1285, 1058,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 1060, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 4433, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 4432, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1029, 1030, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 4431, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 1033,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	4433, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 1037, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 1034, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 1032, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 4432, 583, 0, 1038, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1035, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 0, 0, 0, 1029, 1030, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 1033, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 4092, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 1037, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 4093, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 1034, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 4091, 1044, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 1032, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	1038, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 1035, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 1029, 1030,
	1076, 1048, 1049, 1050, 2985, 2986, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 1145, 1103, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 1152,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 582,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1035, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	1029, 1030, 1076, 1048, 1049, 1050, 2983, 2984, 1059, 1060,
	0, 0, 0, 1058, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1064, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 1113,
	0, 282, 1120, 283, 1119, 0, 1130, 284, 285, 286,
	287, 288, 289, 1066, 1099, 1033, 290, 1160, 1161, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 1123, 321,
	1117, 1116, 1037, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 1108, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 1043, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 1055, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 1115, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 1128, 1129, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 1065,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	1110, 1111, 0, 1071, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 1034,
	264, 1152, 448, 449, 1056, 1104, 450, 1118, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 1114, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	1044, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 1112, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 1159, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 1032, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 1124, 1125, 1126, 1127, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 1054, 577, 578, 579, 580,
	0, 582, 583, 0, 1038, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	1121, 1158, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1035, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1076, 1048, 1049, 1050, 1046, 1047,
	1059, 1060, 0, 0, 0, 1058, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 1100, 1064, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 1113, 0, 282, 1120, 283, 1119, 0, 1130, 284,
	285, 286, 287, 288, 289, 1066, 1099, 1033, 290, 1160,
	1161, 611, 0, 291, 292, 1106, 0, 1087, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 1090,
	1088, 1089, 1096, 1092, 1091, 1095, 317, 318, 319, 320,
	1123, 321, 1117, 1116, 1037, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 1108, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	1043, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 1131, 1132, 351, 1055, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 1115, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 1128, 1129, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 1138,
	0, 1065, 369, 0, 370, 371, 372, 373, 374, 1101,
	1102, 1105, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	1143, 384, 1110, 1111, 0, 1071, 0, 386, 387, 1145,
	1103, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 1139, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 1094, 1093, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 1034, 264, 1152, 448, 449, 1056, 1104, 450, 1118,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 1133,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 1134, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 1114, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 1044, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 1097, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 1112, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 1159, 554,
	555, 556, 557, 1135, 560, 561, 0, 562, 563, 1032,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 1124, 1125, 1126, 1127, 0, 581,
	0, 573, 574, 575, 1136, 576, 1137, 1054, 577, 578,
	579, 580, 0, 582, 583, 0, 1038, 584, 585, 586,
	588, 589, 587, 590, 1098, 591, 0, 0, 592, 593,
	594, 650, 1121, 1158, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 1035,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 2322, 2323, 1076, 1048, 1049, 1050,
	1046, 1047, 1059, 1060, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 1100,
	1064, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 1113, 0, 282, 1120, 283, 1119, 0,
	1130, 284, 285, 286, 287, 288, 289, 1066, 1099, 0,
	290, 1160, 1161, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 1123, 321, 1117, 1116, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	1108, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 1043, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 1055, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 1115, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 1128, 1129,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 1065, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 1110, 1111, 0, 1071, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 264, 1152, 448, 449, 1056, 1104,
	450, 1118, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	1114, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 1044, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 1112,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	1159, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 1124, 1125, 1126, 1127,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 1054,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 1121, 1158, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 2542,
	0, 0, 0, 0, 0, 0, 2540, 2541, 1076, 1048,
	1049, 1050, 1046, 1047, 1059, 1060, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 1100, 1064, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 1113, 0, 282, 1120, 283,
	1119, 0, 1130, 284, 285, 286, 287, 288, 289, 1066,
	1099, 0, 290, 1160, 1161, 611, 0, 291, 292, 1106,
	0, 1087, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095,
	317, 318, 319, 320, 1123, 321, 1117, 1116, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 1043, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 1131, 1132, 351, 1055, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 1115, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1128, 1129, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 1138, 0, 1065, 369, 0, 370, 371,
	372, 373, 374, 1101, 1102, 1105, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 1143, 384, 1110, 1111, 0, 1071,
	0, 386, 387, 1145, 1103, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 1139, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 1094,
	1093, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 264, 1152, 448, 449,
	1056, 1104, 450, 1118, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 1133, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 1134, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1114, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 2978, 2979, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1097, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1112, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1159, 554, 555, 556, 557, 1135, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1124, 1125,
	1126, 1127, 0, 581, 0, 573, 574, 575, 1136, 576,
	1137, 1054, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 1098, 591,
	0, 0, 592, 593, 594, 650, 1121, 1158, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 2039,
	1076, 1048, 1049, 1050, 1046, 1047, 1059, 1060, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 1100, 1064, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 0, 1113, 0, 282,
	1120, 283, 1119, 0, 1130, 284, 285, 286, 287, 288,
	289, 1066, 1099, 1033, 290, 1160, 1161, 611, 0, 291,
	292, 1106, 0, 1087, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 4433, 1090, 1088, 1089, 1096, 1092,
	1091, 1095, 317, 318, 319, 320, 1123, 321, 1117, 1116,
	1037, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 1108, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 1043, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 1131, 1132, 351,
	1055, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	1115, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 1128, 1129, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 1138, 0, 1065, 369, 0,
	370, 371, 372, 373, 374, 1101, 1102, 1105, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 1143, 384, 1110, 1111,
	0, 1071, 0, 386, 387, 0, 1103, 0, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 1139, 1148,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 1094, 1093, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 1034, 264, 0,
	448, 449, 1056, 1104, 450, 1118, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 1133, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 1134, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 1114, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 1044, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 1097,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 1112, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 1159, 554, 555, 556, 557, 1135,
	560, 561, 0, 562, 563, 1032, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	1124, 1125, 1126, 1127, 0, 581, 0, 573, 574, 575,
	1136, 576, 1137, 1054, 577, 578, 579, 580, 0, 4432,
	583, 0, 1038, 584, 585, 586, 588, 589, 587, 590,
	1098, 591, 0, 0, 592, 593, 594, 650, 1121, 1158,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1022, 0, 1198, 0, 0,
	1029, 1030, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 0, 1058, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 1099,
	0, 290, 609, 610, 611, 0, 291, 292, 1106, 0,
	1087, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 1131, 1132, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 1138, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 1101, 1102, 1105, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 1103, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 1184,
	398, 400, 399, 0, 401, 1139, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 1094, 1093,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 264, 1152, 448, 449, 0,
	1104, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	1190, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 1133, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 1134, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 1192, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 224,
	532, 533, 531, 534, 535, 536, 1097, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 1135, 560, 561, 0,
	562, 563, 0, 559, 551, 226, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 1136, 576, 1137,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 1098, 591, 0,
	0, 592, 593, 594, 1549, 651, 652, 0, 596, 595,
	597, 653, 1198, 0, 0, 218, 598, 599, 654, 600,
	601, 602, 0, 0, 219, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 1188, 1100, 1884, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 1099, 0, 290, 609, 610, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 1184, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	264, 1152, 448, 449, 0, 1104, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 1190, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 1192, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 224, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 0, 559, 551,
	226, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 1549,
	651, 652, 0, 596, 595, 597, 653, 3162, 0, 1198,
	218, 598, 599, 654, 600, 601, 602, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 1188,
	0, 1884, 1100, 0, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 1099, 0, 290, 609, 610, 611, 0, 291, 292,
	1106, 0, 1087, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 1090, 1088, 1089, 1096, 1092, 1091,
	1095, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 1131, 1132, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 1138, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1101, 1102, 1105, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 1143, 384, 626, 627, 0,
	628, 0, 386, 387, 1145, 1103, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 1184, 398, 400, 399, 0, 401, 1139, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	1094, 1093, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 0, 264, 1152, 448,
	449, 0, 1104, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 1190, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 1133, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 1134, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 1192, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 1097, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 1135, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 1136,
	576, 1137, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 1098,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1180, 0, 1198, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 1188, 0, 1186, 1100,
	0, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 1099, 0,
	290, 609, 610, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 1184, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 264, 1152, 448, 449, 0, 1104,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 1190,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 1192, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1198, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 1188, 1100, 1186, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 1099, 0, 290, 609, 610, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 1184, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 264,
	1152, 448, 449, 0, 1104, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 1190, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	1192, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1198, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 1188, 1100,
	1186, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 1099, 0,
	290, 609, 610, 611, 0, 291, 292, 1106, 0, 1087,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 1090, 1088, 1089, 1096, 1092, 1091, 1095, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 1131, 1132, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 1138, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1101, 1102, 1105, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 1103, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 1139, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 1094, 1093, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 264, 1152, 448, 449, 0, 1104,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 1133, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 1134, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 1097, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 1135, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 1136, 576, 1137, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 1098, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1198, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 1100, 3937, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 1099, 0, 290, 609, 610, 611, 0,
	291, 292, 1106, 0, 1087, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 1090, 1088, 1089, 1096,
	1092, 1091, 1095, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 1131, 1132,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 1138, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1101, 1102, 1105, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 1103, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 1139,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 1094, 1093, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 264,
	1152, 448, 449, 0, 1104, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 1133, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 1134,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	1192, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1097, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	1135, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 1136, 576, 1137, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 1098, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1022, 0, 1278, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	1783, 603, 0, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 1283, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1143, 384, 626, 627, 0, 628,
	0, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 0, 1152, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	224, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 226, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 1549, 651, 652, 0, 596,
	595, 597, 653, 1546, 0, 1278, 218, 598, 599, 654,
	600, 601, 602, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 183, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 224, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 226, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 1549, 651, 652, 0, 596, 595, 597, 653,
	0, 0, 0, 218, 598, 599, 654, 600, 601, 602,
	0, 0, 219, 0, 0, 0, 0, 0, 1278, 1277,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 1283, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1143, 384, 626, 627, 0, 628,
	0, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 0, 1152, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 1277, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1571, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 1283, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 0,
	1152, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 1278, 2132, 0, 0, 0, 0,
	2133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3435, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 1140, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 1283, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 1141, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 1142, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 1144, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	1143, 384, 626, 627, 0, 628, 0, 386, 387, 1145,
	629, 1146, 388, 389, 390, 1147, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 2131, 400, 399,
	0, 401, 630, 1148, 402, 403, 1149, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 1150, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 1151,
	438, 0, 0, 1152, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 1153, 461, 1154, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 1155, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	1156, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 1277, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1571, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 1140, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	1283, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 1141,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 1142, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 1144, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 1143, 384, 626, 627, 0, 628, 0,
	386, 387, 1145, 629, 1146, 388, 389, 390, 1147, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 1148, 402, 403, 1149,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 1150,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 1151, 438, 0, 0, 1152, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 1153,
	461, 1154, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	1155, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 1156, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1198, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 1100, 1555, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 1099, 0, 290, 609, 610, 611,
	0, 291, 292, 1106, 0, 1087, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 1090, 1088, 1089,
	1096, 1092, 1091, 1095, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 1131,
	1132, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 1138, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1101, 1102, 1105,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 1103, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	1139, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 1094, 1093, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	264, 1152, 448, 449, 0, 1104, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 1133, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	1134, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 1097, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 1135, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 1136, 576, 1137, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 1098, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1022, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 224, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 226, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 1549, 651, 652, 0,
	596, 595, 597, 653, 259, 0, 0, 218, 598, 599,
	654, 600, 601, 602, 0, 0, 219, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 183, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 259,
	2893, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 1898, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 259, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 4588, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 259, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 3386, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 259, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 1543, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 259,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 2881, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 259, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 3540, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 865,
	0, 773, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 2208, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 780, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 863,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 778,
	564, 565, 566, 567, 568, 779, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 771, 0, 773, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 783, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 780, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 778, 564, 565, 566,
	567, 568, 779, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 1935, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	783, 0, 0, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 0, 1941, 0, 282, 1931, 283,
	1947, 0, 1954, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 1957, 1958, 0, 0, 291, 292, 0,
	0, 1283, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 1123, 321, 1945, 1944, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 1108, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 0, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 1943, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	1952, 1953, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 0, 0, 0, 369, 0, 370, 371,
	372, 373, 374, 0, 0, 0, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1143, 384, 1938, 1939, 0, 1934,
	0, 386, 387, 1145, 0, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 0, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 0, 1152, 448, 449,
	0, 0, 450, 1946, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 0,
	1153, 461, 1154, 0, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 1928, 474,
	475, 476, 1929, 477, 478, 479, 0, 480, 0, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 1942, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 0, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 1940, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 1956, 554, 555, 556, 557, 0, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 1948, 1949,
	1950, 1951, 0, 581, 0, 573, 574, 575, 0, 576,
	0, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 0, 1932, 1955, 0, 596,
	595, 597, 0, 0, 773, 0, 0, 598, 599, 0,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 1922, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 780, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 778, 564, 565, 566, 567, 568, 779, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 773, 596, 595, 597, 653, 0,
	0, 0, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 783, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 780, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 623,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 2250, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 2251, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 778, 564, 565, 566, 567, 568, 779, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	2252, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 2004,
	0, 1278, 1971, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 783, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 1140, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 1283, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 1141, 315, 316, 0, 0, 0, 0,
	0, 0, 1968, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	1142, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	1144, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 1143, 384, 626,
	627, 0, 628, 0, 386, 387, 1145, 629, 1146, 388,
	389, 390, 1147, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	1148, 402, 403, 1149, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 1150, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 1151, 438, 0, 0,
	1152, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 1153, 461, 1154, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 1155, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	1969, 537, 538, 521, 522, 539, 540, 1156, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 1965, 0, 1278, 1971,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 1140, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 1283, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	1141, 315, 316, 0, 0, 0, 0, 0, 0, 1968,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 1142, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 1144, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 1143, 384, 626, 627, 0, 628,
	0, 386, 387, 1145, 629, 1146, 388, 389, 390, 1147,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 1148, 402, 403,
	1149, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	1150, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 1151, 438, 0, 0, 1152, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	1153, 461, 1154, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 1155, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 1969, 537, 538,
	521, 522, 539, 540, 1156, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 773, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 780, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 1961, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 778, 564, 565, 566,
	567, 568, 779, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 1960, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 773, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	783, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 780, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 1914, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 778, 564, 565, 566,
	567, 568, 779, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 1913, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 0, 0, 1278, 1971, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	783, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 1968, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 1969, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1278, 1277, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 3727, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1278, 1277, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 3358, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 259, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	1599, 0, 1278, 1277, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 783, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 1140, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 1283, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 1141, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 1598,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 1142, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 1144, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 1143, 384,
	626, 627, 0, 628, 0, 386, 387, 1145, 629, 1146,
	388, 389, 390, 1147, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 1148, 402, 403, 1149, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 1150, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 1151, 438, 0,
	0, 1152, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 1153, 461, 1154, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 1597, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 1155, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	1596, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 1156, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 0, 0, 0,
	0, 598, 599, 654, 600, 601, 602, 1517, 0, 1278,
	1277, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 1140,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 1283, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 1141, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 1142, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1516, 624, 625, 451, 1144, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 1143, 384, 626, 627, 0,
	628, 0, 386, 387, 1145, 629, 1146, 388, 389, 390,
	1147, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 1148, 402,
	403, 1149, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 1150, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 1151, 438, 0, 0, 1152, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 1153, 461, 1154, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 1155, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 1156, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 0, 0, 0, 0, 598, 599,
	654, 600, 601, 602, 1478, 0, 1278, 1277, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 1140, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 1283,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 1141, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 1142, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 1144, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 1143, 384, 626, 627, 0, 628, 0, 386,
	387, 1145, 629, 1146, 388, 389, 390, 1147, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 1148, 402, 403, 1149, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 1150, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 1151, 438, 0, 0, 1152, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 1153, 461,
	1154, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 1155,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 1156, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1446, 0, 1278, 1277, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 1140, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 1283, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 1141, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 1142, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1445, 624,
	625, 451, 1144, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 1143,
	384, 626, 627, 0, 628, 0, 386, 387, 1145, 629,
	1146, 388, 389, 390, 1147, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 1148, 402, 403, 1149, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 1150, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 1151, 438,
	0, 0, 1152, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 1153, 461, 1154, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 1155, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 1156,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 0, 0,
	0, 0, 598, 599, 654, 600, 601, 602, 1272, 0,
	1278, 1277, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 1271, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 0, 0, 0, 0, 598,
	599, 654, 600, 601, 602, 1278, 1277, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1278, 1971, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	1140, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 1283, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 1141, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	2011, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 1142,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 1144,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 1143, 384, 626, 627,
	0, 628, 0, 386, 387, 1145, 629, 1146, 388, 389,
	390, 1147, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 1148,
	402, 403, 1149, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 1150, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 1151, 438, 0, 0, 1152,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 1153, 461, 1154, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 1155, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 1156, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 1278, 1277, 0, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 1278, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 1140, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 1283, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 1141, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 1142, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 1144, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 1143, 384, 626, 627, 0, 628, 0, 386, 387,
	1145, 629, 1146, 388, 389, 390, 1147, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 1148, 402, 403, 1149, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 1150, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	1151, 438, 0, 0, 1152, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 1153, 461, 1154,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 1155, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 1156, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 259, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 2708, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 2705, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 2712,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 2906, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 2711, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 2903, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 2905,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 2902, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 2710, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 2904, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 259, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 2708, 291, 292, 612, 0, 0, 2702,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 2705, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 2712,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 2711, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	2701, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 2710, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 2709, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1669, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 1672, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	1670, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 1671, 595, 597, 653, 1424, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1426, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 1190, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1421, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1423, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 1190,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1329, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1331, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 1190, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 686, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 685, 270, 271, 272, 675, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 678, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 679, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 680, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 674, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 675, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 678, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	679, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 680,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	1190, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 259, 596, 595,
	597, 653, 0, 0, 0, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 3315, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 2851, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 2850,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 2222,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 2165,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 2171, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 2170, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 2158, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	2160, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 259, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 262, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	2128, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 263, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 264, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 1190, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1521, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 262, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1520, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 263, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	264, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1441, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	262, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 263,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 264, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1434, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 262, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1436, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 263, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 264, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1262, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 262, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1261, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 263, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 264, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 1252, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 262, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 1251, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	263, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 264, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 1249, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 262, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 1248, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 263, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 264, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1244, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 262, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1243,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 263, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 264, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 656,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 262, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 263, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 264,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 250, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 3657, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 3658, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 3660, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 3661, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 3656, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 678, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 679, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	680, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 2259, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 2257, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 2255, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 2177, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1990, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 259, 596,
	595, 597, 653, 0, 0, 0, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 262,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 1984, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 263, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 264, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 852, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 851, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 850, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 259, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 2906, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 3997, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 259, 596, 595, 597, 653,
	0, 0, 0, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	3907, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 3909, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	743, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 1299, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 1297,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 744, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 740,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 1300,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 739, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 743, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 1299,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 1297, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	744, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 740, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 1300, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 739,
	645, 646, 647, 0, 581, 0, 573, 1298, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 665, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 664, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 663, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 259, 2893, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 259, 4007, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 4264,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 4259,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 3698, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 2594, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 259, 2893, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 2890, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 2232, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 2220, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 292, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 305, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 406, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 433,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 640, 516, 0, 517,
	518, 524, 525, 519, 520, 526, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 535, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 644, 645,
	646, 647, 0, 581, 0, 573, 574, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 743, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 733, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 744, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 524, 525,
	519, 520, 740, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 1554, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 739, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	1527, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 1526, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 1511, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 1509, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 1505, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 1482, 0, 259, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 267, 266, 268, 269, 270, 271, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	0, 275, 276, 0, 277, 278, 279, 280, 281, 604,
	605, 0, 282, 606, 283, 607, 0, 608, 284, 285,
	286, 287, 288, 289, 0, 0, 0, 290, 609, 610,
	611, 0, 291, 292, 612, 0, 0, 0, 293, 294,
	295, 296, 297, 298, 299, 0, 0, 301, 302, 303,
	300, 304, 0, 305, 0, 306, 307, 308, 309, 310,
	311, 0, 312, 313, 314, 0, 315, 316, 0, 0,
	0, 0, 0, 0, 0, 317, 318, 319, 320, 0,
	321, 613, 614, 0, 325, 322, 323, 0, 326, 324,
	0, 327, 328, 329, 0, 0, 330, 331, 332, 0,
	333, 334, 0, 335, 336, 337, 0, 338, 339, 615,
	340, 341, 342, 344, 346, 343, 347, 348, 349, 350,
	616, 617, 351, 0, 0, 0, 0, 0, 0, 0,
	352, 353, 354, 618, 0, 0, 0, 355, 0, 356,
	0, 0, 0, 357, 358, 619, 620, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 368, 621, 0,
	622, 369, 0, 370, 371, 372, 373, 374, 1480, 624,
	625, 451, 0, 375, 376, 0, 377, 378, 379, 380,
	0, 0, 0, 0, 381, 382, 383, 385, 0, 0,
	384, 626, 627, 0, 628, 0, 386, 387, 0, 629,
	0, 388, 389, 390, 0, 391, 0, 0, 0, 392,
	393, 394, 395, 396, 397, 0, 398, 400, 399, 0,
	401, 630, 0, 402, 403, 0, 0, 404, 0, 0,
	0, 405, 406, 409, 0, 0, 407, 408, 410, 411,
	0, 412, 413, 415, 418, 414, 416, 417, 419, 432,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 434, 0, 433, 0, 435, 436, 437, 442,
	444, 445, 440, 441, 443, 446, 447, 439, 0, 438,
	0, 0, 0, 448, 449, 0, 631, 450, 632, 452,
	453, 0, 0, 454, 0, 0, 0, 456, 457, 458,
	0, 0, 459, 460, 633, 0, 461, 0, 634, 462,
	463, 455, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 472, 473, 635, 474, 475, 476, 636, 477, 478,
	479, 637, 480, 638, 481, 482, 0, 483, 484, 0,
	485, 486, 487, 488, 489, 490, 491, 639, 492, 494,
	493, 495, 0, 496, 0, 497, 498, 499, 0, 0,
	0, 0, 500, 0, 502, 503, 504, 501, 505, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 513, 514,
	515, 640, 516, 0, 517, 518, 524, 525, 519, 520,
	526, 527, 528, 529, 530, 0, 532, 533, 531, 534,
	535, 536, 0, 537, 538, 521, 522, 539, 540, 0,
	541, 542, 543, 544, 545, 546, 641, 0, 547, 0,
	548, 549, 550, 552, 523, 553, 558, 642, 554, 555,
	556, 557, 643, 560, 561, 0, 562, 563, 0, 559,
	551, 0, 564, 565, 566, 567, 568, 569, 570, 345,
	571, 0, 572, 644, 645, 646, 647, 0, 581, 0,
	573, 574, 575, 648, 576, 649, 0, 577, 578, 579,
	580, 0, 582, 583, 0, 0, 584, 585, 586, 588,
	589, 587, 590, 0, 591, 0, 0, 592, 593, 594,
	650, 651, 652, 0, 596, 595, 597, 653, 1443, 0,
	259, 0, 598, 599, 654, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, 266,
	268, 269, 270, 271, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 275, 276,
	0, 277, 278, 279, 280, 281, 604, 605, 0, 282,
	606, 283, 607, 0, 608, 284, 285, 286, 287, 288,
	289, 0, 0, 0, 290, 609, 610, 611, 0, 291,
	292, 612, 0, 0, 0, 293, 294, 295, 296, 297,
	298, 299, 0, 0, 301, 302, 303, 300, 304, 0,
	305, 0, 306, 307, 308, 309, 310, 311, 0, 312,
	313, 314, 0, 315, 316, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 319, 320, 0, 321, 613, 614,
	0, 325, 322, 323, 0, 326, 324, 0, 327, 328,
	329, 0, 0, 330, 331, 332, 0, 333, 334, 0,
	335, 336, 337, 0, 338, 339, 615, 340, 341, 342,
	344, 346, 343, 347, 348, 349, 350, 616, 617, 351,
	0, 0, 0, 0, 0, 0, 0, 352, 353, 354,
	618, 0, 0, 0, 355, 0, 356, 0, 0, 0,
	357, 358, 619, 620, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 368, 621, 0, 622, 369, 0,
	370, 371, 372, 373, 374, 623, 624, 625, 451, 0,
	375, 376, 0, 377, 378, 379, 380, 0, 0, 0,
	0, 381, 382, 383, 385, 0, 0, 384, 626, 627,
	0, 628, 0, 386, 387, 0, 629, 0, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 393, 394, 395,
	396, 397, 0, 398, 400, 399, 0, 401, 630, 0,
	402, 403, 0, 0, 404, 0, 0, 0, 405, 406,
	409, 0, 0, 407, 408, 410, 411, 0, 412, 413,
	415, 418, 414, 416, 417, 419, 432, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 434,
	0, 433, 0, 435, 436, 437, 442, 444, 445, 440,
	441, 443, 446, 447, 439, 0, 438, 0, 0, 0,
	448, 449, 0, 631, 450, 632, 452, 453, 0, 0,
	454, 0, 0, 0, 456, 457, 458, 0, 0, 459,
	460, 633, 0, 461, 0, 634, 462, 463, 455, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 472, 473,
	635, 474, 475, 476, 636, 477, 478, 479, 637, 480,
	638, 481, 482, 0, 483, 484, 0, 485, 486, 487,
	488, 489, 490, 491, 639, 492, 494, 493, 495, 0,
	496, 0, 497, 498, 499, 0, 0, 0, 0, 500,
	0, 502, 503, 504, 501, 505, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 513, 514, 515, 640, 516,
	0, 517, 518, 524, 525, 519, 520, 526, 527, 528,
	529, 530, 0, 532, 533, 531, 534, 535, 536, 0,
	537, 538, 521, 522, 539, 540, 0, 541, 542, 543,
	544, 545, 546, 641, 0, 547, 0, 548, 549, 550,
	552, 523, 553, 558, 642, 554, 555, 556, 557, 643,
	560, 561, 0, 562, 563, 0, 559, 551, 0, 564,
	565, 566, 567, 568, 569, 570, 345, 571, 0, 572,
	644, 645, 646, 647, 0, 581, 0, 573, 574, 575,
	648, 576, 649, 0, 577, 578, 579, 580, 0, 582,
	583, 0, 0, 584, 585, 586, 588, 589, 587, 590,
	0, 591, 0, 0, 592, 593, 594, 650, 651, 652,
	0, 596, 595, 597, 653, 1429, 0, 259, 0, 598,
	599, 654, 600, 601, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 267, 266, 268, 269, 270,
	271, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 275, 276, 0, 277, 278,
	279, 280, 281, 604, 605, 0, 282, 606, 283, 607,
	0, 608, 284, 285, 286, 287, 288, 289, 0, 0,
	0, 290, 609, 610, 611, 0, 291, 292, 612, 0,
	0, 0, 293, 294, 295, 296, 297, 298, 299, 0,
	0, 301, 302, 303, 300, 304, 0, 305, 0, 306,
	307, 308, 309, 310, 311, 0, 312, 313, 314, 0,
	315, 316, 0, 0, 0, 0, 0, 0, 0, 317,
	318, 319, 320, 0, 321, 613, 614, 0, 325, 322,
	323, 0, 326, 324, 0, 327, 328, 329, 0, 0,
	330, 331, 332, 0, 333, 334, 0, 335, 336, 337,
	0, 338, 339, 615, 340, 341, 342, 344, 346, 343,
	347, 348, 349, 350, 616, 617, 351, 0, 0, 0,
	0, 0, 0, 0, 352, 353, 354, 618, 0, 0,
	0, 355, 0, 356, 0, 0, 0, 357, 358, 619,
	620, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	0, 368, 621, 0, 622, 369, 0, 370, 371, 372,
	373, 374, 623, 624, 625, 451, 0, 375, 376, 0,
	377, 378, 379, 380, 0, 0, 0, 0, 381, 382,
	383, 385, 0, 0, 384, 626, 627, 0, 628, 0,
	386, 387, 0, 629, 0, 388, 389, 390, 0, 391,
	0, 0, 0, 392, 393, 394, 395, 396, 397, 0,
	398, 400, 399, 0, 401, 630, 0, 402, 403, 0,
	0, 404, 0, 0, 0, 405, 406, 409, 0, 0,
	407, 408, 410, 411, 0, 412, 413, 415, 418, 414,
	416, 417, 419, 432, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 434, 0, 433, 0,
	435, 436, 437, 442, 444, 445, 440, 441, 443, 446,
	447, 439, 0, 438, 0, 0, 0, 448, 449, 0,
	631, 450, 632, 452, 453, 0, 0, 454, 0, 0,
	0, 456, 457, 458, 0, 0, 459, 460, 633, 0,
	461, 0, 634, 462, 463, 455, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 472, 473, 635, 474, 475,
	476, 636, 477, 478, 479, 637, 480, 638, 481, 482,
	0, 483, 484, 0, 485, 486, 487, 488, 489, 490,
	491, 639, 492, 494, 493, 495, 0, 496, 0, 497,
	498, 499, 0, 0, 0, 0, 500, 0, 502, 503,
	504, 501, 505, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 513, 514, 515, 640, 516, 0, 517, 518,
	524, 525, 519, 520, 526, 527, 528, 529, 530, 0,
	532, 533, 531, 534, 535, 536, 0, 537, 538, 521,
	522, 539, 540, 0, 541, 542, 543, 544, 545, 546,
	641, 0, 547, 0, 548, 549, 550, 552, 523, 553,
	558, 642, 554, 555, 556, 557, 643, 560, 561, 0,
	562, 563, 0, 559, 551, 0, 564, 565, 566, 567,
	568, 569, 570, 345, 571, 0, 572, 644, 645, 646,
	647, 0, 581, 0, 573, 574, 575, 648, 576, 649,
	0, 577, 578, 579, 580, 0, 582, 583, 0, 0,
	584, 585, 586, 588, 589, 587, 590, 0, 591, 0,
	0, 592, 593, 594, 650, 651, 652, 0, 596, 595,
	597, 653, 1267, 0, 259, 0, 598, 599, 654, 600,
	601, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 267, 266, 268, 269, 270, 271, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 275, 276, 0, 277, 278, 279, 280, 281,
	604, 605, 0, 282, 606, 283, 607, 0, 608, 284,
	285, 286, 287, 288, 289, 0, 0, 0, 290, 609,
	610, 611, 0, 291, 292, 612, 0, 0, 0, 293,
	294, 295, 296, 297, 298, 299, 0, 0, 301, 302,
	303, 300, 304, 0, 305, 0, 306, 307, 308, 309,
	310, 311, 0, 312, 313, 314, 0, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 317, 318, 319, 320,
	0, 321, 613, 614, 0, 325, 322, 323, 0, 326,
	324, 0, 327, 328, 329, 0, 0, 330, 331, 332,
	0, 333, 334, 0, 335, 336, 337, 0, 338, 339,
	615, 340, 341, 342, 344, 346, 343, 347, 348, 349,
	350, 616, 617, 351, 0, 0, 0, 0, 0, 0,
	0, 352, 353, 354, 618, 0, 0, 0, 355, 0,
	356, 0, 0, 0, 357, 358, 619, 620, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 0, 368, 621,
	0, 622, 369, 0, 370, 371, 372, 373, 374, 1266,
	624, 625, 451, 0, 375, 376, 0, 377, 378, 379,
	380, 0, 0, 0, 0, 381, 382, 383, 385, 0,
	0, 384, 626, 627, 0, 628, 0, 386, 387, 0,
	629, 0, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 393, 394, 395, 396, 397, 0, 398, 400, 399,
	0, 401, 630, 0, 402, 403, 0, 0, 404, 0,
	0, 0, 405, 406, 409, 0, 0, 407, 408, 410,
	411, 0, 412, 413, 415, 418, 414, 416, 417, 419,
	432, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 434, 0, 433, 0, 435, 436, 437,
	442, 444, 445, 440, 441, 443, 446, 447, 439, 0,
	438, 0, 0, 0, 448, 449, 0, 631, 450, 632,
	452, 453, 0, 0, 454, 0, 0, 0, 456, 457,
	458, 0, 0, 459, 460, 633, 0, 461, 0, 634,
	462, 463, 455, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 472, 473, 635, 474, 475, 476, 636, 477,
	478, 479, 637, 480, 638, 481, 482, 0, 483, 484,
	0, 485, 486, 487, 488, 489, 490, 491, 639, 492,
	494, 493, 495, 0, 496, 0, 497, 498, 499, 0,
	0, 0, 0, 500, 0, 502, 503, 504, 501, 505,
	506, 507, 508, 0, 509, 510, 511, 0, 512, 513,
	514, 515, 640, 516, 0, 517, 518, 524, 525, 519,
	520, 526, 527, 528, 529, 530, 0, 532, 533, 531,
	534, 535, 536, 0, 537, 538, 521, 522, 539, 540,
	0, 541, 542, 543, 544, 545, 546, 641, 0, 547,
	0, 548, 549, 550, 552, 523, 553, 558, 642, 554,
	555, 556, 557, 643, 560, 561, 0, 562, 563, 0,
	559, 551, 0, 564, 565, 566, 567, 568, 569, 570,
	345, 571, 0, 572, 644, 645, 646, 647, 0, 581,
	0, 573, 574, 575, 648, 576, 649, 0, 577, 578,
	579, 580, 0, 582, 583, 0, 0, 584, 585, 586,
	588, 589, 587, 590, 0, 591, 0, 0, 592, 593,
	594, 650, 651, 652, 0, 596, 595, 597, 653, 1258,
	0, 259, 0, 598, 599, 654, 600, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 0, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 1257, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 1211, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 259, 596, 595, 597, 653, 0, 0, 0, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 265, 267,
	266, 268, 269, 270, 271, 272, 749, 273, 274, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 275,
	276, 0, 277, 278, 279, 280, 281, 604, 605, 0,
	282, 606, 283, 607, 0, 608, 284, 285, 286, 287,
	288, 289, 0, 0, 0, 290, 609, 610, 611, 0,
	291, 292, 612, 0, 0, 0, 293, 294, 295, 296,
	297, 298, 299, 0, 0, 301, 302, 303, 300, 304,
	0, 305, 0, 306, 307, 308, 309, 310, 311, 0,
	312, 313, 314, 0, 315, 316, 0, 0, 0, 0,
	0, 0, 0, 317, 318, 319, 320, 0, 321, 613,
	614, 0, 325, 322, 323, 0, 326, 324, 0, 327,
	328, 329, 0, 0, 330, 331, 332, 0, 333, 334,
	0, 335, 336, 337, 0, 338, 339, 615, 340, 341,
	342, 344, 346, 343, 347, 348, 349, 350, 616, 617,
	351, 0, 0, 0, 0, 0, 0, 0, 352, 353,
	354, 618, 0, 0, 0, 355, 0, 356, 0, 0,
	0, 357, 358, 619, 620, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 368, 621, 0, 622, 369,
	0, 370, 371, 372, 373, 374, 623, 624, 625, 451,
	0, 375, 376, 0, 377, 378, 379, 380, 0, 0,
	0, 0, 381, 382, 383, 385, 0, 0, 384, 626,
	627, 0, 628, 0, 386, 387, 0, 629, 0, 388,
	389, 390, 0, 391, 0, 0, 0, 392, 393, 394,
	395, 396, 397, 0, 398, 400, 399, 0, 401, 630,
	0, 402, 403, 0, 0, 404, 0, 0, 0, 405,
	406, 409, 0, 0, 407, 408, 410, 411, 0, 412,
	413, 415, 418, 414, 416, 417, 419, 432, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	434, 0, 433, 0, 435, 436, 437, 442, 444, 445,
	440, 441, 443, 446, 447, 439, 0, 438, 0, 0,
	0, 448, 449, 0, 631, 450, 632, 452, 453, 0,
	0, 454, 0, 0, 0, 456, 457, 458, 0, 0,
	459, 460, 633, 0, 461, 0, 634, 462, 463, 455,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 472,
	473, 635, 474, 475, 476, 636, 477, 478, 479, 637,
	480, 638, 481, 482, 0, 483, 484, 0, 485, 486,
	487, 488, 489, 490, 491, 639, 492, 494, 493, 495,
	0, 496, 0, 497, 498, 499, 0, 0, 0, 0,
	500, 0, 502, 503, 504, 501, 505, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 513, 514, 515, 640,
	516, 0, 517, 518, 524, 525, 519, 520, 526, 527,
	528, 529, 530, 0, 532, 533, 531, 534, 535, 536,
	0, 537, 538, 521, 522, 539, 540, 0, 541, 542,
	543, 544, 545, 546, 641, 0, 547, 0, 548, 549,
	550, 552, 523, 553, 558, 642, 554, 555, 556, 557,
	643, 560, 561, 0, 562, 563, 0, 559, 551, 0,
	564, 565, 566, 567, 568, 569, 570, 345, 571, 0,
	572, 644, 645, 646, 647, 0, 581, 0, 573, 574,
	575, 648, 576, 649, 0, 577, 578, 579, 580, 0,
	582, 583, 0, 0, 584, 585, 586, 588, 589, 587,
	590, 0, 591, 0, 0, 592, 593, 594, 650, 651,
	652, 0, 596, 595, 597, 653, 743, 0, 259, 0,
	598, 599, 654, 600, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 267, 266, 268, 269,
	270, 271, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 275, 276, 0, 277,
	278, 279, 280, 281, 604, 605, 0, 282, 606, 283,
	607, 0, 608, 284, 285, 286, 287, 288, 289, 0,
	0, 0, 290, 609, 610, 611, 0, 291, 733, 612,
	0, 0, 0, 293, 294, 295, 296, 297, 298, 299,
	0, 0, 301, 302, 303, 300, 304, 0, 731, 0,
	306, 307, 308, 309, 310, 311, 0, 312, 313, 314,
	0, 315, 316, 0, 0, 0, 0, 0, 0, 0,
	317, 318, 319, 320, 0, 321, 613, 614, 0, 325,
	322, 323, 0, 326, 324, 0, 327, 328, 329, 0,
	0, 330, 331, 332, 0, 333, 334, 0, 335, 336,
	337, 0, 338, 339, 615, 340, 341, 342, 344, 346,
	343, 347, 348, 349, 350, 616, 617, 351, 0, 0,
	0, 0, 0, 0, 0, 352, 353, 354, 618, 0,
	0, 0, 355, 0, 356, 0, 0, 0, 357, 358,
	619, 620, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 0, 368, 621, 0, 622, 369, 0, 370, 371,
	372, 373, 374, 623, 624, 625, 451, 0, 375, 376,
	0, 377, 378, 379, 380, 0, 0, 0, 0, 381,
	382, 383, 385, 0, 0, 384, 626, 627, 0, 628,
	0, 386, 387, 0, 629, 0, 388, 389, 390, 0,
	391, 0, 0, 0, 392, 393, 394, 395, 396, 397,
	0, 398, 400, 399, 0, 401, 630, 0, 402, 403,
	0, 0, 404, 0, 0, 0, 405, 732, 409, 0,
	0, 407, 408, 410, 411, 0, 412, 413, 415, 418,
	414, 416, 417, 419, 432, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 434, 0, 744,
	0, 435, 436, 437, 442, 444, 445, 440, 441, 443,
	446, 447, 439, 0, 438, 0, 0, 0, 448, 449,
	0, 631, 450, 632, 452, 453, 0, 0, 454, 0,
	0, 0, 456, 457, 458, 0, 0, 459, 460, 633,
	0, 461, 0, 634, 462, 463, 455, 464, 465, 466,
	467, 468, 469, 470, 471, 0, 472, 473, 635, 474,
	475, 476, 636, 477, 478, 479, 637, 480, 638, 481,
	482, 0, 483, 484, 0, 485, 486, 487, 488, 489,
	490, 491, 639, 492, 494, 493, 495, 0, 496, 0,
	497, 498, 499, 0, 0, 0, 0, 500, 0, 502,
	503, 504, 501, 505, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 513, 514, 515, 734, 516, 0, 517,
	518, 524, 525, 519, 520, 740, 527, 528, 529, 530,
	0, 532, 533, 531, 534, 735, 536, 0, 537, 538,
	521, 522, 539, 540, 0, 541, 542, 543, 544, 545,
	546, 641, 0, 547, 0, 548, 549, 550, 552, 523,
	553, 558, 642, 554, 555, 556, 557, 643, 560, 561,
	0, 562, 563, 0, 559, 551, 0, 564, 565, 566,
	567, 568, 569, 570, 345, 571, 0, 572, 739, 645,
	646, 647, 0, 581, 0, 573, 737, 575, 648, 576,
	649, 0, 577, 578, 579, 580, 0, 582, 583, 0,
	0, 584, 585, 586, 588, 589, 587, 590, 0, 591,
	0, 0, 592, 593, 594, 650, 651, 652, 0, 596,
	595, 597, 653, 725, 0, 259, 0, 598, 599, 654,
	600, 601, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 267, 266, 268, 269, 270, 271, 272,
	0, 273, 274, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 275, 276, 0, 277, 278, 279, 280,
	281, 604, 605, 0, 282, 606, 283, 607, 0, 608,
	284, 285, 286, 287, 288, 289, 0, 0, 0, 290,
	609, 610, 611, 0, 291, 292, 612, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 299, 0, 0, 301,
	302, 303, 300, 304, 0, 305, 0, 306, 307, 308,
	309, 310, 311, 0, 312, 313, 314, 0, 315, 316,
	0, 0, 0, 0, 0, 0, 0, 317, 318, 319,
	320, 0, 321, 613, 614, 0, 325, 322, 323, 0,
	326, 324, 0, 327, 328, 329, 0, 0, 330, 331,
	332, 0, 333, 334, 0, 335, 336, 337, 0, 338,
	339, 615, 340, 341, 342, 344, 346, 343, 347, 348,
	349, 350, 616, 617, 351, 0, 0, 0, 0, 0,
	0, 0, 352, 353, 354, 618, 0, 0, 0, 355,
	0, 356, 0, 0, 0, 357, 358, 619, 620, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 0, 368,
	621, 0, 622, 369, 0, 370, 371, 372, 373, 374,
	623, 624, 625, 451, 0, 375, 376, 0, 377, 378,
	379, 380, 0, 0, 0, 0, 381, 382, 383, 385,
	0, 0, 384, 626, 627, 0, 628, 0, 386, 387,
	0, 629, 0, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 393, 394, 395, 396, 397, 0, 398, 400,
	399, 0, 401, 630, 0, 402, 403, 0, 0, 404,
	0, 0, 0, 405, 406, 409, 0, 0, 407, 408,
	410, 411, 0, 412, 413, 415, 418, 414, 416, 417,
	419, 432, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 0, 433, 0, 435, 436,
	437, 442, 444, 445, 440, 441, 443, 446, 447, 439,
	0, 438, 0, 0, 0, 448, 449, 0, 631, 450,
	632, 452, 453, 0, 0, 454, 0, 0, 0, 456,
	457, 458, 0, 0, 459, 460, 633, 0, 461, 0,
	634, 462, 463, 455, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 472, 473, 635, 474, 475, 476, 636,
	477, 478, 479, 637, 480, 638, 481, 482, 0, 483,
	484, 0, 485, 486, 487, 488, 489, 490, 491, 639,
	492, 494, 493, 495, 0, 496, 0, 497, 498, 499,
	0, 0, 0, 0, 500, 0, 502, 503, 504, 501,
	505, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	513, 514, 515, 640, 516, 0, 517, 518, 726, 525,
	519, 520, 526, 527, 528, 529, 530, 0, 532, 533,
	531, 534, 535, 536, 0, 537, 538, 521, 522, 539,
	540, 0, 541, 542, 543, 544, 545, 546, 641, 0,
	547, 0, 548, 549, 550, 552, 523, 553, 558, 642,
	554, 555, 556, 557, 643, 560, 561, 0, 562, 563,
	0, 559, 551, 0, 564, 565, 566, 567, 568, 569,
	570, 345, 571, 0, 572, 644, 645, 646, 647, 0,
	581, 0, 573, 574, 575, 648, 576, 649, 0, 577,
	578, 579, 580, 0, 582, 583, 0, 0, 584, 585,
	586, 588, 589, 587, 590, 0, 591, 0, 0, 592,
	593, 594, 650, 651, 652, 0, 596, 595, 597, 653,
	688, 0, 259, 0, 598, 599, 654, 600, 601, 602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	267, 266, 268, 269, 270, 271, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 603, 0, 0, 0, 0,
	275, 276, 0, 277, 278, 279, 280, 281, 604, 605,
	0, 282, 606, 283, 607, 0, 608, 284, 285, 286,
	287, 288, 289, 0, 0, 0, 290, 609, 610, 611,
	0, 291, 292, 612, 0, 0, 0, 293, 294, 295,
	296, 297, 298, 299, 0, 0, 301, 302, 303, 300,
	304, 0, 305, 0, 306, 307, 308, 309, 310, 311,
	0, 312, 313, 314, 0, 315, 316, 0, 0, 0,
	0, 0, 0, 0, 317, 318, 319, 320, 0, 321,
	613, 614, 0, 325, 322, 323, 0, 326, 324, 0,
	327, 328, 329, 0, 0, 330, 331, 332, 0, 333,
	334, 0, 335, 336, 337, 0, 338, 339, 615, 340,
	341, 342, 344, 346, 343, 347, 348, 349, 350, 616,
	617, 351, 0, 0, 0, 0, 0, 0, 0, 352,
	353, 354, 618, 0, 0, 0, 355, 0, 356, 0,
	0, 0, 357, 358, 619, 620, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 0, 368, 621, 0, 622,
	369, 0, 370, 371, 372, 373, 374, 623, 624, 625,
	451, 0, 375, 376, 0, 377, 378, 379, 380, 0,
	0, 0, 0, 381, 382, 383, 385, 0, 0, 384,
	626, 627, 0, 628, 0, 386, 387, 0, 629, 0,
	388, 389, 390, 0, 391, 0, 0, 0, 392, 393,
	394, 395, 396, 397, 0, 398, 400, 399, 0, 401,
	630, 0, 402, 403, 0, 0, 404, 0, 0, 0,
	405, 406, 409, 0, 0, 407, 408, 410, 411, 0,
	412, 413, 415, 418, 414, 416, 417, 419, 432, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 434, 0, 433, 0, 435, 436, 437, 442, 444,
	445, 440, 441, 443, 446, 447, 439, 0, 438, 0,
	0, 0, 448, 449, 0, 631, 450, 632, 452, 453,
	0, 0, 454, 0, 0, 0, 456, 457, 458, 0,
	0, 459, 460, 633, 0, 461, 0, 634, 462, 463,
	455, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	472, 473, 635, 474, 475, 476, 636, 477, 478, 479,
	637, 480, 638, 481, 482, 0, 483, 484, 0, 485,
	486, 487, 488, 489, 490, 491, 639, 492, 494, 493,
	495, 0, 496, 0, 497, 498, 499, 0, 0, 0,
	0, 500, 0, 502, 503, 504, 501, 505, 506, 507,
	508, 0, 509, 510, 511, 0, 512, 513, 514, 515,
	640, 516, 0, 517, 518, 524, 525, 519, 520, 526,
	527, 528, 529, 530, 0, 532, 533, 531, 534, 535,
	536, 0, 537, 538, 521, 522, 539, 540, 0, 541,
	542, 543, 544, 545, 546, 641, 0, 547, 0, 548,
	549, 550, 552, 523, 553, 558, 642, 554, 555, 556,
	557, 643, 560, 561, 0, 562, 563, 0, 559, 551,
	0, 564, 565, 566, 567, 568, 569, 570, 345, 571,
	0, 572, 644, 645, 646, 647, 0, 581, 0, 573,
	574, 575, 648, 576, 649, 0, 577, 578, 579, 580,
	0, 582, 583, 0, 0, 584, 585, 586, 588, 589,
	587, 590, 0, 591, 0, 0, 592, 593, 594, 650,
	651, 652, 0, 596, 595, 597, 653, 682, 0, 259,
	0, 598, 599, 654, 600, 601, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 267, 266, 268,
	269, 270, 271, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 275, 276, 0,
	277, 278, 279, 280, 281, 604, 605, 0, 282, 606,
	283, 607, 0, 608, 284, 285, 286, 287, 288, 289,
	0, 0, 0, 290, 609, 610, 611, 0, 291, 292,
	612, 0, 0, 0, 293, 294, 295, 296, 297, 298,
	299, 0, 0, 301, 302, 303, 300, 304, 0, 305,
	0, 306, 307, 308, 309, 310, 311, 0, 312, 313,
	314, 0, 315, 316, 0, 0, 0, 0, 0, 0,
	0, 317, 318, 319, 320, 0, 321, 613, 614, 0,
	325, 322, 323, 0, 326, 324, 0, 327, 328, 329,
	0, 0, 330, 331, 332, 0, 333, 334, 0, 335,
	336, 337, 0, 338, 339, 615, 340, 341, 342, 344,
	346, 343, 347, 348, 349, 350, 616, 617, 351, 0,
	0, 0, 0, 0, 0, 0, 352, 353, 354, 618,
	0, 0, 0, 355, 0, 356, 0, 0, 0, 357,
	358, 619, 620, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 368, 621, 0, 622, 369, 0, 370,
	371, 372, 373, 374, 623, 624, 625, 451, 0, 375,
	376, 0, 377, 378, 379, 380, 0, 0, 0, 0,
	381, 382, 383, 385, 0, 0, 384, 626, 627, 0,
	628, 0, 386, 387, 0, 629, 0, 388, 389, 390,
	0, 391, 0, 0, 0, 392, 393, 394, 395, 396,
	397, 0, 398, 400, 399, 0, 401, 630, 0, 402,
	403, 0, 0, 404, 0, 0, 0, 405, 406, 409,
	0, 0, 407, 408, 410, 411, 0, 412, 413, 415,
	418, 414, 416, 417, 419, 432, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 434, 0,
	433, 0, 435, 436, 437, 442, 444, 445, 440, 441,
	443, 446, 447, 439, 0, 438, 0, 0, 0, 448,
	449, 0, 631, 450, 632, 452, 453, 0, 0, 454,
	0, 0, 0, 456, 457, 458, 0, 0, 459, 460,
	633, 0, 461, 0, 634, 462, 463, 455, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 472, 473, 635,
	474, 475, 476, 636, 477, 478, 479, 637, 480, 638,
	481, 482, 0, 483, 484, 0, 485, 486, 487, 488,
	489, 490, 491, 639, 492, 494, 493, 495, 0, 496,
	0, 497, 498, 499, 0, 0, 0, 0, 500, 0,
	502, 503, 504, 501, 505, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 513, 514, 515, 640, 516, 0,
	517, 518, 524, 525, 519, 520, 526, 527, 528, 529,
	530, 0, 532, 533, 531, 534, 535, 536, 0, 537,
	538, 521, 522, 539, 540, 0, 541, 542, 543, 544,
	545, 546, 641, 0, 547, 0, 548, 549, 550, 552,
	523, 553, 558, 642, 554, 555, 556, 557, 643, 560,
	561, 0, 562, 563, 0, 559, 551, 0, 564, 565,
	566, 567, 568, 569, 570, 345, 571, 0, 572, 644,
	645, 646, 647, 0, 581, 0, 573, 574, 575, 648,
	576, 649, 0, 577, 578, 579, 580, 0, 582, 583,
	0, 0, 584, 585, 586, 588, 589, 587, 590, 0,
	591, 0, 0, 592, 593, 594, 650, 651, 652, 0,
	596, 595, 597, 653, 660, 0, 259, 0, 598, 599,
	654, 600, 601, 602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 3405, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 3352, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 3284, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 3282, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 3267, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 2861, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 726,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 2195, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 0, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 1229, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 369, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 489, 490, 491,
	639, 492, 1163, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 516, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 259, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 0, 0, 265, 267, 266, 268, 269, 270, 271,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 603,
	0, 0, 0, 0, 275, 276, 0, 277, 278, 279,
	280, 281, 604, 605, 0, 282, 606, 283, 607, 0,
	608, 284, 285, 286, 287, 288, 289, 0, 0, 0,
	290, 609, 610, 611, 0, 291, 292, 612, 0, 0,
	0, 293, 294, 295, 296, 297, 298, 299, 0, 0,
	301, 302, 303, 300, 304, 0, 305, 0, 306, 307,
	308, 309, 310, 311, 0, 312, 313, 314, 0, 315,
	316, 0, 0, 0, 0, 0, 0, 0, 317, 318,
	319, 320, 0, 321, 613, 614, 0, 325, 322, 323,
	0, 326, 324, 0, 327, 328, 329, 0, 0, 330,
	331, 332, 0, 333, 334, 0, 335, 336, 337, 0,
	338, 339, 615, 340, 341, 342, 344, 346, 343, 347,
	348, 349, 350, 616, 617, 351, 0, 0, 0, 0,
	0, 0, 0, 352, 353, 354, 618, 0, 0, 0,
	355, 0, 356, 0, 0, 0, 357, 358, 619, 620,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	368, 621, 0, 622, 0, 0, 370, 371, 372, 373,
	374, 623, 624, 625, 451, 0, 375, 376, 0, 377,
	378, 379, 380, 0, 0, 0, 0, 381, 382, 383,
	385, 0, 0, 384, 626, 627, 0, 628, 0, 386,
	387, 0, 629, 0, 388, 389, 390, 0, 391, 0,
	0, 0, 392, 393, 394, 395, 396, 397, 0, 398,
	400, 399, 0, 401, 630, 0, 402, 403, 0, 0,
	404, 0, 0, 0, 405, 406, 409, 0, 0, 407,
	408, 410, 411, 0, 412, 413, 415, 418, 414, 416,
	417, 419, 432, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 434, 0, 433, 0, 435,
	436, 437, 442, 444, 445, 440, 441, 443, 446, 447,
	439, 0, 438, 0, 0, 0, 448, 449, 0, 631,
	450, 632, 452, 453, 0, 0, 454, 0, 0, 0,
	456, 457, 458, 0, 0, 459, 460, 633, 0, 461,
	0, 634, 462, 463, 455, 464, 465, 0, 467, 468,
	469, 470, 471, 0, 472, 473, 635, 474, 475, 476,
	636, 477, 478, 479, 637, 480, 638, 481, 482, 0,
	483, 484, 0, 485, 486, 487, 488, 0, 490, 491,
	639, 492, 494, 493, 495, 0, 496, 0, 497, 498,
	499, 0, 0, 0, 0, 500, 0, 502, 503, 504,
	501, 505, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 513, 514, 515, 640, 0, 0, 517, 518, 524,
	525, 519, 520, 526, 527, 528, 529, 530, 0, 532,
	533, 531, 534, 535, 536, 0, 537, 538, 521, 522,
	539, 540, 0, 541, 542, 543, 544, 545, 546, 641,
	0, 547, 0, 548, 549, 550, 552, 523, 553, 558,
	642, 554, 555, 556, 557, 643, 560, 561, 0, 562,
	563, 0, 559, 551, 0, 564, 565, 566, 567, 568,
	569, 570, 345, 571, 0, 572, 644, 645, 646, 647,
	0, 581, 0, 573, 574, 575, 648, 576, 649, 0,
	577, 578, 579, 580, 0, 582, 583, 0, 0, 584,
	585, 586, 588, 589, 587, 590, 0, 591, 0, 0,
	592, 593, 594, 650, 651, 652, 0, 596, 595, 597,
	653, 0, 0, 0, 0, 598, 599, 654, 600, 601,
	602, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 1717, 1718,
	1766, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 1719, 1717, 1718, 1720,
	1750, 1751, 1752, 1760, 1761, 1762, 1739, 1766, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 1719, 1717, 1718, 1766, 1750, 1751, 1752,
	1760, 1761, 1762, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 1719, 0, 0, 1720, 0, 0, 0, 0,
	0, 0, 1739, 1766, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 0, 0, 0, 0, 1725, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 1757, 1725, 0, 1767, 0, 0, 0,
	0, 0, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 1763,
	0, 1764, 0, 1725, 0, 0, 0, 0, 1734, 1735,
	1757, 0, 0, 1767, 0, 0, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 1763, 0, 1764, 1757,
	1725, 1740, 1767, 0, 0, 1734, 1735, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 1763, 0, 1764, 0, 0,
	0, 0, 0, 0, 1734, 1735, 1757, 0, 1740, 1767,
	0, 0, 0, 1765, 0, 1747, 1749, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 1763, 0, 1764, 0, 0, 1740, 0, 0,
	0, 1734, 1735, 0, 0, 0, 0, 0, 0, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1741, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1754, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 1758, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 2423, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0,
	0, 4367, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	4363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 1717, 1718, 4285, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 1717, 1718, 1720, 1750, 1751, 1752,
	1760, 1761, 1762, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 1748, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	1719, 1717, 1718, 1766, 1750, 1751, 1752, 1760, 1761, 1762,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 1719,
	1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762, 1739,
	1766, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 1719, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 1719, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 0,
	1742, 1743, 1744, 1745, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 0, 0, 1763, 0, 1764, 1757, 1725, 0, 1767,
	0, 0, 1734, 1735, 0, 1747, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	1755, 0, 1763, 0, 1764, 0, 1725, 0, 0, 0,
	0, 1734, 1735, 1757, 0, 1740, 1767, 0, 0, 0,
	0, 0, 1747, 1749, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 1764, 1757, 0, 1740, 1767, 0, 0, 1734, 1735,
	0, 1747, 1749, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 1763, 0,
	1764, 0, 0, 0, 0, 1754, 0, 1734, 1735, 0,
	0, 1740, 0, 0, 0, 0, 1765, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 0, 0, 0, 0, 4245, 0,
	0, 0, 1756, 0, 0, 0, 0, 1731, 1732, 1738,
	1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723,
	1724, 1726, 1727, 0, 0, 0, 0, 4244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 4076, 0, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 1717, 1718, 3933, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 0,
	1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761, 1762, 0,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 1719, 1717, 1718, 1766,
	1750, 1751, 1752, 1760, 1761, 1762, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 1719, 1717, 1718, 1720, 1750,
	1751, 1752, 1760, 1761, 1762, 1739, 1766, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1753,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 1719, 0, 0, 1766, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 1742, 1743, 1744,
	1745, 1719, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 1767, 0, 0, 0,
	0, 0, 1747, 1749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 0, 0, 1763,
	0, 1764, 1757, 1725, 0, 1767, 0, 0, 1734, 1735,
	0, 1747, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 1755, 0, 1763, 0,
	1764, 0, 1725, 0, 0, 0, 0, 1734, 1735, 1757,
	0, 1740, 1767, 0, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1764, 1757, 0,
	1740, 1767, 0, 0, 1734, 1735, 0, 1747, 1749, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 1763, 0, 1764, 0, 0, 0,
	0, 1754, 0, 1734, 1735, 0, 0, 1740, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 1756,
	0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	0, 0, 0, 0, 3866, 0, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 0, 0, 3865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	3864, 0, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 1717, 1718, 3545,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 1717, 1718, 1720, 1750,
	1751, 1752, 1760, 1761, 1762, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1748, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 1719, 1717, 1718, 1766, 1750, 1751, 1752, 1760,
	1761, 1762, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 1753, 1748, 0, 0,
	0, 1719, 1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761,
	1762, 1739, 1766, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 1719, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 1719, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 1742, 1743, 1744, 1745, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1767, 0, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	1743, 1744, 1745, 0, 0, 1763, 0, 1764, 1757, 1725,
	0, 1767, 0, 0, 1734, 1735, 0, 1747, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 1755, 0, 1763, 0, 1764, 0, 1725, 0,
	0, 0, 0, 1734, 1735, 1757, 0, 1740, 1767, 0,
	0, 0, 0, 0, 1747, 1749, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 1764, 1757, 0, 1740, 1767, 0, 0,
	1734, 1735, 0, 1747, 1749, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	1763, 0, 1764, 0, 0, 0, 0, 1754, 0, 1734,
	1735, 0, 0, 1740, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1758, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	3058, 0, 0, 0, 1756, 0, 0, 0, 0, 1731,
	1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721,
	1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0, 3057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759,
	1737, 1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 0, 0, 0, 0, 3056, 0, 0, 0,
	1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 1717, 1718, 3055, 1750, 1751, 1752, 1760,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 1748, 0, 0,
	0, 0, 1717, 1718, 1720, 1750, 1751, 1752, 1760, 1761,
	1762, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 1719, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 1718, 0,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 0, 0, 1720, 1742,
	1743, 1744, 1745, 0, 0, 0, 1766, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 1719, 0, 0, 0, 0, 0, 1725, 4503,
	0, 0, 1739, 0, 0, 1757, 0, 0, 1767, 0,
	0, 1736, 0, 0, 1747, 1749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1763, 0, 1764, 1757, 0, 0, 1767, 0, 0,
	1734, 1735, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	1763, 0, 1764, 0, 0, 0, 0, 0, 0, 1734,
	1735, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1742, 1743, 1744, 1745, 1755, 0, 0,
	0, 0, 0, 1725, 0, 3142, 0, 0, 3141, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1767, 1754, 0, 0, 0, 0, 1747, 1749,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1764, 0, 0,
	0, 0, 1754, 0, 1734, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4502, 0, 1746, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 1758, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 1718, 0,
	1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 1748, 0, 0, 0, 0, 2993, 0, 1720, 0,
	1746, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1741, 1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759,
	1737, 1733, 1719, 1730, 1728, 1729, 1721, 1722, 1723, 1724,
	1726, 1727, 1739, 0, 3022, 0, 1758, 0, 0, 0,
	1756, 1736, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2567, 0, 0, 2994, 0, 0,
	0, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 1748, 0, 0, 0, 2566,
	0, 0, 1720, 1742, 1743, 1744, 1745, 0, 0, 0,
	1766, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 1719, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 1739, 0, 0, 1757,
	0, 0, 1767, 0, 0, 1736, 0, 0, 1747, 1749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 1764, 0, 0,
	0, 0, 0, 0, 1734, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 1718, 1755, 1750, 1751, 1752, 1760, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 1753, 1748, 0, 0, 1742, 1743, 1744,
	1745, 1720, 0, 0, 0, 0, 0, 1725, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1765,
	0, 0, 0, 0, 0, 1719, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 1739, 1767, 1754, 0, 0,
	0, 0, 1747, 1749, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1763,
	0, 1764, 0, 0, 0, 0, 0, 0, 1734, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 1743, 1744, 1745,
	1741, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 1757, 0, 0, 1767, 0, 0, 0, 0,
	0, 1747, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	1764, 0, 0, 0, 0, 0, 0, 1734, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1741, 1756, 0, 0, 0, 0,
	1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728, 1729,
	1721, 1722, 1723, 1724, 1726, 1727, 0, 0, 0, 0,
	1758, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 1019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 1718, 0, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 1746, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 1756,
	0, 0, 0, 1741, 1731, 1732, 1738, 1759, 1737, 1733,
	0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	1717, 1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 1748, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 1739, 0, 0, 0, 0,
	0, 1725, 0, 0, 1736, 0, 0, 0, 1756, 0,
	0, 0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 0, 0, 1742, 1743, 1744, 1745,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	1755, 3148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 1767, 0, 0, 0, 0,
	0, 1747, 1749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 1763, 0,
	1764, 0, 0, 0, 0, 0, 0, 1734, 1735, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 1717, 1718, 0, 1750, 1751, 1752, 1760, 1761,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 1748, 0, 0, 0,
	3143, 0, 0, 1720, 0, 0, 0, 0, 1746, 0,
	0, 1766, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1741, 0,
	1754, 0, 0, 0, 0, 0, 0, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 1758, 0, 1736, 0, 1717, 1718,
	0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 1748, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 1746, 0, 0, 3526, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 0, 0, 1742, 1743,
	1744, 1745, 0, 1739, 0, 0, 0, 0, 1725, 1758,
	0, 0, 1736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727, 1757, 0, 0, 1767, 0, 0,
	0, 0, 0, 1747, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1763, 0, 1764, 0, 0, 0, 0, 0, 0, 1734,
	1735, 0, 0, 0, 1742, 1743, 1744, 1745, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 1740, 1731, 1732, 1738, 1759, 1737, 1733, 0,
	1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0,
	1757, 0, 0, 1767, 0, 0, 0, 0, 0, 1747,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 1763, 0, 1764, 0,
	0, 0, 0, 0, 0, 1734, 1735, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 1717,
	1718, 0, 1750, 1751, 1752, 1760, 1761, 1762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1748, 0, 0, 0, 3059, 0, 0,
	1720, 0, 0, 0, 0, 1746, 0, 0, 1766, 0,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 1754, 0,
	0, 0, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 3110, 0,
	0, 1758, 0, 1736, 0, 1717, 1718, 0, 1750, 1751,
	1752, 1760, 1761, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 1748,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 1746, 0, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 1742, 1743, 1744, 1745, 0,
	1739, 0, 0, 0, 0, 1725, 0, 1758, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 1731, 1732, 1738, 1759, 1737,
	1733, 0, 1730, 1728, 1729, 1721, 1722, 1723, 1724, 1726,
	1727, 1757, 0, 0, 1767, 0, 0, 0, 0, 0,
	1747, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1763, 0, 1764,
	0, 0, 0, 0, 0, 0, 1734, 1735, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 1740,
	0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730, 1728,
	1729, 1721, 1722, 1723, 1724, 1726, 1727, 1757, 0, 0,
	1767, 0, 0, 0, 0, 0, 1747, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 0, 1763, 0, 1764, 0, 0, 0, 0,
	0, 0, 1734, 1735, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 1731, 1732, 1738, 1759, 1737, 1733, 0, 1730,
	1728, 1729, 1721, 1722, 1723, 1724, 1726, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 1731, 1732,
	1738, 1759, 1737, 1733, 0, 1730, 1728, 1729, 1721, 1722,
	1723, 1724, 1726, 1727,
}

var sqlPact = [...]int{
	276, -1000, -1000, -1000, -1000, 192, -1000, -1000, 191, 188,
	186, 184, 179, 178, 177, 170, 167, 166, 164, -1000,
	-1000, -1000, -1000, -1000, -1000, 162, -1000, -1000, 161, -1000,
	156, 155, 153, -1000, -1000, 151, -1000, 147, -1000, -1000,
	-1000, -1000, 146, 145, 143, 86154, 85617, 86684, 2251, 107502,
	94132, 2122, 77053, 106965, 76516, 106428, 2061, 9902, 105891, 2662,
	140, -1000, 105354, 139, 137, 129, -1000, 104817, -1000, 1895,
	-1000, 128, 5080, 62004, 126, 125, 124, 2972, 119, -1000,
	115, 107, 106, -1000, 12117, 1470, -1000, 105, 104, -1000,
	7280, 91461, 102, 101, 2284, 100, 95, 61467, 93, 91,
	2228, 2821, -1000, -1000, 1997, -1000, -1000, 88, 87, 85,
	84, 82, 74, 73, 71, 70, 69, 68, -1000, 67,
	66, 65, 64, 63, -1000, 62, 61, 60, -1000, 57,
	-1000, 54, 51, 50, 49, 41, 38, 37, 36, 33,
	32, 31, 28, 26, -1000, 13451, -1000, 1660, 1615, 1608,
	1604, 1603, 1602, 973, 24, 22, 21, 19, 18, 17,
	12, 11, 9, -1000, 8, 7, 6, 5, 3, 2,
	1, 0, 117, -1, -2, -7, -8, -10, -11, -12,
	1875, -1000, 1431, 991, 28618, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 113332, 108032,
	-16, -78, -20, -1000, 3204, 1038, 51232, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 302, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 502, 2043, 756,
	-1000, -1000, -1000, 104287, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2232, -68, -1000, 1943, -1000, -1000, -1000, -1000,
	-1000, 755, -1000, 2226, 306, 2160, -1000, -1000, -1000, 3292,
	2374, 3725, 3723, 3722, 3721, 3720, 112802, 1722, 3716, 2438,
	3710, 3709, 3705, 3703, 3701, 3700, 3698, -1000, 85080, 1009,
	84543, 84006, 3264, 103757, 83469, 103220, 70626, 43446, 757, 3275,
	-1000, -1000, -1000, -1000, -1000, -1000, 108032, -1000, 1008, -1000,
	-1000, 3697, 3693, 1986, 754, 93595, -1000, 1584, -1000, 919,
	30304, -1000, 1219, -1000, 30304, 301, -1000, -1000, -1000, -1000,
	-1000, -1000, 3692, 3690, 3689, 3688, 3685, -1000, -1000, 75979,
	21822, 75442, 74905, 102683, 21275, 82932, 82395, 102146, 70079, 1006,
	1380, -1000, -1000, -1000, -1000, -1000, -1000, -53, 67891, 3450,
	108032, -1000, 294, -1000, -1000, -1000, -1000, -1000, -1000, 42872,
	655, 42298, 465, 41724, 450, -1000, -1000, -1000, -1000, 69532,
	-1000, 101609, 2372, 3684, 3683, 1087, 3680, 3132, 1700, 3679,
	1812, 1164, 3678, 3677, 3676, 3675, 3674, 3670, 3668, 1359,
	101072, 2818, 100535, 1645, 68985, 1005, 81858, 86684, 2564, 99998,
	1353, 1284, -1000, -1000, -1000, -1000, 2924, 2799, 2749, 1124,
	-1000, -1000, -1000, -1000, 53911, 8231, 7582, 10503, 99461, 56123,
	86684, 86684, -1000, -1000, -1000, -1000, -1000, 41150, 315, 40576,
	733, -1000, -1000, 54464, 2780, -1000, -1000, -1000, -1000, 40002,
	300, 39428, 670, 108032, -1000, 2816, 1879, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1862, 1585, 3488, 2640, 68438, 1975, 1397, 3211,
	2911, 2909, 1479, 2904, 3665, 2514, 2901, 2900, 2898, 2897,
	2891, 1525, 2478, 270, 28044, 2800, 1649, 38854, 1457, 1476,
	2889, 2887, 3513, 1928, 1920, 1897, 74368, 3663, 3662, 3164,
	2882, 2877, 2676, 2876, -1000, 2779, -1000, -1000, -1000, -1000,
	1428, -1000, -1000, -1000, -1000, 77583, -1000, -1000, 1250, -1000,
	-1000, 1250, -1000, -1000, -1000, -1000, -1000, 1195, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1431,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1861, -1000, 1981, -1000, -1000, 2442, 3155, 3155, 3155, 3272,
	463, 455, -1000, 117, -1000, -1000, 118934, -1000, -1000, 44008,
	44008, 44008, 44008, 44008, 44008, 44008, 2066, -1000, 753, -1000,
	-1000, 788, -1000, 752, 638, -1000, -1000, -1000, -1000, -1000,
	-1000, 750, -1000, -1000, -1000, -1000, -1000, -1000, 3450, -1000,
	24612, -1000, -1000, -1000, 446, 747, 44008, -1000, -1000, 3529,
	3527, 994, -1000, 272, 936, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2811, 746, 742,
	-1000, 739, 737, 736, 732, 731, -1000, -1000, -1000, 729,
	725, 724, 722, 721, 720, 717, 714, -1000, 1965, -1000,
	-1000, -1000, -1000, -1000, -1000, 680, 676, 676, 676, -1000,
	996, -1000, -1000, -1000, 369, 675, 364, 672, 668, 667,
	-1000, 713, 712, 710, 709, 708, 707, 706, 701, 697,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 995, -1000, -1000,
	-1000, -1000, -54, 108032, -1000, 502, -54, -1000, -1000, 696,
	-1000, 32564, 32564, 32564, -1000, -1000, 2225, 44008, -1000, 2354,
	-1000, -41, -41, 877, 52837, -1000, 50158, 877, 262, 795,
	57730, -1000, 2778, -1000, -1000, 695, 261, -1000, -1000, -1000,
	-1000, 22367, 2773, 108032, 108032, 86684, 86684, 86684, 3051, 44008,
	-1000, -1000, 65734, 108032, 87744, -1000, -1000, 3393, 62534, 65204,
	108032, 2808, 64674, 3661, -1000, -1000, -1000, -1000, -1000, 3026,
	3660, 3659, 3658, -1000, 108032, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 209, 3020, -1000, -1000, 90924, 209, 3018, -1000,
	209, 3017, -1000, 90394, -1000, -1000, 2186, 3016, -1000, -1000,
	213, 3015, -1000, -1000, -1000, 210, 3011, -1000, -1000, 245,
	-79, 3009, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 118934, -1000, -1000, -1000, 64137, -1000,
	3169, -1000, -1000, 108032, -1000, 44008, -1000, 3391, 1566, 71706,
	3340, -64, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2419,
	2420, 1133, 2276, -1000, 3064, 1823, -1000, 30304, 3118, -1000,
	-1000, -1000, 244, 22367, -1000, -1000, -1000, -1000, -1000, -1000,
	4521, 3007, 1475, -1000, 2272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1758, 3005, -1000, 1845, 3002, 1755, -1000, -1000,
	2496, -1000, 3160, -1000, -1000, 1906, 3001, -40, -1000, -1000,
	2260, -1000, 1882, -1000, 977, 2998, -1000, 81321, 55570, 54464,
	67891, -57, -1000, -1000, -1000, -1000, -233, -1000, 20728, 118934,
	-1000, -1000, -1000, -1000, 1761, 118934, 895, -1000, -1000, 2997,
	-1000, 118934, 892, -1000, -1000, 2996, -1000, 2807, -1000, -1000,
	2335, -1000, -1000, 3657, -1000, -1000, 3656, -1000, 3655, 3654,
	3653, -1000, 1530, 1935, 3652, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 80791, 2223, -1000, -1000, 79717, -1000, 2334,
	3336, -1000, 80254, 1002, -1000, 977, 2332, -1000, 89864, 947,
	2328, -1000, 3651, 3256, 2589, 977, 2325, -1000, -1000, -1000,
	-1000, -1000, 1013, -1000, 59330, -1000, 59330, -1000, 1563, -1000,
	112272, -41, 86684, 3450, -1000, -88, -1000, -1000, -1000, 1038,
	-1000, 53374, -1000, 53374, 93058, 71171, 944, 730, 60930, 118934,
	-1000, -1000, -1000, -1000, 118934, -1000, -1000, -1000, -154, 2636,
	-1000, 71171, 54464, 118934, -1000, -1000, -1000, -1000, 118934, -1000,
	-1000, -1000, 71171, 79717, -1000, 98924, 79187, -1000, -1000, 1347,
	2461, -1000, -1000, -1000, 71171, 1269, 71171, 71171, 71171, -1000,
	98387, -1000, -1000, 1984, 1454, 3166, 1979, 86684, -1000, 1776,
	-1000, -1000, -1000, 3185, 108032, -1000, -1000, 2804, -1000, 63600,
	89334, -1000, 88804, -1000, 88274, -1000, 86684, -1000, 86684, -1000,
	3650, 3649, 3648, -1000, -1000, 3646, -1000, 3645, 3172, -1000,
	118934, 3159, -1000, 3644, 3331, 2800, 118934, -1000, 2929, 1619,
	1613, 108032, -1000, -1000, 108032, -1000, 108032, -1000, -1000, -1000,
	1436, -1000, -1000, 2417, -1000, -1000, -1000, -1000, 86684, -1000,
	-1000, -1000, -1000, -1000, -1000, 2796, -1000, 1659, -1000, 1744,
	-1000, 2772, 3174, -1000, 1312, -1000, -1000, 218, -1000, -1000,
	-64, -1000, 111742, -1000, 2442, -1000, 108032, -1000, 2363, 2788,
	2794, 1583, 2256, 2513, -1000, 38280, 2479, 47380, 2268, 117,
	-1000, -1000, 117, 117, 29742, -1000, -1000, 62534, 62534, 22367,
	1205, 44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008,
	44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008,
	44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008, 44008,
	44008, 44008, 44008, 44008, 44008, 44008, 1910, 44008, 1194, 44008,
	44008, 44008, 44008, 1885, -1000, -1000, 1866, 561, 1969, -1000,
	3463, 3463, 3463, 547, 547, 15161, 15161, 617, 3643, 788,
	-1000, 44008, -1000, 59, 44008, 22914, -1000, 455, 8437, 2409,
	-1000, 454, 23488, -1000, -1000, -1000, 24612, 638, 37706, 44008,
	990, 118934, -1000, -1000, 1341, 3480, 20182, 2806, 2671, 693,
	839, 809, 27470, 26896, 26322, 25748, 553, 44008, 44008, 44008,
	44008, 44008, 44008, 44008, 44008, -1000, -1000, 3489, -1000, 3480,
	-1000, -1000, -1000, -1000, 3480, 1204, 1203, 3480, -1000, 3480,
	3480, 9021, 9021, 37144, 36570, 35996, 47942, 35422, 44008, 25174,
	34848, 34274, -1000, 108032, -54, 3390, 44008, 246, -1000, 117640,
	-1000, 246, 246, 692, -89, 118934, 2527, 2527, 51767, 2327,
	2095, 2095, 2095, -1000, 877, 15785, 877, 97322, 2115, 877,
	877, 235, 305, 453, 49623, 2354, 97322, 776, 690, -26,
	-30, -34, -1000, -1000, -36, -38, -1000, -1000, 86684, 687,
	22914, 22367, 233, 1395, -91, 2494, 2491, 2489, -1000, 2476,
	1741, -94, 1191, 86684, 108032, -70, -1000, 8367, -96, -1000,
	1020, 231, 3480, -1000, -1000, -1000, -1000, -1000, 3642, 3641,
	-1000, 953, 685, 682, 409, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 680, 676, 676, 676, -1000, 369, 675,
	364, 672, 668, 667, -1000, -1000, -1000, -1000, -1000, 2771,
	86684, 108032, -233, 87744, -75, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 108032, -1000, -1000, -1000, 3640, -1000, 86684,
	-1000, -1000, 86684, 209, 2995, -1000, 86684, -1000, 86684, 207,
	2990, -1000, -1000, 108032, -1000, 86684, 86684, -1000, 108032, 108032,
	108032, 71171, 71171, 217, -1000, 86684, 865, -97, 1092, -64,
	-1000, -1000, -1000, 1250, -1000, 1778, -1000, -1000, -1000, -1000,
	-1000, -1000, 1288, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 994, -1000, -1000, -1000, -1000, -1000, -1000, 3477, 3474,
	-55, -1000, -1000, 22367, -1000, -65, 1564, 1863, -1000, 73831,
	2271, 3161, 3638, 2578, 3141, 1540, -1000, 1434, 1189, -1000,
	3305, 77583, 3353, 3370, 412, -1000, 2770, -1000, -1000, 912,
	1611, 1697, 1188, 77583, 1845, -1000, 62534, -1000, 2574, 3249,
	1391, 1378, 1391, 1391, 1376, -1000, 77583, 1681, 1187, 1186,
	1913, 1911, -1000, -1000, -1000, 1184, 1183, 813, 1907, -1000,
	-66, 3352, 3369, 232, -1000, 2769, 1182, -1000, -1000, -1000,
	3242, 86684, 22367, 1516, 1512, 1678, 1178, -56, -1000, 3350,
	3345, 1176, 1171, -1000, 5497, -1000, 71171, 1629, 2986, 2629,
	873, 2627, -1000, -1000, -1000, 873, -57, 67891, 108032, 214,
	-1000, 59, 44008, 44008, 59, 44008, 59, 3330, 2962, -1000,
	-1000, -1000, -1000, -1000, 3634, 1916, 2434, -1000, -1000, 665,
	2324, 2760, 108032, 2526, -59, 86684, -1000, 2960, 66271, 1845,
	2323, -1000, -1000, 78650, -1000, 2959, 502, 2322, -1000, 689,
	3632, 2954, -1000, 111212, -1000, 3169, 1230, 2953, 1048, 380,
	3388, -1000, 380, 59860, -1000, 108032, -1000, -41, 6532, 72771,
	-103, -104, 452, -1000, 97857, 108032, 1044, 73301, 108032, 3107,
	965, 54464, -1000, 54464, -110, -154, 2622, 944, 944, 873,
	-1000, 873, -1000, 86684, 2792, -1000, -1000, 71171, 944, 944,
	944, -1000, -1000, -1000, -1000, 3631, 3630, 3627, -1000, -1000,
	-1000, 966, 86684, 108032, 86684, -1000, 211, -1000, 108032, -1000,
	108032, 108032, 86684, -1000, 966, 108032, 966, 108032, 966, 108032,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 59, 44008, -1000,
	-1000, 3626, 1588, -1000, 2790, -1000, 2789, -1000, -3, -1000,
	-1000, -1000, -1000, -1000, 1777, 86684, 86684, 86684, 86684, 108032,
	3089, -1000, 108032, 3076, 86684, -1000, 77583, -1000, 2363, 2788,
	-1000, -1000, -1000, -1000, -1000, -1000, 1343, 2177, -1000, 2456,
	-1000, 1461, -1000, -1000, -1000, 118934, 48504, -1000, -1000, 118934,
	1800, -1000, 46818, 46256, -1000, -1000, 1648, 86684, 2530, -1000,
	2530, -213, -1000, 117516, 2453, 86684, -1000, -1000, -1000, -1000,
	-1000, 896, 1305, 1305, 1265, 1265, 1265, 1265, 3261, 4675,
	2012, 948, 6367, 6367, 843, 843, 843, 843, 843, 6367,
	933, 547, 547, 933, 933, 933, 933, 933, 547, 547,
	547, 6367, 6367, 6367, 15161, 9184, 7276, 44008, 44008, 1169,
	1856, 561, 6608, 44008, 7994, 7994, 7994, 7994, -1000, 2017,
	-1000, -1000, -1000, -1000, 2758, 663, 47942, 47942, -1000, -1000,
	-1000, -1000, 24050, 44008, -1000, -1000, -1000, -1000, 33700, -1000,
	-1000, 117032, -315, 451, -162, -21, -1000, 44008, 44008, 44008,
	447, -1000, 204, 44008, 108032, -1000, 114400, 774, -109, -1000,
	-113, 1399, -1000, 44008, -1000, -1000, 1168, -1000, 1166, 1165,
	1162, -1000, 660, 441, -1000, 203, -1000, 2070, 658, 657,
	44008, -1000, -1000, -1000, -1000, -1000, 116471, -1000, -1000, 116442,
	-1000, -1000, 116405, -1000, -1000, 116376, -1000, -1000, -1000, 118848,
	15098, 15032, 14588, 6306, 14420, 13567, -116, 432, -118, 429,
	886, 884, 421, 420, 417, -119, -1000, 3625, 3624, 3623,
	-1000, 3621, 3619, 3618, -1000, 3617, 3614, 3612, -1000, 3611,
	3610, 3607, -1000, 3606, 3605, 3604, -1000, 3603, 3602, 3600,
	-1000, 3599, 3598, 3597, -1000, 3596, 3595, 3593, -121, 406,
	-1000, 2757, -162, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 405, -1000, 404, -1000, 118577, -162, 402, 2533, -1000,
	47942, 47942, 47942, -1000, 400, -1000, 117156, -1000, 118491, 33138,
	33138, 33138, 399, 118219, 44008, -162, -127, -1000, -128, -1000,
	-1000, 532, -130, 950, 32564, 50695, 22367, -1000, 950, 950,
	44008, -1000, 44008, 2480, -1000, -1000, -1000, -1000, 2472, 1991,
	2527, 51767, -1000, -1000, -1000, -1000, 97322, -1000, 3450, 2598,
	-1000, 97322, -1000, -1000, 108032, 502, -1000, 97322, 97322, 22367,
	877, -1000, 877, 97322, 555, -1000, -1000, -1000, -1000, -1000,
	393, 56658, -21, 202, 22367, 977, -1000, 2599, 2599, 2599,
	2599, -1000, -1000, 108032, 1161, -61, -124, 3425, -1000, 1978,
	-1000, 62534, -1000, 785, 1082, 22367, -1000, -1000, -1000, 654,
	-1000, 3480, 3480, -1000, 3480, 108032, 2754, 152, 131, 66271,
	66271, 3590, -1000, -1000, 209, -1000, 86684, 209, 209, -1000,
	86684, 86684, 2186, -1000, 213, -1000, 210, -1000, -1000, -79,
	-1000, 984, 30304, -1000, 1250, -1000, -1000, 1498, -1000, 1923,
	-1000, 1202, -1000, -1000, -1000, -1000, 30304, -1000, 4621, 108032,
	108032, 86684, -1000, 108032, -1000, 2062, 3420, 1873, 2416, 2413,
	-1000, 2321, 110682, 2313, 62534, 108032, -1000, -1000, 653, 932,
	2452, 2451, 1040, 108032, 108032, 2449, 110152, 109622, -1000, 3588,
	108032, 1983, 44008, 66271, 3239, 2134, 2485, 59, 59, -1000,
	-1000, 59, 652, 1280, 86684, 86684, 108032, 86684, 1594, -1000,
	-1000, -1000, -1000, -1000, 78113, -1000, -1000, 3484, 3483, -1000,
	1391, -1000, -1000, -1000, 1391, 1845, 1582, 108032, 86684, 66271,
	108032, 108032, 1661, 108032, 1061, -1000, 813, 2010, 59, 59,
	-1000, -1000, 59, 651, 22367, 1894, -1000, 2861, 108032, 3526,
	108032, 108032, 108032, 66271, 3157, 109092, 108032, 108032, 66271, 5497,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 67361, 1053, 977, 1653, 1158, 77583, 54464, 961, 54464,
	2602, -1000, -1000, 19636, -1000, 118934, 118934, -1000, 118934, -1000,
	63070, 108032, -1000, 1000, 108032, 73301, 930, 2940, 58800, -233,
	944, 71171, 86684, -59, 108032, -1000, -1000, 1845, 2927, 502,
	2319, -1000, 71171, 3386, 2922, 649, 3587, 3579, -1000, 86684,
	2220, 2316, -1000, -1000, 108562, 3038, 813, 108032, 950, 51767,
	1889, -1000, 57195, 1016, 108032, 1764, 111, -1000, -1000, -1000,
	-13, 108032, -1000, 794, -1000, -1000, 6532, 6532, 944, -266,
	645, -1000, 867, 866, 55017, 71171, -133, -1000, -1000, -1000,
	-1000, 2313, 86684, 108032, 1260, 2584, 108032, -138, -1000, 201,
	644, -1000, 3129, -1000, -154, -1000, 965, 54464, 2751, -1000,
	-1000, 983, -1000, 1290, 944, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -42, 108032, -233, -233, -60,
	-61, -1000, 966, -1000, 966, -1000, 966, -1000, 118934, -1000,
	-1000, 1575, 1568, 108032, -1000, 22367, 108032, 86684, 22367, 86684,
	2787, 2786, -1000, -1000, -1000, 108032, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1059, -1000, 1800, 2175, -1000, 638, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2395, -1000,
	-62, 29742, 879, -1000, -1000, 86684, -43, 44008, 44008, 5742,
	4770, 44008, 47942, 47942, -1000, 44008, 580, -1000, -1000, -1000,
	-1000, -1000, 2748, 636, 44008, 62534, 7531, 5868, -1000, 392,
	11189, 933, -1000, 44008, -1000, 390, 32002, -1000, 117769, -24,
	-141, -1000, 16344, -162, -152, -1000, -1000, 784, -1000, 2931,
	-1000, 44008, 118134, 2338, 1980, 1783, 1616, 3480, 3525, 19090,
	-1000, 60395, 988, 2127, 115815, -1000, -1000, -1000, -1000, 62534,
	62534, 44008, 44008, -1000, 44008, 44008, 44008, -1000, -1000, -1000,
	3480, 882, -1000, -1000, -1000, 882, -1000, -1000, 1391, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1391, -1000, 44008, -1000, -1000, 2745,
	44008, -1000, 62534, 62534, 47942, 47942, 47942, 47942, 47942, 47942,
	47942, 47942, 47942, 47942, 47942, 47942, 47942, 47942, 47942, 47942,
	47942, 47942, 47942, 2470, 47942, 3451, 3451, 3451, -1000, 2784,
	2745, 44008, 44008, 62534, 388, 387, 384, -1000, 44008, -162,
	-1000, -1000, 6532, 635, -1000, 2383, -1000, 2668, -1000, 44008,
	-1000, -146, -1000, 2354, -1000, -1000, 2668, 2668, -153, 118934,
	51767, 51767, -1000, 632, 44008, 2471, -1000, -1000, 773, -311,
	-1000, 863, -1000, -1000, -1000, -1000, -1000, 502, -1000, -1000,
	-1000, 200, 97322, 97322, 772, -1000, -160, -1000, -1000, -161,
	-1000, 3382, 378, 22367, -1000, 950, 3135, -1000, -1000, -1000,
	-1000, -1000, -1000, -233, 108032, 108032, 2150, 3523, -1000, 3481,
	781, 771, 198, 3480, 377, 376, 366, -233, 108032, 108032,
	108032, -1000, -1000, -1000, -1000, 209, -1000, -1000, -1000, 207,
	-1000, -1000, -1000, -1000, 2546, -1000, -64, -1000, -1000, -1000,
	44008, -1000, -1000, 3154, 1157, 1152, -1000, -1000, -1000, -1000,
	3233, 87214, 3419, 1851, 1834, 2918, -1000, 2310, -1000, 1021,
	-1000, 1708, -1000, 44008, 631, 2581, 630, 627, 3577, 1836,
	3575, 1043, 2896, 2186, 2894, 2186, -1000, -1000, -1000, 923,
	-1000, 118934, -1000, 2134, -1000, 626, 625, -1000, -65, 1541,
	1816, 982, -1000, -1000, 44008, 44008, 96792, -1000, 425, 3160,
	-51, -1000, -1000, 1652, 1149, -1000, -1000, -1000, -1000, 1845,
	1635, 1143, -1000, -1000, -1000, -1000, -1000, -1000, 981, -1000,
	2846, 2845, 108032, -1000, 979, -1000, -1000, 44008, -1000, -66,
	1140, 3342, 2308, 86684, 1138, -1000, 1137, -1000, -1000, -1000,
	3344, 2186, 2886, 1136, -1000, -1000, -1000, -1000, -1000, 66816,
	-1000, 108032, 86684, 1510, 873, -1000, 2274, 873, 961, 2726,
	-1000, 2506, -1000, 86684, 3574, 365, -166, -67, 62534, 3381,
	-1000, 2188, 615, 86684, 906, -1000, 3450, -1000, -1000, -1000,
	-1000, 3334, 86684, 3380, 2884, 977, 59, 86684, 3495, -1000,
	-1000, 3379, 86684, 2881, 2218, 2306, 2426, 813, 72241, 977,
	2121, -77, -1000, 1764, 31428, 3151, -167, -1000, -1000, -1000,
	950, 59860, 51767, 44008, 3573, -169, -1000, -1000, -1000, -1000,
	-1000, 94667, 94667, 71171, 71171, 71171, 944, 108032, 108032, 73301,
	-1000, -1000, 623, 108032, 108032, 621, -1000, 108032, 108032, 3572,
	71171, -69, 618, -1000, 862, 860, 859, -1000, -1000, -1000,
	-1000, -1000, 965, -1000, -154, 59, -1000, 2146, 86684, -1000,
	18544, -1000, -1000, -1000, -1000, -1000, -1000, 966, -1000, -1000,
	2016, 2261, 2016, 1788, 1779, -1000, -1000, 2174, -1000, -1000,
	-1000, -1000, 2518, 3156, 22367, 3296, 7994, 44008, 44008, 485,
	533, 517, 7994, 44008, 44008, 62534, 4967, -174, 44008, 44008,
	-1000, 44008, 767, 118934, 3521, 44008, 360, 359, -1000, -1000,
	-1000, 3452, -1000, -1000, -1000, 118934, 44008, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 352, -1000, 112, -1000, -1000, -1000,
	113862, -1000, 44008, 349, 3231, -1000, 347, 344, 10823, 5655,
	115786, 115749, 115720, 340, -1000, -1000, 336, 333, 118934, 2784,
	118934, -1000, -1000, 1058, 1058, 1342, 1342, 1342, 1342, 3451,
	594, 887, 828, 1939, 1939, 1939, 2715, 769, 769, 1939,
	1939, 1939, 2722, 2429, 616, 4847, -1000, -1000, 118934, 118934,
	332, -1000, -1000, -1000, -162, 330, 6532, -1000, 2664, 3229,
	118934, -1000, 51767, 2664, 2664, -1000, -1000, 1991, 108032, 118934,
	51767, -1000, 2598, -1000, 16901, -1000, 22367, -1000, -1000, -1000,
	-1000, 3450, -1000, 56658, -1000, 611, -1000, -23, -1000, 3135,
	-1000, 844, -1000, -233, -233, -1000, -1000, 760, 3571, 780,
	22367, 329, -1000, -1000, -1000, -233, -233, -233, -1000, -1000,
	-1000, 3105, 118934, 108032, 108032, 1373, 92521, 1749, -1000, -1000,
	1905, 2412, -1000, 3416, 3413, 108032, 2873, -1000, 2848, -1000,
	1040, 115159, 52302, -1000, 52302, 108032, -1000, -1000, 1952, 2509,
	1078, -1000, 3189, 108032, -1000, 108032, -1000, -1000, -1000, 108032,
	108032, 86684, 108032, -1000, 2854, -177, 118934, -71, -1000, 829,
	-1000, 1364, -1000, 17998, 108032, 86684, 108032, 86684, 2057, -1000,
	-1000, -1000, 2853, -179, 22367, -1000, 3520, 3514, 2872, 3194,
	3512, 108032, -1000, 108032, 86684, 3104, -1000, -1000, -1000, -1000,
	1617, 1134, 961, -72, 610, -1000, 826, -1000, -1000, 824,
	961, -1000, 71171, 54464, 502, -1000, 2566, -1000, 91991, 2193,
	59, -1000, 3570, 95202, 608, -1000, 2144, -1000, 595, 66271,
	1845, 59, 86684, -1000, -1000, 502, 326, -73, -1000, 2910,
	1034, 22367, 86684, 2871, 2428, 813, 72241, -1000, 1230, 2513,
	-1000, -76, -1000, 634, 59, 2121, -1000, -77, 118934, -1000,
	823, -1000, -182, -1000, -1000, 322, -1000, 3096, 3095, -1000,
	2697, 52302, 607, 604, 108032, 3093, -1000, -1000, -184, 2215,
	2215, 71171, 54464, 71171, -1000, 965, -1000, 2361, -1000, -1000,
	-1000, -1000, -1000, 22367, 1481, -1000, 603, 593, -1000, -1000,
	-1000, -1000, 3156, 7994, 7994, 44008, 44008, 44008, 7994, 4967,
	-185, -1000, 7994, 7994, -162, -1000, -1000, 117769, -1000, -1000,
	-1000, 118934, -1000, 17452, 2038, -1000, 115130, -1000, 29742, -1000,
	-1000, 44008, 44008, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 47942, 2703, 592, 62534, -1000, -1000, 319, 986, 44008,
	45694, 2354, 986, 986, -1000, -190, -1000, -1000, -1000, 3450,
	-23, -1000, -1000, 3567, 22367, -1000, 71171, 778, -1000, 3565,
	-1000, -1000, -1000, -1000, -1000, 2616, 2210, -1000, -1000, 1904,
	2410, -1000, 2204, 1120, 2203, -1000, 108032, -1000, 108032, -1000,
	22367, 108032, 2700, 2292, -1000, 932, 2447, 591, 47942, 86684,
	893, -1000, 3407, 2653, -191, -1000, 108032, 44008, 108032, -193,
	-199, 2290, -1000, -1000, 2287, 44008, -1000, 62534, 581, 2186,
	2186, -201, -206, -1000, -1000, 44008, 1109, 108032, 30866, -1000,
	3564, 3160, -1000, -1000, -1000, -1000, 108032, 44008, 1105, -1000,
	-1000, -1000, 3503, 2186, 22367, -1000, 2186, 2186, 3194, 1075,
	108032, 86684, -1000, 2331, 2331, 71171, 54464, -1000, -79, 961,
	3371, 2555, 3563, -1000, -1000, -1000, -1000, 2444, -1000, -1000,
	108032, 2443, 945, -1000, -207, -1000, 819, 817, 73301, 930,
	925, -1000, -1000, -1000, -1000, 502, 3366, -1000, 3497, 567,
	563, 108032, 2202, 562, 22367, 3143, 813, 72241, -1000, 3038,
	1764, -1000, 2288, 108032, 3138, -1000, 2513, 561, -1000, 944,
	560, 557, 3362, 3362, -212, 52302, 52302, -214, 550, 944,
	-1000, -215, -1000, -1000, -1000, -1000, -86, -1000, 606, 544,
	-1000, -1000, 86684, 86684, 44008, 44008, -1000, 7994, 7994, 7994,
	-1000, 318, -1000, -1000, 2121, 3228, -1000, -139, 115093, 115064,
	4875, 47942, 62534, -217, -1000, -1000, 108032, 118934, -140, -1000,
	118934, 549, 548, 435, -1000, -1000, -1000, 556, -1000, -1000,
	3560, -1000, 96262, 108032, -1000, 2197, 108032, 95732, 108032, -1000,
	1466, -1000, -1000, -1000, 108032, 2299, -1000, -1000, 1037, 44008,
	4847, 546, 44008, -1000, 3364, -1000, 2540, 2735, 1820, 52302,
	-1000, 3156, -1000, 114503, -1000, 1032, 1898, -1000, -1000, 118934,
	3194, 52302, -1000, -1000, 545, 534, 118934, 531, 815, 2701,
	-1000, -1000, -1000, -1000, 118934, 530, 3342, -1000, -1000, -1000,
	-1000, 2186, 86684, -1000, -1000, -1000, -223, -1000, -1000, 1887,
	59, 2013, 2610, -1000, 2193, 520, -1000, -1000, 2182, 2545,
	-1000, 95202, 30304, 30304, 313, 3363, 925, -1000, 3455, -1000,
	3361, 59, -1000, 3495, 52302, -1000, 86684, 52302, 2196, 1953,
	2407, 72241, -1000, 2426, -1000, -1000, -224, 108032, 1764, -1000,
	-1000, 71171, 71171, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1032, -226, -231, -1000, 71171, -1000,
	-1000, 2361, -1000, 108032, -1000, 108032, -1000, -1000, -232, -234,
	-1000, 2027, 44008, 29742, -1000, -1000, 4875, -237, -1000, -147,
	-1000, 3357, 45694, 3544, 3536, 3535, -1000, -1000, -1000, 1876,
	-1000, 108032, -1000, -1000, 1867, -1000, -1000, -1000, 2868, 2659,
	114466, 2385, 108032, 114437, -1000, 2732, -1000, -1000, 2555, 504,
	-1000, -1000, -1000, -1000, 879, 108032, 2555, 2658, 86684, 1035,
	-242, 2016, 2016, 44008, 29180, 2052, 44008, -1000, -1000, 3194,
	-1000, 2692, 3462, -1000, 930, -1000, 2048, 108032, -1000, 3182,
	-1000, 3092, -1000, -1000, -1000, 2566, 59, -1000, -1000, 59,
	-1000, 309, -243, 1034, -245, 86684, 1855, -1000, 813, -1000,
	2428, 950, -1000, -1000, -248, -250, 1820, 1032, 941, -251,
	-1000, -259, -264, -1000, -1000, 263, 45132, 45132, 45132, -162,
	-213, -1000, 108032, 503, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2840, 951, -1000, 2185, 1831, 154, 1063, -1000, -1000,
	2010, 108032, -1000, -1000, -1000, 949, 502, -1000, 44008, 1032,
	-267, -1000, 1015, -273, -1000, 999, -274, -1000, 2698, -1000,
	-275, 2186, 946, 3328, -1000, -1000, -1000, 2182, 86684, -280,
	-1000, -1000, 2307, -1000, 2555, 945, -1000, -1000, 1032, 495,
	1820, 490, 1384, 813, -1000, -1000, 1391, 3143, 3044, 944,
	944, 2555, 1820, 950, 489, 944, -1000, -1000, -1000, 2903,
	-1000, 49066, 2216, 1746, 117061, 2903, 2903, -1000, -1000, 108032,
	3303, -1000, 2195, 2187, 1446, -1000, -1000, -1000, -1000, -1000,
	-1000, 2653, -1000, -282, 3299, 2385, 118934, 2555, -1000, 2016,
	2609, -1000, 2016, 2695, -1000, 2047, -1000, -1000, -1000, 1704,
	3449, 1899, 486, -1000, 108032, 1733, 1712, 3534, 2013, 2182,
	1820, 52302, 2555, 52302, -1000, -1000, 108032, -1000, 1953, 1292,
	-1000, -1000, 2010, 2555, -1000, -1000, -1000, 1772, 3399, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 812, -1000, 3061,
	-1000, 1057, 2152, 2152, 950, -1000, 806, 2185, -1000, -1000,
	483, -1000, 482, -1000, 2136, -1000, -1000, -1000, -1000, 108032,
	-1000, -1000, 3533, -1000, 930, -1000, 2555, -283, 2010, -288,
	-1000, -233, 1855, -1000, 1493, 941, 2010, 1723, -1000, -1000,
	2103, 44570, 44008, -1000, 3434, -1000, -1000, 2477, -1000, -1000,
	44008, 2653, 44008, 44008, 58265, -289, -1000, 2182, 2010, 1032,
	941, 1820, 1384, 59860, 950, 941, -1000, -1000, -1000, 118934,
	-1000, -1000, -1000, 118934, -1000, -290, -291, -266, 94667, 2119,
	1899, 941, 1820, 950, 2555, -1000, -262, -1000, 950, 2010,
	1104, -298, -1000, -1000, -1000, -1000, 950, 2555, -1000, 2010,
	-1000, -1000, -1000, -1000, 468, -1000, -1000, 2010, 941, 44008,
	941, 950, -299, 950, -1000, 2010, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4388, 4387, 4385, 4384, 4381, 4380, 4378, 4377, 4376,
	4375, 4374, 4372, 4371, 4368, 4366, 4364, 4363, 4361, 4358,
	4357, 4355, 4353, 4352, 4351, 4343, 4341, 4340, 4339, 4338,
	4327, 4325, 4322, 4320, 4319, 4313, 4312, 4310, 4308, 4307,
	4303, 4299, 4296, 4293, 4291, 4290, 4289, 4287, 4285, 4282,
	4280, 4277, 4276, 4274, 4272, 4270, 4267, 4259, 4258, 49,
	4256, 4255, 4252, 4251, 4250, 4247, 4245, 4238, 4237, 4236,
	4234, 4233, 4232, 4230, 4227, 4225, 4221, 4219, 4218, 55,
	4217, 258, 4215, 4211, 4210, 4209, 4208, 4206, 4205, 4204,
	4203, 4201, 4200, 4197, 257, 4194, 151, 4189, 4188, 4185,
	4182, 4180, 254, 4171, 4170, 4169, 4167, 261, 4166, 4165,
	4164, 4163, 4162, 4161, 4160, 4159, 4158, 4156, 4155, 101,
	138, 4154, 4152, 1403, 4150, 4149, 4144, 4140, 4138, 4137,
	4136, 4129, 4128, 4127, 229, 4126, 252, 4119, 4118, 4116,
	4114, 4113, 4112, 4111, 4109, 4104, 4103, 4101, 4100, 4095,
	4094, 4093, 4092, 4089, 4086, 4084, 4079, 4059, 4053, 4051,
	4050, 4049, 4048, 4045, 4044, 4043, 4041, 4039, 4038, 4032,
	4031, 4027, 4026, 225, 262, 178, 4023, 4022, 250, 248,
	4020, 4018, 4017, 4016, 4015, 117, 4, 264, 4014, 4013,
	84, 94, 85, 90, 95, 87, 4011, 100, 4007, 113,
	57, 4004, 19, 3, 155, 218, 10389, 213, 4000, 3999,
	3997, 238, 175, 3995, 216, 3993, 3992, 3990, 3989, 60,
	46, 162, 161, 154, 152, 382, 3988, 141, 89, 72,
	53, 42, 15, 71, 244, 21, 3985, 240, 10, 127,
	1, 34, 3984, 3982, 3980, 3979, 3294, 112, 3978, 249,
	217, 147, 3977, 3976, 3974, 611, 3973, 3972, 45, 3971,
	184, 83, 116, 62, 114, 3970, 134, 32, 3969, 150,
	75, 3967, 136, 96, 77, 8318, 6138, 3966, 110, 63,
	81, 1562, 157, 145, 182, 206, 148, 139, 186, 198,
	193, 160, 865, 3965, 230, 3962, 3361, 93, 166, 3960,
	3957, 3955, 76, 183, 103, 3954, 3953, 66, 16, 22,
	2, 9, 123, 24, 18, 8, 3952, 23, 111, 38,
	31, 3950, 27, 3947, 3945, 3944, 3943, 3942, 26, 144,
	3941, 259, 3937, 153, 48, 51, 3936, 30, 191, 3935,
	205, 121, 3934, 3932, 239, 187, 170, 3928, 68, 209,
	3927, 3926, 3925, 3924, 3923, 118, 7, 120, 3922, 3918,
	133, 3916, 47, 234, 179, 3915, 56, 3912, 3910, 156,
	99, 132, 253, 211, 202, 102, 208, 177, 210, 3909,
	3908, 3907, 168, 3904, 3903, 199, 173, 3902, 3901, 189,
	263, 86, 43, 70, 221, 69, 180, 158, 3900, 181,
	3896, 3894, 260, 164, 195, 6, 13, 79, 115, 3891,
	5, 212, 140, 215, 106, 3890, 6165, 2192, 1985, 3888,
	3887, 128, 109, 67, 104, 135, 241, 65, 3886, 3885,
	196, 3884, 3883, 3882, 3879, 171, 3876, 3874, 3873, 137,
	169, 214, 3871, 92, 61, 44, 20, 126, 268, 251,
	108, 201, 165, 235, 3870, 3869, 3867, 167, 3866, 88,
	223, 3865, 176, 236, 54, 3864, 380, 3861, 130, 1978,
	59, 129, 3852, 203, 3847, 3846, 3843, 3842, 3841, 3840,
	3839, 817, 220, 3834, 3830, 3828, 58, 174, 3827, 237,
	192, 159, 91, 122, 3823, 82, 2433, 3822, 570, 586,
	52, 245, 97, 247, 3821, 105, 50, 3820, 0, 11591,
	6744, 10051, 10570, 3819, 4461, 3810, 3809, 3808, 190, 125,
	3805, 3803, 3801, 107, 3800, 78, 3799, 3797, 64, 3796,
	36, 12, 17, 28, 25, 596, 466, 3795, 3794, 131,
	119, 142, 3791, 256, 207, 3790, 3789, 3785, 3781, 80,
	3780, 39, 3779, 37, 3778, 3776, 41, 14, 29, 3775,
	3774, 222, 3773, 197, 226, 3770, 146, 3769, 3367, 124,
	3766, 3765, 232, 73, 3764, 228, 3763, 3286, 3762, 3758,
	33, 3756, 3754, 224, 163, 194, 3753, 3752, 149, 3751,
	3750, 3749, 265, 3747, 3742, 35, 3741, 11, 3740, 3738,
	188, 3076, 3736, 3733, 40, 3731, 172,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 46, 46,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 34,
	29, 30, 31, 32, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 35, 35, 17,
	17, 37, 37, 18, 18, 38, 38, 572, 572, 21,
	40, 22, 41, 15, 573, 573, 573, 573, 33, 23,
	42, 26, 26, 26, 26, 26, 188, 188, 188, 188,
	20, 20, 36, 36, 222, 222, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 571, 571, 224, 224, 223, 218, 218, 574, 574,
	225, 225, 225, 227, 227, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 470, 470, 470, 503, 503, 502,
	502, 502, 501, 501, 587, 587, 588, 588, 588, 588,
	588, 122, 122, 368, 368, 368, 48, 48, 48, 48,
	48, 566, 566, 190, 190, 190, 192, 192, 191, 191,
	191, 191, 70, 70, 579, 579, 580, 580, 578, 581,
	581, 581, 189, 189, 189, 118, 118, 118, 118, 118,
	119, 119, 120, 120, 193, 193, 193, 195, 195, 194,
	194, 194, 194, 194, 194, 194, 194, 199, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 98, 98, 505,
	505, 506, 506, 184, 184, 185, 185, 185, 185, 186,
	186, 187, 187, 187, 62, 196, 196, 198, 198, 197,
	197, 50, 50, 50, 50, 50, 50, 50, 51, 51,
	51, 51, 51, 52, 52, 52, 52, 52, 52, 53,
	53, 53, 53, 53, 53, 60, 60, 60, 60, 175,
	175, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 67, 67, 67, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 590, 590, 591, 591, 592, 592,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 76, 76, 330,
	330, 295, 295, 77, 77, 77, 78, 78, 79, 79,
	64, 64, 564, 564, 345, 345, 461, 461, 81, 81,
	367, 367, 82, 82, 82, 82, 82, 82, 83, 83,
	83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 91,
	91, 91, 91, 91, 92, 92, 92, 89, 89, 89,
	86, 86, 86, 85, 85, 85, 90, 90, 90, 563,
	284, 284, 88, 88, 88, 87, 87, 87, 346, 346,
	93, 93, 93, 93, 296, 94, 94, 94, 94, 94,
	94, 94, 94, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 463, 463, 95, 95,
	95, 428, 428, 99, 99, 99, 383, 383, 100, 100,
	100, 100, 100, 101, 101, 101, 101, 101, 101, 121,
	121, 121, 121, 121, 121, 568, 568, 338, 338, 249,
	249, 249, 249, 111, 111, 111, 111, 112, 112, 112,
	113, 113, 180, 180, 128, 128, 128, 128, 128, 127,
	127, 127, 127, 127, 127, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 58, 58, 59, 59, 59, 59,
	59, 130, 130, 584, 584, 132, 129, 129, 129, 131,
	131, 131, 131, 133, 134, 134, 134, 134, 134, 134,
	134, 134, 135, 135, 495, 495, 354, 354, 493, 493,
	515, 515, 494, 494, 300, 300, 300, 300, 300, 301,
	301, 301, 504, 504, 504, 504, 504, 504, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 181, 181, 182, 183, 183,
	183, 183, 183, 159, 159, 159, 174, 174, 174, 174,
	174, 174, 174, 162, 162, 162, 146, 146, 137, 137,
	137, 137, 137, 137, 137, 141, 141, 141, 141, 141,
	141, 141, 141, 138, 138, 148, 148, 148, 148, 148,
	142, 142, 143, 143, 143, 143, 169, 169, 145, 145,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 139,
	139, 139, 139, 150, 150, 150, 150, 390, 390, 390,
	173, 173, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 172, 172, 172, 172, 172, 172, 582,
	582, 583, 583, 166, 166, 166, 166, 166, 166, 442,
	442, 160, 160, 160, 160, 165, 165, 165, 165, 168,
	168, 168, 168, 373, 373, 157, 157, 157, 158, 158,
	158, 163, 163, 164, 161, 161, 167, 167, 167, 167,
	140, 140, 140, 594, 594, 594, 170, 170, 156, 156,
	171, 171, 171, 171, 171, 171, 171, 171, 152, 152,
	152, 151, 151, 151, 151, 154, 154, 155, 155, 155,
	155, 155, 153, 144, 565, 565, 561, 561, 561, 561,
	561, 561, 561, 561, 562, 562, 562, 562, 567, 567,
	104, 104, 104, 104, 104, 114, 114, 114, 114, 114,
	105, 105, 105, 105, 105, 107, 107, 106, 106, 106,
	106, 71, 71, 71, 71, 71, 14, 14, 14, 72,
	72, 240, 240, 202, 202, 202, 319, 319, 203, 203,
	308, 308, 308, 308, 200, 200, 201, 201, 73, 73,
	595, 595, 595, 575, 575, 575, 576, 576, 576, 576,
	576, 576, 302, 302, 303, 303, 408, 408, 408, 408,
	408, 306, 306, 306, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 309, 309, 226, 226, 226, 317, 318,
	318, 310, 310, 316, 315, 315, 314, 314, 313, 313,
	311, 312, 312, 312, 321, 321, 320, 323, 323, 322,
	407, 524, 524, 526, 526, 526, 526, 526, 526, 526,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 391, 391, 596, 596, 522, 522, 522, 523, 518,
	518, 519, 519, 519, 519, 519, 304, 304, 305, 305,
	305, 305, 520, 521, 336, 336, 446, 525, 525, 527,
	527, 529, 597, 597, 597, 597, 597, 597, 598, 598,
	598, 406, 406, 405, 405, 328, 328, 530, 530, 530,
	530, 531, 531, 531, 531, 531, 534, 533, 532, 532,
	532, 532, 532, 75, 75, 75, 370, 370, 369, 369,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 177, 177, 252, 252, 69,
	69, 69, 12, 12, 12, 577, 577, 577, 74, 74,
	74, 74, 74, 74, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 570, 570, 569, 569, 253, 253,
	600, 600, 80, 80, 80, 80, 80, 80, 80, 80,
	464, 464, 465, 465, 68, 68, 68, 68, 68, 392,
	392, 389, 389, 388, 388, 335, 335, 444, 444, 444,
	445, 257, 257, 258, 258, 219, 219, 219, 28, 27,
	19, 19, 24, 24, 25, 25, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 44, 44, 44,
	44, 47, 47, 43, 43, 43, 43, 45, 45, 39,
	39, 585, 585, 586, 586, 110, 110, 115, 115, 115,
	115, 115, 116, 116, 116, 116, 117, 117, 117, 117,
	126, 126, 176, 176, 176, 176, 176, 176, 176, 49,
	49, 49, 49, 61, 61, 61, 61, 124, 602, 602,
	602, 125, 125, 125, 601, 601, 250, 250, 402, 402,
	403, 403, 603, 603, 404, 404, 404, 404, 404, 243,
	242, 244, 244, 245, 245, 66, 66, 66, 235, 235,
	234, 232, 232, 507, 507, 237, 237, 238, 238, 228,
	228, 229, 229, 230, 230, 231, 231, 241, 241, 604,
	604, 102, 102, 102, 179, 179, 294, 294, 294, 399,
	399, 399, 329, 329, 264, 264, 401, 401, 401, 401,
	366, 366, 366, 178, 178, 343, 343, 356, 356, 357,
	357, 458, 458, 358, 108, 108, 109, 109, 123, 123,
	206, 206, 204, 204, 204, 204, 204, 204, 204, 204,
	211, 211, 212, 212, 213, 213, 214, 215, 215, 215,
	215, 347, 347, 216, 216, 216, 205, 205, 205, 207,
	207, 207, 207, 207, 207, 207, 210, 210, 210, 210,
	217, 217, 217, 209, 209, 541, 541, 541, 543, 543,
	545, 545, 544, 544, 540, 540, 542, 542, 599, 599,
	372, 372, 372, 326, 327, 324, 324, 325, 325, 333,
	333, 331, 332, 332, 334, 334, 443, 443, 443, 220,
	220, 220, 363, 363, 363, 363, 364, 364, 395, 395,
	393, 393, 393, 393, 394, 394, 396, 396, 396, 397,
	397, 398, 398, 360, 360, 361, 361, 362, 362, 362,
	362, 424, 424, 208, 208, 208, 340, 340, 340, 341,
	341, 414, 414, 414, 414, 414, 414, 415, 415, 413,
	413, 413, 413, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 448, 449, 449, 342, 342, 450, 400, 400,
	559, 559, 559, 560, 560, 441, 441, 451, 451, 451,
	451, 451, 451, 439, 439, 440, 440, 459, 460, 460,
	376, 376, 376, 376, 374, 374, 377, 377, 377, 377,
	377, 375, 375, 452, 452, 452, 452, 365, 365, 453,
	453, 453, 453, 454, 455, 455, 456, 456, 409, 410,
	410, 466, 466, 466, 466, 468, 339, 339, 339, 339,
	339, 517, 516, 516, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 483, 483, 483, 483, 483,
	483, 483, 469, 469, 469, 469, 469, 473, 473, 473,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 474, 474, 479, 479, 480, 480, 480, 475, 476,
	481, 481, 481, 481, 605, 605, 485, 485, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 471, 471, 471,
	478, 478, 478, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 384, 384, 386, 386,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 418, 418, 418,
	418, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 535, 535, 535, 535,
	535, 535, 535, 535, 420, 420, 538, 538, 539, 539,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 546,
	546, 547, 547, 549, 549, 550, 550, 551, 552, 552,
	552, 553, 554, 554, 548, 548, 555, 555, 555, 555,
	556, 556, 557, 557, 557, 557, 557, 558, 558, 558,
	558, 558, 430, 430, 431, 431, 437, 437, 437, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 254, 254, 254, 254, 254,
	352, 352, 350, 350, 350, 353, 353, 351, 351, 349,
	349, 348, 348, 427, 427, 425, 425, 429, 429, 378,
	378, 484, 484, 484, 484, 484, 484, 484, 484, 379,
	379, 379, 387, 380, 380, 381, 381, 381, 381, 381,
	421, 422, 382, 382, 382, 423, 423, 432, 436, 436,
	435, 434, 434, 433, 433, 411, 411, 412, 412, 359,
	359, 606, 606, 355, 355, 457, 457, 457, 457, 298,
	298, 344, 344, 297, 297, 289, 289, 290, 290, 290,
	290, 337, 337, 438, 438, 486, 486, 487, 487, 488,
	488, 489, 489, 490, 491, 492, 426, 426, 274, 273,
	261, 262, 272, 271, 270, 260, 263, 267, 268, 269,
	265, 266, 280, 279, 278, 233, 236, 285, 286, 286,
	288, 288, 287, 287, 276, 277, 462, 259, 291, 291,
	292, 292, 292, 293, 293, 293, 293, 255, 255, 256,
	256, 281, 281, 282, 283, 283, 275, 275, 275, 246,
	246, 246, 247, 247, 248, 248, 500, 500, 497, 497,
	497, 498, 498, 498, 499, 499, 499, 499, 496, 496,
	496, 496, 496, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 509, 509, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 511, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 514, 514,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 6,
	6, 6, 4, 4, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 6, 3, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 2, 6,
	4, 7, 7, 7, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 4, 3, 3, 5, 3, 4,
	3, 5, 3, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 3, 4, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 3, 2, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 8, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 6, 4, 4, 5, 5, 7, 3, 3, 4,
	4, 6, 3, 6, 7, 4, 6, 6, 7, 8,
	9, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 12, 15, 3, 1, 0,
	4, 3, 0, 1, 1, 4, 4, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 576, -96, -93, -62, -60, -99, -100,
	-82, -101, -95, -121, -126, -108, -109, -110, -122, -128,
	-176, -181, -182, -183, -3, -48, -50, -63, -81, -83,
	-94, -103, -102, -104, -111, -118, -114, -98, -54, -123,
	-127, -136, -177, -178, -179, 33, 32, 100, 80, 151,
	126, 134, 197, 375, 416, 427, 389, 139, 408, 394,
	-131, -132, 444, -49, -61, -125, -124, 73, 127, 403,
	-4, -12, 30, 46, -51, -52, -53, 62, -69, -65,
	-76, -70, -67, -589, 102, -542, -84, -87, -117, -593,
	158, 215, -105, -106, 358, -112, -113, 410, -115, -116,
	412, 159, -56, -55, 153, -204, -206, -129, -130, -180,
	-137, -138, -139, -140, -141, -142, -143, -169, -144, -145,
	-146, -147, -148, -149, -153, -172, -150, -151, -152, -155,
	-154, -156, -161, -157, -158, -159, -160, -162, -163, -165,
	-166, -167, -168, -170, -171, 449, -164, 508, 49, 463,
	82, 143, 420, 21, -5, -6, -7, -8, -9, -10,
	-11, -14, -13, -64, -66, -68, -71, -72, -73, -80,
	-74, -75, -541, -85, -86, -89, -91, -92, -88, -90,
	409, -207, -205, 573, 523, -16, -21, -22, -17, -18,
	-20, -23, -19, -24, -25, -35, -40, -41, -37, -38,
	-36, -39, -42, -43, -44, -45, -46, -47, -27, -33,
	-34, -28, -29, -30, -31, -32, -15, -26, 542, 551,
	-210, -208, -209, -217, 436, 531, 482, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, -296,
	2, -276, -281, -282, -283, -275, -246, -511, -514, 4,
	-508, -512, 165, 224, 322, 21, 23, 22, 24, 25,
	26, 27, 28, 30, 31, 42, 43, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 116, 117, 118,
	119, 121, 126, 127, 130, 125, 129, 132, 133, 134,
	137, 138, 139, 141, 142, 144, 145, 146, 148, 149,
	151, 152, 153, 156, 154, 490, 155, 157, 158, 159,
	160, 163, 171, 172, 173, 178, 180, 184, 185, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 198, 202,
	204, 205, 206, 207, 208, 214, 215, 217, 218, 219,
	220, 225, 226, 227, 231, 228, 237, 238, 242, 243,
	244, 246, 250, 251, 252, 253, 254, 255, 257, 259,
	258, 261, 264, 265, 268, 272, 273, 277, 278, 274,
	279, 280, 282, 283, 286, 284, 287, 288, 285, 289,
	291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 290, 305, 303, 307, 308, 309, 320, 318,
	313, 314, 310, 315, 311, 312, 316, 317, 324, 325,
	328, 212, 330, 331, 334, 352, 338, 339, 340, 343,
	344, 347, 350, 351, 353, 354, 355, 356, 357, 358,
	359, 360, 362, 363, 365, 366, 367, 369, 370, 371,
	373, 375, 376, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 389, 391, 390, 392, 394, 396, 397, 398,
	403, 408, 405, 406, 407, 409, 410, 411, 412, 414,
	415, 416, 418, 419, 420, 421, 423, 425, 426, 429,
	430, 446, 447, 465, 427, 428, 431, 432, 433, 434,
	435, 439, 437, 438, 440, 441, 442, 444, 445, 448,
	449, 451, 452, 453, 454, 455, 456, 459, 461, 462,
	463, 481, 464, 466, 469, 470, 471, 472, 467, 480,
	474, 475, 477, 478, 483, 484, 485, 486, 487, 488,
	489, 491, 493, 501, 502, 503, 505, 508, 509, 510,
	511, 499, 513, 514, 517, 518, 519, 522, 520, 521,
	523, 525, 528, 529, 530, 536, 535, 537, 543, 544,
	546, 547, 548, 37, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 122, 123, 150, 161, 162, 174, 186,
	187, 199, 201, 209, 210, 211, 232, 233, 235, 240,
	262, 327, 329, 345, 349, 364, 368, 372, 374, 388,
	422, 457, 468, 473, 494, 495, 496, 497, 504, 506,
	531, 532, 533, 538, 545, -296, 2, -276, 336, -269,
	2, -246, -246, 375, 29, 2, 29, 363, 438, 485,
	487, 2, -568, -338, 2, 29, -249, -246, 102, 197,
	436, -269, 2, -568, -338, 25, 2, -246, 2, 350,
	22, 28, 66, 77, 98, 137, 160, 181, 184, -592,
	352, 382, 425, 440, 480, 491, 505, 2, 535, 283,
	437, 482, 224, 118, 510, 431, -577, 429, 430, 350,
	380, 418, 200, 524, -250, 2, 427, -246, 283, 2,
	576, 94, 273, 74, 422, 441, -134, 502, -133, 494,
	431, -135, -495, 2, 305, -246, 576, 576, 576, 29,
	-259, -246, 482, 224, 431, 118, 478, 576, 2, 482,
	355, 535, 437, 118, 385, 224, 510, 431, -577, 283,
	-566, 2, -561, 4, -512, -508, -290, -289, 482, 488,
	118, -283, -275, 566, -282, 576, 576, 576, 2, 243,
	244, 384, 383, 441, 442, 576, 576, 576, 576, 429,
	2, 160, 22, 28, 66, 93, 98, 124, 181, 184,
	341, -590, 352, 382, 440, 480, 484, 491, 505, -576,
	464, 68, 431, -575, -577, 283, 510, 137, -388, 118,
	273, 195, 518, 487, 485, 516, 130, 231, 521, 520,
	576, 576, -96, 2, 573, 33, 32, 139, 444, -199,
	482, 236, 2, -246, 576, 576, 2, 243, 244, 429,
	430, 576, 576, 182, -561, 2, 576, 576, 2, 243,
	244, 429, 430, 236, 2, 68, 433, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	2, -174, 441, 464, 206, 47, 46, 74, 29, 381,
	79, 356, 119, 145, 511, 198, 224, 225, 251, 93,
	94, -390, 45, 244, 243, 430, -582, 429, -442, 483,
	432, 438, 477, 255, 427, 502, 102, 525, 419, 548,
	385, 386, 475, 398, 274, 154, 4, 118, 305, 443,
	494, 273, 426, 359, 84, -599, 2, 482, -601, 2,
	502, 502, 2, -601, 2, -601, 2, -601, 2, -602,
	502, 545, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, -205,
	-207, -206, 576, 576, 576, 576, 576, 576, 576, -174,
	441, 2, 74, 29, -331, -333, 515, 234, 147, 342,
	-204, -206, 2, -541, -493, 2, -416, -515, -418, 564,
	565, 557, 479, 67, 321, 549, -430, 124, 516, 336,
	-514, -419, -432, 150, 422, -353, 8, 9, 5, 6,
	7, -255, -420, -426, 507, 164, 326, -293, 577, 10,
	573, -538, -206, -431, 38, 201, 65, -497, -292, -256,
	-469, 235, -291, -275, -535, -536, 4, -508, -509, -498,
	-472, -480, -476, -477, -483, -246, -511, 77, 110, 111,
	109, 114, 113, 276, 275, 115, 112, 443, 524, 66,
	37, 209, 210, 240, 327, 211, 75, -537, 138, -510,
	232, 233, 457, 51, 388, 174, 123, 122, 329, 56,
	54, 532, -481, 120, 494, 495, 496, 497, 186, 187,
	58, 161, 162, 349, 372, 473, 504, 506, 199, 262,
	44, 106, 183, 230, 213, 239, 241, 245, 263, 266,
	306, 319, 323, 346, 348, 417, 450, -605, 533, 468,
	69, 70, -543, 390, -544, -269, -543, 576, 576, 578,
	576, -324, -326, -327, 2, 29, 135, 573, 2, -447,
	2, -448, -452, -206, 256, -451, 573, -449, 571, -276,
	337, -539, 423, -535, -536, -255, -275, -292, 4, -508,
	-510, 575, -328, 573, 118, 482, 78, 224, -383, 573,
	-246, 29, 336, 498, 578, -325, 379, -428, 573, 336,
	182, 339, 60, 287, 2, 2, 2, 2, 2, 209,
	-246, 482, 117, 2, 254, 2, 2, 2, 2, 2,
	2, 2, -346, 209, 2, -276, 535, -346, 209, 2,
	-346, 209, 2, -389, 2, 87, -260, 209, 2, -246,
	-284, 209, 2, -279, -281, -288, 209, 2, -286, -246,
	-506, 209, 2, -505, -500, 10, -499, 5, 4, -508,
	-512, -509, -511, 77, -416, 2, -123, 2, 60, -246,
	535, 2, 2, 446, 2, 573, -134, 71, 502, 44,
	441, -403, 2, -404, -242, -243, -244, -459, -245, 242,
	378, 387, 552, 128, 321, 548, -493, -584, 182, 556,
	498, -493, -354, 575, 2, 2, 2, 2, 2, 2,
	-452, 209, -276, 2, -273, -496, 4, -508, -512, -509,
	-513, 29, 32, 33, 34, 36, 38, 39, 40, 41,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 109,
	110, 112, 111, 113, 114, 115, 124, 128, 131, 135,
	136, 140, 143, 147, 164, 166, 179, 181, 182, 197,
	200, 203, 216, 229, 234, 236, 256, 260, 267, 275,
	276, 321, 326, 332, 336, 337, 341, 342, 361, 377,
	393, 413, 436, 443, 460, 476, 482, 492, 498, 500,
	507, 515, 516, 524, 526, 534, 539, 540, 541, 542,
	-514, 2, -452, 209, 2, -278, 209, -452, -281, 2,
	-260, 2, -272, -496, 2, -297, 209, -276, -277, -281,
	-279, 2, -286, 2, -505, 209, 2, 535, 236, 498,
	578, -344, -289, -290, -492, 8, -337, -246, 575, -416,
	2, -123, -107, 2, 179, -416, 209, 2, -123, 209,
	2, -416, 209, 2, -123, 209, 2, -579, 2, -505,
	209, -246, 2, 287, 2, 2, 505, 2, 98, 482,
	117, 2, 407, -591, 425, 509, 2, 2, 2, 2,
	2, 2, 2, 482, -265, 2, -246, 179, -286, 209,
	-287, 2, 437, -600, 390, -505, 209, 2, 535, -279,
	209, 2, -279, 224, 238, -260, 209, 2, 487, 485,
	487, 485, 182, 2, 236, 2, 236, 2, -453, 2,
	-454, -448, -455, 571, 337, -463, 2, -462, -499, 531,
	-96, 573, -96, 573, 441, 573, -505, -276, -276, -416,
	2, -123, -107, 2, -416, 2, -123, 2, -120, -505,
	-119, 573, 182, -416, 2, -123, -107, 2, -416, 2,
	-123, 2, -199, 179, 2, 118, 482, -174, 2, 179,
	526, 2, 8, 2, 216, -505, 432, 386, 171, 2,
	446, 2, 447, 74, -390, 548, 74, 182, 2, 182,
	2, -373, 2, 542, 182, 2, 2, -565, 2, 336,
	182, 2, 182, 2, 182, 2, 182, 2, 182, 2,
	-173, 442, 503, 481, 383, 244, 2, -123, 539, -107,
	-416, 539, 2, -583, 179, 430, -416, 2, 501, 253,
	155, 182, -373, 2, 182, 2, 182, 2, 5, 2,
	384, 465, 2, 242, 378, 465, 2, -276, -594, 2,
	482, 535, 437, 2, 2, 88, 89, 182, 2, 182,
	2, 196, 182, 2, 182, 548, 2, -365, -452, -402,
	-403, -402, 498, -331, -333, -174, 446, 2, -211, -363,
	-213, 179, -393, -394, -214, 267, 166, 332, -215, -372,
	29, 135, -372, -372, 60, 574, 574, 11, 12, 76,
	42, 564, 565, 566, 567, 177, 568, 569, 562, 563,
	561, 554, 555, 559, 248, 249, 95, 558, 556, 86,
	281, 424, 167, 168, 169, 170, 404, 222, 35, 223,
	14, 15, 16, 34, 341, 266, 549, 213, 450, 557,
	17, 18, 19, 239, 241, 323, 50, 216, -254, -299,
	-416, -416, -416, -416, -416, -416, -416, 348, 573, -359,
	-411, 571, -206, 573, 573, 573, -492, -206, -416, -430,
	574, -351, 573, -206, -430, -425, 573, 422, 571, 573,
	-433, -416, 5, 5, 5, 573, 575, -546, 543, 179,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 374, -474, 573, -473, 573,
	-473, -473, 536, -471, 573, 551, 544, 573, -471, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 536, 578, -543, -328, 573, -355, -457, -416,
	566, -355, -355, 336, -348, -416, 106, -376, 245, 306,
	183, 263, 417, 230, -413, 577, -413, -441, 551, -206,
	-449, -275, -206, -451, 573, -447, -441, -97, -492, -81,
	-94, -102, -123, -136, -178, -179, 566, -276, 573, 182,
	573, 575, -496, 182, -337, -260, -276, -291, -292, -297,
	134, -348, -561, 510, 431, -337, -249, 39, -427, -466,
	-467, -517, 577, -516, -469, -479, -475, -478, 364, 368,
	-498, 54, 532, -481, 235, 4, -508, -510, 232, 233,
	457, 51, 388, 174, 123, 122, 329, 56, 494, 495,
	496, 497, 186, 187, 58, 533, 468, 69, 70, -561,
	510, 431, -337, 179, -503, 2, -502, -501, 115, 443,
	-499, 5, 2, 150, 2, 2, 2, -246, -225, 578,
	64, 411, 150, -346, 209, -225, 150, -225, 150, -298,
	209, -297, -225, 150, -225, 578, 150, -225, 578, 150,
	575, 578, 150, -503, 2, -389, -495, -348, 39, -403,
	2, 124, -501, -603, 578, 265, -301, 280, 320, 205,
	337, 546, 330, 128, -504, 5, 4, -426, -438, 124,
	273, 235, -486, -488, 8, -487, 9, -489, 564, 565,
	-494, -493, 108, 575, -496, -222, 405, 444, -221, 24,
	30, 139, 226, 309, 529, 156, -314, 227, 351, -311,
	355, 150, 461, 519, -572, -573, 428, 489, 490, 90,
	330, 444, 405, 150, -369, -371, 39, 116, 309, 350,
	61, 219, 285, 286, 463, 538, 150, 444, 405, 351,
	24, 139, -237, -234, -573, 99, 405, 474, 377, -573,
	-224, 461, 519, -572, -573, 428, 405, -223, -316, -311,
	355, 150, 577, 24, 405, 444, 351, -587, -588, 139,
	30, 405, 351, -569, -540, 542, 150, -452, 209, -580,
	-119, 257, 5, 10, -505, -119, -344, 578, 578, -496,
	566, 430, 429, 150, 150, 150, 150, 179, 321, 2,
	2, 2, 2, 2, 184, -575, -592, 2, 2, -276,
	209, -330, 336, -564, -345, 482, -276, 321, 44, -278,
	209, 2, -281, 535, -569, 321, -280, 209, -276, 39,
	573, 321, 2, -389, 2, 224, -540, 321, -453, -294,
	-276, -448, -294, 444, -269, 39, -413, -276, 574, 578,
	-463, -463, -505, -187, 542, 182, 102, 573, 573, -199,
	-460, 578, -459, 216, -506, -120, -505, -505, -564, -260,
	2, -276, 2, 482, 246, -505, -187, 216, -505, -505,
	-505, -495, 29, 447, 2, -173, 442, 503, 89, 447,
	2, -276, 482, 118, 224, 80, -246, -567, 179, -562,
	418, 431, 510, -561, -276, 118, -276, 118, -276, 118,
	-276, -276, 2, 2, 2, 2, 2, 85, 85, 2,
	46, -583, 179, 2, 501, 2, 501, 2, -246, -246,
	-246, 464, 265, -276, 179, 482, 224, 482, 224, 118,
	182, 74, 118, 29, 482, -225, 578, -250, -211, -363,
	-495, -364, -363, -212, -211, -214, 179, 387, 520, 309,
	448, 250, -394, -393, 29, -416, -398, 173, 308, -416,
	-396, -418, 564, 565, -487, -489, -347, 330, -205, -205,
	-205, -334, -443, -416, 377, 224, -468, -466, -466, -274,
	-496, 494, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, 266, 213, 450,
	50, 216, -416, 498, -416, -416, -416, -416, 303, 321,
	326, 507, 164, 517, 135, 330, -606, 476, 41, -423,
	-206, -352, 573, -437, 36, 460, 29, -430, 573, 2,
	-411, -416, -412, -349, -348, -348, 574, 534, 29, 135,
	566, 2, 574, 578, 39, 574, -416, -349, -429, -425,
	-348, -436, -435, 539, -384, -385, 547, 290, 121, 207,
	288, -386, 435, -490, 8, -496, 566, -547, 172, 200,
	573, 574, 2, 574, 2, 574, -416, 2, 574, -416,
	2, 574, -416, 2, 574, -416, 2, 574, 2, -416,
	-416, -416, -416, -416, -416, -416, -348, 8, -490, -490,
	494, 494, -490, -490, -490, -482, 364, 365, 366, 367,
	268, 269, 270, 271, 368, 369, 370, 371, 295, 296,
	297, 298, 291, 292, 293, 294, 299, 300, 301, 302,
	191, 192, 193, 194, 187, 188, 189, 190, -482, -378,
	2, -484, -348, 4, 547, 290, 121, 207, 288, 435,
	5, -378, 2, -379, 2, -416, -348, -380, -417, -418,
	564, 565, 557, -430, -381, 2, -416, -349, -416, 57,
	260, 500, -382, -416, 182, -348, -348, 2, -348, 2,
	-544, 39, -348, -340, 578, 182, 39, 4, -340, -340,
	573, 574, 578, -377, 204, 284, 279, 238, -377, -447,
	-376, 245, -374, 346, -374, -374, -441, -261, 571, 579,
	-496, -441, -440, -439, 39, -269, 343, -441, -441, 575,
	574, -440, 572, -559, 573, 576, 576, 576, 576, 576,
	-276, 573, -348, -496, 575, 466, 574, 239, 239, 239,
	239, 423, 574, 498, -563, -284, -288, 542, -96, 338,
	574, 578, -339, 38, 571, 575, -490, 2, 2, -485,
	536, 573, 573, -385, 573, 182, -563, -288, -338, 578,
	498, -246, 2, -276, -346, -225, 150, -346, -346, -225,
	578, 150, -260, -279, -284, -286, -288, -246, -505, -506,
	-225, -280, -584, 574, 502, -404, -300, 387, 459, 406,
	439, 478, 8, 9, 8, 9, 578, -496, 578, -585,
	93, 498, 78, 431, -239, 274, 397, 309, 482, 422,
	-407, 209, 78, -518, -263, 93, -519, -246, 72, 516,
	377, 181, 148, -585, 93, 377, -585, 93, 2, 226,
	93, 444, 464, 498, 29, 60, -452, 42, 42, 29,
	-123, 261, 182, 548, 482, 224, 431, 498, -452, -371,
	-466, 116, 285, 286, 60, -491, -486, 564, 565, -491,
	60, -491, -491, -491, 542, -278, -452, 431, 498, 498,
	396, 396, 498, 498, -604, 556, 396, 578, 42, 42,
	29, -123, 261, 182, 498, -297, -261, 530, 43, 530,
	498, 43, 431, 498, 578, 43, 43, 498, 498, -570,
	-251, 105, 315, 278, 316, 97, 312, 96, 311, 103,
	313, 104, 314, 537, 324, 63, 310, 289, 317, -252,
	-253, 357, 528, -505, 444, 405, 150, 216, -460, 216,
	-460, -289, -246, 575, -123, -416, -416, -123, -416, -123,
	46, 150, 2, -600, 254, 573, -304, 321, 182, -337,
	-461, 236, 578, -345, 150, -502, -370, -369, 321, -280,
	209, 2, 150, -328, 321, 144, 573, 385, 2, 150,
	-262, 209, -247, -246, -389, -228, 486, 150, -367, 526,
	-399, -123, 573, 124, 39, -399, -356, -357, -458, -358,
	-263, 573, -269, -413, -96, -462, 574, 574, 574, -186,
	340, -185, -246, 5, -199, 526, -303, -408, -407, -522,
	-523, -518, 266, 224, 516, 238, 165, -329, -264, -263,
	117, -193, 542, -119, -120, 574, -460, 216, -187, -187,
	-460, -460, -276, 179, -505, -187, -187, -187, 2, 2,
	2, -373, -276, -260, -297, -276, 575, -337, -337, -288,
	-284, -373, -260, -373, -260, -373, -260, -123, -416, 2,
	441, 179, 179, 575, -373, 385, 118, 482, 355, 224,
	-276, -297, -276, -297, -260, 118, -260, 119, -276, -452,
	-364, -212, 337, 250, 448, -396, -397, -418, 422, 423,
	-397, 422, 423, 8, 9, 8, 9, -216, 452, 325,
	-346, 578, -219, 40, 131, 250, -276, 548, 146, -416,
	-416, 498, -606, 476, -423, 146, -416, 303, 326, 507,
	164, 517, 135, 330, 182, 573, -417, -417, 574, -350,
	-416, -416, 572, 581, 574, -333, 578, -331, -416, -348,
	-348, 574, 575, -348, -337, 572, 572, 578, 574, -434,
	-435, 140, -416, 498, 498, 498, 498, 573, 574, 575,
	-552, 347, 573, 573, -416, 574, 574, 574, 574, 39,
	578, 578, 578, 574, 578, 578, 578, 574, 574, 574,
	578, 574, 548, 548, 574, 574, 574, 574, 578, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 574, 578, 574, 182, 574, 574, -387,
	361, 574, 11, 12, 564, 565, 566, 567, 177, 568,
	569, 562, 563, 561, 554, 555, 556, 86, 281, 424,
	14, 15, 16, 239, 216, -417, -417, -417, 574, -421,
	-422, 182, 179, 39, -382, -382, -382, 574, 182, -348,
	574, 574, 573, -545, 283, 321, 574, -410, -409, 540,
	-457, -341, 2, -447, -271, -496, -410, -410, -348, -416,
	245, 245, -375, 526, 336, -377, -447, -440, -492, -415,
	-414, 180, 40, 131, 318, 212, -440, -269, -328, -440,
	-440, -496, -441, -441, -439, 574, -560, -492, 574, -342,
	-450, -539, -333, 575, -496, -196, -540, -175, 5, 326,
	-175, -175, -175, -337, 498, 498, 25, 362, -466, 571,
	572, 8, -496, 573, -490, -490, -490, -337, 182, 182,
	182, -502, -502, 2, -225, -346, -225, -225, -297, -298,
	-225, -225, -225, -368, 542, -493, -403, 514, 83, 387,
	494, -493, -221, 405, -263, -263, -276, -285, -246, 195,
	397, 26, 397, 265, 265, 321, -407, 209, -227, 321,
	-466, -270, -246, 573, -391, 544, 250, 250, 526, -263,
	-270, 250, 209, -263, 209, -270, 2, -270, -571, 387,
	331, -416, -502, 60, -312, 272, 385, 322, -222, 405,
	444, -123, -123, -123, 573, -584, 526, 134, -276, -297,
	-276, -285, -280, 444, 405, 319, -291, -491, -491, -369,
	444, 405, -285, -278, -502, -233, -246, -233, 431, -260,
	396, 548, -604, -223, -123, -123, -123, 573, -261, -224,
	405, 5, 209, -263, 5, -246, -263, -285, -502, -588,
	24, -263, 209, -263, -285, -502, -251, -505, 326, 522,
	-569, 431, 498, -452, -119, -190, 542, -119, -184, 220,
	566, -566, -246, 535, -246, -302, -305, -303, -263, -202,
	-203, 544, 542, 150, -295, -276, 571, -187, -505, -276,
	-286, -287, 150, -328, 321, -505, 39, 150, 573, 2,
	2, -279, 336, 321, -262, 209, -229, 141, -604, -260,
	-410, -341, -366, -401, 413, 336, -329, 531, -269, -366,
	-343, 578, 182, 556, 575, -329, -456, 566, -96, -96,
	-187, 578, 573, 556, 556, 573, -505, -505, 574, 578,
	-227, -276, -262, 224, 224, -268, -247, 574, 578, 575,
	573, -195, 340, -194, 142, 252, 237, 453, 454, 455,
	456, 133, -460, -193, -120, 182, -57, 542, 482, -187,
	577, -246, -373, -373, -373, 441, 441, -246, -272, -260,
	-276, -273, -297, 179, 179, -260, 520, -397, 337, 277,
	-443, -220, 550, -276, 577, -416, -416, 146, 146, -416,
	-417, -417, -416, 146, 182, 573, -416, -427, 34, 34,
	574, 578, -412, -416, 574, 534, -333, -333, 574, 566,
	-496, 577, 574, -425, 143, -416, 492, 290, 207, 288,
	-386, 288, -386, -386, -490, 5, -496, 566, -553, -266,
	573, -246, 540, -332, 342, 574, -468, -466, -416, -416,
	-416, -416, -416, -490, -471, -471, -486, -486, -416, -421,
	-416, -468, -466, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, 135, 321, 330, -417, -422, -421, -416, -416,
	-466, 574, 574, 574, -348, -96, 573, 283, -360, 200,
	-416, -460, 578, -360, -360, 574, -447, -447, 573, -416,
	245, 572, 578, 580, 556, -328, 575, -439, -440, 572,
	574, 578, 574, 578, -400, 39, 574, -496, -410, -198,
	-197, 132, 53, -337, -337, 339, 5, 8, 571, 572,
	575, -490, 574, 574, 574, -337, -337, -337, -225, -225,
	117, 309, -416, 498, 498, 60, 498, 42, 319, -233,
	377, 422, 26, 397, 397, 150, 321, 528, -524, -519,
	148, -416, 573, 224, 573, 573, 2, -218, 139, 444,
	-586, 2, 526, 150, -225, 150, -225, 546, -312, 573,
	573, 498, 431, -239, 542, -348, -416, -188, 124, -495,
	-573, 577, -573, 577, 431, 498, 431, 498, 542, 163,
	163, -233, 542, -348, 498, -470, 48, 27, 321, -279,
	498, 498, -225, 150, 510, 444, -505, 326, -285, -280,
	444, 405, -460, -192, 340, -191, 142, 415, 133, 252,
	-460, -190, 182, 236, -280, 2, 574, 574, 578, -525,
	39, 334, 334, 573, -276, -77, 542, -459, -492, 44,
	-278, 39, 150, -569, -123, -280, -464, -465, 5, 39,
	-276, 150, 336, 321, -230, 259, -604, -500, -540, -333,
	-366, -355, 322, 91, 574, -410, -357, -341, -416, 2,
	574, -185, -186, -505, -505, -505, -187, -199, -199, -408,
	-306, 573, -262, -247, 573, -199, -264, 2, -506, 578,
	573, 556, 556, 556, -193, -460, -123, 340, -276, 566,
	-373, -318, -317, 355, 330, -318, 422, 422, 337, 173,
	255, -219, -261, -416, -416, 146, 34, 34, -416, -416,
	-427, 574, -416, -416, -348, 572, 5, -416, 574, 574,
	8, -416, 574, 575, -554, -246, -416, 574, 60, 574,
	574, 578, 578, 574, 574, 574, 574, 574, 574, 574,
	-422, 182, 135, 330, 573, 574, 574, -96, -424, 203,
	60, -447, -424, -424, -375, -337, -447, -414, -261, 571,
	-496, -492, -450, 573, 575, -197, 556, 572, 2, 571,
	-496, 574, 117, -263, -263, 482, 422, 319, -233, 377,
	422, 396, 265, 26, 26, -407, 150, -526, 93, -528,
	76, 165, 102, 321, 326, 516, 377, 72, 124, 393,
	-596, 39, 553, 574, -335, -444, -539, 573, -246, -335,
	-337, 321, 471, 124, 321, 124, 117, 510, 79, -263,
	-270, -337, -337, -276, -285, 157, 574, 578, 556, 2,
	566, 566, -285, -280, -285, -278, 353, 157, 574, -261,
	5, 5, 150, -258, 76, 5, -263, -263, -279, 117,
	431, 498, -190, 578, 573, 556, 556, -190, -506, -119,
	-328, -319, 226, -263, -523, -520, -521, 377, -527, -529,
	165, 377, -123, 2, -201, -200, -246, 5, 573, -304,
	340, 572, -502, -370, -123, -280, -328, 574, 578, 144,
	-392, 526, -261, -276, 150, -231, 258, -604, -500, -228,
	-395, -393, 136, 573, 336, -123, -333, 556, 574, 574,
	117, 117, 218, 149, -335, 573, 573, -337, 117, 574,
	-194, -195, -505, -119, -505, -193, -58, -59, 224, 93,
	360, -273, 482, 224, 573, 573, -219, -416, -416, -416,
	574, -333, -496, 566, -548, 355, 574, -443, -416, -416,
	-417, 182, 573, -427, 574, -549, 541, -416, -361, -362,
	-416, 421, 107, 201, -549, -549, 574, -492, 2, -505,
	571, 2, 216, 336, 396, 265, 336, 498, 336, -407,
	-270, -274, -267, -246, 165, 209, 326, -391, 250, 573,
	-417, -276, 573, 2, 31, -597, 128, 229, 574, 578,
	-445, -257, -246, -416, -445, 574, 574, 326, 326, -416,
	-466, 573, -225, -225, 574, 574, -416, 498, -495, 100,
	-493, 2, -573, -260, -416, 498, 5, -225, -274, -225,
	-225, -258, 510, -285, -280, -191, -192, -505, -119, -190,
	39, -309, 228, 2, -525, 250, -267, 250, -595, 542,
	574, 578, 556, 556, -302, -202, -78, -79, 499, -459,
	-328, 39, 5, 573, 573, -246, 336, 573, -261, -241,
	92, -604, -500, -229, -366, 322, -337, 93, -395, -423,
	-187, 573, 573, -307, 81, 94, 125, 208, 185, 225,
	464, 469, 29, -307, 574, -335, -335, 574, 573, -187,
	574, 578, 29, 573, 29, 573, -276, -297, -348, -348,
	574, -333, 60, 578, 574, 574, -417, -427, 574, -550,
	-551, -266, 578, 573, 573, 445, 572, 2, -233, 377,
	-246, 336, -246, -233, 377, -246, -528, -267, 321, 526,
	-416, -248, 573, -416, 39, 229, 129, 214, -406, -598,
	101, 472, 217, -444, -219, 574, -405, 526, 393, -258,
	-335, 573, 573, 573, 556, 182, 573, -470, -225, -279,
	574, -578, 391, -123, -313, -314, 216, 573, -308, 336,
	117, 309, -200, -493, -493, 574, 39, -79, 9, 39,
	-123, -464, -335, -276, -335, 336, -235, -234, 267, -500,
	-230, 574, -270, -366, -506, -506, -405, 574, 574, -506,
	-59, -337, -337, 574, 574, -555, 385, 423, 202, -348,
	-334, 574, 578, 39, -362, 2, 2, 2, 396, -246,
	396, 150, 204, 574, -530, 282, -246, 574, 129, 214,
	-309, 573, -220, -445, -309, 204, -276, -574, 526, 574,
	-321, -320, -317, -323, -322, -317, -348, -493, 100, 353,
	-348, -258, -581, 183, -580, 5, 10, -202, 353, -336,
	-446, -263, 82, 117, -319, -123, -123, 574, 574, -392,
	574, -276, -232, -507, 396, 398, -604, -231, -410, 574,
	574, -406, -405, -203, 542, 574, 574, 574, 574, -556,
	-557, 50, 513, 108, -416, -556, -556, -551, -553, 165,
	542, -531, -534, -533, 336, 451, 183, 354, 574, 471,
	538, -315, -311, -337, 542, -328, -416, -405, 574, 578,
	531, 574, 578, 531, 574, 182, 574, -225, -189, 542,
	46, -308, -276, 574, 578, 376, 130, 139, -309, -595,
	-405, 573, -406, 573, -238, -237, -604, -486, -241, 136,
	-187, -187, -309, -406, -410, -187, -558, 148, -557, 373,
	178, 422, 373, 178, -558, -558, -267, 55, -533, 336,
	-534, 336, 520, 130, -597, 574, 55, -530, -309, -320,
	216, -322, 182, 353, 429, -580, 31, -240, -239, 573,
	-446, 423, 423, 2, -313, -308, -406, -335, -309, -335,
	-236, -337, -235, 322, 520, -315, -309, 108, 200, 493,
	309, 34, 556, -532, 309, 411, 64, 444, -532, -410,
	556, -531, 573, 573, 340, -337, 2, -202, -309, 574,
	-315, 574, -232, 444, -203, -315, 422, 344, -557, -416,
	23, 326, 124, -416, -597, -348, -348, -186, 573, 574,
	-308, -315, -405, -203, -406, -238, -356, -410, -203, 574,
	574, -186, -226, 64, 411, -240, -203, -406, -410, -309,
	-410, -410, -310, -311, 498, 574, -410, -309, -315, 573,
	-315, -203, -348, -203, -410, 574, -410, -310,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 503, 504, 506, 507, 508, 510,
	511, 513, 515, 517, 518, 519, 521, 522, 524, 525,
	526, 527, 528, 530, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	594, 596, 0, 1282, 1284, 1286, 1288, 0, 737, 0,
	36, 37, 0, -2, 301, 303, 305, 0, 331, 333,
	334, 336, 338, 340, -2, 0, 438, 439, 441, 443,
	-2, 0, 920, 922, 0, 583, 585, 0, 925, 927,
	0, 0, 605, 606, 0, 1388, -2, 599, 601, 603,
	668, 670, 672, 674, 676, 678, 680, 682, 684, 685,
	687, 689, 691, 693, 695, 696, 698, 700, 702, 703,
	705, 706, 708, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, 732, -2, 734, -2, -2, 0,
	-2, -2, -2, 1300, 40, 42, 44, 46, 48, 50,
	52, 54, 56, 389, 390, 392, 394, 396, 398, 401,
	403, 405, 1446, 445, 447, 449, 451, 453, 455, 457,
	0, -2, 1460, 0, 0, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 96, 97, 98, 99, 100,
	101, 102, 103, 71, 72, 74, 75, 76, 80, 81,
	82, 83, 84, 85, 86, 87, 94, 69, 0, 0,
	1419, 1421, 1423, 1425, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 505,
	509, 512, 514, 516, 520, 523, 529, 531, 533, 490,
	491, 494, 2124, 2141, 2142, 2143, 2146, 2147, 2148, 2149,
	2150, 2151, 2583, 2664, 2665, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 492, 493, 1096, 0, 557,
	555, 2109, 558, 2389, 560, 562, 432, 433, 434, 435,
	436, 437, 0, 576, 568, 1458, 577, 579, 580, 581,
	582, 552, 550, 0, 576, 2177, 574, 1280, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 444, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	368, 1145, 1146, 1147, 1265, 1266, 2432, 1307, 0, 212,
	595, -2, -2, -2, 2548, -2, 627, -2, 634, 2552,
	2434, 639, 0, 641, -2, 644, 1283, 1285, 1287, 735,
	736, 2127, 0, 0, 0, 0, 0, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 222, -2, -2, -2, -2, 0, 0, 2477,
	2227, 2077, 2143, 2080, 2075, 302, 304, 306, 307, 0,
	0, 0, 0, 0, 0, 332, 335, 337, 339, -2,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 973, 974, 1203, 0, 0, 0, -2,
	440, 442, 495, 496, 0, 1447, 1447, -2, 0, 0,
	0, 0, 276, 267, 921, 923, 924, 0, 0, 0,
	0, 584, 586, 0, 0, 249, 926, 928, 929, 0,
	0, 0, 0, 0, 278, 0, 0, 600, 602, 604,
	669, 671, 673, 675, 677, 679, 681, 683, 686, 688,
	690, 692, 694, 697, 699, 701, 704, 707, 709, 711,
	713, 715, 717, 719, 721, 723, 725, 727, 729, 731,
	733, 743, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 831, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 902, 0, 746, 748, 749, 750,
	0, 809, 829, 830, 839, 0, 1136, 1448, 1309, 1290,
	1304, 1309, 1292, 1293, 1294, 1295, 1296, 1301, 1303, 1297,
	1298, 1299, 41, 43, 45, 47, 49, 51, 53, 55,
	57, 391, 393, 395, 397, 399, 402, 404, 406, -2,
	1417, 1418, 446, 448, 450, 452, 454, 456, 458, 587,
	0, 589, 0, 747, -2, 0, 1452, 1452, 1452, 0,
	0, 1418, 1416, 0, 592, 593, 648, 649, 1720, 0,
	0, 0, 0, 0, 0, 0, 1974, 1806, 0, 650,
	-2, 1837, 1839, 2523, 2548, 1973, 1841, 1842, 1843, 1844,
	1845, 0, 1847, 1848, 1849, 1850, 1851, 1852, 0, 1854,
	0, 1859, 1860, 1861, 0, 2530, 2054, 2137, -2, 0,
	0, 2536, 2133, 0, 1940, 1877, -2, -2, 2160, 2139,
	1652, 1653, 1654, 1655, 1656, -2, -2, 2566, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 0,
	2511, 2531, 2532, 2537, 2539, 2533, 2520, 1902, 2239, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1679, 1688, -2, -2, -2, -2, -2, -2,
	-2, 2524, 2525, 2542, 2545, 2551, 2556, 2557, 2529, 2538,
	2565, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 1680, -2, -2,
	-2, -2, 1435, 2402, 1438, 1096, 1436, 1420, 1422, 0,
	1424, 0, 0, 0, 1429, 1455, 1453, 0, 1504, 1433,
	1434, 1522, 1522, 1546, 0, 1527, 0, 1546, 1447, 1573,
	0, 1533, 2424, 1878, 1879, 0, 2143, 2138, -2, -2,
	2563, 0, 0, 0, 0, 0, 0, 0, 553, 0,
	559, 561, 0, 0, 0, 575, 1457, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 374, 375, 2531,
	0, 0, 0, 380, 0, 382, 383, 384, 385, 386,
	387, 388, 182, 2531, 463, 488, 0, 182, 2531, 466,
	182, 2531, 469, 0, 472, 1201, 182, 2531, 475, 2105,
	182, 2531, 478, 480, 2113, 182, 2531, 484, 2120, 2118,
	485, 2531, 487, 281, 279, 280, 2156, 2157, 2164, 2165,
	2166, 2167, 2564, 2566, 1276, 1277, 1278, 1279, 0, 1306,
	1202, 597, 598, 0, 622, 0, 626, 2519, -2, 0,
	2443, -2, 630, 1310, 1314, 1315, 1316, 1317, 1318, 0,
	0, 0, 0, 1323, 0, 0, 636, 0, 0, 623,
	624, 642, 645, 0, 738, 739, 740, 741, 742, 68,
	0, 2531, 1573, 70, 0, 2099, 2168, 2169, 2170, 2171,
	2172, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 73, 0, 2531, 77, 0, 2531, 0, -2, 88,
	0, 95, 0, 2102, 104, 0, 2531, 0, 2074, -2,
	0, 193, 0, 948, -2, 2531, 1144, 0, 0, 0,
	0, 911, 2071, 2076, 912, 2095, 913, 2081, 0, 308,
	309, 310, 311, 312, 0, 313, 2531, 315, 316, 0,
	318, 319, 2531, 321, 322, 0, 324, 0, 233, 234,
	2531, 343, 344, 0, 346, 347, 0, 349, 0, 0,
	0, 353, -2, 369, 0, 366, 356, 357, 359, 360,
	361, 362, 363, 0, 410, 408, 2110, 0, -2, 2531,
	0, 945, 0, 0, 1181, -2, 2531, 1141, 0, 1188,
	2531, 1184, 0, -2, 0, 1445, 2531, 1327, 977, 978,
	979, 980, 1585, 429, 0, 1353, 0, 1355, 0, 1374,
	1579, 1522, 0, 0, 1584, 0, -2, 546, 2126, -2,
	498, 0, 499, 0, -2, 0, 293, 0, 0, 930,
	931, 932, 933, 934, 937, 938, 939, 940, 1559, 250,
	252, 0, 0, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 0, 0, 607, 0, 0, 744, 745, 0,
	0, 755, 756, 757, 0, 293, 2435, 2398, 2260, 764,
	0, 767, 770, -2, 0, 0, 0, 0, 774, 0,
	779, 780, 781, 0, 0, 785, 787, 919, 789, 0,
	0, 791, 0, 795, 0, 798, 0, 800, 0, 802,
	-2, -2, -2, 810, 811, -2, 815, -2, 0, 818,
	820, 0, 822, -2, 0, 831, 827, 828, 0, 0,
	0, 0, 847, 848, 0, 857, 0, 860, 861, 862,
	0, 864, 865, 0, 867, 868, 869, 870, 0, 872,
	873, -2, -2, 877, 879, 0, 886, 0, 890, 0,
	894, 0, 0, 901, 0, 751, 752, 182, 1577, 1289,
	-2, 1291, 0, -2, 0, 588, 0, 591, 1477, 1403,
	1400, 0, 1474, 1475, 1404, 0, 0, 0, 1411, 0,
	1450, 1451, 0, 0, 0, 1390, 1391, 0, 0, 0,
	0, 1979, 1980, 1981, 1982, 1983, 1984, 1987, 1988, 1985,
	1986, 1989, 1990, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 1993, 1994, 0, 0, 1996, 0, 1998, 0, 0,
	0, 0, 0, 0, 1785, 1787, 2062, 0, 0, 1995,
	1725, 1726, 1727, 1728, 1729, 1764, 1765, 0, 0, 1838,
	2059, 2058, 1840, 0, 2010, 0, 1853, -2, 0, 1974,
	2005, 0, 0, 1862, 1863, 1864, 0, 0, 2010, 0,
	0, 2053, 1874, 1875, 1717, 0, 0, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1666, 1665, 0, 1667, 0,
	1668, 1669, 1676, 1689, 0, 0, 0, 0, 1693, 0,
	0, 0, 0, 0, 0, 0, 2034, -2, 0, 0,
	0, 0, 1681, 0, 1437, 0, 0, 1508, 2063, 2067,
	2068, 1508, 1508, 0, 0, 2011, 1570, 1570, 0, 0,
	1565, 1565, 1565, 1563, 1546, 0, 1546, 1556, 0, 1546,
	1546, 0, -2, 1527, 0, 0, 1556, 0, 1540, 534,
	536, 538, 540, 541, 542, 544, 1574, 1575, 0, 0,
	0, 0, 2144, 0, 0, 0, 0, 0, 2129, 0,
	0, 0, 0, 2487, 2434, 564, 578, 1447, 0, 2013,
	1600, 1604, 0, 1606, 1607, 1608, 1609, 1610, 0, 0,
	1601, -2, 1677, 1679, 1700, 2161, 2162, 2163, 1660, 1661,
	1662, 1663, 1664, 1672, 1659, 1659, 1659, 1670, 1699, 1691,
	1699, 1695, 1645, 1646, 1647, 1682, 1683, 1684, 1685, 0,
	2487, 2434, 570, 0, 0, 1385, 197, 199, 200, 201,
	202, 203, 370, 0, 377, 378, 379, 0, 459, 0,
	180, 181, 0, 182, 2531, 464, 0, 467, 0, 182,
	2531, 2069, 473, 0, 476, 0, 0, 482, 0, 0,
	0, 0, 0, 182, 1387, 0, 0, 0, 0, -2,
	632, 637, 638, 0, 1312, 0, 1319, 659, 660, 661,
	1321, 1322, 0, 1324, 635, 662, 663, 664, 665, 666,
	667, 0, 2083, 2084, 2085, 2086, 2089, 2090, 0, 0,
	633, 652, 640, 0, 646, 105, 1262, 0, 144, 0,
	1262, 1262, 0, 0, 0, 0, 168, 0, 0, 1016,
	0, 0, 0, 0, 0, 129, 140, 117, 118, 0,
	0, 0, 0, 0, 78, 1118, 0, 1121, 0, 0,
	0, 0, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 92, 93, 128, 0, 0, 1350, 0, 123,
	107, 0, 0, 0, 130, 142, 0, 173, 175, 1013,
	0, 0, 0, 0, 0, 0, 0, 192, 204, 0,
	0, 0, 0, 1142, 0, 1444, 0, 0, 2531, 0,
	1559, 2306, -2, -2, 250, 1559, 910, 0, 0, 2144,
	2079, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	348, 350, 351, 352, 0, 1180, 0, 358, 400, 1067,
	2531, 0, 0, 427, 422, 0, 424, 0, 0, 1117,
	2531, 1115, 2114, 0, 1139, 0, 1096, 2531, 2112, 0,
	0, 0, 1189, 2153, 1198, 1202, 1340, 0, 431, 0,
	1356, 1358, 0, 0, 1580, 0, 1582, 1522, 1447, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	256, 0, 1558, 0, 0, 1559, 250, 293, 293, 1559,
	609, 1559, 611, 0, 0, 758, 759, 0, 293, 293,
	293, 765, 766, 768, 769, -2, -2, -2, 887, 771,
	772, 854, 0, 0, 0, 853, 784, 788, 0, 904,
	2420, 2434, 2487, 917, 854, 2227, 854, 2227, 854, 2227,
	799, 801, 804, 842, 850, 814, 819, 0, 0, 824,
	832, -2, 0, 834, 0, 836, 0, 838, 854, 855,
	858, 863, 866, 871, 0, 0, 0, 0, 0, 0,
	0, 897, 898, 0, 0, 1135, 0, 1302, 1477, 1403,
	590, 1394, 1476, 1395, 1402, 1405, 0, 0, 1407, 0,
	1409, 0, 1472, 1473, 1480, 1481, 0, 1491, 1492, 1484,
	0, -2, 0, 0, 1487, 1488, 1413, 0, 1430, 1431,
	1432, 1461, 1464, 1217, 0, 2664, 1721, 1595, 1722, 1723,
	2098, 0, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, -2, -2, -2, -2, -2, -2, -2, -2,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, -2, -2, -2, 1762, 1763, -2, 1997, 1999, 0,
	2062, 0, -2, 0, -2, -2, -2, -2, 1782, 0,
	1784, 1789, 1791, 1793, 0, 0, 0, 0, 2061, 1803,
	2045, 2046, 0, 0, 1976, 1977, 1978, 1788, 0, 1807,
	2060, 2057, 0, 0, 2009, 1460, 1866, 0, 0, 0,
	0, 1873, 1858, 2007, 0, 2006, 0, 0, 0, 2017,
	0, 2052, 2048, 0, 2096, 1716, 1703, 1704, 1705, 1706,
	1707, 1708, 1718, 0, 2093, 2130, 2136, 1950, 0, 0,
	0, 1903, 1904, 1905, 1906, 1907, 0, 1909, 1910, 0,
	1912, 1913, 0, 1915, 1916, 0, 1918, 1919, 1920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	1617, 0, 0, 0, 1621, 0, 0, 0, 1625, 0,
	0, 0, 1629, 0, 0, 0, 1633, 0, 0, 0,
	1637, 0, 0, 0, 1641, 0, 0, 0, 0, 0,
	1922, 0, 2020, -2, -2, -2, -2, -2, -2, -2,
	-2, 0, 1924, 0, 1926, 2011, 2031, 0, 0, 1808,
	0, 0, 0, 1974, 0, 1929, 2011, 2039, 0, 0,
	0, 0, 0, 2011, 0, 2044, 0, 1936, 0, 1938,
	1439, 0, 0, 1590, 0, 0, 0, 2066, 1590, 1590,
	0, 1503, 0, 0, 1566, 1567, 1568, 1569, 0, 0,
	1570, 0, 1560, 1564, 1561, 1562, 1556, 1519, 0, 0,
	2100, 1556, 1525, 1555, 0, 1096, 1545, 1556, 1556, 0,
	-2, 1529, 1546, 0, 0, 535, 537, 539, 543, 545,
	0, 0, 1460, -2, 0, -2, 1095, 0, 0, 0,
	0, 554, 556, 0, 0, 479, 0, 0, 548, 0,
	551, 0, 1591, 1594, 0, 0, 1605, 1611, 1612, 0,
	-2, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 489, 182, 461, 0, 182, 182, 470,
	0, 0, 182, 481, 182, 2121, 182, 2119, 282, 486,
	1386, 215, 0, 625, 0, 1311, 1320, 0, 656, 0,
	658, 0, 2087, 2091, 2088, 2092, 0, 647, 0, 0,
	0, 0, 1261, 0, 1224, 0, 0, 0, 0, 0,
	148, 2531, 0, 184, 0, 0, 1060, 2106, 0, 1052,
	0, 0, 2246, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	1120, 1122, 1129, 1131, 0, 1125, 2094, 0, 0, 1126,
	0, 1128, 1130, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 1350, 0, 0, 0,
	116, 120, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1176,
	1174, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 0, 0, -2, 0, 0, 0, 0, 225, 0,
	284, 2072, 2082, 0, 935, 936, 314, 317, 320, 323,
	221, 0, 354, 0, 0, 983, 958, 0, 0, 409,
	293, 0, 0, 423, 2123, 943, 1113, 1116, 0, 1096,
	2531, 1153, 0, 0, 0, 0, 0, 0, 1187, 0,
	0, 2531, 2101, 2152, 2153, 1342, 1350, 0, 1590, 0,
	1372, 1359, 0, 0, 0, 1372, 1376, 1377, 1379, 1380,
	0, 0, 1581, 1587, 497, 547, 1447, 1447, 293, 291,
	2366, 289, 286, 288, 0, 0, 0, 984, 986, 987,
	988, 184, 0, 2153, 1052, 2295, 2153, 0, 1362, 1364,
	0, 245, 0, 253, 1559, 251, 256, 0, 0, 421,
	608, 613, 753, 0, 293, 761, 762, 763, 806, 844,
	852, 773, 775, 776, 777, 0, 0, 918, 914, 915,
	916, 790, 854, 793, 854, 796, 854, 817, 821, 826,
	833, 0, 0, 0, 846, 0, 0, 0, 0, 0,
	0, 0, 891, 892, 893, 895, 900, 899, 903, 1578,
	1398, 1399, 1401, 0, 1410, 0, 0, 1486, -2, -2,
	1485, 1489, 1490, -2, -2, -2, -2, 1406, 0, 1415,
	1412, 0, 1471, 1215, 1216, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1804, 0, -2, 1783, 1786, 1790,
	1792, 1794, 0, 0, 0, 0, 0, 0, 2000, 0,
	2002, 1805, 2055, 2058, 1972, 0, 0, 1459, 1460, 1460,
	0, 1872, 0, 2008, 0, 2015, 2016, 0, 1865, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 1908, 1911, 1914, 1917, 0,
	0, 0, 0, 1897, 0, 0, 0, 1901, 1671, 1657,
	0, 1699, 1697, 1698, 1692, 1699, 1696, 1649, 0, 1614,
	1615, 1616, 1618, 1619, 1620, 1622, 1623, 1624, 1626, 1627,
	1628, 1630, 1631, 1632, 1634, 1635, 1636, 1638, 1639, 1640,
	1642, 1643, 1644, 1648, 0, 1921, 0, 1923, 1925, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 1812, 1813, 1928, 2037,
	2038, 0, 0, 0, 0, 0, 0, 1934, 0, 2043,
	1935, 1937, 1447, 0, 1440, 0, 1505, 1494, 1589, 0,
	2064, 1559, 1507, 1509, 2065, 2103, 1494, 1494, 0, 2012,
	0, 0, 1550, 0, 0, 0, 1552, 1523, 0, 0,
	1517, 0, 1513, 1514, 1515, 1516, 1524, 1096, 1554, 1526,
	1530, 2130, 0, 1556, 0, 1541, 0, 1543, 1576, 0,
	1535, 1538, 0, 0, 2145, 1590, 0, 325, 329, 330,
	326, 327, 328, 563, 0, 0, 0, 0, 2014, 0,
	1596, 0, 1602, 0, 0, 0, 0, 569, 0, 0,
	0, 198, 1384, 376, 460, 182, 465, 468, 2070, 182,
	474, 477, 483, 211, 0, 621, -2, 654, 655, 657,
	0, 653, 145, 1262, 0, 0, 1220, 1222, 2117, 1226,
	0, 0, 0, 0, 0, 0, 150, 2531, 159, 0,
	1032, 0, 2104, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 2531, 182, 2531, 182, 162, 164, 167, 0,
	172, 169, 170, 0, 1020, 0, 0, 1023, 106, 1262,
	0, 109, 113, 121, 0, 0, 0, 127, 0, 0,
	0, 1247, 1253, 0, 0, 1123, 1124, 1127, 1133, 79,
	0, 0, 1251, 1257, 89, 90, 2115, 91, 0, 1219,
	0, 0, 0, 174, 111, 115, 122, 0, 1259, 108,
	0, 196, 0, 0, 0, 188, 0, 189, 190, 205,
	0, 182, 2531, 0, 946, 947, 1175, 1137, 1138, 0,
	1143, 0, 0, 0, 1559, 217, 0, 1559, 225, 0,
	2078, 0, 342, 0, 0, 0, 0, 982, 1078, 0,
	953, 0, 0, 0, 415, 411, 0, 420, 426, 425,
	-2, 0, 0, 0, 0, -2, 0, 0, 1191, 1185,
	1186, 0, 0, 0, 0, 2531, 1344, 1350, 0, 1445,
	1460, 430, 1351, 1372, 0, 0, 0, 1361, 1357, 1354,
	1590, 0, 0, 0, 0, 0, 1583, 1586, 500, 501,
	268, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	989, 993, 0, 2153, 2153, 0, 2108, 0, 0, 0,
	0, 254, 0, 257, 0, 0, 0, 262, 263, 264,
	265, 266, 256, 247, 1559, 0, 610, 0, 0, 760,
	0, 783, 792, 794, 797, 835, 837, 854, 880, 881,
	1010, 0, 1010, 0, 0, 896, 1408, 0, 1483, 1414,
	1465, 1466, 0, 1217, 0, 1724, 1767, 0, 0, -2,
	0, 0, 1771, 0, 0, 0, -2, 0, 0, 0,
	2001, 2003, 0, 2057, 1867, 0, 0, 0, 1871, 1855,
	1856, 0, 1975, 2018, 2047, 2051, 0, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 0, 2097, 2131, 2135, 1948, 1949,
	1953, 2111, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 1694, 0, 0, 2019, 2030,
	2032, 1809, 1810, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, -2, -2, -2, 1827, 1828, 1829, -2,
	-2, -2, 0, 0, 0, 2033, 2035, 2036, 2040, 2041,
	0, 1931, 1932, 1933, 2042, 0, 1447, 1441, 1502, 0,
	1588, 1506, 0, 1502, 1502, 1454, 1548, 0, 0, 1572,
	0, 1520, 0, 1521, 0, 1553, 0, 1528, 1531, 1532,
	1542, 0, 1534, 0, 1537, 0, 1867, -2, 294, 295,
	297, 0, 300, 566, 567, 565, 549, 0, 0, 1598,
	0, 0, 1674, 1678, 1702, 572, 573, 571, 462, 471,
	213, 0, 1557, 0, 0, 0, 0, 2183, 1237, 1238,
	0, 2548, 1242, 0, 0, 0, 0, 183, 1030, 1059,
	0, 0, 0, 1051, 0, 0, 1065, 152, 0, 0,
	0, 160, 0, 0, 157, 0, 166, 171, 1017, 0,
	0, 0, 0, 1225, 0, 0, 124, 125, 126, 0,
	131, 0, 132, 0, 0, 0, 0, 0, 0, 1335,
	1336, 1330, 0, 0, 0, 185, 0, 0, 0, 1214,
	0, 0, 207, 0, 0, 0, 1178, 1179, 1248, 1254,
	0, 0, 225, 223, 0, 226, 0, 229, 230, 0,
	225, 219, 0, 0, 1096, 355, 956, 1066, 0, 1068,
	0, 954, 0, 0, 1067, 407, 0, 414, 0, 0,
	1117, 0, 0, 1140, 1151, 1096, 0, 1190, 1192, 0,
	1200, 0, 0, 0, 1346, 1350, 0, 1339, 1340, 1479,
	1352, 1370, -2, 0, 0, 1460, 1378, 1375, 1381, 1382,
	0, 290, 0, 285, 287, 0, 271, 0, 0, 985,
	990, 0, 0, 0, 0, 0, 1363, 1365, 0, 0,
	0, 0, 0, 0, 246, 256, 277, 0, 754, 778,
	845, 882, 1009, 0, 0, 884, 0, 0, 1482, 1469,
	1470, 1467, 1217, 1769, 1773, 0, 0, 0, 1775, -2,
	0, 1797, -2, -2, 2004, 2056, 1846, 1460, 1868, 1870,
	1857, 2050, 1719, 0, 1955, 1952, 0, 1939, 0, 1892,
	1893, 0, 0, 1896, 1898, 1899, 1900, 1658, 1651, 1650,
	2029, 0, 0, 0, 0, 1930, 1442, 0, 1944, 0,
	0, 1510, 1944, 1944, 1549, 0, 1551, 1518, 1511, 0,
	2131, 1544, 1536, 0, 0, 298, 0, 1592, 1597, 0,
	1603, 1673, 214, 146, 147, 1229, 1230, 1232, 1233, 0,
	0, 1239, 1240, 0, 1245, 149, 0, 1031, 0, 1034,
	0, 0, 0, 0, 1041, 1052, 0, 0, 0, 0,
	0, 1053, 0, 1082, 0, 1205, 1212, 0, -2, 0,
	0, 0, 154, 177, 0, 0, 1263, 0, 0, 182,
	182, 0, 0, 1221, 1223, 0, 0, 0, 0, 134,
	0, 0, 1249, 1255, 1252, 1258, 0, 0, 0, 1260,
	194, 195, 0, 182, 0, 187, 182, 182, 1214, 0,
	0, 0, 216, 0, 0, 0, 0, 218, 283, 225,
	0, 1004, 0, 1078, 1070, 1071, 1072, 0, 1077, 1079,
	0, 0, 970, 955, 0, 966, 0, 0, 983, 958,
	0, 412, 944, 1114, 1148, 1096, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 1348, 1350, 0, 1341, 1342,
	1372, 1478, 0, 0, 0, 1360, 1479, 0, 292, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	258, 0, 259, 260, 261, 248, 612, 614, 0, 0,
	620, 1008, 0, 0, 0, 0, 1468, 1777, -2, -2,
	1798, 0, 2132, 2134, 1460, 0, 1941, 1462, 0, 0,
	-2, 0, 0, 0, 1443, 1426, 0, 1501, 1493, 1495,
	1497, 2423, 2223, 2530, 1427, 1428, 1571, 0, 1539, 299,
	0, 1599, 0, 0, 1234, 1235, 0, 0, 0, 151,
	0, 1035, 1036, 2107, 1038, 0, 1040, 1042, 1043, 0,
	1046, 2155, 0, 1050, 0, 1061, 1083, 0, 1092, 0,
	1207, 1217, 1211, 0, 1209, 1094, 0, 153, 155, 176,
	1214, 0, 156, 165, 0, 0, 110, 0, 0, 2218,
	137, 135, 133, 1218, 112, 0, 196, 206, 1213, 191,
	208, 182, 0, 1250, 1256, 227, 0, 228, 231, 0,
	0, 1019, 0, 957, 1069, 0, 1080, 1081, 960, 0,
	959, 0, 0, 0, 0, 0, 413, 416, 0, 419,
	0, 0, 1193, 1191, 0, 1199, 0, 0, 0, 1329,
	0, 0, 1343, 1344, 428, 1366, 0, 0, 1372, 1383,
	270, 0, 0, 991, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 992, 1094, 0, 0, 1058, 0, 275,
	255, 0, 616, 0, 618, 0, 883, 885, 0, 0,
	1869, 1959, 0, 0, 1894, 1895, -2, 0, 1835, 1943,
	1945, 0, 0, 0, 0, 0, 1512, 1593, 1227, 0,
	1231, 0, 1241, 1243, 0, 1246, 1033, 1037, 0, 0,
	0, 1100, 0, 0, 1054, 0, 1086, 1087, 1004, 0,
	1088, 1089, 1090, 1206, 1471, 1212, 1004, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 186, 209, 1214,
	224, 241, 0, 1149, 958, 1018, 0, 0, 968, 0,
	971, 0, 967, 964, 965, 956, 0, 417, 418, 0,
	1152, 0, 0, 1200, 0, 0, 1332, 1328, 1350, 1345,
	1346, 1590, 1369, 1373, 0, 0, 1092, 1094, 958, 0,
	615, 0, 0, 888, 889, 0, 0, 0, 0, 1954,
	1463, 1836, 0, 0, 1496, 1498, 1499, 1500, 1228, 1236,
	1244, 0, 0, 1045, 1105, 0, 0, 0, 1084, 1085,
	1015, 0, 1210, 1208, 1063, 0, 1096, 158, 0, 1094,
	0, 1024, 0, 0, 1027, 0, 0, 138, 2218, 136,
	0, 182, 244, 0, 238, 236, 237, 960, 0, 0,
	1074, 1076, 0, 972, 1004, 970, 1150, 1183, 1094, 0,
	1092, 0, 1338, 1350, 1333, 1334, 0, 1348, 0, 293,
	293, 1004, 1092, 1590, 0, 293, 617, 619, 1951, 1971,
	1960, -2, 2490, 2224, 0, 1971, 1971, 1946, 1947, 0,
	0, 1047, 1101, 1102, 0, 1097, 1098, 1099, 2154, 1048,
	1049, 1082, 1014, 0, 0, 1100, 178, 1004, 1021, 0,
	0, 1022, 0, 0, 141, 0, 143, 210, 232, 0,
	0, 952, 0, 1073, 0, 0, 0, 0, 1019, 960,
	1092, 0, 1004, 0, 1325, 1337, 0, 1347, 1329, 0,
	272, 273, 1015, 1004, 1057, 274, 1956, 0, 0, 1962,
	1963, 1964, 1965, 1966, 1957, 1958, 1039, 0, 1103, 0,
	1104, 0, 0, 0, 1590, 1091, 0, 1105, 163, 1025,
	0, 1028, 0, 139, 0, 239, 240, 949, 951, 0,
	1075, 961, 0, 963, 958, 969, 1004, 0, 1015, 0,
	1331, 2116, 1332, 1367, 0, 958, 1015, 0, 1968, 1969,
	0, 0, 0, 1106, 0, 1109, 1110, 0, 1107, 1062,
	0, 1082, 0, 0, 0, 0, 962, 960, 1015, 1094,
	958, 1092, 1338, 0, 1590, 958, 1967, 1970, 1961, 1044,
	1108, 1111, 1112, 1093, 1064, 0, 0, 242, 0, 1007,
	952, 958, 1092, 1590, 1004, 1326, 1590, 1055, 1590, 1012,
	0, 0, 1003, 1005, 1006, 950, 1590, 1004, 1196, 1015,
	1368, 1056, 1026, 1011, 0, 243, 1194, 1015, 958, 0,
	958, 1590, 0, 1590, 1197, 1012, 1195, 1029,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 562, 3, 568, 563, 3,
	573, 574, 566, 564, 578, 565, 575, 567, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 581, 3,
	554, 556, 555, 559, 577, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 571, 3, 572, 569, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 579, 561, 580, 557,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 558, 57897, 560, 57898, 570, 57899, 576,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1291
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1301
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1302
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1304
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1318
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1328
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1332
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1333
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1336
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1397
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1423
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1453
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1457
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1491
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1515
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1524
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1548
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1604
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1613
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1628
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1642
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1666
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1677
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1684
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1696
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1731
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1760
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1770
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1779
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1790
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1796
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1822
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1827
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1947
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1950
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1956
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2008
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2169
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2173
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2176
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2211
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2216
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2223
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2231
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2262
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2380
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2616
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2740
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2749
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2755
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2760
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2765
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2770
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2775
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2806
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2852
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2882
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2995
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3046
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3065
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3070
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3082
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3086
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3087
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3088
		{
			return helpWith(sqllex, "CREATE")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplemented(sqllex, "create access method")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			return unimplemented(sqllex, "create cast")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3107
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "create operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "create publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "create rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "create server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3126
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3129
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3130
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3133
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3134
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3140
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3143
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3146
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3151
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "drop server")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3163
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3165
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3168
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3220
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3247
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3275
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3310
		{

			sqlVAL.union.val = nil
		}
	case 428:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3334
		{
			return helpWith(sqllex, "DELETE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3338
		{
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3350
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3364
		{
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "DROP")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3587
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3594
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3598
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3630
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3654
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3662
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			return helpWith(sqllex, "DELETE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "INSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "DELETE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "INSERT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3713
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3739
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3747
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3772
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "GRANT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "RESET")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "RESET")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			return helpWith(sqllex, "USE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3990
		{
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "USE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4014
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return unimplemented(sqllex, "set from current")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4233
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = tree.Low
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = tree.Normal
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = tree.High
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SHOW")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4419
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.str = "client_encoding"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.str = "timezone"
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4479
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4542
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4551
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4642
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4688
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4729
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4740
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4761
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = true
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = false
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4896
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = true
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = false
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4951
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = true
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = false
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5005
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5013
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5060
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5103
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5111
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5148
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5171
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5245
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5252
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5385
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5437
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5500
		{
			return helpWith(sqllex, "RESUME")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5602
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5669
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5685
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{

			sqlVAL.union.val = nil
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.str = ""
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5730
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = nil
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5753
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5757
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 968:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5783
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5797
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5812
		{
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5869
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5906
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5912
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5913
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5919
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5935
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5940
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.str = ""
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5965
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6179
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = true
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = false
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6214
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6315
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6343
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6353
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6368
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6433
		{
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6435
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6436
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6437
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6438
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6510
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6594
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6603
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6611
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6627
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6637
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6642
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6644
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6652
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6690
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6705
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = true
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{

			sqlVAL.union.val = true
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = false
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6730
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6744
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6756
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6768
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6778
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6788
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = nil
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6898
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6924
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6926
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6928
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6930
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6934
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6972
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6990
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7009
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7026
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7043
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7047
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = false
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = true
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = false
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = true
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = false
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7107
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7121
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.str = ""
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.str = ""
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7180
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7186
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7410
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7416
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7428
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7434
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7448
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7454
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7471
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7472
		{
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7476
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7487
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7505
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7514
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7535
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7543
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7587
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7588
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7608
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7613
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7626
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7641
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7642
		{
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7663
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7691
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7706
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.str = ""
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{

		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.str = ""
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.str = ""
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.str = ""
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.str = ""
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7887
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7901
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7930
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7961
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8037
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8111
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8132
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8291
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8326
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8327
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8328
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8389
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8433
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = true
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = false
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = nil
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8517
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = true
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = false
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = false
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = true
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8546
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8547
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8550
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8551
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8613
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8618
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8647
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8668
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8735
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8774
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8776
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8808
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8845
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8866
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8878
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8897
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8936
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8946
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8992
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9022
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9055
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = nil
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = true
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = false
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.str = tree.AstFull
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.str = tree.AstRight
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.str = tree.AstInner
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9174
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9175
		{
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.str = tree.AstHash
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.str = ""
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9289
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = false
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = false
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9351
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9359
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9378
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9380
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9388
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9401
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9408
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9469
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9470
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9474
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9475
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9476
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9478
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9480
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9483
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9486
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9487
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9488
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9492
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9494
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9495
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9496
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9498
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9499
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9500
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = types.Geography
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9519
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9527
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9553
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9561
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = nil
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = types.Int2
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = types.Int
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = types.Float4
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = types.Float
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9604
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9620
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = types.Bool
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = types.Float
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9653
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9659
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9681
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = types.String
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = true
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = false
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = types.Date
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9730
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9738
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9752
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9761
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9769
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9786
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = true
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = false
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = false
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = types.Interval
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9810
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9894
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = nil
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9939
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10317
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10538
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10564
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10588
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10618
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10629
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10630
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10654
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10720
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10877
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10886
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10891
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10916
		{
			return unimplemented(sqllex, "treat")
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10942
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.str = ""
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11078
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11091
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11188
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = tree.Any
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = tree.Some
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = tree.All
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = tree.Div
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = tree.LT
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = tree.GT
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = tree.LE
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = tree.GE
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = tree.NE
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = tree.Like
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11550
		{
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11703
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11719
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11739
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11768
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12001
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.str = ""
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
