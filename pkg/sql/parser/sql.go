// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:888
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13937

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1621,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 422,
	-2, 0,
	-1, 74,
	245, 250,
	523, 250,
	-2, 0,
	-1, 88,
	234, 1354,
	247, 1354,
	263, 418,
	396, 418,
	407, 1103,
	447, 418,
	460, 1103,
	508, 1103,
	534, 418,
	560, 1103,
	-2, 0,
	-1, 94,
	133, 1621,
	240, 1621,
	545, 1621,
	546, 1621,
	-2, 0,
	-1, 112,
	152, 1592,
	172, 1592,
	185, 1592,
	243, 1592,
	276, 1592,
	347, 1592,
	357, 1592,
	540, 1592,
	-2, 1563,
	-1, 153,
	160, 939,
	262, 939,
	399, 900,
	465, 900,
	507, 900,
	526, 939,
	528, 900,
	-2, 0,
	-1, 157,
	4, 1623,
	21, 1623,
	22, 1623,
	23, 1623,
	24, 1623,
	25, 1623,
	26, 1623,
	27, 1623,
	29, 1623,
	30, 1623,
	36, 1623,
	41, 1623,
	42, 1623,
	44, 1623,
	45, 1623,
	46, 1623,
	47, 1623,
	48, 1623,
	49, 1623,
	50, 1623,
	51, 1623,
	53, 1623,
	54, 1623,
	55, 1623,
	56, 1623,
	58, 1623,
	59, 1623,
	60, 1623,
	61, 1623,
	62, 1623,
	63, 1623,
	64, 1623,
	68, 1623,
	69, 1623,
	70, 1623,
	71, 1623,
	73, 1623,
	74, 1623,
	75, 1623,
	79, 1623,
	80, 1623,
	81, 1623,
	82, 1623,
	83, 1623,
	84, 1623,
	85, 1623,
	88, 1623,
	89, 1623,
	90, 1623,
	91, 1623,
	92, 1623,
	94, 1623,
	96, 1623,
	97, 1623,
	98, 1623,
	99, 1623,
	100, 1623,
	101, 1623,
	103, 1623,
	104, 1623,
	105, 1623,
	107, 1623,
	108, 1623,
	109, 1623,
	117, 1623,
	118, 1623,
	119, 1623,
	120, 1623,
	121, 1623,
	123, 1623,
	124, 1623,
	125, 1623,
	126, 1623,
	128, 1623,
	129, 1623,
	130, 1623,
	132, 1623,
	133, 1623,
	134, 1623,
	136, 1623,
	137, 1623,
	138, 1623,
	141, 1623,
	142, 1623,
	143, 1623,
	145, 1623,
	146, 1623,
	147, 1623,
	149, 1623,
	150, 1623,
	151, 1623,
	153, 1623,
	154, 1623,
	155, 1623,
	156, 1623,
	157, 1623,
	158, 1623,
	159, 1623,
	160, 1623,
	161, 1623,
	162, 1623,
	163, 1623,
	164, 1623,
	165, 1623,
	166, 1623,
	167, 1623,
	168, 1623,
	169, 1623,
	171, 1623,
	177, 1623,
	178, 1623,
	179, 1623,
	180, 1623,
	184, 1623,
	186, 1623,
	187, 1623,
	188, 1623,
	192, 1623,
	193, 1623,
	194, 1623,
	195, 1623,
	196, 1623,
	197, 1623,
	198, 1623,
	199, 1623,
	200, 1623,
	201, 1623,
	202, 1623,
	203, 1623,
	204, 1623,
	205, 1623,
	207, 1623,
	208, 1623,
	210, 1623,
	211, 1623,
	213, 1623,
	214, 1623,
	215, 1623,
	216, 1623,
	217, 1623,
	218, 1623,
	219, 1623,
	220, 1623,
	221, 1623,
	223, 1623,
	224, 1623,
	226, 1623,
	227, 1623,
	228, 1623,
	229, 1623,
	230, 1623,
	234, 1623,
	235, 1623,
	236, 1623,
	237, 1623,
	240, 1623,
	241, 1623,
	242, 1623,
	244, 1623,
	246, 1623,
	247, 1623,
	249, 1623,
	251, 1623,
	252, 1623,
	253, 1623,
	255, 1623,
	259, 1623,
	260, 1623,
	261, 1623,
	262, 1623,
	263, 1623,
	264, 1623,
	266, 1623,
	267, 1623,
	268, 1623,
	270, 1623,
	271, 1623,
	273, 1623,
	274, 1623,
	277, 1623,
	278, 1623,
	279, 1623,
	280, 1623,
	281, 1623,
	282, 1623,
	283, 1623,
	286, 1623,
	287, 1623,
	288, 1623,
	289, 1623,
	291, 1623,
	292, 1623,
	293, 1623,
	294, 1623,
	295, 1623,
	296, 1623,
	297, 1623,
	298, 1623,
	299, 1623,
	300, 1623,
	301, 1623,
	302, 1623,
	303, 1623,
	304, 1623,
	305, 1623,
	306, 1623,
	307, 1623,
	308, 1623,
	309, 1623,
	310, 1623,
	311, 1623,
	312, 1623,
	314, 1623,
	316, 1623,
	317, 1623,
	318, 1623,
	319, 1623,
	320, 1623,
	321, 1623,
	322, 1623,
	323, 1623,
	324, 1623,
	325, 1623,
	326, 1623,
	327, 1623,
	328, 1623,
	329, 1623,
	330, 1623,
	331, 1623,
	333, 1623,
	334, 1623,
	336, 1623,
	338, 1623,
	339, 1623,
	340, 1623,
	342, 1623,
	343, 1623,
	344, 1623,
	345, 1623,
	346, 1623,
	349, 1623,
	352, 1623,
	353, 1623,
	354, 1623,
	355, 1623,
	358, 1623,
	359, 1623,
	360, 1623,
	362, 1623,
	364, 1623,
	365, 1623,
	366, 1623,
	367, 1623,
	368, 1623,
	369, 1623,
	370, 1623,
	371, 1623,
	372, 1623,
	373, 1623,
	374, 1623,
	375, 1623,
	376, 1623,
	378, 1623,
	379, 1623,
	380, 1623,
	381, 1623,
	382, 1623,
	383, 1623,
	384, 1623,
	385, 1623,
	386, 1623,
	387, 1623,
	388, 1623,
	389, 1623,
	390, 1623,
	391, 1623,
	392, 1623,
	394, 1623,
	395, 1623,
	397, 1623,
	398, 1623,
	399, 1623,
	400, 1623,
	401, 1623,
	402, 1623,
	403, 1623,
	404, 1623,
	405, 1623,
	406, 1623,
	407, 1623,
	408, 1623,
	409, 1623,
	411, 1623,
	413, 1623,
	414, 1623,
	415, 1623,
	421, 1623,
	422, 1623,
	424, 1623,
	425, 1623,
	426, 1623,
	427, 1623,
	428, 1623,
	429, 1623,
	430, 1623,
	431, 1623,
	432, 1623,
	433, 1623,
	435, 1623,
	436, 1623,
	437, 1623,
	439, 1623,
	440, 1623,
	441, 1623,
	442, 1623,
	443, 1623,
	444, 1623,
	445, 1623,
	447, 1623,
	448, 1623,
	449, 1623,
	450, 1623,
	451, 1623,
	452, 1623,
	453, 1623,
	454, 1623,
	455, 1623,
	456, 1623,
	457, 1623,
	458, 1623,
	460, 1623,
	461, 1623,
	462, 1623,
	463, 1623,
	464, 1623,
	465, 1623,
	467, 1623,
	468, 1623,
	469, 1623,
	470, 1623,
	471, 1623,
	472, 1623,
	474, 1623,
	475, 1623,
	476, 1623,
	477, 1623,
	478, 1623,
	479, 1623,
	480, 1623,
	481, 1623,
	483, 1623,
	485, 1623,
	486, 1623,
	487, 1623,
	488, 1623,
	489, 1623,
	490, 1623,
	491, 1623,
	492, 1623,
	493, 1623,
	494, 1623,
	495, 1623,
	496, 1623,
	497, 1623,
	498, 1623,
	499, 1623,
	500, 1623,
	501, 1623,
	503, 1623,
	504, 1623,
	506, 1623,
	507, 1623,
	509, 1623,
	510, 1623,
	511, 1623,
	512, 1623,
	513, 1623,
	514, 1623,
	515, 1623,
	516, 1623,
	518, 1623,
	519, 1623,
	520, 1623,
	521, 1623,
	522, 1623,
	524, 1623,
	526, 1623,
	527, 1623,
	528, 1623,
	529, 1623,
	530, 1623,
	531, 1623,
	533, 1623,
	534, 1623,
	535, 1623,
	536, 1623,
	538, 1623,
	539, 1623,
	542, 1623,
	543, 1623,
	544, 1623,
	545, 1623,
	546, 1623,
	547, 1623,
	548, 1623,
	550, 1623,
	553, 1623,
	554, 1623,
	555, 1623,
	556, 1623,
	557, 1623,
	558, 1623,
	560, 1623,
	561, 1623,
	562, 1623,
	563, 1623,
	564, 1623,
	565, 1623,
	566, 1623,
	571, 1623,
	572, 1623,
	573, 1623,
	574, 1623,
	575, 1623,
	576, 1623,
	-2, 0,
	-1, 158,
	1, 1471,
	131, 1471,
	251, 1471,
	335, 1471,
	394, 1471,
	403, 1471,
	580, 1471,
	610, 1471,
	-2, 0,
	-1, 160,
	1, 1471,
	610, 1471,
	-2, 0,
	-1, 161,
	1, 1471,
	610, 1471,
	-2, 0,
	-1, 162,
	1, 1471,
	523, 1471,
	610, 1471,
	-2, 0,
	-1, 191,
	152, 1591,
	172, 1591,
	185, 1591,
	243, 1591,
	276, 1591,
	347, 1591,
	357, 1591,
	540, 1591,
	-2, 1566,
	-1, 238,
	4, 1630,
	5, 1630,
	6, 1630,
	7, 1630,
	8, 1630,
	9, 1630,
	10, 1630,
	21, 1630,
	22, 1630,
	23, 1630,
	24, 1630,
	25, 1630,
	26, 1630,
	27, 1630,
	29, 1630,
	30, 1630,
	36, 1630,
	37, 1630,
	41, 1630,
	42, 1630,
	43, 1630,
	44, 1630,
	45, 1630,
	46, 1630,
	47, 1630,
	48, 1630,
	49, 1630,
	50, 1630,
	51, 1630,
	53, 1630,
	54, 1630,
	55, 1630,
	56, 1630,
	58, 1630,
	59, 1630,
	60, 1630,
	61, 1630,
	62, 1630,
	63, 1630,
	64, 1630,
	65, 1630,
	66, 1630,
	67, 1630,
	68, 1630,
	69, 1630,
	70, 1630,
	71, 1630,
	73, 1630,
	74, 1630,
	75, 1630,
	77, 1630,
	79, 1630,
	80, 1630,
	81, 1630,
	82, 1630,
	83, 1630,
	84, 1630,
	85, 1630,
	88, 1630,
	89, 1630,
	90, 1630,
	91, 1630,
	92, 1630,
	94, 1630,
	96, 1630,
	97, 1630,
	98, 1630,
	99, 1630,
	100, 1630,
	101, 1630,
	103, 1630,
	104, 1630,
	105, 1630,
	106, 1630,
	107, 1630,
	108, 1630,
	109, 1630,
	110, 1630,
	111, 1630,
	112, 1630,
	113, 1630,
	114, 1630,
	115, 1630,
	116, 1630,
	117, 1630,
	118, 1630,
	119, 1630,
	120, 1630,
	121, 1630,
	122, 1630,
	123, 1630,
	124, 1630,
	125, 1630,
	126, 1630,
	127, 1630,
	128, 1630,
	129, 1630,
	130, 1630,
	132, 1630,
	133, 1630,
	134, 1630,
	136, 1630,
	137, 1630,
	138, 1630,
	141, 1630,
	142, 1630,
	143, 1630,
	145, 1630,
	146, 1630,
	147, 1630,
	149, 1630,
	150, 1630,
	151, 1630,
	153, 1630,
	154, 1630,
	155, 1630,
	156, 1630,
	157, 1630,
	158, 1630,
	159, 1630,
	160, 1630,
	161, 1630,
	162, 1630,
	163, 1630,
	164, 1630,
	165, 1630,
	166, 1630,
	167, 1630,
	168, 1630,
	169, 1630,
	170, 1630,
	171, 1630,
	177, 1630,
	178, 1630,
	179, 1630,
	180, 1630,
	184, 1630,
	186, 1630,
	187, 1630,
	188, 1630,
	191, 1630,
	192, 1630,
	193, 1630,
	194, 1630,
	195, 1630,
	196, 1630,
	197, 1630,
	198, 1630,
	199, 1630,
	200, 1630,
	201, 1630,
	202, 1630,
	203, 1630,
	204, 1630,
	205, 1630,
	207, 1630,
	208, 1630,
	210, 1630,
	211, 1630,
	213, 1630,
	214, 1630,
	215, 1630,
	216, 1630,
	217, 1630,
	218, 1630,
	219, 1630,
	220, 1630,
	221, 1630,
	222, 1630,
	223, 1630,
	224, 1630,
	226, 1630,
	227, 1630,
	228, 1630,
	229, 1630,
	230, 1630,
	234, 1630,
	235, 1630,
	236, 1630,
	237, 1630,
	239, 1630,
	240, 1630,
	241, 1630,
	242, 1630,
	244, 1630,
	246, 1630,
	247, 1630,
	248, 1630,
	249, 1630,
	250, 1630,
	251, 1630,
	252, 1630,
	253, 1630,
	254, 1630,
	255, 1630,
	259, 1630,
	260, 1630,
	261, 1630,
	262, 1630,
	263, 1630,
	264, 1630,
	266, 1630,
	267, 1630,
	268, 1630,
	270, 1630,
	271, 1630,
	272, 1630,
	273, 1630,
	274, 1630,
	275, 1630,
	277, 1630,
	278, 1630,
	279, 1630,
	280, 1630,
	281, 1630,
	282, 1630,
	283, 1630,
	284, 1630,
	285, 1630,
	286, 1630,
	287, 1630,
	288, 1630,
	289, 1630,
	291, 1630,
	292, 1630,
	293, 1630,
	294, 1630,
	295, 1630,
	296, 1630,
	297, 1630,
	298, 1630,
	299, 1630,
	300, 1630,
	301, 1630,
	302, 1630,
	303, 1630,
	304, 1630,
	305, 1630,
	306, 1630,
	307, 1630,
	308, 1630,
	309, 1630,
	310, 1630,
	311, 1630,
	312, 1630,
	314, 1630,
	315, 1630,
	316, 1630,
	317, 1630,
	318, 1630,
	319, 1630,
	320, 1630,
	321, 1630,
	322, 1630,
	323, 1630,
	324, 1630,
	325, 1630,
	326, 1630,
	327, 1630,
	328, 1630,
	329, 1630,
	330, 1630,
	331, 1630,
	332, 1630,
	333, 1630,
	334, 1630,
	335, 1630,
	336, 1630,
	337, 1630,
	338, 1630,
	339, 1630,
	340, 1630,
	341, 1630,
	342, 1630,
	343, 1630,
	344, 1630,
	345, 1630,
	346, 1630,
	349, 1630,
	353, 1630,
	354, 1630,
	355, 1630,
	358, 1630,
	359, 1630,
	360, 1630,
	361, 1630,
	362, 1630,
	363, 1630,
	364, 1630,
	365, 1630,
	366, 1630,
	367, 1630,
	368, 1630,
	369, 1630,
	370, 1630,
	371, 1630,
	372, 1630,
	373, 1630,
	374, 1630,
	375, 1630,
	376, 1630,
	378, 1630,
	379, 1630,
	380, 1630,
	381, 1630,
	382, 1630,
	383, 1630,
	384, 1630,
	385, 1630,
	386, 1630,
	387, 1630,
	388, 1630,
	389, 1630,
	390, 1630,
	391, 1630,
	392, 1630,
	394, 1630,
	395, 1630,
	397, 1630,
	398, 1630,
	399, 1630,
	400, 1630,
	401, 1630,
	402, 1630,
	403, 1630,
	404, 1630,
	405, 1630,
	406, 1630,
	407, 1630,
	408, 1630,
	409, 1630,
	411, 1630,
	413, 1630,
	414, 1630,
	415, 1630,
	421, 1630,
	422, 1630,
	424, 1630,
	425, 1630,
	426, 1630,
	427, 1630,
	428, 1630,
	429, 1630,
	430, 1630,
	431, 1630,
	432, 1630,
	433, 1630,
	435, 1630,
	436, 1630,
	437, 1630,
	438, 1630,
	439, 1630,
	440, 1630,
	441, 1630,
	442, 1630,
	443, 1630,
	444, 1630,
	445, 1630,
	447, 1630,
	448, 1630,
	449, 1630,
	450, 1630,
	451, 1630,
	452, 1630,
	453, 1630,
	454, 1630,
	455, 1630,
	456, 1630,
	457, 1630,
	458, 1630,
	460, 1630,
	461, 1630,
	462, 1630,
	463, 1630,
	464, 1630,
	465, 1630,
	466, 1630,
	467, 1630,
	468, 1630,
	469, 1630,
	470, 1630,
	471, 1630,
	472, 1630,
	473, 1630,
	474, 1630,
	475, 1630,
	476, 1630,
	477, 1630,
	478, 1630,
	479, 1630,
	480, 1630,
	481, 1630,
	483, 1630,
	485, 1630,
	486, 1630,
	487, 1630,
	488, 1630,
	489, 1630,
	490, 1630,
	491, 1630,
	492, 1630,
	493, 1630,
	494, 1630,
	495, 1630,
	496, 1630,
	497, 1630,
	498, 1630,
	499, 1630,
	500, 1630,
	501, 1630,
	503, 1630,
	504, 1630,
	505, 1630,
	506, 1630,
	507, 1630,
	509, 1630,
	510, 1630,
	511, 1630,
	512, 1630,
	513, 1630,
	514, 1630,
	515, 1630,
	516, 1630,
	518, 1630,
	519, 1630,
	520, 1630,
	521, 1630,
	522, 1630,
	524, 1630,
	526, 1630,
	527, 1630,
	528, 1630,
	529, 1630,
	530, 1630,
	531, 1630,
	532, 1630,
	533, 1630,
	534, 1630,
	535, 1630,
	536, 1630,
	538, 1630,
	539, 1630,
	541, 1630,
	542, 1630,
	543, 1630,
	544, 1630,
	545, 1630,
	546, 1630,
	547, 1630,
	548, 1630,
	549, 1630,
	550, 1630,
	553, 1630,
	554, 1630,
	555, 1630,
	556, 1630,
	557, 1630,
	558, 1630,
	560, 1630,
	561, 1630,
	562, 1630,
	563, 1630,
	564, 1630,
	565, 1630,
	566, 1630,
	571, 1630,
	572, 1630,
	573, 1630,
	574, 1630,
	575, 1630,
	576, 1630,
	577, 1630,
	590, 1630,
	597, 1630,
	598, 1630,
	599, 1630,
	607, 1630,
	611, 1630,
	-2, 0,
	-1, 757,
	4, 1352,
	21, 1352,
	22, 1352,
	23, 1352,
	24, 1352,
	25, 1352,
	26, 1352,
	27, 1352,
	29, 1352,
	30, 1352,
	36, 1352,
	41, 1352,
	42, 1352,
	44, 1352,
	45, 1352,
	46, 1352,
	47, 1352,
	48, 1352,
	49, 1352,
	50, 1352,
	51, 1352,
	53, 1352,
	54, 1352,
	55, 1352,
	56, 1352,
	58, 1352,
	59, 1352,
	60, 1352,
	61, 1352,
	62, 1352,
	63, 1352,
	64, 1352,
	68, 1352,
	69, 1352,
	70, 1352,
	71, 1352,
	73, 1352,
	74, 1352,
	75, 1352,
	79, 1352,
	80, 1352,
	81, 1352,
	82, 1352,
	83, 1352,
	84, 1352,
	85, 1352,
	88, 1352,
	89, 1352,
	90, 1352,
	91, 1352,
	92, 1352,
	94, 1352,
	96, 1352,
	97, 1352,
	98, 1352,
	99, 1352,
	100, 1352,
	101, 1352,
	103, 1352,
	104, 1352,
	105, 1352,
	107, 1352,
	108, 1352,
	109, 1352,
	117, 1352,
	118, 1352,
	119, 1352,
	120, 1352,
	121, 1352,
	123, 1352,
	124, 1352,
	125, 1352,
	126, 1352,
	128, 1352,
	129, 1352,
	130, 1352,
	132, 1352,
	133, 1352,
	134, 1352,
	136, 1352,
	137, 1352,
	138, 1352,
	141, 1352,
	142, 1352,
	143, 1352,
	145, 1352,
	146, 1352,
	147, 1352,
	149, 1352,
	150, 1352,
	151, 1352,
	153, 1352,
	154, 1352,
	155, 1352,
	156, 1352,
	157, 1352,
	158, 1352,
	159, 1352,
	160, 1352,
	161, 1352,
	162, 1352,
	163, 1352,
	164, 1352,
	165, 1352,
	166, 1352,
	167, 1352,
	168, 1352,
	169, 1352,
	171, 1352,
	177, 1352,
	178, 1352,
	179, 1352,
	180, 1352,
	184, 1352,
	186, 1352,
	187, 1352,
	188, 1352,
	192, 1352,
	193, 1352,
	194, 1352,
	195, 1352,
	196, 1352,
	197, 1352,
	198, 1352,
	199, 1352,
	200, 1352,
	201, 1352,
	202, 1352,
	203, 1352,
	204, 1352,
	205, 1352,
	207, 1352,
	208, 1352,
	210, 1352,
	211, 1352,
	213, 1352,
	214, 1352,
	215, 1352,
	216, 1352,
	217, 1352,
	218, 1352,
	219, 1352,
	220, 1352,
	221, 1352,
	223, 1352,
	224, 1352,
	226, 1352,
	227, 1352,
	228, 1352,
	229, 1352,
	230, 1352,
	234, 1352,
	235, 1352,
	236, 1352,
	237, 1352,
	240, 1352,
	241, 1352,
	242, 1352,
	244, 1352,
	246, 1352,
	247, 1352,
	249, 1352,
	251, 1352,
	252, 1352,
	253, 1352,
	255, 1352,
	259, 1352,
	260, 1352,
	261, 1352,
	262, 1352,
	263, 1352,
	264, 1352,
	266, 1352,
	267, 1352,
	268, 1352,
	270, 1352,
	271, 1352,
	273, 1352,
	274, 1352,
	277, 1352,
	278, 1352,
	279, 1352,
	280, 1352,
	281, 1352,
	282, 1352,
	283, 1352,
	286, 1352,
	287, 1352,
	288, 1352,
	289, 1352,
	291, 1352,
	292, 1352,
	293, 1352,
	294, 1352,
	295, 1352,
	296, 1352,
	297, 1352,
	298, 1352,
	299, 1352,
	300, 1352,
	301, 1352,
	302, 1352,
	303, 1352,
	304, 1352,
	305, 1352,
	306, 1352,
	307, 1352,
	308, 1352,
	309, 1352,
	310, 1352,
	311, 1352,
	312, 1352,
	314, 1352,
	316, 1352,
	317, 1352,
	318, 1352,
	319, 1352,
	320, 1352,
	321, 1352,
	322, 1352,
	323, 1352,
	324, 1352,
	325, 1352,
	326, 1352,
	327, 1352,
	328, 1352,
	329, 1352,
	330, 1352,
	331, 1352,
	333, 1352,
	334, 1352,
	336, 1352,
	338, 1352,
	339, 1352,
	340, 1352,
	342, 1352,
	343, 1352,
	344, 1352,
	345, 1352,
	346, 1352,
	349, 1352,
	353, 1352,
	354, 1352,
	355, 1352,
	358, 1352,
	359, 1352,
	360, 1352,
	362, 1352,
	364, 1352,
	365, 1352,
	366, 1352,
	367, 1352,
	368, 1352,
	369, 1352,
	370, 1352,
	371, 1352,
	372, 1352,
	373, 1352,
	374, 1352,
	375, 1352,
	376, 1352,
	378, 1352,
	379, 1352,
	380, 1352,
	381, 1352,
	382, 1352,
	383, 1352,
	384, 1352,
	385, 1352,
	386, 1352,
	387, 1352,
	388, 1352,
	389, 1352,
	390, 1352,
	391, 1352,
	392, 1352,
	394, 1352,
	395, 1352,
	397, 1352,
	398, 1352,
	399, 1352,
	400, 1352,
	401, 1352,
	402, 1352,
	403, 1352,
	404, 1352,
	405, 1352,
	406, 1352,
	407, 1352,
	408, 1352,
	409, 1352,
	411, 1352,
	413, 1352,
	414, 1352,
	415, 1352,
	421, 1352,
	422, 1352,
	424, 1352,
	425, 1352,
	426, 1352,
	427, 1352,
	428, 1352,
	429, 1352,
	430, 1352,
	431, 1352,
	432, 1352,
	433, 1352,
	435, 1352,
	436, 1352,
	437, 1352,
	439, 1352,
	440, 1352,
	441, 1352,
	442, 1352,
	443, 1352,
	444, 1352,
	445, 1352,
	447, 1352,
	448, 1352,
	449, 1352,
	450, 1352,
	451, 1352,
	452, 1352,
	453, 1352,
	454, 1352,
	455, 1352,
	456, 1352,
	457, 1352,
	458, 1352,
	460, 1352,
	461, 1352,
	462, 1352,
	463, 1352,
	464, 1352,
	465, 1352,
	467, 1352,
	468, 1352,
	469, 1352,
	470, 1352,
	471, 1352,
	472, 1352,
	474, 1352,
	475, 1352,
	476, 1352,
	477, 1352,
	478, 1352,
	479, 1352,
	480, 1352,
	481, 1352,
	483, 1352,
	485, 1352,
	486, 1352,
	487, 1352,
	488, 1352,
	489, 1352,
	490, 1352,
	491, 1352,
	492, 1352,
	493, 1352,
	494, 1352,
	495, 1352,
	496, 1352,
	497, 1352,
	498, 1352,
	499, 1352,
	500, 1352,
	501, 1352,
	503, 1352,
	504, 1352,
	506, 1352,
	507, 1352,
	509, 1352,
	510, 1352,
	511, 1352,
	512, 1352,
	513, 1352,
	514, 1352,
	515, 1352,
	516, 1352,
	518, 1352,
	519, 1352,
	520, 1352,
	521, 1352,
	522, 1352,
	524, 1352,
	526, 1352,
	527, 1352,
	528, 1352,
	529, 1352,
	530, 1352,
	531, 1352,
	533, 1352,
	534, 1352,
	535, 1352,
	536, 1352,
	538, 1352,
	539, 1352,
	542, 1352,
	543, 1352,
	544, 1352,
	545, 1352,
	546, 1352,
	547, 1352,
	548, 1352,
	550, 1352,
	553, 1352,
	554, 1352,
	555, 1352,
	556, 1352,
	557, 1352,
	558, 1352,
	560, 1352,
	561, 1352,
	562, 1352,
	563, 1352,
	564, 1352,
	565, 1352,
	566, 1352,
	571, 1352,
	572, 1352,
	573, 1352,
	574, 1352,
	575, 1352,
	576, 1352,
	-2, 0,
	-1, 776,
	190, 2422,
	523, 2422,
	589, 2422,
	609, 2422,
	-2, 0,
	-1, 777,
	190, 2409,
	523, 2409,
	589, 2409,
	609, 2409,
	-2, 0,
	-1, 779,
	190, 2676,
	523, 2676,
	589, 2676,
	609, 2676,
	-2, 0,
	-1, 782,
	190, 2534,
	523, 2534,
	589, 2534,
	609, 2534,
	-2, 0,
	-1, 783,
	190, 2718,
	523, 2718,
	589, 2718,
	609, 2718,
	-2, 0,
	-1, 791,
	190, 2561,
	523, 2561,
	589, 2561,
	609, 2561,
	-2, 721,
	-1, 826,
	609, 2358,
	612, 2358,
	-2, 1021,
	-1, 827,
	609, 2360,
	612, 2360,
	-2, 1022,
	-1, 828,
	609, 2359,
	612, 2359,
	-2, 1023,
	-1, 829,
	612, 2284,
	-2, 1024,
	-1, 854,
	185, 269,
	-2, 0,
	-1, 878,
	43, 2331,
	-2, 0,
	-1, 879,
	560, 1330,
	-2, 1104,
	-1, 895,
	4, 1764,
	21, 1764,
	22, 1764,
	23, 1764,
	24, 1764,
	25, 1764,
	26, 1764,
	27, 1764,
	29, 1764,
	30, 1764,
	36, 1764,
	41, 1764,
	42, 1764,
	44, 1764,
	45, 1764,
	46, 1764,
	47, 1764,
	48, 1764,
	49, 1764,
	50, 1764,
	51, 1764,
	53, 1764,
	54, 1764,
	55, 1764,
	56, 1764,
	58, 1764,
	59, 1764,
	60, 1764,
	61, 1764,
	62, 1764,
	63, 1764,
	64, 1764,
	68, 1764,
	69, 1764,
	70, 1764,
	71, 1764,
	73, 1764,
	74, 1764,
	75, 1764,
	79, 1764,
	80, 1764,
	81, 1764,
	82, 1764,
	83, 1764,
	84, 1764,
	85, 1764,
	88, 1764,
	89, 1764,
	90, 1764,
	91, 1764,
	92, 1764,
	94, 1764,
	96, 1764,
	97, 1764,
	98, 1764,
	99, 1764,
	100, 1764,
	101, 1764,
	103, 1764,
	104, 1764,
	105, 1764,
	107, 1764,
	108, 1764,
	109, 1764,
	117, 1764,
	118, 1764,
	119, 1764,
	120, 1764,
	121, 1764,
	123, 1764,
	124, 1764,
	125, 1764,
	126, 1764,
	128, 1764,
	129, 1764,
	130, 1764,
	132, 1764,
	133, 1764,
	134, 1764,
	136, 1764,
	137, 1764,
	138, 1764,
	141, 1764,
	142, 1764,
	143, 1764,
	145, 1764,
	146, 1764,
	147, 1764,
	149, 1764,
	150, 1764,
	151, 1764,
	153, 1764,
	154, 1764,
	155, 1764,
	156, 1764,
	157, 1764,
	158, 1764,
	159, 1764,
	160, 1764,
	161, 1764,
	162, 1764,
	163, 1764,
	164, 1764,
	165, 1764,
	166, 1764,
	167, 1764,
	168, 1764,
	169, 1764,
	171, 1764,
	177, 1764,
	178, 1764,
	179, 1764,
	180, 1764,
	184, 1764,
	186, 1764,
	187, 1764,
	188, 1764,
	192, 1764,
	193, 1764,
	194, 1764,
	195, 1764,
	196, 1764,
	197, 1764,
	198, 1764,
	199, 1764,
	200, 1764,
	201, 1764,
	202, 1764,
	203, 1764,
	204, 1764,
	205, 1764,
	207, 1764,
	208, 1764,
	210, 1764,
	211, 1764,
	213, 1764,
	214, 1764,
	215, 1764,
	216, 1764,
	217, 1764,
	218, 1764,
	219, 1764,
	220, 1764,
	221, 1764,
	223, 1764,
	224, 1764,
	226, 1764,
	227, 1764,
	228, 1764,
	229, 1764,
	230, 1764,
	234, 1764,
	235, 1764,
	236, 1764,
	237, 1764,
	240, 1764,
	241, 1764,
	242, 1764,
	244, 1764,
	246, 1764,
	247, 1764,
	249, 1764,
	251, 1764,
	252, 1764,
	253, 1764,
	255, 1764,
	259, 1764,
	260, 1764,
	261, 1764,
	262, 1764,
	263, 1764,
	264, 1764,
	266, 1764,
	267, 1764,
	268, 1764,
	270, 1764,
	271, 1764,
	273, 1764,
	274, 1764,
	277, 1764,
	278, 1764,
	279, 1764,
	280, 1764,
	281, 1764,
	282, 1764,
	283, 1764,
	286, 1764,
	287, 1764,
	288, 1764,
	289, 1764,
	291, 1764,
	292, 1764,
	293, 1764,
	294, 1764,
	295, 1764,
	296, 1764,
	297, 1764,
	298, 1764,
	299, 1764,
	300, 1764,
	301, 1764,
	302, 1764,
	303, 1764,
	304, 1764,
	305, 1764,
	306, 1764,
	307, 1764,
	308, 1764,
	309, 1764,
	310, 1764,
	311, 1764,
	312, 1764,
	314, 1764,
	316, 1764,
	317, 1764,
	318, 1764,
	319, 1764,
	320, 1764,
	321, 1764,
	322, 1764,
	323, 1764,
	324, 1764,
	325, 1764,
	326, 1764,
	327, 1764,
	328, 1764,
	329, 1764,
	330, 1764,
	331, 1764,
	333, 1764,
	334, 1764,
	336, 1764,
	338, 1764,
	339, 1764,
	340, 1764,
	342, 1764,
	343, 1764,
	344, 1764,
	345, 1764,
	346, 1764,
	349, 1764,
	353, 1764,
	354, 1764,
	355, 1764,
	358, 1764,
	359, 1764,
	360, 1764,
	362, 1764,
	364, 1764,
	365, 1764,
	366, 1764,
	367, 1764,
	368, 1764,
	369, 1764,
	370, 1764,
	371, 1764,
	372, 1764,
	373, 1764,
	374, 1764,
	375, 1764,
	376, 1764,
	378, 1764,
	379, 1764,
	380, 1764,
	381, 1764,
	382, 1764,
	383, 1764,
	384, 1764,
	385, 1764,
	386, 1764,
	387, 1764,
	388, 1764,
	389, 1764,
	390, 1764,
	391, 1764,
	392, 1764,
	394, 1764,
	395, 1764,
	397, 1764,
	398, 1764,
	399, 1764,
	400, 1764,
	401, 1764,
	402, 1764,
	403, 1764,
	404, 1764,
	405, 1764,
	406, 1764,
	407, 1764,
	408, 1764,
	409, 1764,
	411, 1764,
	413, 1764,
	414, 1764,
	415, 1764,
	421, 1764,
	422, 1764,
	424, 1764,
	425, 1764,
	426, 1764,
	427, 1764,
	428, 1764,
	429, 1764,
	430, 1764,
	431, 1764,
	432, 1764,
	433, 1764,
	435, 1764,
	436, 1764,
	437, 1764,
	439, 1764,
	440, 1764,
	441, 1764,
	442, 1764,
	443, 1764,
	444, 1764,
	445, 1764,
	447, 1764,
	448, 1764,
	449, 1764,
	450, 1764,
	451, 1764,
	452, 1764,
	453, 1764,
	454, 1764,
	455, 1764,
	456, 1764,
	457, 1764,
	458, 1764,
	460, 1764,
	461, 1764,
	462, 1764,
	463, 1764,
	464, 1764,
	465, 1764,
	467, 1764,
	468, 1764,
	469, 1764,
	470, 1764,
	471, 1764,
	472, 1764,
	474, 1764,
	475, 1764,
	476, 1764,
	477, 1764,
	478, 1764,
	479, 1764,
	480, 1764,
	481, 1764,
	483, 1764,
	485, 1764,
	486, 1764,
	487, 1764,
	488, 1764,
	489, 1764,
	490, 1764,
	491, 1764,
	492, 1764,
	493, 1764,
	494, 1764,
	495, 1764,
	496, 1764,
	497, 1764,
	498, 1764,
	499, 1764,
	500, 1764,
	501, 1764,
	503, 1764,
	504, 1764,
	506, 1764,
	507, 1764,
	509, 1764,
	510, 1764,
	511, 1764,
	512, 1764,
	513, 1764,
	514, 1764,
	515, 1764,
	516, 1764,
	518, 1764,
	519, 1764,
	520, 1764,
	521, 1764,
	522, 1764,
	524, 1764,
	526, 1764,
	527, 1764,
	528, 1764,
	529, 1764,
	530, 1764,
	531, 1764,
	533, 1764,
	534, 1764,
	535, 1764,
	536, 1764,
	538, 1764,
	539, 1764,
	542, 1764,
	543, 1764,
	544, 1764,
	545, 1764,
	546, 1764,
	547, 1764,
	548, 1764,
	550, 1764,
	553, 1764,
	554, 1764,
	555, 1764,
	556, 1764,
	557, 1764,
	558, 1764,
	560, 1764,
	561, 1764,
	562, 1764,
	563, 1764,
	564, 1764,
	565, 1764,
	566, 1764,
	571, 1764,
	572, 1764,
	573, 1764,
	574, 1764,
	575, 1764,
	576, 1764,
	-2, 0,
	-1, 905,
	263, 422,
	-2, 0,
	-1, 982,
	399, 901,
	465, 901,
	507, 901,
	528, 901,
	-2, 0,
	-1, 983,
	399, 900,
	465, 900,
	507, 900,
	528, 900,
	-2, 832,
	-1, 987,
	1, 953,
	606, 953,
	608, 953,
	610, 953,
	-2, 0,
	-1, 989,
	1, 875,
	606, 875,
	608, 875,
	610, 875,
	-2, 0,
	-1, 990,
	1, 879,
	606, 879,
	608, 879,
	610, 879,
	-2, 0,
	-1, 991,
	1, 1020,
	185, 1020,
	606, 1020,
	608, 1020,
	610, 1020,
	-2, 0,
	-1, 999,
	1, 906,
	606, 906,
	608, 906,
	610, 906,
	-2, 0,
	-1, 1006,
	1, 953,
	606, 953,
	608, 953,
	610, 953,
	-2, 0,
	-1, 1007,
	1, 955,
	606, 955,
	608, 955,
	610, 955,
	-2, 0,
	-1, 1008,
	1, 958,
	606, 958,
	608, 958,
	610, 958,
	-2, 0,
	-1, 1014,
	1, 984,
	606, 984,
	608, 984,
	610, 984,
	-2, 0,
	-1, 1015,
	1, 986,
	606, 986,
	608, 986,
	610, 986,
	-2, 0,
	-1, 1020,
	1, 1014,
	606, 1014,
	608, 1014,
	610, 1014,
	-2, 0,
	-1, 1072,
	172, 1634,
	185, 1634,
	276, 1634,
	347, 1634,
	-2, 1570,
	-1, 1087,
	172, 1633,
	185, 1633,
	276, 1633,
	347, 1633,
	-2, 1567,
	-1, 1114,
	609, 2357,
	-2, 729,
	-1, 1143,
	5, 2349,
	607, 2347,
	-2, 2338,
	-1, 1151,
	5, 2370,
	607, 2367,
	-2, 2358,
	-1, 1152,
	5, 2371,
	607, 2368,
	-2, 2359,
	-1, 1160,
	609, 2355,
	-2, 2337,
	-1, 1161,
	607, 2803,
	-2, 2356,
	-1, 1184,
	607, 2802,
	-2, 2372,
	-1, 1185,
	5, 1839,
	-2, 2773,
	-1, 1186,
	5, 1840,
	-2, 2774,
	-1, 1187,
	5, 1841,
	-2, 2788,
	-1, 1188,
	5, 1842,
	-2, 2752,
	-1, 1189,
	5, 1843,
	-2, 2786,
	-1, 1190,
	5, 1851,
	-2, 2765,
	-1, 1191,
	5, 1838,
	-2, 2761,
	-1, 1192,
	5, 1838,
	-2, 2760,
	-1, 1193,
	5, 1838,
	-2, 2779,
	-1, 1194,
	5, 1849,
	-2, 2754,
	-1, 1195,
	5, 1854,
	-2, 2753,
	-1, 1196,
	5, 1856,
	-2, 2798,
	-1, 1199,
	5, 1878,
	-2, 2791,
	-1, 1200,
	5, 1870,
	-2, 2792,
	-1, 1201,
	5, 1878,
	-2, 2793,
	-1, 1202,
	5, 1874,
	-2, 2794,
	-1, 1203,
	5, 1824,
	-2, 2766,
	-1, 1204,
	5, 1825,
	-2, 2767,
	-1, 1205,
	5, 1826,
	-2, 2755,
	-1, 1233,
	5, 1861,
	-2, 2799,
	-1, 1234,
	5, 1862,
	-2, 2789,
	-1, 1235,
	5, 1863,
	561, 1863,
	-2, 2756,
	-1, 1236,
	5, 1864,
	561, 1864,
	-2, 2757,
	-1, 1273,
	607, 2367,
	-2, 2358,
	-1, 1274,
	607, 2368,
	-2, 2359,
	-1, 1372,
	190, 2718,
	523, 2718,
	589, 2718,
	609, 2718,
	-2, 0,
	-1, 1377,
	1, 705,
	610, 705,
	-2, 1479,
	-1, 1507,
	366, 2332,
	424, 2332,
	467, 2332,
	599, 2332,
	-2, 2322,
	-1, 1513,
	190, 129,
	270, 129,
	333, 129,
	566, 129,
	-2, 2714,
	-1, 1514,
	190, 130,
	270, 130,
	333, 130,
	566, 130,
	-2, 2467,
	-1, 1515,
	190, 131,
	270, 131,
	333, 131,
	566, 131,
	-2, 2638,
	-1, 1521,
	611, 2332,
	-2, 2334,
	-1, 1529,
	1, 1327,
	429, 1284,
	467, 1284,
	583, 1284,
	606, 1327,
	608, 1327,
	610, 1327,
	-2, 1619,
	-1, 1535,
	206, 1424,
	225, 1424,
	437, 1424,
	-2, 0,
	-1, 1591,
	407, 1103,
	560, 1103,
	-2, 417,
	-1, 1608,
	43, 2330,
	-2, 1066,
	-1, 1615,
	1, 1327,
	606, 1327,
	608, 1327,
	610, 1327,
	-2, 1619,
	-1, 1623,
	4, 1352,
	21, 1352,
	22, 1352,
	23, 1352,
	24, 1352,
	25, 1352,
	26, 1352,
	27, 1352,
	29, 1352,
	30, 1352,
	36, 1352,
	41, 1352,
	42, 1352,
	44, 1352,
	45, 1352,
	46, 1352,
	47, 1352,
	48, 1352,
	49, 1352,
	50, 1352,
	51, 1352,
	53, 1352,
	54, 1352,
	55, 1352,
	56, 1352,
	58, 1352,
	59, 1352,
	60, 1352,
	61, 1352,
	62, 1352,
	63, 1352,
	64, 1352,
	68, 1352,
	69, 1352,
	70, 1352,
	71, 1352,
	73, 1352,
	74, 1352,
	75, 1352,
	79, 1352,
	80, 1352,
	81, 1352,
	82, 1352,
	83, 1352,
	84, 1352,
	85, 1352,
	88, 1352,
	89, 1352,
	90, 1352,
	91, 1352,
	92, 1352,
	94, 1352,
	96, 1352,
	97, 1352,
	98, 1352,
	99, 1352,
	100, 1352,
	101, 1352,
	103, 1352,
	104, 1352,
	105, 1352,
	107, 1352,
	108, 1352,
	109, 1352,
	117, 1352,
	118, 1352,
	119, 1352,
	120, 1352,
	121, 1352,
	123, 1352,
	124, 1352,
	125, 1352,
	126, 1352,
	128, 1352,
	129, 1352,
	130, 1352,
	132, 1352,
	133, 1352,
	134, 1352,
	136, 1352,
	137, 1352,
	138, 1352,
	141, 1352,
	142, 1352,
	143, 1352,
	145, 1352,
	146, 1352,
	147, 1352,
	149, 1352,
	150, 1352,
	151, 1352,
	153, 1352,
	154, 1352,
	155, 1352,
	156, 1352,
	157, 1352,
	158, 1352,
	159, 1352,
	160, 1352,
	161, 1352,
	162, 1352,
	163, 1352,
	164, 1352,
	165, 1352,
	166, 1352,
	167, 1352,
	168, 1352,
	169, 1352,
	177, 1352,
	178, 1352,
	179, 1352,
	180, 1352,
	184, 1352,
	186, 1352,
	187, 1352,
	188, 1352,
	192, 1352,
	193, 1352,
	194, 1352,
	195, 1352,
	196, 1352,
	197, 1352,
	198, 1352,
	199, 1352,
	200, 1352,
	201, 1352,
	202, 1352,
	203, 1352,
	204, 1352,
	205, 1352,
	207, 1352,
	208, 1352,
	210, 1352,
	211, 1352,
	213, 1352,
	214, 1352,
	215, 1352,
	216, 1352,
	217, 1352,
	218, 1352,
	219, 1352,
	220, 1352,
	221, 1352,
	223, 1352,
	224, 1352,
	226, 1352,
	227, 1352,
	228, 1352,
	229, 1352,
	230, 1352,
	235, 1352,
	236, 1352,
	237, 1352,
	240, 1352,
	241, 1352,
	242, 1352,
	244, 1352,
	246, 1352,
	247, 1352,
	249, 1352,
	251, 1352,
	252, 1352,
	253, 1352,
	255, 1352,
	259, 1352,
	260, 1352,
	261, 1352,
	262, 1352,
	263, 1352,
	264, 1352,
	266, 1352,
	267, 1352,
	268, 1352,
	270, 1352,
	271, 1352,
	273, 1352,
	274, 1352,
	277, 1352,
	278, 1352,
	279, 1352,
	280, 1352,
	281, 1352,
	282, 1352,
	283, 1352,
	286, 1352,
	287, 1352,
	288, 1352,
	289, 1352,
	291, 1352,
	292, 1352,
	293, 1352,
	294, 1352,
	295, 1352,
	296, 1352,
	297, 1352,
	298, 1352,
	299, 1352,
	300, 1352,
	301, 1352,
	302, 1352,
	303, 1352,
	304, 1352,
	305, 1352,
	306, 1352,
	307, 1352,
	308, 1352,
	309, 1352,
	310, 1352,
	311, 1352,
	312, 1352,
	314, 1352,
	316, 1352,
	317, 1352,
	318, 1352,
	319, 1352,
	320, 1352,
	321, 1352,
	322, 1352,
	323, 1352,
	324, 1352,
	325, 1352,
	326, 1352,
	327, 1352,
	328, 1352,
	329, 1352,
	330, 1352,
	331, 1352,
	333, 1352,
	334, 1352,
	338, 1352,
	339, 1352,
	340, 1352,
	342, 1352,
	343, 1352,
	344, 1352,
	345, 1352,
	346, 1352,
	349, 1352,
	351, 1352,
	353, 1352,
	354, 1352,
	355, 1352,
	358, 1352,
	359, 1352,
	360, 1352,
	362, 1352,
	364, 1352,
	365, 1352,
	366, 1352,
	367, 1352,
	368, 1352,
	369, 1352,
	370, 1352,
	371, 1352,
	372, 1352,
	373, 1352,
	374, 1352,
	375, 1352,
	376, 1352,
	378, 1352,
	379, 1352,
	380, 1352,
	381, 1352,
	382, 1352,
	383, 1352,
	384, 1352,
	385, 1352,
	386, 1352,
	387, 1352,
	388, 1352,
	389, 1352,
	390, 1352,
	391, 1352,
	392, 1352,
	394, 1352,
	395, 1352,
	397, 1352,
	398, 1352,
	399, 1352,
	400, 1352,
	401, 1352,
	402, 1352,
	403, 1352,
	404, 1352,
	405, 1352,
	406, 1352,
	407, 1352,
	408, 1352,
	409, 1352,
	411, 1352,
	413, 1352,
	414, 1352,
	415, 1352,
	421, 1352,
	422, 1352,
	424, 1352,
	425, 1352,
	426, 1352,
	427, 1352,
	428, 1352,
	429, 1352,
	430, 1352,
	431, 1352,
	432, 1352,
	433, 1352,
	435, 1352,
	436, 1352,
	437, 1352,
	439, 1352,
	440, 1352,
	441, 1352,
	442, 1352,
	443, 1352,
	444, 1352,
	445, 1352,
	447, 1352,
	448, 1352,
	449, 1352,
	450, 1352,
	451, 1352,
	452, 1352,
	453, 1352,
	454, 1352,
	455, 1352,
	456, 1352,
	457, 1352,
	458, 1352,
	460, 1352,
	461, 1352,
	462, 1352,
	463, 1352,
	464, 1352,
	465, 1352,
	467, 1352,
	468, 1352,
	469, 1352,
	470, 1352,
	471, 1352,
	472, 1352,
	474, 1352,
	475, 1352,
	476, 1352,
	477, 1352,
	478, 1352,
	479, 1352,
	480, 1352,
	481, 1352,
	483, 1352,
	485, 1352,
	486, 1352,
	487, 1352,
	488, 1352,
	489, 1352,
	490, 1352,
	491, 1352,
	492, 1352,
	493, 1352,
	494, 1352,
	495, 1352,
	496, 1352,
	497, 1352,
	498, 1352,
	499, 1352,
	500, 1352,
	501, 1352,
	503, 1352,
	504, 1352,
	506, 1352,
	507, 1352,
	509, 1352,
	510, 1352,
	511, 1352,
	512, 1352,
	513, 1352,
	514, 1352,
	515, 1352,
	516, 1352,
	518, 1352,
	519, 1352,
	520, 1352,
	521, 1352,
	522, 1352,
	524, 1352,
	526, 1352,
	527, 1352,
	528, 1352,
	529, 1352,
	530, 1352,
	531, 1352,
	533, 1352,
	534, 1352,
	535, 1352,
	536, 1352,
	538, 1352,
	539, 1352,
	542, 1352,
	543, 1352,
	544, 1352,
	545, 1352,
	546, 1352,
	547, 1352,
	548, 1352,
	550, 1352,
	553, 1352,
	554, 1352,
	555, 1352,
	556, 1352,
	557, 1352,
	558, 1352,
	560, 1352,
	561, 1352,
	562, 1352,
	563, 1352,
	564, 1352,
	565, 1352,
	566, 1352,
	571, 1352,
	572, 1352,
	573, 1352,
	574, 1352,
	575, 1352,
	576, 1352,
	-2, 0,
	-1, 1646,
	1, 562,
	606, 562,
	608, 562,
	610, 562,
	-2, 1590,
	-1, 1649,
	4, 2797,
	11, 2797,
	12, 2797,
	14, 2797,
	15, 2797,
	16, 2797,
	17, 2797,
	18, 2797,
	19, 2797,
	21, 2797,
	22, 2797,
	23, 2797,
	24, 2797,
	25, 2797,
	26, 2797,
	27, 2797,
	29, 2797,
	30, 2797,
	33, 2797,
	34, 2797,
	36, 2797,
	38, 2797,
	41, 2797,
	42, 2797,
	44, 2797,
	45, 2797,
	46, 2797,
	47, 2797,
	48, 2797,
	49, 2797,
	50, 2797,
	51, 2797,
	53, 2797,
	54, 2797,
	55, 2797,
	56, 2797,
	58, 2797,
	59, 2797,
	60, 2797,
	61, 2797,
	62, 2797,
	63, 2797,
	64, 2797,
	67, 2797,
	68, 2797,
	69, 2797,
	70, 2797,
	71, 2797,
	73, 2797,
	74, 2797,
	75, 2797,
	76, 2797,
	79, 2797,
	80, 2797,
	81, 2797,
	82, 2797,
	83, 2797,
	84, 2797,
	85, 2797,
	86, 2797,
	88, 2797,
	89, 2797,
	90, 2797,
	91, 2797,
	92, 2797,
	94, 2797,
	95, 2797,
	96, 2797,
	97, 2797,
	98, 2797,
	99, 2797,
	100, 2797,
	101, 2797,
	103, 2797,
	104, 2797,
	105, 2797,
	106, 2797,
	107, 2797,
	108, 2797,
	109, 2797,
	117, 2797,
	118, 2797,
	119, 2797,
	120, 2797,
	121, 2797,
	123, 2797,
	124, 2797,
	125, 2797,
	126, 2797,
	128, 2797,
	129, 2797,
	130, 2797,
	132, 2797,
	133, 2797,
	134, 2797,
	136, 2797,
	137, 2797,
	138, 2797,
	141, 2797,
	142, 2797,
	143, 2797,
	145, 2797,
	146, 2797,
	147, 2797,
	149, 2797,
	150, 2797,
	151, 2797,
	153, 2797,
	154, 2797,
	155, 2797,
	156, 2797,
	157, 2797,
	158, 2797,
	159, 2797,
	160, 2797,
	161, 2797,
	162, 2797,
	163, 2797,
	164, 2797,
	165, 2797,
	166, 2797,
	167, 2797,
	168, 2797,
	169, 2797,
	173, 2797,
	174, 2797,
	175, 2797,
	176, 2797,
	177, 2797,
	178, 2797,
	179, 2797,
	180, 2797,
	183, 2797,
	184, 2797,
	186, 2797,
	187, 2797,
	188, 2797,
	191, 2797,
	192, 2797,
	193, 2797,
	194, 2797,
	195, 2797,
	196, 2797,
	197, 2797,
	198, 2797,
	199, 2797,
	200, 2797,
	201, 2797,
	202, 2797,
	203, 2797,
	204, 2797,
	205, 2797,
	207, 2797,
	208, 2797,
	210, 2797,
	211, 2797,
	213, 2797,
	214, 2797,
	215, 2797,
	216, 2797,
	217, 2797,
	218, 2797,
	219, 2797,
	220, 2797,
	221, 2797,
	222, 2797,
	223, 2797,
	224, 2797,
	225, 2797,
	226, 2797,
	227, 2797,
	228, 2797,
	229, 2797,
	230, 2797,
	232, 2797,
	233, 2797,
	235, 2797,
	236, 2797,
	237, 2797,
	239, 2797,
	240, 2797,
	241, 2797,
	242, 2797,
	244, 2797,
	246, 2797,
	247, 2797,
	248, 2797,
	249, 2797,
	250, 2797,
	251, 2797,
	252, 2797,
	253, 2797,
	254, 2797,
	255, 2797,
	257, 2797,
	258, 2797,
	259, 2797,
	260, 2797,
	261, 2797,
	262, 2797,
	263, 2797,
	264, 2797,
	266, 2797,
	267, 2797,
	268, 2797,
	270, 2797,
	271, 2797,
	272, 2797,
	273, 2797,
	274, 2797,
	275, 2797,
	277, 2797,
	278, 2797,
	279, 2797,
	280, 2797,
	281, 2797,
	282, 2797,
	283, 2797,
	286, 2797,
	287, 2797,
	288, 2797,
	289, 2797,
	290, 2797,
	291, 2797,
	292, 2797,
	293, 2797,
	294, 2797,
	295, 2797,
	296, 2797,
	297, 2797,
	298, 2797,
	299, 2797,
	300, 2797,
	301, 2797,
	302, 2797,
	303, 2797,
	304, 2797,
	305, 2797,
	306, 2797,
	307, 2797,
	308, 2797,
	309, 2797,
	310, 2797,
	311, 2797,
	312, 2797,
	314, 2797,
	315, 2797,
	316, 2797,
	317, 2797,
	318, 2797,
	319, 2797,
	320, 2797,
	321, 2797,
	322, 2797,
	323, 2797,
	324, 2797,
	325, 2797,
	326, 2797,
	327, 2797,
	328, 2797,
	329, 2797,
	330, 2797,
	331, 2797,
	333, 2797,
	334, 2797,
	337, 2797,
	338, 2797,
	339, 2797,
	340, 2797,
	342, 2797,
	343, 2797,
	344, 2797,
	345, 2797,
	346, 2797,
	349, 2797,
	353, 2797,
	354, 2797,
	355, 2797,
	356, 2797,
	358, 2797,
	359, 2797,
	360, 2797,
	362, 2797,
	364, 2797,
	365, 2797,
	366, 2797,
	367, 2797,
	368, 2797,
	369, 2797,
	370, 2797,
	371, 2797,
	372, 2797,
	373, 2797,
	374, 2797,
	375, 2797,
	376, 2797,
	378, 2797,
	379, 2797,
	380, 2797,
	381, 2797,
	382, 2797,
	383, 2797,
	384, 2797,
	385, 2797,
	386, 2797,
	387, 2797,
	388, 2797,
	389, 2797,
	390, 2797,
	391, 2797,
	392, 2797,
	394, 2797,
	395, 2797,
	397, 2797,
	398, 2797,
	399, 2797,
	400, 2797,
	401, 2797,
	402, 2797,
	403, 2797,
	404, 2797,
	405, 2797,
	406, 2797,
	407, 2797,
	408, 2797,
	409, 2797,
	411, 2797,
	413, 2797,
	414, 2797,
	415, 2797,
	421, 2797,
	422, 2797,
	423, 2797,
	424, 2797,
	425, 2797,
	426, 2797,
	427, 2797,
	428, 2797,
	429, 2797,
	430, 2797,
	431, 2797,
	432, 2797,
	433, 2797,
	435, 2797,
	436, 2797,
	437, 2797,
	438, 2797,
	439, 2797,
	440, 2797,
	441, 2797,
	442, 2797,
	443, 2797,
	444, 2797,
	445, 2797,
	446, 2797,
	447, 2797,
	448, 2797,
	449, 2797,
	450, 2797,
	451, 2797,
	452, 2797,
	453, 2797,
	454, 2797,
	455, 2797,
	456, 2797,
	457, 2797,
	458, 2797,
	460, 2797,
	461, 2797,
	462, 2797,
	463, 2797,
	464, 2797,
	465, 2797,
	467, 2797,
	468, 2797,
	469, 2797,
	470, 2797,
	471, 2797,
	472, 2797,
	473, 2797,
	474, 2797,
	475, 2797,
	476, 2797,
	477, 2797,
	478, 2797,
	479, 2797,
	480, 2797,
	481, 2797,
	483, 2797,
	485, 2797,
	486, 2797,
	487, 2797,
	488, 2797,
	489, 2797,
	490, 2797,
	491, 2797,
	492, 2797,
	493, 2797,
	494, 2797,
	495, 2797,
	496, 2797,
	497, 2797,
	498, 2797,
	499, 2797,
	500, 2797,
	501, 2797,
	503, 2797,
	504, 2797,
	505, 2797,
	506, 2797,
	507, 2797,
	509, 2797,
	510, 2797,
	511, 2797,
	512, 2797,
	513, 2797,
	514, 2797,
	515, 2797,
	516, 2797,
	518, 2797,
	519, 2797,
	520, 2797,
	521, 2797,
	522, 2797,
	524, 2797,
	526, 2797,
	527, 2797,
	528, 2797,
	529, 2797,
	530, 2797,
	531, 2797,
	533, 2797,
	534, 2797,
	535, 2797,
	536, 2797,
	538, 2797,
	539, 2797,
	542, 2797,
	543, 2797,
	544, 2797,
	545, 2797,
	546, 2797,
	547, 2797,
	548, 2797,
	550, 2797,
	553, 2797,
	554, 2797,
	555, 2797,
	556, 2797,
	557, 2797,
	558, 2797,
	560, 2797,
	561, 2797,
	562, 2797,
	563, 2797,
	564, 2797,
	565, 2797,
	566, 2797,
	571, 2797,
	572, 2797,
	573, 2797,
	574, 2797,
	575, 2797,
	576, 2797,
	577, 2797,
	579, 2797,
	587, 2797,
	588, 2797,
	589, 2797,
	590, 2797,
	591, 2797,
	592, 2797,
	594, 2797,
	595, 2797,
	596, 2797,
	597, 2797,
	598, 2797,
	599, 2797,
	600, 2797,
	601, 2797,
	602, 2797,
	605, 2797,
	608, 2797,
	609, 2797,
	611, 2797,
	612, 2797,
	-2, 0,
	-1, 1654,
	190, 2676,
	523, 2676,
	589, 2676,
	609, 2676,
	-2, 0,
	-1, 1707,
	399, 901,
	465, 901,
	507, 901,
	528, 901,
	-2, 0,
	-1, 1718,
	1, 1424,
	606, 1424,
	608, 1424,
	610, 1424,
	-2, 0,
	-1, 1735,
	1, 896,
	606, 896,
	608, 896,
	610, 896,
	-2, 0,
	-1, 1736,
	1, 940,
	606, 940,
	608, 940,
	610, 940,
	-2, 0,
	-1, 1737,
	1, 948,
	606, 948,
	608, 948,
	610, 948,
	-2, 0,
	-1, 1740,
	1, 905,
	606, 905,
	608, 905,
	610, 905,
	-2, 0,
	-1, 1742,
	1, 911,
	606, 911,
	608, 911,
	610, 911,
	-2, 0,
	-1, 1745,
	1, 907,
	606, 907,
	608, 907,
	610, 907,
	-2, 0,
	-1, 1750,
	1, 921,
	606, 921,
	608, 921,
	610, 921,
	-2, 0,
	-1, 1781,
	1, 2659,
	606, 2659,
	608, 2659,
	609, 2659,
	610, 2659,
	-2, 0,
	-1, 1785,
	1, 995,
	606, 995,
	608, 995,
	610, 995,
	-2, 0,
	-1, 1802,
	1, 1474,
	610, 1474,
	-2, 1479,
	-1, 1805,
	172, 1633,
	185, 1633,
	276, 1633,
	347, 1633,
	-2, 1571,
	-1, 1905,
	152, 1592,
	172, 1592,
	185, 1592,
	243, 1592,
	276, 1592,
	347, 1592,
	357, 1592,
	540, 1592,
	-2, 2043,
	-1, 1966,
	608, 2218,
	-2, 0,
	-1, 2001,
	152, 1592,
	172, 1592,
	185, 1592,
	243, 1592,
	276, 1592,
	347, 1592,
	357, 1592,
	540, 1592,
	-2, 1725,
	-1, 2041,
	523, 2673,
	609, 2673,
	612, 2673,
	-2, 0,
	-1, 2058,
	607, 1866,
	-2, 1854,
	-1, 2090,
	190, 2673,
	609, 2673,
	612, 2673,
	-2, 0,
	-1, 2133,
	1, 707,
	610, 707,
	-2, 1479,
	-1, 2279,
	225, 264,
	-2, 2366,
	-1, 2280,
	225, 265,
	-2, 317,
	-1, 2390,
	1, 898,
	606, 898,
	608, 898,
	610, 898,
	-2, 0,
	-1, 2391,
	1, 942,
	606, 942,
	608, 942,
	610, 942,
	-2, 0,
	-1, 2392,
	1, 950,
	606, 950,
	608, 950,
	610, 950,
	-2, 0,
	-1, 2393,
	1, 997,
	606, 997,
	608, 997,
	610, 997,
	-2, 0,
	-1, 2434,
	1, 923,
	606, 923,
	608, 923,
	610, 923,
	-2, 0,
	-1, 2454,
	1, 980,
	606, 980,
	608, 980,
	610, 980,
	-2, 0,
	-1, 2501,
	444, 1660,
	445, 1660,
	-2, 1899,
	-1, 2532,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1919,
	-1, 2533,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1920,
	-1, 2534,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1921,
	-1, 2535,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1922,
	-1, 2536,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1923,
	-1, 2537,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1924,
	-1, 2538,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1925,
	-1, 2539,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1926,
	-1, 2551,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1938,
	-1, 2552,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1939,
	-1, 2553,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1940,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1947,
	-1, 2563,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1951,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1959,
	-1, 2566,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1960,
	-1, 2567,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1961,
	-1, 2568,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1962,
	-1, 2742,
	5, 2370,
	190, 2229,
	607, 2367,
	-2, 2358,
	-1, 2743,
	190, 2230,
	-2, 2748,
	-1, 2744,
	190, 2231,
	-2, 2560,
	-1, 2745,
	190, 2232,
	-2, 2440,
	-1, 2746,
	190, 2233,
	-2, 2498,
	-1, 2747,
	190, 2234,
	-2, 2545,
	-1, 2748,
	190, 2235,
	-2, 2671,
	-1, 2749,
	190, 2236,
	-2, 2026,
	-1, 2820,
	1, 1726,
	2, 1726,
	106, 1726,
	152, 1726,
	172, 1726,
	185, 1726,
	191, 1726,
	209, 1726,
	212, 1726,
	239, 1726,
	243, 1726,
	254, 1726,
	272, 1726,
	276, 1726,
	315, 1726,
	347, 1726,
	351, 1726,
	357, 1726,
	434, 1726,
	438, 1726,
	540, 1726,
	551, 1726,
	568, 1726,
	569, 1726,
	570, 1726,
	580, 1726,
	606, 1726,
	608, 1726,
	610, 1726,
	612, 1726,
	-2, 1725,
	-1, 2833,
	607, 2339,
	-2, 2353,
	-1, 2835,
	1, 334,
	568, 334,
	-2, 1619,
	-1, 2865,
	607, 1865,
	-2, 1855,
	-1, 3060,
	1, 1327,
	429, 1284,
	467, 1284,
	583, 1284,
	606, 1327,
	608, 1327,
	610, 1327,
	-2, 1619,
	-1, 3236,
	352, 1663,
	-2, 2787,
	-1, 3237,
	352, 1664,
	-2, 2656,
	-1, 3241,
	444, 2295,
	445, 2295,
	-2, 2024,
	-1, 3242,
	444, 2299,
	445, 2299,
	-2, 2025,
	-1, 3243,
	444, 2296,
	445, 2296,
	-2, 2024,
	-1, 3244,
	444, 2300,
	445, 2300,
	-2, 2025,
	-1, 3257,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1949,
	-1, 3258,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1953,
	-1, 3264,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1955,
	-1, 3491,
	1, 702,
	606, 702,
	608, 702,
	610, 702,
	-2, 1479,
	-1, 3676,
	43, 2330,
	-2, 1067,
	-1, 3681,
	1, 1327,
	606, 1327,
	608, 1327,
	610, 1327,
	-2, 1619,
	-1, 3786,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1957,
	-1, 3793,
	248, 0,
	250, 0,
	337, 0,
	-2, 1976,
	-1, 3861,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2005,
	-1, 3862,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2006,
	-1, 3863,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2007,
	-1, 3867,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2011,
	-1, 3868,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2012,
	-1, 3869,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2013,
	-1, 3917,
	607, 2340,
	-2, 2354,
	-1, 4116,
	609, 2904,
	-2, 1545,
	-1, 4171,
	248, 0,
	250, 0,
	337, 0,
	-2, 1977,
	-1, 4174,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1980,
	-1, 4175,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1982,
	-1, 4286,
	609, 2355,
	-2, 1362,
	-1, 4444,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1981,
	-1, 4445,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1983,
	-1, 4456,
	248, 0,
	-2, 2016,
	-1, 4641,
	248, 0,
	-2, 2017,
	-1, 4855,
	50, 0,
	222, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 2751,
}

const sqlPrivate = 57344

const sqlLast = 136653

var sqlAct = [...]int{
	274, 3665, 4792, 2102, 5046, 3146, 4791, 3395, 1353, 4687,
	3133, 4971, 4916, 4679, 4900, 4512, 4866, 4854, 2999, 4985,
	4841, 4729, 4748, 4867, 4805, 4782, 4154, 3664, 4823, 1544,
	4868, 2276, 4802, 4925, 2974, 4559, 4611, 4494, 4588, 1277,
	2354, 4575, 3826, 4282, 3927, 4645, 4853, 4400, 4361, 4405,
	2182, 4394, 4335, 1350, 3778, 3103, 2511, 1345, 2931, 1097,
	4517, 3515, 4465, 3518, 4433, 3698, 1571, 4100, 2366, 4108,
	4385, 4594, 4387, 4028, 716, 828, 1343, 4714, 4283, 2775,
	2364, 2932, 3250, 4263, 2580, 3649, 3692, 4410, 3521, 1814,
	3014, 4074, 4055, 1672, 4057, 2007, 3578, 2045, 2191, 788,
	1411, 2519, 2115, 828, 1088, 4461, 2362, 3731, 3654, 3729,
	3122, 3092, 3638, 3503, 3158, 3653, 3505, 3119, 3631, 3656,
	3630, 1504, 1154, 3504, 2512, 2847, 3448, 3117, 3920, 727,
	3441, 3418, 3410, 4153, 3401, 3378, 907, 4210, 903, 4,
	3153, 3134, 3399, 3148, 2265, 2263, 1976, 2219, 3067, 3377,
	4646, 2813, 2812, 3887, 2203, 1096, 182, 1913, 3542, 2516,
	1883, 3234, 898, 1348, 4901, 2593, 2815, 823, 268, 2046,
	825, 3096, 2264, 2327, 3152, 1610, 1266, 1257, 1952, 784,
	3031, 1147, 2259, 2247, 2793, 2240, 2658, 3104, 1392, 2973,
	2170, 2174, 1802, 2113, 2649, 1152, 2577, 1322, 2160, 267,
	2483, 1977, 1647, 2500, 2481, 2848, 1336, 761, 3127, 1333,
	1670, 2314, 2956, 1613, 829, 2957, 703, 4749, 1996, 2917,
	725, 830, 2772, 976, 1379, 2652, 39, 2876, 3657, 1573,
	1260, 2802, 1986, 2738, 2783, 2630, 1897, 1993, 1947, 2704,
	1816, 1274, 191, 834, 192, 1815, 769, 1239, 1750, 2660,
	182, 1735, 780, 1256, 2482, 2273, 2484, 2313, 1645, 1143,
	2340, 1638, 2025, 1197, 4917, 4972, 1539, 111, 1512, 2505,
	1128, 834, 720, 924, 837, 44, 43, 744, 1237, 41,
	717, 818, 729, 1821, 1715, 879, 32, 30, 28, 1262,
	1145, 3287, 1801, 3281, 1550, 997, 880, 3901, 3397, 3902,
	5057, 5049, 837, 5037, 2792, 3717, 5036, 2792, 899, 2104,
	2792, 2104, 5005, 1543, 5003, 2104, 4516, 2104, 4516, 2104,
	2104, 4945, 4902, 4863, 4892, 2285, 4903, 3928, 2792, 4890,
	4887, 1092, 4884, 2792, 4888, 73, 4885, 902, 901, 4485,
	4851, 4850, 3707, 1150, 2285, 2285, 1741, 4849, 4482, 4839,
	4837, 3163, 74, 4516, 4516, 4479, 3458, 4832, 1092, 1829,
	1830, 4597, 1862, 1863, 1864, 1873, 1874, 1875, 79, 2125,
	4827, 3708, 4826, 4800, 4516, 1254, 4516, 4516, 1388, 73,
	4768, 1866, 1860, 4761, 2856, 3476, 4760, 2792, 4753, 1832,
	2792, 4728, 2285, 4725, 4237, 2285, 74, 4516, 1879, 1240,
	1240, 4708, 4643, 4625, 3473, 4351, 2856, 4137, 88, 4590,
	2363, 2785, 79, 3958, 1082, 1885, 4535, 4534, 4523, 4522,
	2285, 2285, 2285, 4516, 1831, 1073, 4515, 1072, 4472, 4446,
	4516, 4421, 2285, 2856, 1851, 3163, 2125, 4418, 4330, 3348,
	3349, 3717, 2792, 1848, 2122, 2122, 4310, 4173, 1388, 905,
	2792, 2856, 88, 4124, 4118, 4071, 3989, 3724, 3724, 4072,
	3990, 1093, 49, 3957, 110, 2878, 1300, 3958, 3912, 94,
	94, 107, 3913, 3910, 3894, 3810, 2852, 3911, 2792, 2285,
	3891, 3806, 3723, 3394, 1087, 2792, 3724, 2792, 1292, 3717,
	3389, 3388, 1149, 905, 2792, 2792, 2285, 3339, 3337, 3329,
	1272, 3340, 3338, 3330, 3296, 3327, 49, 3298, 110, 2792,
	3297, 2792, 1241, 3162, 94, 107, 3144, 3163, 2125, 2125,
	2350, 1854, 1855, 1856, 1857, 3249, 1829, 1830, 3143, 1552,
	95, 1837, 2350, 2901, 2855, 2845, 2837, 2792, 2856, 2792,
	2285, 2791, 2349, 2792, 238, 2792, 2350, 4769, 1243, 1860,
	1244, 4647, 2655, 4638, 2125, 4626, 1832, 4597, 3163, 3891,
	2784, 4398, 4351, 2122, 4311, 4137, 4073, 3006, 2196, 2916,
	1870, 2139, 2103, 1880, 95, 2119, 3098, 1293, 1293, 2284,
	1859, 1861, 1885, 3024, 1269, 2914, 2792, 1972, 1538, 4007,
	3781, 1831, 3754, 240, 1564, 1994, 1876, 2252, 1877, 3709,
	2829, 1717, 2828, 2827, 2826, 1846, 1847, 2825, 1245, 238,
	1242, 3354, 1081, 3286, 1080, 1079, 1078, 3348, 3349, 3710,
	3112, 1077, 1076, 1868, 1075, 1071, 1070, 1069, 1068, 1067,
	1066, 1065, 1829, 1830, 1064, 1063, 1062, 1061, 1852, 73,
	3207, 239, 1060, 1059, 1058, 2656, 1057, 1056, 1055, 1054,
	1036, 974, 3348, 3349, 1126, 232, 74, 973, 240, 972,
	971, 970, 1832, 969, 233, 968, 967, 966, 965, 964,
	963, 962, 79, 961, 960, 959, 2105, 958, 2105, 99,
	957, 956, 2105, 955, 2105, 1878, 2105, 2105, 954, 953,
	952, 951, 193, 950, 949, 2924, 948, 1831, 1837, 947,
	946, 945, 944, 943, 1867, 942, 239, 941, 940, 939,
	1681, 928, 88, 927, 926, 1882, 922, 921, 3364, 914,
	913, 912, 897, 99, 896, 853, 2657, 3363, 2654, 852,
	851, 850, 841, 1268, 840, 190, 102, 3348, 3349, 106,
	839, 838, 804, 4877, 795, 2122, 794, 1859, 1861, 793,
	775, 262, 261, 905, 260, 259, 258, 193, 257, 1543,
	4228, 2122, 1355, 1152, 238, 238, 256, 255, 110, 254,
	2122, 1858, 253, 906, 94, 107, 252, 153, 153, 190,
	102, 251, 250, 106, 249, 248, 247, 246, 245, 3354,
	1152, 1152, 1152, 3707, 1853, 1882, 244, 243, 242, 241,
	4185, 3937, 4412, 238, 1837, 1852, 3906, 1293, 1414, 238,
	1563, 3725, 1152, 240, 240, 3444, 3309, 906, 3292, 1355,
	3283, 1871, 153, 2924, 3354, 3187, 2122, 1529, 3077, 1558,
	1915, 1663, 3130, 2784, 95, 3392, 1955, 2860, 2834, 157,
	1997, 2819, 2473, 1954, 1152, 2687, 1152, 2168, 1152, 1396,
	1397, 1398, 240, 1884, 194, 1576, 4876, 2125, 240, 2888,
	4873, 239, 239, 2103, 1383, 2122, 3995, 2119, 2476, 1828,
	2685, 1958, 3114, 1551, 3365, 232, 232, 2671, 3393, 2669,
	2124, 1355, 1882, 157, 233, 233, 2020, 2659, 1293, 1615,
	1522, 1924, 1955, 1552, 1796, 1270, 3364, 1546, 194, 1954,
	239, 1576, 1400, 2426, 1276, 1685, 239, 4852, 1576, 3354,
	4836, 1743, 193, 900, 232, 1517, 4733, 1152, 4635, 1152,
	232, 4629, 4650, 233, 1576, 1869, 4507, 1953, 1542, 233,
	4460, 3364, 1152, 4627, 1152, 1843, 1844, 1850, 1872, 1849,
	1845, 4419, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 193, 4084, 1327, 1330, 1667, 4785, 193, 1253, 1619,
	1622, 1853, 1375, 2854, 4397, 1340, 4243, 4208, 1361, 4207,
	4201, 4200, 4199, 1882, 4192, 4191, 1377, 4189, 4184, 4181,
	4180, 1527, 1576, 99, 1407, 4070, 1501, 1506, 1882, 3941,
	1360, 1916, 3940, 1914, 2922, 3939, 3916, 3882, 3881, 3880,
	834, 1095, 1152, 3802, 2653, 1152, 3797, 3439, 1882, 3385,
	3376, 1829, 1830, 4414, 1552, 3347, 3364, 1509, 3344, 2921,
	1884, 3343, 3359, 3357, 3358, 3350, 3351, 3352, 3353, 3355,
	3356, 837, 1369, 3341, 1860, 3336, 2869, 3348, 3349, 190,
	102, 1832, 1608, 106, 3335, 1557, 1541, 3334, 3331, 3328,
	3308, 238, 3365, 1540, 3291, 3284, 1552, 182, 182, 3348,
	3349, 1917, 1922, 3282, 1650, 1652, 3145, 1885, 2820, 238,
	2642, 1549, 1686, 1556, 1828, 1562, 1831, 906, 3113, 3348,
	3349, 1915, 153, 2292, 2330, 1827, 1851, 3365, 5052, 4005,
	4085, 4994, 1625, 1882, 2290, 1848, 4993, 4915, 4913, 1278,
	240, 3828, 4793, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 240, 4713,
	4699, 1383, 2858, 4695, 1383, 1829, 1830, 4694, 4693, 4673,
	1648, 4672, 4670, 4649, 4648, 4623, 1152, 2583, 4609, 4606,
	4605, 4598, 1152, 157, 1661, 4586, 1666, 2921, 239, 1641,
	3390, 4167, 4585, 4531, 4502, 1832, 4458, 4441, 194, 1679,
	4440, 1684, 232, 4381, 238, 4377, 239, 238, 1093, 4374,
	4352, 233, 3365, 1854, 1855, 1856, 1857, 1806, 4227, 4206,
	232, 73, 4138, 1837, 3993, 3992, 3973, 3972, 3970, 233,
	1831, 2921, 3897, 3885, 3792, 1902, 3726, 3718, 74, 193,
	3684, 1691, 3358, 3350, 3351, 3352, 3353, 3355, 3356, 3354,
	4085, 3597, 1662, 240, 79, 1800, 240, 193, 1833, 1834,
	1835, 1836, 1838, 1839, 3553, 3520, 1742, 1680, 3465, 1904,
	3467, 3354, 1859, 1861, 3313, 3359, 3357, 3358, 3350, 3351,
	3352, 3353, 3355, 3356, 2589, 3312, 3307, 1152, 1152, 1152,
	3273, 3354, 3091, 1152, 88, 2949, 1961, 1846, 1847, 1960,
	1274, 239, 1274, 1959, 239, 1956, 1948, 1946, 2867, 4413,
	2866, 2831, 2824, 2790, 2667, 232, 1901, 1414, 232, 1708,
	1974, 2019, 1975, 1970, 233, 1969, 238, 233, 238, 1152,
	1852, 1759, 828, 1355, 1744, 905, 1968, 1837, 2063, 828,
	1967, 1355, 1966, 1355, 1965, 1964, 1963, 1807, 2023, 1962,
	110, 1943, 3129, 1942, 1941, 193, 94, 107, 1940, 1939,
	1938, 3357, 3358, 3350, 3351, 3352, 3353, 3355, 3356, 1937,
	238, 2109, 1983, 1639, 2111, 240, 1803, 240, 3364, 1073,
	2116, 1072, 1936, 1811, 2118, 1810, 2042, 1935, 2031, 2121,
	1934, 1933, 1932, 1931, 2092, 1930, 2094, 1929, 4652, 3436,
	238, 1928, 238, 1355, 1805, 1917, 1903, 1882, 2036, 1152,
	1900, 1895, 1368, 1297, 1824, 1825, 95, 266, 1288, 240,
	1957, 4651, 4384, 239, 4239, 239, 2030, 4177, 3936, 3909,
	3900, 3295, 2822, 1152, 1980, 1981, 2004, 232, 4480, 232,
	4241, 1414, 1644, 1093, 3935, 1240, 233, 1916, 233, 240,
	2185, 240, 238, 3463, 1898, 1882, 2127, 2159, 3713, 182,
	2057, 3348, 3349, 1858, 2159, 238, 2157, 239, 4313, 2015,
	1393, 1949, 1950, 1395, 193, 1882, 193, 2159, 1829, 1830,
	3000, 232, 4991, 4984, 4696, 4599, 1853, 4417, 2131, 4355,
	233, 2686, 2166, 1383, 4354, 4353, 4312, 239, 238, 239,
	834, 240, 2037, 4230, 2028, 4144, 2130, 834, 1832, 2086,
	4143, 232, 4142, 232, 240, 4141, 2684, 4140, 193, 4139,
	233, 2005, 233, 2670, 3959, 2668, 2024, 3904, 3903, 2978,
	2011, 837, 2002, 3728, 3365, 1995, 3727, 3720, 837, 1394,
	4630, 3719, 4869, 1831, 4941, 1884, 4939, 240, 193, 239,
	193, 4595, 4628, 1389, 1388, 4880, 4088, 1973, 2230, 1272,
	2249, 1272, 239, 232, 2107, 99, 1388, 1955, 4865, 1093,
	1997, 4506, 233, 1707, 1954, 1938, 232, 1576, 1576, 2014,
	2013, 3779, 2029, 2012, 1798, 233, 1938, 1414, 4019, 1999,
	2010, 2009, 2008, 3333, 3332, 239, 3029, 3255, 3587, 2960,
	193, 2060, 1391, 1252, 3988, 2133, 2043, 1388, 2145, 232,
	3522, 3556, 1052, 193, 2129, 3667, 1760, 3666, 233, 1926,
	1716, 190, 102, 2266, 4078, 106, 4961, 2355, 2051, 4589,
	4898, 1849, 1845, 4395, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1269, 2382, 1269, 193, 3639, 2226, 3159,
	2234, 238, 1717, 2267, 4092, 2865, 2244, 4067, 1053, 906,
	3647, 4025, 4016, 3998, 153, 3352, 3353, 3355, 3356, 3751,
	2277, 2282, 3489, 1385, 2360, 2298, 4462, 3397, 3830, 2650,
	2655, 1971, 3301, 4874, 1951, 3350, 3351, 3352, 3353, 3355,
	3356, 2324, 1576, 2331, 1576, 1643, 1576, 1618, 4526, 1534,
	240, 2162, 2152, 4498, 1923, 3350, 3351, 3352, 3353, 3355,
	3356, 1364, 2229, 1326, 1576, 1576, 2196, 4889, 2190, 3021,
	4886, 2958, 3002, 1644, 3703, 157, 2134, 1576, 3964, 4688,
	2859, 3018, 2202, 2236, 3016, 1695, 4401, 3622, 4799, 1576,
	194, 1576, 1576, 1576, 4666, 2269, 2270, 834, 239, 3525,
	4875, 3983, 2271, 1835, 1836, 1838, 1839, 1390, 3126, 4942,
	4976, 4529, 232, 4943, 4525, 828, 4504, 2224, 2237, 3773,
	4555, 233, 4038, 2656, 2320, 4278, 4299, 4922, 837, 3493,
	2381, 1032, 1585, 1050, 2239, 2239, 3186, 1152, 2194, 1048,
	1046, 1044, 1268, 1541, 1268, 2902, 2239, 1041, 5048, 193,
	1540, 2325, 1378, 1395, 1758, 4703, 2920, 1536, 2491, 4271,
	2337, 2440, 4548, 2438, 2223, 2220, 1386, 4537, 4344, 4343,
	2235, 2918, 1152, 4036, 2920, 1387, 2243, 4035, 3123, 4027,
	2146, 4013, 4012, 1593, 4010, 2358, 1757, 4009, 1091, 2918,
	4037, 3997, 3956, 2475, 2386, 2283, 3955, 2345, 3628, 3627,
	3589, 3457, 3306, 3069, 2657, 1389, 2654, 3305, 1152, 3304,
	1152, 3303, 3259, 892, 4272, 3027, 3464, 1152, 2489, 1394,
	2063, 2063, 1414, 2334, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	2306, 1152, 3026, 1152, 1152, 1152, 1152, 2305, 1693, 2347,
	1594, 1648, 4527, 1648, 4297, 2368, 1641, 4499, 2342, 1090,
	2342, 1389, 4294, 834, 2339, 2411, 2374, 2343, 1756, 1152,
	3023, 3012, 4439, 1152, 1152, 2493, 3004, 1369, 2480, 2994,
	2351, 1152, 2352, 2491, 1270, 1152, 1270, 1152, 1152, 1093,
	2993, 1093, 3522, 2988, 837, 1414, 3585, 767, 2267, 4977,
	893, 1152, 1152, 1152, 1152, 1385, 1643, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 2373, 4923, 2987, 2986, 2355,
	3495, 1739, 2057, 2057, 2151, 2150, 1395, 2965, 2159, 2161,
	2390, 2964, 1388, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 2427, 2489, 2401, 2659, 1152, 2238, 2238, 2982,
	2490, 2925, 2631, 2632, 3555, 2846, 2564, 1804, 1274, 2238,
	1739, 2700, 2934, 2699, 767, 1414, 2631, 2647, 2521, 2517,
	2518, 2434, 4248, 1092, 1274, 1688, 2975, 2976, 2195, 2962,
	2466, 1385, 3356, 2975, 2976, 4255, 2196, 2391, 2504, 1390,
	1152, 1414, 1394, 2695, 2873, 4314, 2975, 2976, 2850, 1839,
	1589, 1631, 4267, 1630, 1629, 1709, 1628, 2192, 4268, 4564,
	2463, 2398, 2741, 2741, 2755, 1537, 2631, 3752, 4273, 2776,
	2778, 2477, 2575, 2485, 2488, 2782, 1736, 2487, 1038, 1738,
	2492, 2479, 2595, 2478, 1073, 2650, 2508, 1073, 1073, 2509,
	2510, 2188, 2304, 3967, 2646, 3213, 1312, 2154, 1386, 4254,
	2392, 2471, 715, 2573, 2454, 2807, 2451, 1387, 2194, 3586,
	4270, 2378, 2653, 2060, 2060, 1390, 1794, 2849, 1738, 2832,
	4293, 2193, 1602, 2909, 2232, 3166, 2836, 4274, 710, 2937,
	2579, 2883, 2579, 1607, 3202, 1769, 4295, 2887, 1797, 1737,
	2051, 2051, 2799, 1689, 2465, 2490, 1355, 1355, 2948, 2444,
	2189, 2898, 1705, 2591, 2896, 4942, 2587, 1344, 2004, 1240,
	2452, 1773, 2432, 2585, 1717, 4681, 2872, 3232, 1717, 4979,
	3247, 4871, 2644, 2395, 1386, 2399, 1809, 766, 2821, 2389,
	3020, 1367, 1755, 1387, 4291, 5009, 2875, 2453, 1093, 1414,
	4978, 2798, 2947, 3761, 2344, 3760, 4438, 3204, 1093, 2659,
	2897, 2894, 1093, 2853, 1614, 2015, 1089, 1507, 4658, 3216,
	1521, 1344, 3019, 937, 2156, 3492, 2891, 2750, 2697, 2488,
	182, 2737, 2767, 2698, 3017, 2063, 2701, 3015, 2702, 2703,
	4342, 3994, 2806, 2871, 2811, 2788, 2789, 2817, 2818, 1383,
	2780, 2800, 2804, 2805, 766, 2569, 1084, 802, 1024, 2919,
	4988, 1752, 2155, 4011, 2002, 895, 894, 1612, 4269, 4963,
	4008, 3944, 3931, 3634, 1694, 3819, 3626, 1272, 2570, 4980,
	1829, 1830, 1086, 1414, 2571, 3583, 1957, 3022, 2576, 2985,
	1344, 1344, 2963, 1272, 1388, 2289, 2288, 768, 1042, 1355,
	4683, 1093, 4954, 1860, 1042, 1042, 1043, 3060, 4279, 4280,
	1832, 3816, 1042, 2961, 2926, 3246, 2893, 2868, 2472, 4565,
	1152, 1152, 4962, 1152, 2844, 2439, 2250, 2437, 1085, 2861,
	1985, 4563, 5011, 2899, 2882, 4278, 1885, 4561, 2885, 4930,
	2886, 1949, 1950, 2936, 2462, 1831, 3980, 4159, 828, 2900,
	1355, 2877, 1829, 1830, 2890, 3215, 2892, 2057, 3102, 4872,
	4296, 1269, 3239, 3240, 768, 4765, 2983, 2923, 4158, 4271,
	1388, 800, 3095, 4264, 1025, 1860, 3755, 1269, 2195, 3270,
	2246, 1576, 1832, 3700, 3013, 4560, 3212, 2967, 3635, 4982,
	4262, 3701, 3817, 2903, 1576, 2952, 1576, 3110, 2253, 4266,
	3210, 1591, 4289, 2260, 2968, 4777, 2250, 2245, 1885, 2966,
	3268, 2104, 4562, 1576, 3072, 1989, 3632, 1831, 4292, 3074,
	1770, 890, 2984, 889, 4272, 4489, 2939, 2942, 2464, 2977,
	2979, 2980, 2981, 3137, 2929, 2992, 2659, 1355, 2998, 1355,
	2905, 2241, 3028, 3167, 3168, 4047, 3154, 3061, 3062, 1588,
	3572, 1692, 1837, 1024, 3174, 3175, 3176, 3001, 2990, 2397,
	3600, 1152, 2907, 1992, 4870, 3978, 2757, 2989, 4265, 4060,
	4843, 2193, 4844, 2991, 3700, 2572, 4689, 1086, 1987, 4058,
	2262, 3003, 1614, 834, 2996, 2574, 3010, 3160, 4710, 711,
	3188, 2935, 3189, 3214, 3157, 1311, 1990, 3190, 2060, 2908,
	2242, 1859, 1861, 4048, 3509, 3164, 3156, 3494, 3573, 3537,
	1268, 3169, 3070, 3170, 837, 4986, 834, 2254, 3100, 1767,
	2906, 1030, 1029, 3151, 1837, 2051, 1268, 1152, 3106, 1541,
	2561, 765, 3184, 1152, 1152, 182, 3075, 1718, 2261, 1988,
	1535, 1690, 3141, 3139, 1295, 3078, 4046, 837, 3081, 3089,
	3083, 3571, 3265, 2659, 2233, 4763, 4929, 3099, 4371, 1852,
	3564, 1944, 4062, 1771, 4290, 3619, 3536, 2231, 1026, 1025,
	3461, 712, 4682, 1859, 1861, 3412, 3121, 2163, 2164, 3064,
	2204, 3266, 3132, 3142, 2216, 3271, 2199, 2250, 4981, 1152,
	1152, 801, 4155, 4061, 1039, 1152, 3218, 3128, 3220, 4764,
	3128, 4435, 3261, 2208, 2578, 2186, 3161, 4451, 1152, 1152,
	1648, 938, 2433, 929, 1152, 1152, 3140, 4952, 3565, 4810,
	1152, 713, 2586, 714, 3543, 2835, 4324, 4987, 5007, 1704,
	1706, 1852, 4267, 1768, 2641, 3183, 1882, 3065, 4268, 930,
	3070, 803, 2217, 915, 2200, 799, 3191, 3633, 4273, 734,
	3193, 2394, 3195, 1808, 3197, 2920, 1989, 2388, 1366, 1772,
	2205, 3563, 1991, 4989, 4908, 1152, 1152, 1152, 1894, 920,
	2940, 1152, 1270, 2803, 4909, 3311, 5012, 3262, 2816, 3545,
	3063, 1152, 3200, 1092, 3227, 2215, 1985, 2198, 1270, 4996,
	4270, 1521, 3238, 1027, 3832, 4383, 4477, 1282, 1152, 4149,
	4347, 3294, 2559, 3221, 1992, 2562, 3223, 4274, 1882, 3932,
	3229, 3181, 1284, 3228, 3510, 1853, 1030, 1029, 1083, 2801,
	1028, 1301, 1299, 1024, 4730, 2504, 842, 3192, 4160, 3194,
	3233, 3196, 3775, 3198, 3199, 3248, 3230, 1990, 1723, 1279,
	2257, 1521, 4434, 2997, 3544, 3289, 3290, 1086, 4815, 4747,
	3293, 4608, 849, 4346, 4345, 2558, 3208, 4106, 3688, 3475,
	2843, 4928, 2312, 1026, 4388, 1982, 4060, 3285, 4059, 1298,
	2209, 1989, 3267, 1031, 1884, 3411, 4058, 1291, 2105, 702,
	4372, 4083, 3269, 1819, 4389, 1285, 4156, 1853, 3260, 3979,
	1152, 1152, 1152, 1152, 1818, 2507, 2197, 2147, 2255, 4524,
	1152, 1152, 1152, 4617, 3516, 1152, 1818, 1813, 4204, 3449,
	4665, 1286, 5017, 4107, 4031, 1152, 1274, 1414, 4014, 1992,
	3965, 1152, 3963, 1152, 2144, 3689, 3404, 3405, 3680, 3512,
	3111, 3105, 1274, 3093, 1987, 2338, 2210, 2211, 4269, 1025,
	2332, 2256, 2326, 2497, 2318, 2297, 1884, 2296, 4731, 3871,
	1414, 4602, 1990, 1283, 3815, 1582, 1303, 3952, 3886, 4062,
	4783, 2206, 1274, 931, 932, 1414, 1833, 1834, 1835, 1836,
	1838, 1839, 2794, 3300, 774, 3776, 2969, 1355, 4279, 4280,
	2924, 1093, 4750, 4436, 3387, 3429, 2445, 2063, 1027, 2140,
	4061, 1414, 4109, 916, 917, 1988, 3090, 4406, 1817, 2142,
	3406, 1355, 1314, 1991, 4581, 4579, 2797, 2207, 4501, 1355,
	1817, 3528, 3524, 1101, 3523, 1028, 3479, 3477, 2379, 3481,
	3482, 3253, 2175, 4907, 3485, 1818, 3486, 2176, 3487, 3231,
	3456, 1152, 3899, 3409, 3416, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 2143, 1152, 3408, 2796, 2371, 2185,
	3438, 2361, 2795, 2560, 3471, 2294, 1355, 4161, 1740, 1894,
	1746, 1745, 2063, 3926, 3511, 2842, 3414, 3443, 1031, 1819,
	2941, 2841, 4513, 2840, 2839, 2838, 843, 844, 1623, 1152,
	4066, 1819, 2498, 1637, 4056, 2185, 1030, 1029, 3097, 3415,
	3490, 1624, 1635, 3922, 3427, 1355, 3451, 3452, 3453, 3454,
	3430, 3431, 4386, 3561, 3496, 3435, 3500, 3501, 936, 2057,
	3447, 3428, 1090, 1383, 4205, 3413, 3398, 1355, 1991, 1355,
	2323, 3483, 3382, 3383, 3384, 3575, 5016, 3577, 3526, 1817,
	2212, 3530, 4676, 1026, 3527, 1152, 1152, 3532, 3442, 2249,
	3534, 2177, 4162, 1414, 4362, 3872, 2249, 3923, 4732, 2945,
	3588, 4601, 2970, 2971, 1355, 3873, 3462, 3953, 1355, 2181,
	4079, 3971, 3611, 933, 934, 4059, 3617, 3513, 2336, 3433,
	4583, 3434, 3642, 1280, 3924, 1272, 3921, 3960, 4949, 4514,
	4487, 4486, 3068, 3474, 2057, 3459, 3165, 1724, 1576, 3073,
	3071, 1272, 2365, 918, 919, 3558, 3540, 4496, 2266, 1698,
	4789, 1355, 1576, 3601, 1576, 3603, 2213, 3605, 1414, 4677,
	3609, 4509, 3480, 3484, 3615, 828, 1576, 3581, 4508, 4796,
	4780, 1272, 4211, 846, 845, 3491, 3888, 1281, 1576, 2666,
	4234, 3519, 1790, 3598, 2178, 2183, 4817, 4478, 3497, 3576,
	1355, 4953, 4951, 4582, 4497, 3450, 3468, 3469, 3681, 3470,
	2060, 4891, 4706, 4697, 3636, 4484, 2458, 1274, 1027, 1269,
	1792, 4457, 4245, 3696, 773, 4203, 4065, 3672, 3379, 3562,
	1789, 1787, 3694, 3546, 1764, 1269, 3679, 2051, 1762, 3554,
	3652, 1734, 1576, 1732, 3567, 1028, 2450, 1730, 847, 848,
	1728, 4790, 3791, 3749, 1576, 3637, 1576, 3640, 3568, 3748,
	4678, 3570, 3569, 3590, 3472, 1269, 3342, 2665, 3272, 3094,
	3550, 3551, 3011, 3552, 3005, 3508, 3716, 2179, 3154, 1726,
	3593, 2959, 2870, 3687, 2467, 2060, 1636, 3154, 3705, 3599,
	1720, 3584, 2356, 1714, 2022, 1634, 3624, 3612, 1031, 2992,
	2018, 3618, 3961, 1414, 3753, 1712, 1414, 4723, 1793, 1633,
	1674, 935, 2051, 4567, 3380, 2436, 3560, 3771, 2403, 2275,
	3770, 1813, 2029, 3625, 3594, 3595, 3206, 3596, 2186, 3205,
	3763, 3420, 3172, 2486, 3629, 1751, 2406, 2317, 3574, 3690,
	1152, 3925, 3644, 834, 2295, 2093, 1152, 1152, 2091, 2967,
	1152, 1152, 1152, 1927, 1152, 3676, 3623, 1687, 3744, 3697,
	4715, 1606, 3675, 1152, 2063, 4864, 4325, 3677, 1268, 3746,
	4018, 4017, 1152, 4716, 837, 3610, 3602, 1152, 1040, 3616,
	4329, 4779, 3498, 1414, 1268, 4309, 4404, 2184, 3704, 182,
	182, 4399, 1152, 4334, 3702, 4322, 3714, 3715, 272, 2460,
	1414, 4234, 4260, 3711, 2459, 4259, 3768, 4717, 1791, 3769,
	2063, 2063, 1152, 1152, 1268, 1152, 1152, 1152, 1788, 1786,
	4105, 3695, 1763, 4096, 4034, 3499, 1761, 3421, 4015, 1733,
	3986, 1731, 3812, 1152, 3693, 1729, 3984, 1152, 1727, 2063,
	2063, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 3794, 1152, 3844, 3777, 3845, 3747, 1725, 4926, 3741,
	1152, 1152, 2063, 4719, 3962, 3683, 1272, 1152, 1719, 3419,
	3426, 1713, 3739, 3804, 3805, 3774, 2057, 1093, 1152, 3678,
	3668, 3124, 3732, 1711, 3116, 3109, 4718, 1632, 2435, 1274,
	1274, 2402, 2274, 1152, 3101, 3086, 1344, 3085, 3066, 2889,
	3766, 2884, 2180, 3425, 4720, 2293, 2291, 2268, 2251, 3772,
	2214, 2201, 2187, 2126, 2123, 2120, 2117, 2112, 2110, 2106,
	1270, 2097, 2057, 2057, 3801, 1414, 4921, 3799, 3613, 1045,
	1047, 1049, 2281, 2260, 3918, 3811, 1270, 1249, 1355, 1355,
	4848, 4388, 3827, 1822, 2035, 1344, 3883, 3251, 3905, 4943,
	1269, 2057, 2057, 1355, 1355, 4675, 828, 1355, 3757, 3834,
	3758, 4389, 3759, 1250, 3950, 3743, 1270, 2148, 3951, 2517,
	3835, 3818, 3820, 3821, 2470, 3847, 1152, 1344, 1344, 2136,
	2137, 3734, 3224, 1114, 2057, 3222, 3890, 3059, 3849, 4829,
	3842, 3929, 3930, 3875, 3843, 4741, 3733, 4420, 2517, 3850,
	4341, 1152, 4249, 3155, 2167, 1587, 3942, 3943, 3876, 3884,
	3949, 3422, 3423, 3424, 3985, 2920, 3987, 2060, 2920, 4619,
	2468, 2946, 4612, 3895, 3896, 4117, 182, 2393, 1110, 2196,
	2918, 3879, 2335, 2943, 1152, 1152, 1334, 3822, 3892, 3893,
	1784, 1785, 1335, 3252, 2051, 2430, 2425, 3614, 4828, 2400,
	4300, 2810, 3742, 4336, 1823, 1710, 2950, 1829, 1830, 4637,
	3841, 4511, 4212, 2060, 2060, 3907, 2469, 3908, 4190, 3541,
	1152, 1152, 1507, 2951, 1251, 1829, 1830, 2972, 1152, 1826,
	3966, 1362, 1302, 4030, 4946, 263, 4937, 1832, 2951, 4033,
	2051, 2051, 2060, 2060, 4899, 3084, 4093, 2319, 1373, 1268,
	1576, 3018, 2135, 1576, 3016, 4029, 4788, 3025, 1355, 1521,
	3007, 2953, 4770, 3999, 3009, 2955, 4044, 1335, 4740, 2051,
	2051, 1335, 1831, 1160, 834, 2060, 3945, 3008, 2954, 4734,
	4674, 4603, 699, 2063, 4574, 4003, 4004, 4006, 4488, 4103,
	1831, 4095, 4082, 3915, 3682, 3131, 2781, 2132, 1272, 1272,
	2044, 4983, 2051, 4510, 2995, 837, 1533, 4026, 4721, 1532,
	4032, 3460, 5015, 4819, 4722, 4020, 3348, 3349, 4820, 270,
	270, 270, 4052, 705, 706, 1576, 721, 705, 721, 732,
	3991, 1152, 772, 1829, 1830, 4736, 792, 4049, 4050, 1274,
	1152, 798, 4110, 3996, 4119, 2912, 2913, 3938, 270, 4075,
	1576, 1576, 1576, 1543, 4126, 2967, 4182, 1576, 1576, 1576,
	1697, 3740, 3735, 3736, 3737, 3738, 1696, 4819, 2661, 911,
	3226, 3934, 4820, 2912, 4054, 2910, 270, 4063, 2696, 1576,
	4089, 4102, 1269, 1269, 4064, 1414, 2910, 2911, 4604, 4549,
	4338, 4111, 4956, 4130, 4333, 4114, 3137, 4090, 1766, 4332,
	4178, 1765, 3933, 4042, 3823, 2057, 3607, 1521, 3604, 1921,
	4081, 1270, 1414, 3154, 4053, 1152, 1152, 4077, 1344, 1920,
	2474, 1152, 1152, 2063, 5000, 4134, 1152, 1152, 4964, 1152,
	4094, 4113, 4045, 4834, 1152, 4774, 4773, 4772, 4705, 4704,
	4654, 4577, 4541, 4481, 4475, 1152, 4379, 4359, 4298, 4240,
	4133, 4068, 3519, 4123, 4069, 3982, 3974, 4097, 3686, 3685,
	3533, 1152, 3478, 3211, 3203, 3180, 3179, 3178, 3177, 3115,
	4112, 1521, 4147, 1521, 3088, 3087, 2944, 4115, 2880, 4120,
	2874, 4121, 2863, 2862, 4146, 2851, 2590, 4099, 2461, 4145,
	4131, 4125, 2431, 4163, 2424, 4132, 2423, 2422, 2421, 2420,
	2333, 2307, 4164, 2303, 2302, 2301, 705, 705, 4176, 2300,
	2299, 2100, 2099, 2098, 270, 2096, 2034, 2033, 1783, 4043,
	4172, 1782, 1274, 1721, 1601, 1600, 1599, 1598, 1597, 1596,
	1274, 1268, 1268, 4157, 1414, 1414, 1595, 1414, 1590, 4098,
	1586, 1584, 1583, 1526, 1274, 2057, 2060, 1525, 1524, 1405,
	1404, 1403, 1402, 1401, 1365, 1576, 1576, 4217, 1321, 1320,
	1319, 1318, 1317, 1316, 1315, 1313, 1308, 1307, 1414, 1306,
	1305, 1304, 1232, 2051, 904, 8, 2138, 1051, 1037, 4680,
	4277, 4276, 4275, 2457, 93, 1592, 866, 87, 2258, 3981,
	1152, 1003, 4816, 4709, 1567, 874, 4798, 4091, 1272, 3535,
	3030, 1274, 2405, 1274, 4235, 4236, 4148, 1722, 2407, 3437,
	2823, 4762, 4186, 4202, 3310, 4644, 4450, 2664, 1925, 4238,
	3391, 89, 1136, 1182, 4220, 4222, 4370, 4369, 1355, 4261,
	3968, 3655, 4244, 4288, 4366, 4247, 4308, 4225, 1414, 4365,
	1355, 2048, 2050, 1355, 4250, 4251, 4287, 1100, 4317, 4253,
	1417, 4320, 4304, 4305, 4209, 1152, 4213, 4842, 1414, 4216,
	4214, 4215, 2149, 4219, 4218, 5006, 1142, 2165, 2158, 2864,
	2740, 182, 1159, 4301, 4226, 1156, 2052, 4152, 4229, 2054,
	4302, 1158, 1269, 4233, 1157, 2053, 2060, 1945, 4256, 1155,
	2047, 4101, 3135, 1270, 1270, 3712, 1576, 1576, 1642, 1640,
	1005, 4258, 4246, 2153, 2584, 2648, 3299, 1918, 1116, 1138,
	2645, 1296, 4252, 2051, 1127, 1115, 3417, 3396, 3699, 3914,
	3442, 2496, 884, 4337, 1355, 4339, 3345, 2651, 1114, 1114,
	1114, 1287, 4390, 2764, 2756, 2752, 1414, 4303, 4360, 3488,
	3125, 1576, 4323, 1799, 4340, 4464, 1498, 1896, 4331, 3136,
	1795, 1399, 1120, 2582, 1909, 3277, 2506, 3706, 4407, 3440,
	2857, 4363, 4822, 3831, 4357, 4321, 3209, 2311, 1248, 4396,
	1576, 1576, 1576, 1576, 1576, 1576, 1247, 4284, 1294, 4284,
	4391, 1272, 1246, 4804, 4801, 2248, 1414, 4373, 3650, 1272,
	4358, 3651, 2141, 2904, 2594, 3669, 1132, 4350, 1152, 1152,
	1152, 1520, 4349, 1272, 4348, 2449, 4356, 4408, 3764, 3402,
	4080, 1603, 797, 4518, 4318, 1144, 1414, 1881, 3055, 4368,
	3054, 1152, 4364, 4669, 1152, 1152, 4402, 4376, 4382, 4380,
	1384, 1268, 1382, 4411, 1152, 1381, 4375, 2063, 1380, 4973,
	3977, 3976, 1152, 1152, 3975, 237, 3245, 1820, 1812, 234,
	236, 235, 3539, 4409, 4416, 3919, 3446, 4897, 4001, 1414,
	1272, 1576, 1272, 3641, 4425, 1269, 23, 22, 4429, 21,
	116, 42, 20, 1269, 155, 4422, 1355, 4442, 4423, 133,
	4327, 152, 151, 125, 4431, 150, 4437, 1269, 4307, 149,
	148, 4430, 147, 154, 146, 1414, 1521, 1521, 145, 140,
	4393, 4316, 144, 1152, 4319, 143, 142, 141, 139, 137,
	138, 132, 136, 135, 4447, 134, 1152, 131, 130, 129,
	128, 127, 126, 124, 156, 1152, 123, 122, 121, 4483,
	2063, 120, 119, 118, 4459, 4532, 4533, 1569, 117, 4378,
	1152, 785, 786, 1152, 1269, 4453, 1269, 4473, 61, 4474,
	4470, 4471, 4392, 60, 4491, 115, 4492, 1152, 113, 2057,
	1152, 114, 19, 40, 14, 65, 66, 1414, 18, 4550,
	1521, 4552, 13, 4553, 1355, 4415, 35, 4521, 92, 105,
	104, 1289, 4557, 103, 1576, 1576, 1576, 36, 4500, 101,
	1656, 100, 34, 1270, 2185, 2323, 4493, 17, 4490, 16,
	15, 98, 4540, 97, 96, 1274, 1671, 33, 31, 1412,
	11, 9, 4566, 37, 1268, 1310, 2006, 12, 5, 187,
	186, 189, 1268, 4554, 185, 188, 91, 270, 184, 270,
	270, 183, 1339, 270, 1349, 1414, 1268, 4587, 1576, 4580,
	4592, 4538, 4576, 90, 4542, 1363, 29, 10, 4584, 4543,
	179, 4593, 2057, 792, 4087, 4613, 792, 82, 181, 180,
	178, 177, 176, 4600, 1699, 83, 80, 175, 4551, 86,
	3652, 1152, 1152, 4618, 174, 4569, 4568, 81, 4571, 4572,
	270, 85, 270, 270, 1339, 4578, 270, 270, 1152, 2063,
	4622, 1349, 4624, 1268, 4596, 1268, 84, 4591, 27, 4530,
	2060, 4573, 6, 64, 4614, 270, 4616, 1545, 7, 4432,
	1355, 3750, 108, 1355, 109, 1355, 1355, 38, 78, 77,
	76, 75, 26, 1565, 1344, 4610, 4615, 2051, 63, 25,
	1580, 173, 4621, 1152, 4620, 1152, 4411, 1152, 218, 217,
	216, 215, 214, 213, 212, 211, 206, 1274, 4558, 1605,
	4633, 4634, 1349, 210, 208, 207, 270, 270, 209, 1339,
	1152, 4544, 1274, 4653, 4664, 205, 4655, 228, 4656, 4657,
	227, 221, 4632, 220, 226, 225, 1270, 224, 223, 222,
	792, 4284, 270, 270, 1270, 4636, 4642, 219, 4701, 231,
	204, 203, 202, 2060, 1668, 200, 196, 199, 1270, 201,
	198, 197, 195, 4662, 1675, 4692, 4663, 230, 229, 911,
	72, 2057, 171, 4691, 4659, 1498, 1274, 1274, 172, 71,
	2051, 170, 169, 168, 1521, 4684, 167, 166, 165, 164,
	1152, 4685, 70, 4712, 24, 4556, 2, 1274, 1, 0,
	1274, 0, 0, 0, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 4700, 1576, 1270, 0, 1270, 0, 4726,
	4727, 0, 4702, 0, 1272, 0, 0, 0, 1152, 1152,
	0, 0, 4707, 0, 0, 0, 0, 0, 1152, 0,
	4744, 0, 0, 4746, 0, 0, 0, 270, 4758, 0,
	4759, 4724, 0, 0, 0, 4735, 0, 0, 0, 4738,
	4737, 0, 0, 4743, 4596, 0, 0, 0, 0, 0,
	4751, 270, 0, 4754, 1907, 4752, 4755, 0, 1912, 0,
	0, 4757, 4756, 4284, 0, 4767, 1152, 1152, 4775, 0,
	1152, 1114, 0, 2501, 1355, 0, 0, 1355, 4284, 1498,
	4771, 0, 0, 0, 0, 0, 4776, 4766, 1269, 0,
	4803, 4806, 2060, 0, 4778, 0, 0, 0, 4786, 4787,
	0, 0, 0, 0, 4821, 4825, 0, 0, 0, 0,
	4794, 0, 4818, 0, 0, 0, 0, 4795, 0, 2051,
	0, 0, 0, 0, 0, 4812, 4808, 4813, 0, 0,
	4814, 4847, 4284, 4284, 1152, 1152, 1152, 0, 0, 4845,
	0, 0, 4824, 4698, 0, 4807, 1272, 0, 0, 4811,
	0, 0, 4830, 4284, 0, 0, 4284, 0, 0, 0,
	0, 1272, 0, 4838, 4835, 0, 0, 0, 0, 0,
	1152, 4711, 4846, 0, 0, 0, 0, 4878, 0, 0,
	4883, 4859, 4860, 4862, 0, 4861, 4893, 0, 4895, 0,
	0, 0, 0, 4879, 0, 2221, 0, 0, 0, 0,
	4742, 0, 0, 2185, 4906, 0, 4905, 4881, 0, 4904,
	0, 0, 0, 0, 0, 1272, 1272, 4912, 2021, 2758,
	0, 4896, 0, 4914, 0, 1498, 1152, 0, 4894, 0,
	1269, 4918, 0, 0, 1355, 0, 1272, 1268, 0, 1272,
	4911, 0, 4910, 4927, 0, 1269, 0, 0, 0, 0,
	4919, 4576, 705, 4920, 0, 0, 4944, 0, 0, 0,
	4924, 2196, 4940, 4933, 4934, 0, 0, 0, 4938, 0,
	2227, 0, 4936, 270, 0, 270, 0, 4947, 4960, 270,
	0, 4958, 4803, 4950, 1274, 4806, 1274, 4935, 4948, 4959,
	0, 4969, 1545, 1339, 2026, 270, 4967, 270, 2032, 1269,
	1269, 4955, 4957, 4966, 0, 270, 0, 721, 4965, 0,
	0, 0, 270, 4975, 2222, 0, 0, 0, 4974, 0,
	1269, 0, 0, 1269, 1355, 0, 0, 4968, 2101, 4970,
	4997, 4831, 4824, 4990, 4992, 0, 4998, 4833, 4999, 0,
	270, 5004, 2169, 805, 5002, 0, 0, 270, 0, 0,
	0, 1344, 0, 0, 1152, 1152, 0, 5001, 0, 5010,
	0, 0, 1152, 0, 1152, 1152, 5008, 0, 816, 5022,
	5026, 5013, 5023, 0, 5028, 5025, 0, 4995, 5019, 1268,
	792, 0, 5030, 5029, 3274, 3275, 5027, 0, 5035, 5031,
	5034, 5033, 0, 0, 1268, 0, 5032, 0, 0, 1270,
	5038, 0, 0, 1355, 5039, 0, 5040, 3137, 5042, 5047,
	0, 5043, 5045, 5041, 5051, 5044, 0, 0, 5050, 0,
	0, 0, 5053, 1152, 0, 0, 2323, 0, 0, 5054,
	5047, 5056, 5058, 0, 0, 0, 0, 0, 3137, 0,
	2175, 0, 0, 5020, 5021, 2176, 0, 0, 1268, 1268,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	4284, 810, 4284, 0, 0, 2175, 0, 0, 822, 1268,
	2176, 0, 1268, 74, 0, 0, 0, 0, 2353, 0,
	0, 0, 815, 0, 0, 0, 0, 0, 2286, 79,
	0, 0, 0, 0, 0, 0, 2367, 2369, 0, 3741,
	0, 0, 5055, 0, 0, 0, 0, 0, 0, 2372,
	1498, 0, 3739, 0, 0, 0, 0, 0, 0, 0,
	0, 2380, 3732, 2383, 2384, 2385, 0, 0, 0, 88,
	0, 0, 0, 814, 0, 0, 0, 2218, 0, 0,
	0, 1270, 0, 1272, 0, 1272, 0, 2231, 270, 0,
	767, 0, 270, 0, 0, 0, 1270, 0, 0, 2177,
	0, 0, 0, 0, 2233, 0, 3372, 3373, 3374, 3375,
	905, 0, 0, 0, 0, 812, 0, 2181, 0, 0,
	0, 0, 0, 49, 2177, 110, 0, 0, 0, 0,
	0, 94, 107, 0, 0, 2228, 0, 0, 0, 0,
	2230, 0, 2181, 1498, 0, 3743, 0, 0, 0, 0,
	1270, 1270, 0, 0, 0, 0, 270, 0, 0, 0,
	270, 3734, 0, 0, 0, 0, 270, 1269, 0, 1269,
	0, 1270, 270, 821, 1270, 0, 3733, 0, 2225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	270, 95, 2178, 2183, 705, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 2232, 911, 1498, 0, 0, 0, 2178, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3742, 0, 1344, 0, 0, 0, 0, 1498,
	0, 270, 0, 1339, 270, 0, 0, 0, 0, 0,
	0, 807, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	3730, 0, 0, 2404, 0, 2179, 0, 0, 270, 270,
	0, 270, 811, 270, 0, 270, 0, 270, 0, 0,
	3235, 0, 0, 0, 2229, 0, 0, 0, 0, 0,
	2179, 2323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2441, 2520, 0, 2442, 1268, 2443, 1268, 0,
	766, 0, 3549, 0, 0, 1344, 2186, 0, 0, 270,
	270, 270, 270, 0, 0, 817, 0, 0, 0, 0,
	99, 809, 0, 0, 0, 0, 0, 2173, 0, 0,
	0, 2186, 0, 2588, 0, 0, 0, 0, 772, 0,
	0, 0, 792, 0, 0, 0, 0, 0, 0, 1907,
	0, 2758, 2758, 0, 0, 0, 0, 0, 0, 0,
	3547, 0, 0, 0, 0, 2184, 0, 1498, 0, 806,
	0, 3740, 3735, 3736, 3737, 3738, 190, 102, 0, 0,
	106, 0, 0, 0, 0, 2171, 2662, 0, 0, 0,
	2184, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 0, 3548, 2763, 0, 238, 0, 0, 0,
	768, 0, 0, 0, 906, 0, 0, 0, 0, 153,
	0, 808, 0, 0, 0, 0, 0, 0, 2172, 0,
	0, 0, 0, 0, 0, 2596, 3348, 3349, 0, 3366,
	3367, 3368, 0, 0, 0, 819, 820, 0, 0, 0,
	0, 1498, 0, 0, 0, 240, 0, 0, 1270, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 2833, 0, 0, 0, 0, 0, 0, 0,
	2180, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 239, 3348, 3349, 705, 3366, 3367, 3368,
	0, 3363, 0, 0, 0, 2180, 0, 232, 0, 0,
	0, 270, 0, 0, 0, 0, 233, 0, 0, 0,
	705, 0, 0, 2758, 2758, 2758, 2758, 270, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 1349, 0, 0, 0, 0, 0, 3363,
	1829, 1830, 0, 0, 0, 0, 0, 3787, 3788, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 3354, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 1349, 0, 0, 721, 0, 721, 0, 0,
	2915, 2879, 0, 0, 0, 0, 1885, 270, 0, 0,
	270, 0, 0, 0, 270, 1831, 270, 0, 0, 0,
	3371, 1339, 0, 270, 270, 1851, 1349, 1349, 2895, 0,
	0, 0, 0, 270, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 3370, 0, 0, 3354, 3851, 3852, 3853,
	3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863,
	3864, 3865, 3866, 3867, 3868, 3869, 3870, 0, 3874, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 2933,
	0, 0, 0, 0, 0, 3364, 0, 0, 0, 0,
	3790, 270, 0, 0, 0, 3173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 3370, 1854, 1855, 1856, 1857, 0, 0, 270, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3364, 0, 270, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	1107, 0, 0, 0, 0, 0, 0, 0, 270, 3076,
	0, 0, 0, 1344, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 1545, 0, 0, 270,
	0, 270, 73, 0, 46, 45, 0, 0, 270, 1852,
	1882, 0, 0, 0, 0, 0, 0, 0, 3120, 74,
	0, 3365, 158, 0, 0, 0, 0, 0, 2933, 0,
	705, 0, 0, 0, 0, 79, 0, 0, 0, 3149,
	911, 2933, 0, 0, 0, 0, 67, 0, 0, 0,
	0, 0, 0, 48, 0, 160, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 47, 0, 88, 0, 0, 0, 0,
	0, 270, 1339, 270, 0, 2763, 1882, 0, 0, 3365,
	0, 0, 0, 1349, 270, 0, 0, 1339, 0, 1339,
	0, 1339, 50, 68, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 110, 0, 0, 0, 1498, 0, 94, 107, 0,
	0, 0, 1858, 0, 0, 0, 270, 270, 270, 270,
	1339, 0, 0, 1339, 0, 270, 0, 0, 0, 0,
	270, 0, 3360, 3361, 3362, 1853, 2763, 2763, 1498, 3359,
	3357, 3358, 3350, 3351, 3352, 3353, 3355, 3356, 0, 52,
	0, 0, 0, 1498, 2758, 2758, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 95, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	3360, 3361, 3362, 0, 0, 0, 0, 3359, 3357, 3358,
	3350, 3351, 3352, 3353, 3355, 3356, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2758, 2758, 2758, 2758, 2758, 2758,
	2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758, 2758,
	2758, 2758, 2758, 2758, 0, 2758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 73, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 99, 0, 2763, 2763,
	2763, 2763, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 1498, 0, 0, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 88, 3403, 0,
	0, 58, 190, 102, 0, 0, 106, 0, 0, 0,
	54, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 0, 0, 1498, 0, 0, 0,
	0, 3432, 238, 0, 0, 0, 0, 0, 905, 0,
	62, 0, 0, 0, 0, 153, 3445, 0, 0, 0,
	0, 49, 0, 110, 0, 0, 0, 0, 0, 94,
	107, 159, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 3466, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 270, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 705, 0, 0, 705, 0,
	0, 705, 705, 0, 0, 0, 157, 705, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 95,
	0, 194, 0, 0, 0, 0, 0, 270, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	3620, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 1498, 0, 0, 0, 270, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 3645, 0,
	193, 0, 0, 3, 0, 0, 0, 0, 0, 0,
	3673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2933, 2933, 270, 0, 3506, 2026, 0, 0, 0,
	0, 0, 2933, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 2933, 2032, 0, 2933, 2032, 0, 0,
	2032, 0, 0, 3506, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 3722, 270, 270, 2026, 0, 270,
	0, 0, 0, 0, 0, 0, 3745, 0, 1498, 3348,
	3349, 0, 3366, 3367, 3368, 0, 0, 0, 99, 2026,
	0, 270, 0, 3580, 3580, 0, 0, 0, 1339, 0,
	4456, 4169, 0, 0, 0, 0, 0, 0, 0, 3445,
	3348, 3349, 0, 3366, 3367, 3368, 0, 0, 0, 0,
	2933, 0, 2933, 0, 3608, 2933, 2026, 0, 0, 2933,
	2026, 0, 4168, 792, 0, 0, 0, 0, 2606, 2607,
	2608, 2625, 2626, 2627, 190, 102, 0, 0, 106, 0,
	0, 0, 0, 0, 3363, 0, 0, 0, 2628, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 4503,
	270, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 906, 0, 0, 3363, 0, 153, 270, 0,
	3646, 1885, 0, 0, 3648, 2933, 0, 0, 270, 0,
	0, 0, 270, 0, 0, 1349, 0, 0, 0, 0,
	2618, 0, 0, 1498, 0, 0, 0, 0, 0, 2614,
	270, 0, 0, 240, 0, 3120, 0, 0, 1339, 0,
	270, 0, 0, 2933, 0, 705, 0, 0, 0, 0,
	0, 0, 2933, 0, 3765, 0, 0, 1412, 157, 0,
	0, 3354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 2763,
	2763, 239, 0, 0, 3348, 3349, 0, 3366, 3367, 3368,
	0, 0, 3354, 0, 0, 232, 0, 0, 0, 0,
	0, 3756, 0, 0, 233, 0, 3796, 2619, 2620, 2621,
	2622, 0, 0, 0, 0, 0, 0, 2613, 0, 0,
	0, 3762, 0, 0, 1545, 0, 3370, 1339, 270, 0,
	270, 0, 1651, 0, 3808, 0, 1339, 0, 0, 3348,
	3349, 0, 3366, 3367, 3368, 0, 0, 0, 0, 0,
	0, 3824, 0, 0, 0, 0, 0, 3370, 0, 3363,
	0, 3795, 0, 0, 4641, 0, 0, 270, 3364, 2763,
	2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763,
	2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763, 0,
	2763, 2623, 2624, 0, 0, 0, 0, 0, 0, 3364,
	0, 0, 0, 0, 0, 0, 0, 1829, 1830, 0,
	0, 4668, 0, 0, 3363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2616, 3829, 0, 1984, 0, 0,
	1860, 0, 0, 0, 0, 0, 4690, 1832, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3354, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 3917, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3354, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3370, 270, 270, 3365, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 4039, 0, 0, 4040, 0, 705, 705, 0,
	0, 0, 0, 0, 0, 3365, 0, 2758, 0, 0,
	1498, 0, 0, 3364, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 3370, 0, 0, 1837,
	2617, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3364, 0,
	0, 0, 1099, 0, 0, 0, 2758, 0, 1859, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	1882, 0, 4127, 4128, 4129, 0, 0, 0, 0, 2367,
	4135, 4136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 3361, 3362, 0, 792,
	0, 0, 3359, 3357, 3358, 3350, 3351, 3352, 3353, 3355,
	3356, 0, 1498, 1498, 0, 1498, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 3360, 3361, 3362, 0,
	0, 0, 3580, 3359, 3357, 3358, 3350, 3351, 3352, 3353,
	3355, 3356, 0, 0, 0, 0, 1498, 270, 0, 3365,
	0, 2603, 2604, 2605, 2629, 2615, 2609, 0, 2611, 2612,
	2610, 2597, 2598, 2599, 2600, 2601, 2602, 0, 1114, 0,
	2026, 0, 270, 0, 0, 0, 721, 721, 1349, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 3120, 3365, 0, 3120, 2032, 0, 0,
	0, 0, 270, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 270, 0, 0, 0, 1498, 0, 0, 0,
	0, 2758, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 2933, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 3149, 3149, 0, 0, 0, 0, 911, 2933, 0,
	0, 0, 1853, 0, 0, 0, 0, 4231, 4232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2758, 0,
	3360, 3361, 3362, 0, 0, 0, 270, 3359, 3357, 3358,
	3350, 3351, 3352, 3353, 3355, 3356, 0, 3348, 3349, 0,
	3366, 3367, 3368, 2758, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1884, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 3361, 3362, 0, 0,
	0, 0, 3359, 3357, 3358, 3350, 3351, 3352, 3353, 3355,
	3356, 0, 0, 0, 1498, 0, 0, 0, 1865, 0,
	0, 0, 4187, 0, 1865, 0, 0, 0, 4224, 0,
	1865, 0, 3363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4242,
	0, 0, 0, 0, 0, 0, 0, 0, 2367, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 0, 270, 0, 1498, 0, 0,
	0, 1545, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1498, 0, 1349, 0, 0, 0, 3354,
	1865, 0, 0, 0, 0, 1865, 0, 0, 1349, 0,
	270, 1349, 4424, 0, 4426, 4427, 4428, 0, 1865, 2933,
	2933, 0, 3506, 1865, 0, 3580, 2933, 0, 0, 0,
	0, 0, 0, 0, 4286, 0, 4286, 1545, 0, 0,
	0, 1114, 0, 0, 0, 0, 0, 0, 2933, 0,
	2032, 0, 0, 0, 3506, 0, 1545, 1545, 270, 2026,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 2026, 0, 270, 2026, 0, 270, 0, 3580,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 2933, 0,
	2933, 270, 0, 4476, 0, 0, 3364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 1498, 0, 0, 2933, 2933, 0, 0,
	1358, 0, 3120, 3120, 0, 1866, 1860, 1412, 0, 3506,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	270, 0, 1879, 0, 0, 0, 0, 1099, 1099, 1099,
	270, 0, 2763, 0, 0, 0, 0, 4448, 0, 1885,
	0, 0, 0, 1882, 0, 0, 0, 0, 1831, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4448, 1547, 0, 1553, 0, 1559, 4570, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 0, 0, 0, 0, 0,
	0, 2763, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 2520, 0, 0, 0,
	1865, 0, 3365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 1659, 1837, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2762, 0, 0, 1677,
	0, 1682, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 2933, 2032, 1865, 2032, 0, 2520, 4495,
	0, 0, 0, 0, 1870, 0, 0, 1880, 270, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 4519, 0,
	4519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 792, 0, 0, 0, 1747,
	0, 0, 1753, 0, 0, 0, 3580, 1868, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 3360, 3361, 3362, 2026, 0, 270, 0,
	3359, 3357, 3358, 3350, 3351, 3352, 3353, 3355, 3356, 0,
	0, 0, 0, 0, 0, 1114, 2763, 0, 0, 0,
	0, 0, 0, 0, 0, 4495, 0, 0, 4286, 0,
	0, 1545, 0, 0, 0, 2933, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4607, 0, 0, 1867, 0,
	0, 0, 0, 2763, 0, 0, 0, 1545, 0, 1882,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 0, 0,
	0, 0, 0, 0, 1829, 1830, 2367, 0, 2763, 0,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1906, 0, 0, 0, 1860, 0, 1919,
	0, 0, 0, 0, 1832, 0, 3829, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 3580, 4661, 0, 0, 0, 0, 0, 1853, 1831,
	4495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4286, 0, 0, 1829, 1830, 1871, 0, 0, 0, 1873,
	1874, 1875, 0, 0, 0, 4286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 1884, 0, 270,
	0, 0, 1879, 0, 1978, 1978, 1978, 0, 0, 0,
	0, 721, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 4286,
	4286, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 1837, 1848, 0, 0,
	4286, 0, 270, 4286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 1869,
	0, 0, 1545, 0, 1545, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 1859, 1861, 0, 0, 0,
	4195, 0, 1349, 0, 4194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	4519, 0, 0, 270, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	1099, 0, 0, 1852, 0, 0, 0, 2933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 1865, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 3829, 0, 0, 1865, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	1882, 0, 0, 0, 1865, 0, 0, 1545, 0, 0,
	0, 0, 1852, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 0,
	0, 0, 0, 0, 1865, 0, 1865, 1865, 1865, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 2762, 2762,
	0, 0, 0, 0, 0, 0, 0, 0, 4495, 1853,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 2733, 2734, 2735, 2736, 2729, 2730, 2731,
	2732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4286, 0, 4286,
	0, 0, 1545, 0, 1865, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 1865, 1853, 0,
	1865, 0, 0, 1865, 2709, 2710, 2711, 2712, 0, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 0, 0, 0, 0,
	0, 0, 2933, 0, 0, 1871, 0, 2721, 2722, 2723,
	2724, 2717, 2718, 2719, 2720, 2725, 2726, 2727, 2728, 0,
	3149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2933, 0, 0, 0, 1884, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 3149, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 3369, 0,
	2762, 2762, 2762, 2762, 0, 0, 0, 1865, 0, 1865,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2428, 0, 0, 2705, 2706, 2707,
	2708, 2713, 2714, 2715, 2716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2455,
	0, 0, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2495, 0, 2499, 0, 0,
	0, 0, 0, 0, 2513, 0, 0, 0, 0, 0,
	0, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 0, 2563, 0,
	2565, 2566, 2567, 2568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1906, 0,
	0, 0, 2643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2673, 2676,
	2679, 2682, 0, 0, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 2754, 0, 2766, 2768, 2773, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 1829, 1830, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 1860,
	0, 0, 0, 0, 0, 1831, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	1865, 1865, 1885, 1865, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 3785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 1870, 1865, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 1865, 1865,
	0, 2762, 2762, 0, 0, 1865, 0, 0, 0, 1852,
	0, 0, 1846, 1847, 0, 3369, 3369, 0, 0, 1865,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3079, 3080, 0,
	3082, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 1148, 0, 0,
	0, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762,
	2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762,
	2762, 0, 2762, 3369, 3369, 3369, 3369, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 269, 269, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	835, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 3048, 0, 0, 0, 0, 3201, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 3038, 3036, 0, 0,
	1832, 0, 0, 3040, 3042, 3032, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 1865,
	1886, 1887, 0, 0, 0, 1851, 3056, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 3323, 1271, 0,
	0, 3324, 1865, 1865, 0, 0, 3257, 3258, 0, 0,
	0, 0, 3264, 0, 0, 0, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 3278, 3279, 0, 0, 0, 0, 2643, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3288, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 3034, 3302, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 3050, 0,
	0, 0, 0, 0, 0, 3314, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	3049, 3039, 3037, 3041, 3043, 3033, 3035, 3051, 3053, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 3045, 3047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 1865, 0, 0, 1865, 3369, 3369,
	1865, 0, 0, 0, 1865, 0, 1878, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 2773, 2773, 2773,
	0, 0, 0, 0, 1865, 1867, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 1882, 0, 0, 0,
	3407, 0, 0, 0, 0, 0, 0, 1865, 1865, 1865,
	1865, 1865, 0, 0, 0, 0, 0, 1865, 0, 1865,
	0, 0, 3369, 3369, 3369, 3369, 3369, 3369, 3369, 3369,
	3369, 3369, 3369, 3369, 3369, 3369, 3369, 3369, 3369, 3369,
	3369, 3369, 0, 0, 0, 3369, 0, 0, 1865, 1865,
	0, 0, 1858, 0, 0, 0, 0, 3052, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 3058, 0, 1865, 0, 0, 0, 0,
	0, 0, 3044, 3046, 1884, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 3591, 3592, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 2639, 0, 0,
	0, 2640, 0, 0, 0, 0, 0, 0, 0, 1184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 269, 269, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 269, 269, 0, 0,
	269, 269, 0, 0, 0, 0, 1865, 1865, 0, 0,
	0, 1865, 1865, 0, 0, 1865, 1865, 0, 0, 835,
	1865, 0, 0, 737, 1865, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 269, 0, 0, 0, 0, 0, 758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 2513, 0, 0,
	0, 0, 0, 3782, 3783, 0, 0, 3786, 0, 0,
	0, 3789, 0, 0, 0, 0, 742, 0, 0, 743,
	3793, 0, 0, 0, 0, 0, 0, 0, 0, 3800,
	1275, 0, 0, 0, 3407, 0, 767, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 0, 0, 0, 0, 0, 0, 3836,
	3837, 269, 3838, 3839, 3840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3846, 0, 0, 0, 3848, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 0, 0, 0, 0, 0, 3877, 3878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3889, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 1865, 1865, 0, 0, 0,
	3898, 0, 0, 0, 0, 1865, 1865, 3369, 2762, 0,
	0, 0, 0, 0, 1865, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 764, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3369, 2762, 0, 0, 0, 0,
	0, 0, 0, 765, 0, 746, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 1865,
	2762, 0, 0, 3954, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 3969, 0,
	0, 1829, 1830, 0, 747, 0, 0, 0, 0, 762,
	763, 760, 0, 0, 0, 0, 0, 755, 0, 0,
	748, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 1832, 4000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2000, 0, 1271,
	0, 0, 0, 269, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 749, 0, 756, 1831, 4021, 4022, 269,
	2000, 269, 0, 750, 0, 0, 1851, 0, 0, 835,
	0, 0, 3369, 0, 0, 1848, 835, 751, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 0, 1865, 3369,
	0, 0, 1865, 0, 269, 0, 0, 753, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3369, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 3784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 1879, 0, 1837, 0, 0, 0, 0, 1978, 0,
	1865, 0, 0, 0, 0, 0, 0, 4122, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4165, 4166, 0, 0, 0, 0, 4170, 4171,
	0, 0, 0, 4174, 4175, 0, 0, 0, 0, 0,
	1852, 4179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4183, 0, 1854, 1855, 1856, 1857, 0, 1865,
	0, 0, 0, 0, 1837, 0, 0, 0, 4188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 1865, 0, 0, 835, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1275, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 269, 0, 1868, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 1852, 0, 1858, 0, 0, 0, 0, 0, 0,
	1275, 0, 269, 0, 269, 0, 0, 1275, 0, 0,
	269, 0, 0, 0, 0, 0, 1853, 1099, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 1878, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1867, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 269,
	0, 1275, 4328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 269, 0, 269, 0, 269, 0, 269,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 269, 269, 269, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4443, 4444, 4445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2513, 0,
	0, 4454, 4455, 0, 0, 265, 265, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4463,
	4466, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 1829, 1830, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 1860, 0, 0, 0, 0,
	0, 0, 1832, 4193, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 4520, 1860, 0, 0, 1831, 0, 0,
	0, 1832, 4528, 0, 0, 1271, 0, 1851, 0, 1275,
	1879, 1275, 0, 0, 0, 0, 1848, 4536, 0, 0,
	1099, 1271, 0, 0, 0, 0, 1275, 1885, 0, 0,
	0, 0, 0, 0, 4545, 269, 1831, 4547, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 2064, 0, 0,
	0, 0, 0, 0, 0, 1848, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 269, 0, 0, 0, 269, 0,
	269, 0, 0, 1854, 1855, 1856, 1857, 269, 269, 0,
	0, 0, 0, 1837, 0, 0, 0, 269, 0, 0,
	1275, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	4667, 1852, 0, 0, 4671, 0, 0, 1846, 1847, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 1275, 1882, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 835, 0, 0, 0, 0, 4739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 269, 0, 835, 0, 0, 0, 0,
	0, 0, 269, 0, 1858, 0, 2513, 0, 0, 0,
	0, 0, 0, 0, 0, 4466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 1275, 0, 1275, 1099, 1275, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 1275, 1275, 0, 1884, 0, 269, 0,
	0, 0, 0, 1871, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	1275, 1275, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 4858, 4858, 4858, 0, 0, 0, 0, 0, 0,
	269, 269, 269, 269, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4882, 0, 0,
	0, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 4858, 0, 0, 0, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 2064,
	2064, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 1325, 0, 1325, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1831, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1409, 0, 0, 0,
	0, 1879, 1519, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 4858, 5014, 0, 1137, 112, 0, 1831, 0, 5018,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 1275, 0, 0,
	0, 1837, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 1658,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 112,
	1859, 1861, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 1271, 1837, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 1852, 2000,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 1774, 0, 0, 0, 1074, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 0, 1878, 1868, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 269, 269, 0, 0,
	0, 1852, 0, 0, 1867, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 269,
	269, 1858, 0, 269, 0, 0, 0, 0, 1882, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 1853, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	1275, 0, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 1275, 0, 1275, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 2016, 1884, 0, 0, 0,
	0, 0, 1275, 0, 269, 1869, 0, 0, 0, 0,
	0, 2027, 0, 1519, 1271, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 3326, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 0,
	0, 269, 0, 752, 0, 0, 0, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 736, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	271, 271, 271, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 737, 0, 271,
	0, 0, 0, 1831, 0, 0, 0, 0, 738, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 271, 0, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 741, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	742, 0, 2309, 743, 0, 0, 2316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2329, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 835, 2341, 0, 2341, 0, 0, 1859,
	1861, 0, 2348, 0, 0, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 1275, 0, 0, 112,
	0, 112, 1868, 112, 0, 0, 0, 2316, 0, 0,
	2376, 1275, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 754, 0, 0, 0, 0, 0, 1275,
	0, 2396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 1275, 2412, 0, 2414, 0, 2416,
	0, 2418, 0, 2419, 0, 1094, 112, 112, 0, 0,
	0, 0, 0, 0, 1878, 0, 2064, 0, 0, 0,
	1275, 0, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 269, 0, 1867, 0, 0, 0, 112, 0, 112,
	0, 0, 0, 0, 1882, 2446, 2447, 2448, 745, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 765, 0, 746,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 269, 0, 0, 0,
	1858, 0, 0, 0, 112, 0, 269, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 269, 0, 0, 0,
	766, 0, 0, 1853, 0, 0, 0, 0, 747, 0,
	0, 0, 0, 762, 763, 760, 1271, 1829, 1830, 0,
	0, 755, 0, 0, 748, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 1884, 0, 0, 0, 0, 749, 0, 756,
	0, 0, 0, 1885, 0, 0, 0, 750, 0, 0,
	0, 1074, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 751, 1851, 0, 0, 0, 759, 1275, 0, 0,
	0, 1848, 1899, 0, 0, 0, 0, 0, 0, 0,
	768, 1275, 0, 1275, 0, 0, 0, 1275, 0, 0,
	1905, 753, 0, 0, 1911, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 1275, 2830, 0, 3325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 1275, 0, 1275, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 1998, 0, 2001, 0, 112, 0,
	0, 0, 1275, 2881, 269, 1275, 1325, 0, 0, 0,
	1325, 0, 1325, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 2329,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 271, 0,
	271, 271, 0, 2064, 271, 0, 0, 0, 269, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2064,
	2064, 271, 1418, 271, 271, 0, 0, 271, 271, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 2064, 2064,
	0, 0, 0, 0, 0, 1829, 1830, 0, 0, 0,
	0, 1519, 0, 0, 269, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 269, 0, 0, 0, 1860, 0,
	0, 2064, 0, 0, 0, 1832, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 271, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 1275,
	0, 1885, 1853, 0, 0, 1418, 0, 0, 0, 0,
	1831, 0, 1418, 271, 271, 2316, 0, 0, 0, 0,
	1851, 0, 0, 0, 2329, 0, 0, 0, 1418, 1848,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3171, 0,
	0, 0, 0, 0, 0, 3256, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3182, 0, 3185,
	275, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 3217, 1519, 3219, 1519, 1859, 1861, 0, 0,
	0, 3225, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1094, 0, 1094, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 827, 0, 0, 0, 1325, 0, 1275,
	0, 0, 1275, 0, 0, 3254, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 1275, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 1275,
	1275, 1275, 0, 0, 0, 0, 1275, 1275, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 1275, 0, 0, 1153, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 1858, 0, 1074,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 1275, 0, 0, 2000, 0, 0, 0, 0, 0,
	1853, 1418, 2064, 0, 0, 0, 271, 271, 271, 2000,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 2581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 1094, 0, 0, 271, 1884,
	0, 0, 0, 2000, 2000, 1905, 0, 0, 0, 1905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 269, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 1275, 1275, 0, 1275, 0, 0, 0,
	0, 0, 0, 1275, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 1275, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 1849, 1845, 1275, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 2001, 0,
	0, 0, 0, 3455, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 1325, 0, 0, 0, 1519, 1519,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 3502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 1418, 1418, 271, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 1275, 1275, 0, 0, 0,
	0, 3557, 3559, 0, 0, 2329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 1275,
	1275, 1275, 1275, 1275, 1275, 0, 0, 0, 0, 271,
	0, 271, 0, 0, 0, 1275, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 1418, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 2000, 0, 1275, 0, 0, 1418, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 271, 0, 3670, 271, 2064, 0, 3674, 0,
	0, 0, 0, 1418, 0, 1418, 1418, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 1275, 0,
	1275, 0, 0, 112, 0, 0, 112, 0, 112, 271,
	271, 0, 271, 0, 271, 0, 271, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 112, 0,
	271, 271, 271, 271, 112, 0, 0, 0, 0, 2064,
	0, 0, 0, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 857, 3767, 0, 1519, 0, 858, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 1275, 1275, 1275, 0, 0, 0, 0,
	0, 0, 0, 3780, 0, 1577, 0, 859, 0, 876,
	112, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 860, 0, 0, 0, 0, 861,
	0, 0, 0, 0, 1275, 0, 0, 1275, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 885, 0, 0, 0, 0, 0, 0, 862, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 1418,
	0, 0, 883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 1577, 864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 2581, 0, 1418,
	767, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 1275, 271, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 886, 0, 1275, 1275, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 1275, 0, 0, 1275,
	0, 0, 1578, 1275, 0, 0, 0, 0, 271, 0,
	0, 271, 0, 1275, 0, 271, 0, 271, 0, 0,
	0, 0, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 865, 1578, 0,
	0, 0, 0, 0, 0, 1578, 0, 0, 867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 868,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 877, 271,
	1258, 0, 0, 0, 0, 0, 0, 0, 2329, 1578,
	766, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 854, 0, 878, 0, 2329, 0, 0,
	0, 0, 0, 0, 869, 0, 271, 1418, 4076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4086, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	875, 0, 0, 2329, 0, 0, 0, 0, 4104, 271,
	0, 0, 827, 0, 0, 0, 0, 870, 0, 827,
	0, 871, 890, 0, 889, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 873, 271, 0, 0, 0, 882, 0, 0, 271,
	0, 0, 891, 0, 888, 0, 0, 0, 0, 0,
	768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4150, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 1418, 112, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 271, 1275, 271, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 271, 271,
	271, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 1258, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 112, 112,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 4306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	2329, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 0, 1577, 0, 1577, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 2329, 0, 0, 1577,
	0, 1577, 1577, 1577, 0, 0, 4403, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 1578, 0, 1876, 0, 1877,
	0, 1418, 0, 0, 1416, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 112, 0, 0, 0, 1852,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 1258, 1258, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 4505, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 271, 271, 1867, 0, 0, 0, 1578,
	0, 1578, 0, 1578, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 1578, 0, 271, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2329, 0, 1578, 0, 1578, 1578,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 271, 271, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 1418, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4631, 1519,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 1418, 0, 1418, 1416,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 271,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 1418, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 112, 0, 0,
	0, 271, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 3322, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1415,
	1418, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4745, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 271,
	1418, 271, 0, 0, 0, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 1415, 0, 1832, 0, 0, 271, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 4797,
	1831, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 1418, 0, 0, 0, 827, 0,
	112, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 1258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4840, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 1578, 0, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 1418, 0, 0,
	1578, 0, 0, 271, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 1871, 271, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 1418, 1418, 1418, 0, 0, 0,
	0, 1418, 1418, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 271, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 1415, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 3321, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2581, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1418,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 1418, 1415, 0, 271, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 1416, 0, 0, 0, 112, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	1418, 1418, 1577, 0, 1577, 0, 0, 0, 1415, 0,
	0, 0, 1416, 0, 0, 827, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1577, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 1416, 0,
	1418, 271, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 1418, 1418, 1418, 1418, 1418,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 1577, 0, 1577, 0, 0, 112,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 1415, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 1418, 0, 1418, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 271,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 1578, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	0, 1578, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 1578, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1418,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 1578, 1418, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 271, 271, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	1416, 0, 0, 1416, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1830, 1852, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 1416, 0, 0,
	271, 1831, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1882, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 1418, 0,
	1577, 0, 0, 1577, 0, 0, 0, 0, 1418, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 271, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 1884, 0, 0, 0, 1859, 1861, 0,
	1577, 1577, 1577, 0, 0, 0, 0, 1577, 1577, 1577,
	0, 0, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 1577,
	0, 0, 271, 0, 0, 1415, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3320, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 1415, 0, 1415, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 1577, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 1578, 1578,
	0, 0, 0, 0, 1578, 1578, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 1577, 1577, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2640, 0, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 1577, 1577, 1577, 1577, 1577, 0, 0, 0, 0,
	0, 1416, 1416, 0, 1416, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 1578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 1577, 1577, 1577, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 1578, 1578,
	1578, 1578, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 1415, 0, 0, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 1578, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 1578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 1419, 286, 287, 1420,
	1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 1428, 652, 298, 299, 300,
	301, 302, 303, 1429, 1430, 0, 304, 653, 654, 655,
	1431, 305, 306, 656, 1432, 1499, 1433, 307, 308, 309,
	310, 311, 312, 313, 0, 1434, 315, 316, 317, 314,
	318, 1435, 319, 0, 320, 321, 322, 323, 324, 325,
	1436, 326, 327, 328, 1216, 329, 330, 331, 1437, 1438,
	1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 1444, 342, 338, 340, 1445,
	343, 341, 344, 1446, 345, 346, 347, 1447, 1448, 348,
	349, 350, 1449, 351, 352, 353, 1450, 354, 355, 356,
	1451, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 1452, 276,
	1453, 1578, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 1578, 374, 1454, 375, 376, 377, 1455, 1456, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1457, 390, 665, 1458, 666, 391,
	1459, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 1460, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1461, 1218, 407, 670,
	671, 1462, 672, 1463, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1464, 420, 422, 421, 1465, 423, 674,
	1223, 424, 425, 1224, 1466, 426, 427, 428, 429, 430,
	431, 434, 1467, 1468, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1469, 278, 1227, 478, 479, 480, 1470,
	675, 481, 676, 483, 484, 1471, 0, 485, 0, 1472,
	1473, 487, 488, 489, 1474, 1475, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1476, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 1477, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 1478, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 1479, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1480, 570, 571,
	569, 572, 573, 574, 1481, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 1482, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	1483, 603, 604, 0, 600, 591, 1484, 605, 606, 607,
	608, 609, 610, 611, 612, 1485, 613, 688, 689, 690,
	691, 1486, 622, 1487, 614, 615, 616, 692, 617, 693,
	1488, 618, 619, 620, 621, 0, 623, 624, 1489, 1490,
	625, 626, 627, 629, 630, 628, 631, 1491, 632, 1492,
	0, 633, 634, 635, 694, 695, 696, 1493, 637, 636,
	638, 639, 697, 640, 641, 1494, 1495, 1496, 1497, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 2808, 0, 0, 0, 0, 0, 0,
	0, 2809, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	3807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3809, 279, 281, 280, 282, 283, 284, 285,
	1419, 286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424,
	1425, 1426, 1427, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 1428,
	652, 298, 299, 300, 301, 302, 303, 1429, 1430, 0,
	304, 653, 654, 655, 1431, 305, 306, 656, 1432, 1499,
	1433, 307, 308, 309, 310, 311, 312, 313, 0, 1434,
	315, 316, 317, 314, 318, 1435, 319, 0, 320, 321,
	322, 323, 324, 325, 1436, 326, 327, 328, 1216, 329,
	330, 331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 1444,
	342, 338, 340, 1445, 343, 341, 344, 1446, 345, 346,
	347, 1447, 1448, 348, 349, 350, 1449, 351, 352, 353,
	1450, 354, 355, 356, 1451, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 1452, 276, 1453, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 1454, 375, 376,
	377, 1455, 1456, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1457, 390,
	665, 1458, 666, 391, 1459, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 1460, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	1461, 1218, 407, 670, 671, 1462, 672, 1463, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1464, 420, 422,
	421, 1465, 423, 674, 1223, 424, 425, 1224, 1466, 426,
	427, 428, 429, 430, 431, 434, 1467, 1468, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1469, 278, 1227,
	478, 479, 480, 1470, 675, 481, 676, 483, 484, 1471,
	0, 485, 0, 1472, 1473, 487, 488, 489, 1474, 1475,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 1476,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 1477, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 1478, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 1479, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 1480, 570, 571, 569, 572, 573, 574, 1481, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 1482, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 1483, 603, 604, 0, 600, 591,
	1484, 605, 606, 607, 608, 609, 610, 611, 612, 1485,
	613, 688, 689, 690, 691, 1486, 622, 1487, 614, 615,
	616, 692, 617, 693, 1488, 618, 619, 620, 621, 0,
	623, 624, 1489, 1490, 625, 626, 627, 629, 630, 628,
	631, 1491, 632, 1492, 0, 633, 634, 635, 694, 695,
	696, 1493, 637, 636, 638, 639, 697, 640, 641, 1494,
	1495, 1496, 1497, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4223, 279, 281,
	280, 282, 283, 284, 285, 1419, 286, 287, 1420, 1421,
	1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 1428, 652, 298, 299, 300, 301,
	302, 303, 1429, 1430, 0, 304, 653, 654, 655, 1431,
	305, 306, 656, 1432, 1499, 1433, 307, 308, 309, 310,
	311, 312, 313, 0, 1434, 315, 316, 317, 314, 318,
	1435, 319, 0, 320, 321, 322, 323, 324, 325, 1436,
	326, 327, 328, 1216, 329, 330, 331, 1437, 1438, 1440,
	1439, 1441, 1442, 1443, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 1444, 342, 338, 340, 1445, 343,
	341, 344, 1446, 345, 346, 347, 1447, 1448, 348, 349,
	350, 1449, 351, 352, 353, 1450, 354, 355, 356, 1451,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 1452, 276, 1453,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 1454, 375, 376, 377, 1455, 1456, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1457, 390, 665, 1458, 666, 391, 1459,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 1460, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1461, 1218, 407, 670, 671,
	1462, 672, 1463, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1464, 420, 422, 421, 1465, 423, 674, 1223,
	424, 425, 1224, 1466, 426, 427, 428, 429, 430, 431,
	434, 1467, 1468, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1469, 278, 1227, 478, 479, 480, 1470, 675,
	481, 676, 483, 484, 1471, 0, 485, 0, 1472, 1473,
	487, 488, 489, 1474, 1475, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1476, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	1477, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 1478, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1479, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1480, 570, 571, 569,
	572, 573, 574, 1481, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 1482, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 1483,
	603, 604, 0, 600, 591, 1484, 605, 606, 607, 608,
	609, 610, 611, 612, 1485, 613, 688, 689, 690, 691,
	1486, 622, 1487, 614, 615, 616, 692, 617, 693, 1488,
	618, 619, 620, 621, 0, 623, 624, 1489, 1490, 625,
	626, 627, 629, 630, 628, 631, 1491, 632, 1492, 0,
	633, 634, 635, 694, 695, 696, 1493, 637, 636, 638,
	639, 697, 640, 641, 1494, 1495, 1496, 1497, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4221, 279, 281, 280, 282, 283, 284, 285,
	1419, 286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424,
	1425, 1426, 1427, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 1428,
	652, 298, 299, 300, 301, 302, 303, 1429, 1430, 0,
	304, 653, 654, 655, 1431, 305, 306, 656, 1432, 1499,
	1433, 307, 308, 309, 310, 311, 312, 313, 0, 1434,
	315, 316, 317, 314, 318, 1435, 319, 0, 320, 321,
	322, 323, 324, 325, 1436, 326, 327, 328, 1216, 329,
	330, 331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 1444,
	342, 338, 340, 1445, 343, 341, 344, 1446, 345, 346,
	347, 1447, 1448, 348, 349, 350, 1449, 351, 352, 353,
	1450, 354, 355, 356, 1451, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 1452, 276, 1453, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 1454, 375, 376,
	377, 1455, 1456, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1457, 390,
	665, 1458, 666, 391, 1459, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 1460, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	1461, 1218, 407, 670, 671, 1462, 672, 1463, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1464, 420, 422,
	421, 1465, 423, 674, 1223, 424, 425, 1224, 1466, 426,
	427, 428, 429, 430, 431, 434, 1467, 1468, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1469, 278, 1227,
	478, 479, 480, 1470, 675, 481, 676, 483, 484, 1471,
	0, 485, 0, 1472, 1473, 487, 488, 489, 1474, 1475,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 1476,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 1477, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 1478, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 1479, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 1480, 570, 571, 569, 572, 573, 574, 1481, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 1482, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 1483, 603, 604, 0, 600, 591,
	1484, 605, 606, 607, 608, 609, 610, 611, 612, 1485,
	613, 688, 689, 690, 691, 1486, 622, 1487, 614, 615,
	616, 692, 617, 693, 1488, 618, 619, 620, 621, 0,
	623, 624, 1489, 1490, 625, 626, 627, 629, 630, 628,
	631, 1491, 632, 1492, 0, 633, 634, 635, 694, 695,
	696, 1493, 637, 636, 638, 639, 697, 640, 641, 1494,
	1495, 1496, 1497, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4449, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4315, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4151,
	279, 281, 280, 282, 283, 284, 285, 1419, 286, 287,
	1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 1428, 652, 298, 299,
	300, 301, 302, 303, 1429, 1430, 0, 304, 653, 654,
	655, 1431, 305, 306, 656, 1432, 1499, 1433, 307, 308,
	309, 310, 311, 312, 313, 0, 1434, 315, 316, 317,
	314, 318, 1435, 319, 0, 320, 321, 322, 323, 324,
	325, 1436, 326, 327, 328, 1216, 329, 330, 331, 1437,
	1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 1444, 342, 338, 340,
	1445, 343, 341, 344, 1446, 345, 346, 347, 1447, 1448,
	348, 349, 350, 1449, 351, 352, 353, 1450, 354, 355,
	356, 1451, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 1452,
	276, 1453, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 1454, 375, 376, 377, 1455, 1456,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1457, 390, 665, 1458, 666,
	391, 1459, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 1460, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1461, 1218, 407,
	670, 671, 1462, 672, 1463, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1464, 420, 422, 421, 1465, 423,
	674, 1223, 424, 425, 1224, 1466, 426, 427, 428, 429,
	430, 431, 434, 1467, 1468, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1469, 278, 1227, 478, 479, 480,
	1470, 675, 481, 676, 483, 484, 1471, 0, 485, 0,
	1472, 1473, 487, 488, 489, 1474, 1475, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1476, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 1477, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 1478,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1479, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1480, 570,
	571, 569, 572, 573, 574, 1481, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 1482, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 1483, 603, 604, 0, 600, 591, 1484, 605, 606,
	607, 608, 609, 610, 611, 612, 1485, 613, 688, 689,
	690, 691, 1486, 622, 1487, 614, 615, 616, 692, 617,
	693, 1488, 618, 619, 620, 621, 0, 623, 624, 1489,
	1490, 625, 626, 627, 629, 630, 628, 631, 1491, 632,
	1492, 0, 633, 634, 635, 694, 695, 696, 1493, 637,
	636, 638, 639, 697, 640, 641, 1494, 1495, 1496, 1497,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3825, 279,
	281, 280, 282, 283, 284, 285, 1419, 286, 287, 1420,
	1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 1428, 652, 298, 299, 300,
	301, 302, 303, 1429, 1430, 0, 304, 653, 654, 655,
	1431, 305, 306, 656, 1432, 1499, 1433, 307, 308, 309,
	310, 311, 312, 313, 0, 1434, 315, 316, 317, 314,
	318, 1435, 319, 0, 320, 321, 322, 323, 324, 325,
	1436, 326, 327, 328, 1216, 329, 330, 331, 1437, 1438,
	1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 1444, 342, 338, 340, 1445,
	343, 341, 344, 1446, 345, 346, 347, 1447, 1448, 348,
	349, 350, 1449, 351, 352, 353, 1450, 354, 355, 356,
	1451, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 1452, 276,
	1453, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 1454, 375, 376, 377, 1455, 1456, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1457, 390, 665, 1458, 666, 391,
	1459, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 1460, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1461, 1218, 407, 670,
	671, 1462, 672, 1463, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1464, 420, 422, 421, 1465, 423, 674,
	1223, 424, 425, 1224, 1466, 426, 427, 428, 429, 430,
	431, 434, 1467, 1468, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1469, 278, 1227, 478, 479, 480, 1470,
	675, 481, 676, 483, 484, 1471, 0, 485, 0, 1472,
	1473, 487, 488, 489, 1474, 1475, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1476, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 1477, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 1478, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 1479, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1480, 570, 571,
	569, 572, 573, 574, 1481, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 1482, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	1483, 603, 604, 0, 600, 591, 1484, 605, 606, 607,
	608, 609, 610, 611, 612, 1485, 613, 688, 689, 690,
	691, 1486, 622, 1487, 614, 615, 616, 692, 617, 693,
	1488, 618, 619, 620, 621, 0, 623, 624, 1489, 1490,
	625, 626, 627, 629, 630, 628, 631, 1491, 632, 1492,
	0, 633, 634, 635, 694, 695, 696, 1493, 637, 636,
	638, 639, 697, 640, 641, 1494, 1495, 1496, 1497, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3643, 279, 281,
	280, 282, 283, 284, 285, 1419, 286, 287, 1420, 1421,
	1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 1428, 652, 298, 299, 300, 301,
	302, 303, 1429, 1430, 0, 304, 653, 654, 655, 1431,
	305, 306, 656, 1432, 1499, 1433, 307, 308, 309, 310,
	311, 312, 313, 0, 1434, 315, 316, 317, 314, 318,
	1435, 319, 0, 320, 321, 322, 323, 324, 325, 1436,
	326, 327, 328, 1216, 329, 330, 331, 1437, 1438, 1440,
	1439, 1441, 1442, 1443, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 1444, 342, 338, 340, 1445, 343,
	341, 344, 1446, 345, 346, 347, 1447, 1448, 348, 349,
	350, 1449, 351, 352, 353, 1450, 354, 355, 356, 1451,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 1452, 276, 1453,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 1454, 375, 376, 377, 1455, 1456, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1457, 390, 665, 1458, 666, 391, 1459,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 1460, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1461, 1218, 407, 670, 671,
	1462, 672, 1463, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1464, 420, 422, 421, 1465, 423, 674, 1223,
	424, 425, 1224, 1466, 426, 427, 428, 429, 430, 431,
	434, 1467, 1468, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1469, 278, 1227, 478, 479, 480, 1470, 675,
	481, 676, 483, 484, 1471, 0, 485, 0, 1472, 1473,
	487, 488, 489, 1474, 1475, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1476, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	1477, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 1478, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1479, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1480, 570, 571, 569,
	572, 573, 574, 1481, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 1482, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 1483,
	603, 604, 0, 600, 591, 1484, 605, 606, 607, 608,
	609, 610, 611, 612, 1485, 613, 688, 689, 690, 691,
	1486, 622, 1487, 614, 615, 616, 692, 617, 693, 1488,
	618, 619, 620, 621, 0, 623, 624, 1489, 1490, 625,
	626, 627, 629, 630, 628, 631, 1491, 632, 1492, 0,
	633, 634, 635, 694, 695, 696, 1493, 637, 636, 638,
	639, 697, 640, 641, 1494, 1495, 1496, 1497, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2663, 279, 281, 280,
	282, 283, 284, 285, 1419, 286, 287, 1420, 1421, 1422,
	0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 1428, 652, 298, 299, 300, 301, 302,
	303, 1429, 1430, 0, 304, 653, 654, 655, 1431, 305,
	306, 656, 1432, 1499, 1433, 307, 308, 309, 310, 311,
	312, 313, 0, 1434, 315, 316, 317, 314, 318, 1435,
	319, 0, 320, 321, 322, 323, 324, 325, 1436, 326,
	327, 328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439,
	1441, 1442, 1443, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 1444, 342, 338, 340, 1445, 343, 341,
	344, 1446, 345, 346, 347, 1447, 1448, 348, 349, 350,
	1449, 351, 352, 353, 1450, 354, 355, 356, 1451, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 1452, 276, 1453, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 1454, 375, 376, 377, 1455, 1456, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1457, 390, 665, 1458, 666, 391, 1459, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 1460, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1461, 1218, 407, 670, 671, 1462,
	672, 1463, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1464, 420, 422, 421, 1465, 423, 674, 1223, 424,
	425, 1224, 1466, 426, 427, 428, 429, 430, 431, 434,
	1467, 1468, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1469, 278, 1227, 478, 479, 480, 1470, 675, 481,
	676, 483, 484, 1471, 0, 485, 0, 1472, 1473, 487,
	488, 489, 1474, 1475, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1476, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 1477,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 1478, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	1479, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1480, 570, 571, 569, 572,
	573, 574, 1481, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	1482, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 1483, 603,
	604, 0, 600, 591, 1484, 605, 606, 607, 608, 609,
	610, 611, 612, 1485, 613, 688, 689, 690, 691, 1486,
	622, 1487, 614, 615, 616, 692, 617, 693, 1488, 618,
	619, 620, 621, 0, 623, 624, 1489, 1490, 625, 626,
	627, 629, 630, 628, 631, 1491, 632, 1492, 0, 633,
	634, 635, 694, 695, 696, 1493, 637, 636, 638, 639,
	697, 640, 641, 1494, 1495, 1496, 1497, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 1410, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2287, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 1419, 286, 287, 1420,
	1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 1428, 652, 298, 299, 300,
	301, 302, 303, 1429, 1430, 0, 304, 653, 654, 655,
	1431, 305, 306, 656, 1432, 1499, 1433, 307, 308, 309,
	310, 311, 312, 313, 0, 1434, 315, 316, 317, 314,
	318, 1435, 319, 0, 320, 321, 322, 323, 324, 325,
	1436, 326, 327, 328, 1216, 329, 330, 331, 1437, 1438,
	1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 1444, 342, 338, 340, 1445,
	343, 341, 344, 1446, 345, 346, 347, 1447, 1448, 348,
	349, 350, 1449, 351, 352, 353, 1450, 354, 355, 356,
	1451, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 1452, 276,
	1453, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 1454, 375, 376, 377, 1455, 1456, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1457, 390, 665, 1458, 666, 391,
	1459, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 1460, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1461, 1218, 407, 670,
	671, 1462, 672, 1463, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1464, 420, 422, 421, 1465, 423, 674,
	1223, 424, 425, 1224, 1466, 426, 427, 428, 429, 430,
	431, 434, 1467, 1468, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1469, 278, 1227, 478, 479, 480, 1470,
	675, 481, 676, 483, 484, 1471, 0, 485, 0, 1472,
	1473, 487, 488, 489, 1474, 1475, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1476, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 1477, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 1478, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 1479, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1480, 570, 571,
	569, 572, 573, 574, 1481, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 1482, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	1483, 603, 604, 0, 600, 591, 1484, 605, 606, 607,
	608, 609, 610, 611, 612, 1485, 613, 688, 689, 690,
	691, 1486, 622, 1487, 614, 615, 616, 692, 617, 693,
	1488, 618, 619, 620, 621, 0, 623, 624, 1489, 1490,
	625, 626, 627, 629, 630, 628, 631, 1491, 632, 1492,
	0, 633, 634, 635, 694, 695, 696, 1493, 637, 636,
	638, 639, 697, 640, 641, 1494, 1495, 1496, 1497, 642,
	643, 698, 644, 645, 646, 2638, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 2635, 286, 287, 0, 0, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 2636, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 2634, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 2637, 0, 0, 0, 0, 0, 0, 0,
	1135, 2633, 0, 1095, 1133, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	238, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 240,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 1649, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 232, 642, 643, 698, 644, 645, 646, 1109, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 1910, 1908,
	0, 0, 1133, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 238, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 240, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 1649, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 232, 642, 643, 698,
	644, 645, 646, 1109, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 0, 1910, 3276, 0, 0, 1133, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	238, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 240,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 1649, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 232, 642, 643, 698, 644, 645, 646, 1109, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 1910, 1908,
	0, 0, 1133, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 2769, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 2774, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 2770, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 2771, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 2683, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 2681, 0, 2680, 1133, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	1135, 2678, 0, 2677, 1133, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 0, 0, 0, 0, 0, 0, 0, 1135, 2675,
	0, 2674, 1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 2672, 0, 1749,
	1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 1748, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 1098, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 1113, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 4809, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 1113, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 2515, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 2514, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 4539, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 1113, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 1113, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 4116, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	1979, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 3803,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 1979, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2774, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 1135, 1908, 0, 2779, 1133, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 2777, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 2765, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 2753, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 2751, 0, 2742, 2749, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 2745, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 2746, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 2747, 444,
	2744, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 2748,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 2743, 646, 1109, 0,
	0, 0, 2739, 0, 2742, 2749, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 2745, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 2746, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 2747, 444, 2744,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 2748, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 2743, 646, 1109, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 0,
	0, 0, 0, 0, 1916, 0, 1135, 0, 0, 0,
	1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2494, 286, 287, 0, 0,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 2456, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 2429, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 1754, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 1683, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 1678, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 1665, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 1660, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 1561, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1560, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	1555, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1554, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 1548,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 1510, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 1514, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 1515, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 1513, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 1359, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 4857, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 4856, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 4855, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 4857, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	4856, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 4468,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 4469, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 4467, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 3243, 3244,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 3241, 3242, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 2502, 2503, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 0, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 2761, 0, 0,
	0, 0, 0, 0, 2759, 2760, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 0, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	3236, 3237, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0,
	0, 0, 0, 2163, 2164, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 0, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 4857, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 0, 1178, 0, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 0, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 4856, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 1095, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	1174, 0, 304, 653, 654, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1259,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	278, 1227, 478, 479, 480, 0, 1179, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 1265, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 1267,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 238, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 0,
	600, 591, 240, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	1649, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 232, 642, 643, 698, 644, 645,
	646, 1273, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 1263,
	0, 2003, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1259, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 1267, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 238, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 240, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 1649, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 232, 642, 643,
	698, 644, 645, 646, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3400, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 2003, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	1174, 0, 304, 653, 654, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1259,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	278, 1227, 478, 479, 480, 0, 1179, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 1265, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 1267,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1255, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1263,
	0, 1261, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 1174, 0, 304,
	653, 654, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1259, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 278, 1227, 478,
	479, 480, 0, 1179, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 1265, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 1267, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 1263, 0, 1261, 0,
	1175, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	1174, 0, 304, 653, 654, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1259,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	278, 1227, 478, 479, 480, 0, 1179, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 1265, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 1267,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 1263,
	0, 1261, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 4285, 0, 1175, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 1174, 0, 304, 653,
	654, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 0, 1179, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 1267, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 273, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 2606, 2607,
	2608, 2625, 2626, 2627, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 2628, 0,
	647, 0, 0, 0, 0, 288, 289, 1900, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 1885, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	2618, 0, 315, 316, 317, 314, 318, 0, 319, 2614,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 2619, 2620, 2621,
	2622, 371, 372, 373, 662, 0, 0, 2613, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 2623, 2624, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 2616, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	2617, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 1884,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	1575, 2603, 2604, 2605, 2629, 2615, 2609, 0, 2611, 2612,
	2610, 2597, 2598, 2599, 2600, 2601, 2602, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 1499, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 0, 1227, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 238, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 240, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 1649, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 232, 642, 643, 698,
	644, 645, 646, 0, 1646, 233, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 193, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 1499,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 0, 1227,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 238, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	240, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 1649, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 232, 642, 643, 698, 644, 645, 646, 1575,
	1574, 233, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 193,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1575, 1574, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 1673, 0, 647, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 1499, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 0, 1227, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1575, 1574, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 3721, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 2370, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1575, 2279,
	0, 0, 0, 0, 2280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 1673, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	2278, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1575, 1574, 0, 0, 0, 0, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 1673, 0, 647, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 1499, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 0, 1227, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1095, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 1655, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 238, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	240, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 1649, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	273, 0, 232, 642, 643, 698, 644, 645, 646, 0,
	0, 233, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 193,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 273, 3150, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 2017, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 5024, 0, 1175,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 1174,
	0, 304, 653, 654, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 278,
	1227, 478, 479, 480, 0, 1179, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 273, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 3671, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	273, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 1643, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 273, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 3138, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 273, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 3828, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 925, 0, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 2357, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 833,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 923,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 831, 605, 606,
	607, 608, 609, 832, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 2062, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 836, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 0, 2068, 0, 296, 2058, 297, 2074, 0,
	2081, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 2084, 2085, 0, 0, 305, 306, 0, 0, 1499,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 1198, 337, 339, 2072, 2071, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 2070, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 2079, 2080, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1218, 407, 2065, 2066, 0, 2061, 0, 408, 409,
	1220, 0, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 0, 1227,
	478, 479, 480, 0, 0, 481, 2073, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 0, 1228, 492, 1229, 0, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 2055, 506, 507, 508, 2056, 509, 510, 511,
	0, 512, 0, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 2069, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 0, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 2067, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 2083, 594, 595, 596,
	597, 0, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 2075, 2076, 2077, 2078, 0, 622, 0, 614, 615,
	616, 0, 617, 0, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 0, 2059,
	2082, 0, 637, 636, 638, 639, 0, 640, 641, 0,
	0, 0, 0, 642, 643, 0, 644, 645, 646, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 3948, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 2049, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 833, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 3947,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 831, 605, 606, 607, 608, 609, 832,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	3946, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 826, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 2089, 286, 287,
	0, 0, 0, 0, 836, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 833,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 2088, 565, 566, 567, 568, 0, 2090,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 831, 605, 606,
	607, 608, 609, 832, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 2087, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 826, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 2040, 286, 287, 0, 0, 0, 0, 836, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 833, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 2039, 565, 566,
	567, 568, 0, 2041, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 831, 605, 606, 607, 608, 609, 832, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 2038, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	824, 0, 826, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 836, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 833, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 831, 605, 606, 607,
	608, 609, 832, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 826, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 836, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 833, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	831, 605, 606, 607, 608, 609, 832, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	826, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 836, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 833, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 2408, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	2409, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 831, 605, 606, 607, 608, 609,
	832, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 2410, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 273, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 836, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1575, 1574, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 1499, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1218, 407,
	670, 671, 0, 672, 0, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 0, 1227, 478, 479, 480,
	4041, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1575, 1574, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 1499,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 0, 1227,
	478, 479, 480, 3621, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1703,
	0, 1575, 1574, 0, 0, 0, 0, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 1499, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 1702, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 0, 1227, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 1701,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 1700, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1568, 0, 1575, 1574, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 1499,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1570, 668, 669, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 0, 1227,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1575,
	1574, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1575, 1574, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 1499, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 0, 1227, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1575, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 2934, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 3663, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 2938, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 3662, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 2937, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 3659, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 3661, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 3658,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 2936, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 3660, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 2934,
	305, 306, 656, 0, 0, 2928, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	2930, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	2938, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 2937, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 2927, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	2936, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 2935, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1780, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	1779, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 1778, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 1781, 557, 564, 565, 566, 567,
	568, 0, 1777, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	1775, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 1776, 636, 638, 639, 697, 640, 641, 1503,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1505, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1500, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1502, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 1265, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1406,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1408, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 731, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 730, 284, 285,
	719, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 722, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 728, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 724, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 718,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 719, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 722,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 723, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 724, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 719, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 722, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 723, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 724,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 719, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 722, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 4051,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 724, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 1265, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 3566, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 3108, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 3107, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 2377, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	2315, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 2322,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 2321, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 2308, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	2310, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 2272, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 1265, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1621, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1620, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1523, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1516, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1518, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1342, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1341, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1332, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1331, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1329, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1328, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1324, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1323, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 700, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 264, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 722, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 723, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 724, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 2417,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 2415, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 2413, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 2328, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 2114,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 2108, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 910, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 909, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 908, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 3662, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 4367, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1370,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	1373, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 1371, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 791, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 1374, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 787, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1370, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 1373, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 1371, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 791, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 790, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 789, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 1374, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 787, 689, 690, 691, 0, 622, 0, 614, 1372,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 709,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 708, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 707, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 3150, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 4660, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 3507, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 4257, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 4002,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 2814, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 3150, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 3147, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 2233, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	790, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 789, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	787, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 2387, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 2375, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1676, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1669, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 781, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 777, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 782, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 791, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 790, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 789, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 1654, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 787, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1627, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1626, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1611, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1609, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1604, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1581, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1579, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1566, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1528, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1508, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1376, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 790, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 789, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 787, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 1347, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1346, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 1338, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1337, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 1290, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 796, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 781, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 777,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 776,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 782, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 791,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 790, 549, 550, 551, 552, 778,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 789,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 779,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 787, 689, 690, 691, 0, 622,
	0, 614, 783, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 770, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 771,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 733, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 726, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 704, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 3691,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 790, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 789, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 787, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 3606, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 3582, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 3579, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 3531, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 3529, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	3517, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 3514, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 3118, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	771, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 2346, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 0, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1309, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 1238, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 0, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 0, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 0, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 0, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1617, 0, 1354, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 0, 297, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 1356, 332, 333, 334, 335, 336,
	0, 337, 339, 0, 0, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 1616, 0, 0, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 0,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 0, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 0, 0,
	492, 0, 0, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 0, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 0, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1357, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 0,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 0, 594, 595, 596, 597, 0, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 0, 0, 0,
	0, 0, 622, 0, 614, 615, 616, 0, 617, 0,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 0, 0, 0, 0, 637, 636,
	638, 639, 0, 640, 641, 1531, 0, 1354, 0, 642,
	643, 0, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 0, 297, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 0, 0, 0, 0, 305, 306, 0, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 1356,
	332, 333, 334, 335, 336, 0, 337, 339, 0, 0,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 0, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 0, 0, 0, 391, 0, 392, 393, 394, 395,
	396, 1530, 0, 0, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 0, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 0, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 0, 0, 492, 0, 0, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 0, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 0, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 0, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1357,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 0, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 0, 594, 595,
	596, 597, 0, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 0, 0, 0, 0, 0, 622, 0, 614,
	615, 616, 0, 617, 0, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 0,
	0, 0, 0, 637, 636, 638, 639, 0, 640, 641,
	1352, 0, 1354, 0, 642, 643, 0, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 0, 297, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 1356, 332, 333, 334, 335, 336,
	0, 337, 339, 0, 0, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 1351, 0, 0, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 0,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 0, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 0, 0,
	492, 0, 0, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 0, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 0, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1357, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 0,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 0, 594, 595, 596, 597, 0, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 0, 0, 0,
	0, 0, 622, 0, 614, 615, 616, 0, 617, 0,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 0, 0, 0, 0, 637, 636,
	638, 639, 0, 640, 641, 2128, 0, 1354, 0, 642,
	643, 0, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 0, 297, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 0, 0, 0, 0, 305, 306, 0, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 1356,
	332, 333, 334, 335, 336, 0, 337, 339, 0, 0,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 0, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 0, 0, 0, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 0, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 0, 481, 0, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 0, 0, 492, 0, 0, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 0, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 0, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 0, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1357,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 0, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 0, 594, 595,
	596, 597, 0, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 0, 0, 0, 0, 0, 622, 0, 614,
	615, 616, 0, 617, 0, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 0,
	0, 0, 0, 637, 636, 638, 639, 0, 640, 641,
	2095, 0, 1354, 0, 642, 643, 0, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 0, 297, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 1356, 332, 333, 334, 335, 336,
	0, 337, 339, 0, 0, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 0,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 0, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 0, 0,
	492, 0, 0, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 0, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 0, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1357, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 0,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 0, 594, 595, 596, 597, 0, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 0, 0, 0,
	0, 0, 622, 0, 614, 615, 616, 0, 617, 0,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 0, 0, 0, 0, 637, 636,
	638, 639, 1354, 640, 641, 0, 0, 0, 0, 642,
	643, 0, 644, 645, 646, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 0, 297, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 1356, 332, 333, 334, 335, 336,
	0, 337, 339, 0, 0, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 0,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	0, 481, 0, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 0, 0,
	492, 0, 0, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 0, 506,
	507, 508, 0, 509, 510, 511, 0, 512, 0, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 0, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 0, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1357, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 0,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 0, 594, 595, 596, 597, 0, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 0, 0, 0,
	0, 0, 622, 0, 614, 615, 616, 0, 617, 0,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 0, 0, 0, 0, 637, 636,
	638, 639, 0, 640, 641, 0, 0, 0, 0, 642,
	643, 0, 644, 645, 646, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1879, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 1866, 1860, 0, 0, 0, 0,
	1831, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	1851, 1879, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1852, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1871, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 1853, 1829, 1830,
	1879, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 1884,
	1866, 1860, 0, 0, 1871, 0, 1831, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 1851, 1879, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 4781, 1854, 1855, 1856, 1857, 0, 1869, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 4686,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1852, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 1853, 1829, 1830, 1879, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 1884, 1866, 1860, 0, 0,
	1871, 0, 1831, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 1851, 1879, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 1884, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 4640, 1854,
	1855, 1856, 1857, 0, 1869, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 4639, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 0,
	0, 0, 0, 1846, 1847, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 1852, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 1871,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 1853,
	1829, 1830, 1879, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 1884, 1866, 1860, 0, 0, 1871, 0, 1831, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1851, 1879,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 1884, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 4452, 1854, 1855, 1856, 1857, 0,
	1869, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 4281, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 1852, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 1871, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 1853, 1829, 1830, 1879, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 1884, 1866, 1860,
	0, 0, 1871, 0, 1831, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1851, 1879, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	4198, 1854, 1855, 1856, 1857, 0, 1869, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 4197, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 1852, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 1871, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 1853, 1829, 1830, 1879, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 1884, 1866, 1860, 0, 0, 1871, 0,
	1831, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	1851, 1879, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 4196, 1854, 1855, 1856,
	1857, 0, 1869, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 3833, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1852, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1871, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 1853, 1829, 1830,
	1879, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 1884,
	1866, 1860, 0, 0, 1871, 0, 1831, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 1851, 1879, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 3318, 1854, 1855, 1856, 1857, 0, 1869, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 3317,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1852, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 1853, 0, 0, 1879, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	1871, 0, 1831, 1866, 1860, 0, 0, 0, 0, 0,
	0, 1832, 1851, 0, 0, 0, 0, 0, 0, 0,
	1879, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	2196, 0, 0, 0, 0, 1848, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 3316, 1854,
	1855, 1856, 1857, 0, 1869, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 2194, 0, 0, 3315, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 1870, 0,
	0, 1880, 0, 1837, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 0,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 1868, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2195, 1858, 0, 1866, 1860, 0, 0, 1871,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 1829, 1830, 1853, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 1885,
	0, 1884, 0, 0, 0, 0, 1866, 1860, 1831, 0,
	0, 0, 0, 1871, 1832, 0, 0, 0, 1851, 0,
	0, 0, 0, 1879, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 1884, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 2193, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 3280, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 4932, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 1870, 0, 1837, 1880, 3380, 0,
	0, 0, 0, 3379, 1859, 1861, 0, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 1866, 1860, 0, 0, 1870, 0, 3251, 1880, 1832,
	0, 0, 0, 2787, 0, 1859, 1861, 1868, 1879, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 1876, 1852, 1877, 0, 1885, 0, 0, 0, 0,
	1846, 1847, 1866, 1860, 1831, 0, 0, 2786, 0, 0,
	1832, 0, 0, 0, 1851, 0, 0, 0, 1868, 1879,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 1885, 0, 0, 1878,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 1867, 0,
	0, 0, 0, 3252, 1848, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4931, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	1882, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 1853, 0,
	1870, 0, 1837, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 1876, 0, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 1853,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 1868, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 1876, 1852, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 1882, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 1866, 1860, 0,
	0, 1871, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 1885, 0, 1884, 0, 0, 0, 0, 1866, 1860,
	1831, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	1851, 0, 0, 0, 0, 1879, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 1869, 1837, 0, 4546,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 1870, 0, 1837, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 1866, 1860, 0, 0, 1870, 0, 0,
	1880, 1832, 0, 0, 0, 0, 0, 1859, 1861, 1868,
	1879, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 1876, 1852, 1877, 0, 1885, 0, 0,
	0, 0, 1846, 1847, 1866, 1860, 1831, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1851, 0, 0, 0,
	1868, 1879, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 1885, 0,
	0, 1878, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	1867, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 1092, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 1882, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	1853, 0, 1870, 0, 1837, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 1853, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 1868, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 1876,
	1852, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1853, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	1866, 1860, 1831, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 1851, 4326, 0, 0, 0, 1879, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 4024, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 1869, 1837,
	0, 4023, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 1870, 0,
	1837, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 1876, 0, 1877, 0, 0, 0,
	0, 0, 0, 1846, 1847, 1866, 1860, 0, 0, 1870,
	0, 0, 1880, 1832, 0, 0, 0, 0, 0, 1859,
	1861, 1868, 1879, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 1876, 1852, 1877, 0, 1885,
	0, 0, 0, 0, 1846, 1847, 1866, 1860, 1831, 0,
	0, 3381, 0, 0, 1832, 0, 0, 0, 1851, 0,
	0, 0, 1868, 1879, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	1885, 0, 0, 1878, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 1867, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 1882, 1837, 0, 0, 0, 0,
	0, 0, 3386, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 1853, 0, 1870, 0, 1837, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 1853, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 1868, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 1876, 1852, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 3814, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1882,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1882, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1830, 1853, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 1866, 1860,
	0, 0, 0, 0, 0, 1871, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 1829, 1830, 1853,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 1884, 0, 1866,
	1860, 1831, 0, 0, 3319, 0, 1871, 1832, 0, 0,
	0, 1851, 0, 0, 0, 0, 1879, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 1884, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 1870, 0, 1837,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 1866, 1860, 0, 0, 1870, 0,
	0, 1880, 1832, 0, 0, 0, 0, 0, 1859, 1861,
	1868, 1879, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 1876, 1852, 1877, 0, 1885, 0,
	0, 0, 0, 1846, 1847, 1866, 1860, 1831, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 1851, 0, 0,
	0, 1868, 1879, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 1885,
	0, 0, 1878, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 1867, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3346, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 1882, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 1853, 0, 1870, 0, 1837, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 1853, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 1868, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	1876, 1852, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1882, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1882,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1853, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 1866, 1860, 0,
	0, 0, 0, 0, 1871, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 1829, 1830, 1853, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 1884, 0, 0, 1860,
	1831, 0, 0, 0, 0, 1871, 1832, 0, 0, 0,
	1851, 0, 0, 0, 0, 1879, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 1884, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 2359, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 1870, 0, 1837, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 1852, 1877, 0, 0, 975, 0,
	1024, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	998, 1878, 981, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	982, 1882, 0, 0, 0, 985, 0, 0, 0, 0,
	1035, 0, 1878, 0, 0, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 0, 0, 1013, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 1025, 987, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	1853, 0, 0, 0, 0, 1022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1023, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 991, 0, 0, 0, 0, 0, 1884,
	0, 979, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	992, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1001, 999,
	1884, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	1010, 0, 0, 1030, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1032, 1021,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 986, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 0, 1017, 1018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1027, 1015, 0, 0, 0,
	0, 0, 0, 0, 1033, 1011, 0, 0, 1004, 1002,
	0, 1007, 0, 0, 0, 0, 0, 1008, 0, 0,
	977, 0, 1028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1019, 0, 1009,
	0, 0, 0, 0, 0, 1006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 0, 1012, 0, 0, 0, 0, 0, 0,
	0, 0, 990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1016,
}

var sqlPact = [...]int{
	5933, -1000, -1000, -1000, -1000, 189, -1000, -1000, 188, 187,
	186, 178, 177, 176, 175, 174, 172, 171, 166, -1000,
	-1000, -1000, -1000, -1000, -1000, 162, -1000, -1000, 159, -1000,
	157, 156, 148, -1000, -1000, 146, -1000, 145, -1000, -1000,
	-1000, -1000, 144, 142, 141, 92440, 91875, 93003, 2398, 116695,
	99767, 2080, 81717, 116130, 81152, 115565, 2254, 10037, 115000, 2842,
	140, -1000, 114435, 139, 136, 134, -1000, 113870, -1000, 2107,
	-1000, 132, -1000, 4971, 71508, 131, 130, 124, 122, 2694,
	121, -1000, 120, 119, -1000, -1000, 115, -1000, 14301, 1690,
	-1000, 114, 112, -1000, 306, 97509, 111, 110, 109, 2611,
	107, 106, 68679, 104, 103, 101, 2581, 2976, -1000, -1000,
	2125, -1000, -1000, 99, 98, 97, 95, 93, 92, 91,
	90, 89, 86, 84, 83, 81, -1000, 80, 79, 78,
	73, 71, -1000, 70, 67, 65, -1000, 64, -1000, 63,
	61, 60, 59, 58, 57, 56, 55, 53, 51, 50,
	49, 47, 41, 136076, -1000, -1000, 40, 2056, 1755, 1749,
	1748, 1747, 1741, 1045, 39, 38, 37, 36, 34, 33,
	32, 27, 26, 25, 24, 21, 20, 19, 18, 17,
	16, 15, 150, 14, 12, 11, 6, 5, 4, 2,
	2224, -1000, 1646, 999, 31736, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 125140, 117258, 0, -62, -2, -1000, 3455, 956,
	56701, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 295,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 492, 2589, 771, -1000, -1000, -1000, 113307, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2396, -35, -1000, 2119,
	-1000, -1000, -1000, -1000, -1000, 766, -1000, 2388, 2338, 276,
	2337, -1000, -1000, -1000, 3542, 2530, 3939, 3938, 3937, 3935,
	3934, 124577, 1957, 3933, 2609, 3932, 3931, 3930, 3929, 3928,
	3927, 3926, -1000, 91310, 1113, 90745, 90180, 3554, 112744, 89615,
	112179, 127398, 48585, 966, 3541, -1000, -1000, -1000, -1000, -1000,
	-1000, 117258, -1000, 1111, -1000, -1000, 3922, 2159, 765, 99202,
	-1000, -1000, 111614, 1760, -1000, -1000, -1000, 986, 1240, 34052,
	34052, 34052, 293, -1000, -1000, -1000, -1000, -1000, -1000, 3921,
	3920, 3919, 3918, 3917, -1000, -1000, 80587, 24605, 80022, 79457,
	111049, 48006, 89050, 88485, 3916, 3915, 3911, 110484, 126833, 3651,
	3648, 1099, 2115, 1522, -1000, -1000, -1000, -1000, -1000, -1000,
	-24, 73200, 3715, 117258, -1000, 288, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47427, 871, 46848, 827, 46269, 592, 109919,
	-1000, -1000, -1000, -1000, 75502, -1000, 109354, 2529, 3910, 3909,
	1212, 3908, 3427, 1911, 3906, 1945, 1346, 3904, 3897, 3896,
	3895, 3894, 3893, 3892, 1594, 108789, 3086, 1621, 108224, 1777,
	126268, 1097, 87920, 93003, 2714, 107659, 1523, 1520, -1000, -1000,
	-1000, -1000, 3217, 2960, 2951, 1331, -1000, -1000, -1000, -1000,
	60142, 6255, 5057, -1000, -1000, 12521, 107094, 63007, 93003, 93003,
	-1000, -1000, -1000, -1000, -1000, -1000, 45690, 829, 45111, 953,
	106529, -1000, -1000, 60715, 3030, -1000, -1000, -1000, -1000, -1000,
	105964, 44532, 708, 43953, 903, 117258, -1000, 3082, 2003, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2419, 1693, 3728,
	2844, 74927, 2130, 1459, 3501, 3213, 3201, 1578, 2112, 3198,
	3891, 2706, 3187, 3158, 3155, 3151, 3149, 1591, 2675, 344,
	2678, 31157, 3060, 1778, 43374, 1636, 1574, 3146, 3142, 3766,
	2089, 2113, 2139, 78892, 3889, 3886, 3472, 3139, 3138, 2897,
	3128, -1000, 3028, 1588, 285, -1000, -1000, -1000, -1000, -1000,
	-1000, 1542, -1000, -1000, -1000, -1000, -1000, 83406, -1000, -1000,
	1382, -1000, -1000, 1382, -1000, -1000, -1000, -1000, -1000, 1464,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1646, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2689, -1000, 2154, -1000, -1000, 2592, 3435,
	3435, 3435, 3539, 477, 466, -1000, 150, -1000, -1000, 135392,
	-1000, -1000, 49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164,
	2275, -1000, 764, -1000, -1000, 809, -1000, 763, 669, 588,
	-1000, -1000, -1000, -1000, -1000, -1000, 759, -1000, -1000, -1000,
	-1000, -1000, -1000, 3715, -1000, 27551, -1000, -1000, -1000, 386,
	758, 49164, -1000, -1000, 3784, 3774, 1057, -1000, 282, 1008,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3078, 754, 750, -1000, 748, 746, 745, 744,
	743, -1000, 740, -1000, 735, 722, 713, 712, 711, 707,
	706, 704, -1000, 2141, -1000, -1000, -1000, -1000, -1000, -1000,
	660, 659, 659, 659, -1000, 1083, -1000, -1000, -1000, 320,
	658, 264, 656, 652, 649, -1000, 702, 699, 698, 697,
	695, 693, 689, 678, 676, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1080, -1000, -1000, -1000, -1000, -25, 117258, -1000,
	492, -25, -1000, -1000, 675, -1000, 35789, 35789, 35789, -1000,
	-1000, 2384, 49164, -1000, 2550, -1000, -16, -16, 951, 58420,
	-1000, 55527, 951, 305, 830, 64146, -1000, 3020, -1000, -1000,
	674, 277, -1000, -1000, -1000, -1000, 25178, 3014, 117258, 117258,
	117258, 93003, 93003, 93003, 117258, 3885, 3884, 3326, 49164, -1000,
	-1000, 70943, 129088, 93566, -1000, -1000, 3632, 69242, 70379, 3073,
	129088, 3070, 128528, 3883, -1000, -1000, -1000, -1000, -1000, 3286,
	3881, 3880, 3879, -1000, 117258, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 251, 3284, -1000, -1000, 96944, 251, 3283, -1000,
	251, 3282, -1000, 96381, -1000, -1000, 2317, 3281, -1000, -1000,
	255, 3280, -1000, -1000, -1000, 253, 3279, -1000, -1000, 271,
	-93, 3278, -1000, -1000, -1000, -1000, -1000, -1000, 135392, -1000,
	-1000, -1000, 127963, -1000, 3475, -1000, 117258, -1000, 49164, -1000,
	-1000, 3629, 1684, 3495, 3575, -1000, -1000, -41, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2585, 2580, 1216, 2422, -1000,
	3356, 1950, 34052, 3415, -1000, -1000, -1000, -1000, -1000, 238,
	25178, -1000, -1000, -1000, -1000, -1000, -1000, 5071, 3277, 1586,
	-1000, 2421, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2190, 3276, -1000, 2512, 3275, 2188, -1000, -1000, 4801,
	-1000, 132750, 1423, -1000, -1000, -1000, -1000, 1926, 3273, -14,
	-1000, -1000, 2344, -1000, -1000, -1000, -1000, 2084, -1000, 1358,
	3272, -1000, 2843, 2843, 87355, 3227, 62434, 60715, 73200, -33,
	-1000, -1000, -1000, -1000, -116, -1000, 24026, 135392, -1000, -1000,
	-1000, -1000, 1813, 135392, 939, -1000, -1000, 3271, -1000, 135392,
	928, -1000, -1000, 3270, -1000, 2672, -1000, 3069, -1000, -1000,
	2482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2480,
	1065, -1000, 3878, -1000, -1000, 3877, -1000, 3873, 3872, 3871,
	-1000, 1880, 2105, 3869, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 86792, 2381, -1000, -1000, 85662, 3062, -1000, 2479,
	3574, -1000, 86227, 1091, -1000, 1043, 2477, -1000, 95818, 1046,
	2475, -1000, 3868, 3550, 2804, 1043, 2470, -1000, -1000, -1000,
	-1000, -1000, 1050, -1000, 66411, -1000, 66411, -1000, 1707, -1000,
	124014, -16, 93003, 3715, -1000, -66, -1000, -1000, -1000, 956,
	-1000, 59566, -1000, 59566, 98637, 76075, 1017, 3012, 68104, 135351,
	-1000, 1064, -1000, -1000, 135392, -1000, -1000, -1000, 2668, -1000,
	-202, 2837, -1000, 76075, 61861, 2665, -1000, 135392, -1000, -1000,
	-1000, -1000, 135392, -1000, -1000, -1000, 76075, 85662, -1000, 105399,
	85099, -1000, -1000, 1583, 2633, -1000, -1000, -1000, 76075, 1379,
	76075, 76075, 76075, -1000, 104834, -1000, -1000, 2157, 1552, 3458,
	2151, 93003, -1000, 1921, -1000, -1000, -1000, 3489, 3226, 117258,
	-1000, -1000, 3061, -1000, 72636, 95255, -1000, 94692, -1000, 94129,
	-1000, 93003, -1000, 93003, -1000, 3867, 3866, 3865, -1000, -1000,
	3864, -1000, 3862, 3481, -1000, 901, 42795, 135392, 3480, -1000,
	3860, 2096, 3060, 135392, -1000, 3223, 1771, 1769, 117258, -1000,
	-1000, 117258, -1000, 117258, -1000, -1000, -1000, 1640, -1000, -1000,
	2582, -1000, -1000, -1000, -1000, 93003, 93003, 93003, 93003, 1631,
	-1000, 42216, -1000, -1000, 3124, 3856, 1806, -1000, 1890, -1000,
	3004, 3466, -1000, 1573, 1838, 233, 3786, -1000, -1000, 256,
	-1000, -1000, -41, -1000, 123451, -1000, 2592, -1000, 117258, -1000,
	2604, 3046, 3058, 1654, 2406, 2723, -1000, 41637, 2634, 52638,
	2420, 150, -1000, -1000, 150, 150, 32894, -1000, -1000, 69242,
	69242, 25178, 1479, 49164, 49164, 49164, 49164, 49164, 49164, 49164,
	49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164,
	49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164,
	49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164, 49164, 2450,
	49164, 1463, 49164, 49164, 49164, 49164, 1913, -1000, -1000, 2072,
	530, 2108, 669, -1000, -1000, -1000, 3692, 3692, 3692, 621,
	621, 621, 135825, 135825, 637, 3854, 809, -1000, 49164, -1000,
	85, 58984, 49164, 25753, -1000, 466, 9379, 2566, -1000, 462,
	26361, -1000, -1000, -1000, 27551, 588, 41029, 49164, 1072, 135392,
	-1000, -1000, 1517, 3730, 23447, 2999, 2890, 667, 877, 875,
	30549, 29941, 29333, 28725, 868, 843, 49164, 49164, 49164, 49164,
	49164, 49164, 49164, 49164, -1000, -1000, 3740, -1000, 3730, -1000,
	-1000, -1000, -1000, 3730, 1474, 1472, 3730, -1000, 3730, 3730,
	8327, 8327, 40450, 39871, 39292, 53217, 38713, 49164, 28146, 38134,
	37555, -1000, 117258, -25, 3628, 49164, 221, -1000, 133409, -1000,
	221, 221, 666, -67, 135392, 2629, 2629, 57274, 2435, 2282,
	2282, 2282, -1000, 951, 18198, 951, 103145, 2290, 951, 951,
	232, 261, 460, 54954, 2550, 103145, 786, 665, -3, -6,
	-7, -1000, -1000, -8, -10, -1000, -1000, 93003, 664, 25753,
	25178, 229, 2104, -72, 2697, 2696, -1000, 2695, 2693, -1000,
	2687, 2379, -1000, -1000, -1000, 1849, -73, 1462, 93003, 117258,
	1519, 3853, -94, -1000, 610, -74, -1000, 1085, 228, 3730,
	-1000, -1000, -1000, -1000, -1000, 3851, 3850, -1000, 1054, 663,
	661, 429, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	660, 659, 659, 659, -1000, 320, 658, 264, 656, 652,
	649, -1000, -1000, -1000, -1000, -1000, 3002, 93003, 117258, 1515,
	3848, 82280, -93, 93566, -58, -1000, -1000, 117258, -1000, -1000,
	-1000, 3846, -1000, 93003, -1000, -1000, 93003, 251, 3266, -1000,
	93003, -1000, 93003, 247, 3264, -1000, -1000, 117258, -1000, 93003,
	93003, -1000, 117258, 117258, 117258, 129088, 129088, 245, -1000, 93003,
	910, -75, 1228, -41, -1000, -1000, -1000, -1000, 1382, -1000,
	2007, -1000, -1000, -1000, -1000, -1000, -1000, 1599, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1057, -1000, -1000, -1000,
	-1000, -1000, -1000, 3748, 3707, -27, -1000, -1000, 25178, -1000,
	-43, 1706, 540, 1458, -1000, 78327, 2547, 3460, 3844, 2783,
	3448, 1705, -1000, 1639, 648, -1000, 3548, 83406, 3590, 3607,
	1411, -1000, 3001, -1000, -1000, -1000, 983, 1775, 1808, 1438,
	1434, 83406, 2512, -1000, 69242, -1000, 2728, 3537, 1416, 1429,
	1416, 1416, 1409, -1000, 83406, 1805, 1425, 1424, 1400, -1000,
	-1000, 2024, 2015, -1000, -1000, 104271, -1000, 1397, 1386, 3646,
	2689, 2281, 851, 2014, -1000, 1412, 1383, 2994, -1000, -1000,
	-45, 3589, 3606, 1411, -1000, 2992, 1378, -1000, -1000, -1000,
	3533, 93003, 25178, 1652, 1649, 1637, 1803, 1377, -29, -1000,
	3585, 1349, 1302, -1000, 1089, 9320, 3387, -1000, 129088, 1089,
	1089, 2183, 3263, 2827, 1785, -1000, 2835, 934, 2834, -1000,
	-1000, -1000, 934, -33, 73200, 117258, 219, -1000, 85, 49164,
	49164, 85, 49164, 85, -1000, 3569, 3262, 3260, 3843, -1000,
	-1000, -1000, -1000, -1000, 3842, 2045, 2603, -1000, -1000, 645,
	2468, 2989, 117258, 2713, -36, 93003, -1000, 72072, 3259, 129088,
	2512, 2466, -1000, -1000, 84534, -1000, 3250, 492, 2465, -1000,
	471, 3837, 3249, -1000, 122888, -1000, 3475, 1276, 3246, 1167,
	705, 3627, -1000, 705, 66976, -1000, 117258, -1000, -16, 350,
	77201, -80, -92, 458, -1000, 103708, 117258, 117258, 3404, 2071,
	2059, -1000, 1039, 60715, -1000, 60715, -95, -1000, -202, 2831,
	1613, -1000, 1017, 1017, 934, -1000, 934, -1000, 93003, 3057,
	-1000, -1000, 76075, 1017, 1017, 1017, -1000, -1000, -1000, -1000,
	3836, 3835, 3834, 3833, -1000, -1000, 1042, 93003, 117258, 93003,
	-1000, -1000, 1718, -1000, 216, -1000, 129088, -1000, 129088, 117258,
	93003, -1000, 1042, 117258, 1042, 117258, 1042, 117258, 1042, 1042,
	-1000, -1000, -1000, -1000, -1000, 85, -1000, -1000, 135392, -1000,
	49164, -1000, -1000, 1625, 3832, 1713, -1000, 3054, -1000, 3051,
	-1000, 31, -1000, -1000, 1936, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3831, 135392, -1000, 1955, -1000, -1000,
	-1000, -1000, 93003, 93003, 93003, 93003, 117258, 3385, -1000, 117258,
	3381, 93003, -1000, 3736, -1000, -1000, 83406, -1000, 2604, 3046,
	-1000, -1000, -1000, -1000, -1000, -1000, 1509, 2354, -1000, 2640,
	-1000, 1676, -1000, -1000, -1000, 135392, 53796, -1000, -1000, 135392,
	1888, -1000, 52059, 51480, -1000, -1000, 1810, 93003, 2739, -1000,
	2739, -87, -1000, 133368, 2632, 93003, -1000, -1000, -1000, -1000,
	-1000, 981, 1114, 1114, 1427, 1427, 1427, 1427, 3566, 515,
	2239, 8063, 8152, 8152, 6926, 6926, 6926, 6926, 6926, 8152,
	2311, 621, 621, 2311, 2311, 2311, 2311, 2311, 621, 621,
	621, 8152, 8152, 8152, 621, 135825, 135784, 13344, 49164, 49164,
	1299, 2070, 530, 11171, 49164, 12966, 12966, 12966, 12966, -1000,
	2210, -1000, -1000, -1000, -1000, 2988, 643, 53217, 53217, -1000,
	-1000, -1000, -1000, 26956, 49164, -1000, -1000, -1000, -1000, 36947,
	-1000, -1000, 132706, -322, 455, -1000, 211, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	447, -69, 1, -1000, 49164, 49164, 49164, 446, -1000, 209,
	49164, 117258, -1000, 16995, 785, -102, -1000, -101, 1498, -1000,
	49164, -1000, -1000, 1298, -1000, 1296, 1294, 1289, -1000, 639,
	442, -1000, 207, -1000, 2283, 638, 627, 49164, -1000, -1000,
	-1000, -1000, -1000, 132307, -1000, -1000, 132270, -1000, -1000, 131871,
	-1000, -1000, 131834, -1000, -1000, -1000, -1000, -1000, 135166, 16718,
	15724, 15049, 8899, 12517, 11871, -103, 441, -109, 440, 978,
	977, 439, 436, 427, -110, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -111, 425, -1000,
	2986, -69, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	413, -1000, 410, -1000, 135125, -69, 407, 5535, -1000, 53217,
	53217, 53217, 53217, -1000, 402, -1000, 133183, -1000, 134733, 36368,
	36368, 36368, 401, 134692, 49164, -69, -117, -1000, -118, -1000,
	-1000, 543, -125, 1069, 35789, 56114, 25178, -1000, 1069, 1069,
	49164, -1000, 49164, 2662, -1000, -1000, -1000, -1000, 2649, 2194,
	2629, 57274, -1000, -1000, -1000, -1000, 103145, -1000, 3715, 3202,
	-1000, 103145, -1000, -1000, 117258, 492, -1000, 103145, 103145, 25178,
	951, -1000, 951, 103145, 751, -1000, -1000, -1000, -1000, -1000,
	399, 65283, 1, 206, 25178, 1043, -1000, -1000, 2774, 2774,
	2774, 2774, 2774, 93003, -1000, -1000, 129088, 1288, -37, -167,
	2830, -1000, 3656, -1000, 2162, -1000, 69242, -1000, 808, 1220,
	25178, -1000, -1000, -1000, 623, -1000, 3730, 3730, -1000, 3730,
	129088, 2984, 214, 2828, -1000, 2378, -34, 195, 129088, 3830,
	-1000, -1000, 251, -1000, 93003, 251, 251, -1000, 93003, 93003,
	2317, -1000, 255, -1000, 253, -1000, -1000, -93, -1000, 1062,
	34052, -1000, 1382, -1000, -1000, 1656, -1000, 2074, -1000, 1431,
	-1000, -1000, -1000, -1000, 34052, -1000, 2868, 117258, 117258, 93003,
	-1000, 101456, 117258, -1000, 2270, 129088, -1000, 2464, 122325, 2439,
	121762, 69242, -1000, -1000, 618, 998, 2625, 2623, 1158, 117258,
	117258, 2622, 121199, 120636, -1000, 3828, 117258, 2133, 49164, 101456,
	3529, 2313, 5046, 85, 85, -1000, 85, -1000, -1000, 617,
	1433, 93003, 93003, 117258, 129088, 93003, 2164, -1000, -1000, -1000,
	-1000, -1000, 83969, -1000, -1000, 3737, 3735, -1000, 1416, -1000,
	-1000, -1000, 1416, 2512, 2054, 117258, 129088, 93003, 129088, 120073,
	119510, -1000, -1000, 1801, 117258, -1000, -1000, -1000, -1000, 1513,
	-1000, 851, 1287, 2983, 49164, 49164, 2187, 85, 85, -1000,
	85, 604, 25178, 2006, -1000, 3068, 117258, 3773, 118947, 3771,
	117258, 117258, 117258, 129088, 3424, 117258, 117258, 129088, -1000, 118384,
	9320, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2163, 74352, 1150, 117258,
	1358, -1000, -1000, 1792, 1286, 1285, 83406, 2180, 1789, 1918,
	129088, 60715, 1037, 60715, 2813, -1000, -1000, 22868, -1000, 135392,
	135392, -1000, 135392, -1000, 72072, 76075, 117258, -1000, -1000, 1060,
	117258, 77764, 1005, 3245, 65846, -116, 1017, 76075, 93003, -36,
	2713, 117258, -1000, -1000, 2512, 3244, 492, 2463, -1000, 129088,
	3626, 3230, 593, 3827, 3826, -1000, 93003, 2377, 2460, -1000,
	-1000, 117821, 3199, 851, 117258, 1069, 57274, 2010, -1000, 63582,
	1128, 117258, 1919, 181, -1000, -1000, -1000, 10, 117258, -1000,
	819, -1000, -1000, 350, 350, 1017, -123, 590, -1000, 912,
	908, 61288, -126, -1000, 202, 589, 907, 904, -1000, 5005,
	-1000, -202, -1000, 76075, 1039, 60715, 2979, 2973, -1000, -1000,
	1059, -1000, 1539, 1017, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -19, 1906, 117258, -93, -93,
	-49, -37, -1000, 1042, -1000, 1042, -1000, 1042, -1000, -1000,
	-1000, 135392, -1000, -1000, -1000, 1711, 1709, 117258, -1000, -1000,
	117258, -1000, 25178, 117258, 93003, 25178, 93003, 3045, 3042, -1000,
	-1000, -1000, 117258, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1184, -1000, 1888, 2350, -1000, 588, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2559, -1000, -40, 32894,
	963, -1000, -1000, 93003, -21, 49164, 49164, 10470, 8935, 49164,
	53217, 53217, -1000, 49164, 5679, -1000, -1000, -1000, -1000, -1000,
	2972, 587, 49164, 69242, 6858, 6803, -1000, 398, 11808, 2311,
	-1000, 49164, -1000, 6664, -1000, 395, 35210, -1000, 133845, -26,
	-127, -1000, 18791, -69, -133, -1000, -1000, 802, -1000, 3194,
	-1000, 49164, 134507, 2525, 2065, 1948, 1721, 3730, 3769, 22289,
	-1000, 67540, 1070, 2307, 131435, -1000, -1000, -1000, -1000, 69242,
	69242, 49164, 49164, -1000, 49164, 49164, 49164, -1000, -1000, -1000,
	3730, 955, -1000, -1000, -1000, 955, -1000, -1000, 1416, -1000,
	1416, -1000, 49164, -1000, -1000, 2948, 49164, -1000, 69242, 69242,
	53217, 53217, 53217, 53217, 53217, 53217, 53217, 53217, 53217, 53217,
	53217, 53217, 53217, 53217, 53217, 53217, 53217, 53217, 53217, 53217,
	2680, 53217, 3675, 3675, 3675, 1068, -1000, 3039, 2948, 49164,
	49164, 69242, 391, 390, 389, -1000, 49164, -69, -1000, -1000,
	1152, 586, -1000, 2536, -1000, 2887, -1000, 49164, -1000, -132,
	-1000, 2550, -1000, -1000, 2887, 2887, -134, 135392, 57274, 57274,
	-1000, 585, 49164, 2648, -1000, -1000, 784, -315, -1000, 899,
	-1000, -1000, -1000, -1000, -1000, -1000, 898, -1000, 492, -1000,
	-1000, -1000, 197, 103145, 103145, 783, -1000, -135, -1000, -1000,
	-140, -1000, 3625, 388, 25178, -1000, 1069, 2910, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2685, -243, 129088, 129088, 1788,
	2325, 3767, -1000, 3733, 799, 782, 192, 3730, 387, 384,
	381, -93, 129088, 129088, 1787, 69815, 129088, -1000, -1000, -1000,
	251, -1000, -1000, -1000, 247, -1000, -1000, -1000, -1000, 2708,
	-1000, -41, -1000, -1000, -1000, 49164, -1000, -1000, 3457, 584,
	1283, 1279, -1000, -145, -1000, 895, -1000, -1000, -1000, -1000,
	2987, -1000, 3229, -1000, 2457, -1000, 1135, 2455, 1920, -1000,
	49164, 581, 2797, 580, 579, 3824, 2292, 3823, 1160, 3191,
	2317, 3185, 2317, -1000, -1000, -1000, 990, -1000, 135392, -152,
	-1000, 2313, -1000, 578, 577, -1000, -43, 1688, 412, 1278,
	1053, -1000, -1000, 49164, 49164, 102582, -1000, 478, 3459, -22,
	-1000, -1000, -1000, 1786, 1274, 1271, -1000, -1000, -1000, -1000,
	2512, 1779, 1269, 1268, -1000, -1000, -1000, -1000, -1000, 2453,
	-1000, -1000, 3183, 1052, -1000, 3112, 3111, 972, 117258, 49164,
	49164, 134466, 134071, -1000, 1051, -1000, -1000, 49164, -1000, -45,
	1266, 3577, 2449, 93003, -1000, 2317, 3179, 1264, -1000, 1260,
	-1000, -1000, -1000, 3582, 3579, 1265, -1000, -1000, -1000, 76075,
	-1000, -1000, 73779, -1000, -1000, 1089, 117258, 129088, 93003, 2049,
	-1000, -1000, 82280, 82843, 117258, 2827, -93, 934, -1000, 2599,
	934, 1037, 2946, -1000, 2705, -1000, 1047, 93003, 3822, 377,
	-153, -46, 69242, -1000, -1000, -1000, -1000, 2439, 93003, 117258,
	1350, 2796, 117258, 117258, 3624, -1000, 2402, 603, 93003, 946,
	-1000, 3715, -1000, -1000, -1000, 1044, -1000, 3573, 93003, 3623,
	3178, 1043, 85, 93003, 3746, -1000, -1000, 3621, 93003, 3175,
	2376, 2448, 2594, 851, 76638, 1043, 2296, -53, -1000, 1919,
	34631, 3454, -154, -1000, -1000, -1000, 1069, 66976, 57274, 49164,
	3821, -155, -1000, -1000, -1000, -1000, -1000, 100330, 100330, 76075,
	76075, 76075, 1017, 117258, 117258, 3818, 76075, 76075, 76075, -47,
	575, -1000, 890, 888, 886, -1000, -1000, -1000, -1000, -1000,
	-1000, 883, 881, 876, 1039, -1000, -1000, -202, 60715, 85,
	-1000, 2314, 93003, -1000, 21710, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1042, -116, -1000, -1000, -1000, 2192, 2411, 2192,
	1894, 1873, -1000, -1000, 2346, -1000, -1000, -1000, -1000, 2748,
	3428, 25178, 3584, 12966, 49164, 49164, 1000, 6639, 6608, 12966,
	49164, 49164, 69242, 11210, -161, 49164, 49164, -1000, 49164, 781,
	135392, -1000, 3765, 49164, 372, 371, -1000, -1000, -1000, 3718,
	-1000, -1000, -1000, 135392, 49164, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 370, -1000, 191, -1000, -1000, -1000, 125703, -1000,
	49164, 369, 3528, -1000, 367, 366, 10601, 7692, 131398, 130999,
	130962, 364, -1000, -1000, 363, 362, 135392, 3039, 135392, -1000,
	-1000, 1026, 1026, 1410, 1410, 1410, 1410, 3675, 606, 1048,
	726, 641, 641, 641, 428, 1068, 1068, 641, 641, 641,
	1068, 2945, 2639, 572, 5603, -1000, -1000, 135392, 135392, 361,
	-1000, -1000, -1000, -69, 359, 1152, -1000, 2880, 3522, 135392,
	-1000, 57274, 2880, 2880, -1000, -1000, 2194, 117258, 135392, 57274,
	-1000, 3202, -1000, 19967, 19382, -1000, 25178, -1000, -1000, -1000,
	-1000, 3715, -1000, 65283, -1000, 571, -1000, 151, -1000, 2910,
	-1000, 874, -1000, -1000, 76075, 76075, 2774, -1000, 2894, -243,
	-176, 117258, -1000, -1000, 778, 3817, 795, 25178, 358, -1000,
	-1000, -1000, -93, -93, 117258, 2942, 93003, 117258, 1493, -93,
	-1000, -1000, -1000, 3403, 135392, 117258, 117258, -1000, 101456, 34052,
	1571, 102019, 117258, 3160, -1000, 3157, -1000, 1158, 2267, 130563,
	57847, -1000, 57847, 117258, -1000, -1000, -1000, -1000, 2037, 1765,
	3816, 1201, -1000, 3491, 117258, -1000, 117258, -1000, -1000, -1000,
	101456, -1000, 117258, 117258, 93003, 117258, -1000, 129088, 3132, -162,
	135392, -48, -1000, 867, -1000, 1426, -1000, 21131, 117258, 129088,
	93003, 117258, 129088, 93003, 3150, 117258, 2228, -1000, -1000, 3107,
	-1000, 135392, 134030, 85, 49164, 3127, -170, 25178, -1000, 3764,
	3759, 3148, 3497, -1000, 117258, 3755, 117258, 93003, 3401, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1756, 1256, 1255, 2373,
	2372, 2316, -49, 2180, 1037, -50, 563, -1000, 866, -1000,
	-1000, 865, 860, 1037, -1000, 76075, 60715, 3815, 492, -1000,
	2778, -1000, 98072, 77764, 2357, -1000, -1000, 562, 117258, 117258,
	558, -1000, 85, -1000, 3814, 101456, 556, -1000, 2310, -1000,
	776, -1000, 2617, 129088, 2512, 85, 93003, -1000, 1023, 492,
	356, -51, -1000, 3152, 1145, 25178, 93003, 3141, 2600, 851,
	76638, -1000, 1276, 2723, -1000, -52, -1000, 662, 85, 2296,
	-1000, -53, 135392, -1000, 858, -1000, -171, -1000, -1000, 333,
	-1000, 3398, -1000, -1000, -177, -1000, -1000, 3255, 3255, 76075,
	60715, 76075, 76075, 76075, 60715, -1000, 1039, 934, -1000, 2478,
	-1000, -1000, -1000, -1000, -1000, 25178, 1668, -1000, 553, 550,
	-1000, -1000, -1000, -1000, 3428, 12966, 12966, 49164, 49164, 49164,
	12966, 11210, -179, -1000, 12966, 12966, -69, -1000, -1000, 133845,
	-1000, -1000, -1000, 135392, -1000, 20552, 2207, -1000, 130526, -1000,
	32894, -1000, -1000, 49164, 49164, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 53217, 2941, 549, 69242, -1000, -1000, 322,
	1067, 49164, 50901, 2550, 1067, 1067, -1000, -180, -1000, -1000,
	-1000, 3715, -1000, 3715, 151, -1000, -1000, 3812, 25178, -1000,
	76075, -1000, -1000, -1000, 2312, -1000, -1000, 3105, -168, 793,
	-1000, 3811, -1000, -1000, 158, 129088, 2935, 149, 2826, -1000,
	-1000, -1000, -1000, -1000, 2825, 3620, -1000, 1982, -1000, 117258,
	117258, -1000, 117258, -1000, 25178, 117258, 2896, 1322, -1000, 998,
	2619, 547, 53217, 1181, 93003, 924, 2871, 2864, -1000, 3643,
	3521, 2811, -182, -1000, 117258, 49164, 117258, -189, -190, 2428,
	-1000, -1000, 1179, 1317, 49164, 1176, -1000, -1000, -1000, 69242,
	546, 2317, 2317, -1000, -191, -192, -1000, -1000, -1000, 49164,
	1254, 117258, 33473, -1000, 3810, 3459, -1000, -1000, -1000, -1000,
	-1000, -1000, 117258, -1000, 117258, -1000, 49164, -1000, 133804, 49164,
	1249, -1000, -1000, -1000, 3754, 2317, 25178, 2317, -1000, 2317,
	3497, 1195, 117258, 129088, 93003, 1846, 1846, 3038, -1000, -1000,
	-1000, 2302, 2302, 76075, 60715, 60715, -1000, -54, 1037, -1000,
	3616, 2205, 3809, -1000, -1000, -1000, -1000, 2616, -1000, -1000,
	-1000, 117258, 2615, 2886, 57847, 545, 538, 117258, 1019, -1000,
	-199, 77764, 1005, 987, -1000, -55, 534, -1000, 856, -1000,
	-1000, -1000, -1000, 492, -1000, 2702, 3613, -1000, 3753, 533,
	532, 117258, 2370, 531, 25178, 3450, 851, 76638, -1000, 3199,
	1919, -1000, 2437, 117258, 3446, -1000, 2723, 530, -1000, 1017,
	528, 1017, -1000, -205, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -57, -1000, 905, 893, -1000, -1000, 93003, 93003,
	49164, 49164, -1000, 12966, 12966, 12966, -1000, 310, -1000, -1000,
	2296, 3519, -1000, -59, 130127, 130090, 7396, 53217, 69242, -206,
	-1000, -1000, 117258, 135392, -61, -1000, 135392, 527, 526, 454,
	-1000, -1000, -1000, 775, 752, -1000, -1000, -1000, -1000, 129088,
	3808, -1000, 129088, -93, 129088, 129088, 1734, 100893, 117258, -1000,
	-1000, 1920, 1697, -1000, -1000, -1000, 117258, 2445, -1000, -1000,
	-1000, 1153, 49164, 5603, 53217, 525, 49164, -1000, 524, 522,
	3612, 3348, -1000, 2764, 2947, 2044, 57847, -1000, 3428, -1000,
	129691, -1000, 1138, 2036, -1000, -1000, -1000, -1000, 135392, 53217,
	3497, 57847, -1000, -1000, 521, 520, 135392, 516, 855, 2933,
	-1000, -1000, -1000, -1000, -1000, 135392, 85, 135392, 513, 3577,
	-1000, -1000, -1000, -1000, 2317, 93003, -1000, -1000, -1000, 1242,
	-1000, -1000, -1000, -1000, 3807, 3806, 2932, 82280, -1000, -207,
	-1000, -1000, -1000, 2050, 85, 1005, -1000, -1000, 2357, 512,
	-1000, -1000, 3189, 3189, -215, 57847, 57847, -217, 2343, 2699,
	-1000, 308, 3611, 987, -1000, 3696, -1000, 3344, 3344, 49164,
	3600, 3396, -1000, 85, -1000, 3746, 57847, -1000, 93003, 57847,
	2368, 2131, 2576, 76638, -1000, 2594, -1000, -1000, -220, 117258,
	1919, -1000, -1000, 76075, -1000, -1000, 2478, -1000, 117258, -1000,
	117258, -1000, -1000, -222, -225, -1000, 2124, 49164, 32894, -1000,
	-1000, 7396, -228, -1000, -65, -1000, 3594, 50901, 3805, 3804,
	3803, -1000, -1000, -243, -1000, -93, -93, -93, 117258, -1000,
	1962, -1000, 2439, -1000, -1000, 3136, 2877, 129654, 5603, 2539,
	117258, 348, 2512, 2512, -1000, 3588, 2938, -1000, -1000, 2187,
	495, -1000, -1000, -1000, -1000, 963, 117258, -1000, 2876, 93003,
	5603, 1147, -235, 2192, 2192, 49164, 32315, 2221, -1000, 49164,
	-1000, -1000, 3497, 129088, -1000, -1000, 129088, 2367, -1000, 2915,
	3678, -1000, 2343, 117258, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1138, -236, -238, -1000, -1000,
	3486, -1000, 3390, 2778, 85, -1000, -1000, -1000, -251, 135392,
	85, 3801, 1023, 302, -258, 1145, -259, 93003, 2027, -1000,
	851, -1000, 2600, 1069, 3320, -1000, -261, -1000, -267, -268,
	-1000, -1000, 299, 50322, 50322, 50322, -69, -87, -1000, 117258,
	494, -1000, -1000, -1000, -1000, -1000, 133, -1000, -1000, 3104,
	949, -1000, 916, 1960, 252, 1146, 248, 135, -1000, -1000,
	-1000, 2811, -1000, 117258, -1000, -1000, 936, 492, -1000, 49164,
	1138, -276, -1000, 1124, -278, -1000, 1121, -279, -1000, 2931,
	-1000, -284, 2317, -243, 245, 1846, 1020, 3568, -1000, -1000,
	-1000, 2567, -286, -1000, -1000, 2044, 1138, 2187, 2501, -1000,
	2205, 1019, -1000, -1000, -1000, -1000, -1000, 1138, 491, 2044,
	490, 1604, 851, -1000, -1000, 1416, 3450, 3306, 1401, 1017,
	-1000, -1000, -1000, 3225, -1000, 54375, 2342, 1865, 133142, 3225,
	3225, -1000, -1000, 129088, 117258, 3551, -1000, 920, 918, 1590,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1069, -287,
	3549, 2539, 135392, -1000, -1000, 2192, 2823, -1000, 2192, 2922,
	-1000, 2219, -1000, -1000, -1000, -1000, 2921, -1000, 1820, 3732,
	-1000, -1000, -1000, 117258, 2187, 2044, 1016, 1847, 1794, 3796,
	1005, 2343, 2044, 57847, 2187, 57847, 2161, -1000, 117258, -1000,
	2131, 1384, -1000, 1703, -1000, -1000, 2040, 3638, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -93, -1000, 854, -1000, 3336,
	-1000, 1174, 2166, 2166, -1000, -1000, 853, 916, -1000, 489,
	-1000, 484, -1000, 129088, 2304, -1000, -1000, -1000, 1016, 2187,
	1069, 483, -1000, 3792, -1000, 2343, -1000, 2187, -294, 1016,
	-296, 2232, -1000, -1000, -116, 2027, -1000, 1698, 66976, 1858,
	-1000, -1000, 2287, 49743, 49164, -1000, 3659, -1000, -1000, 2655,
	-1000, 49164, 2811, 49164, 49164, 245, 64710, 1069, 1016, -1000,
	-1000, 2567, 1016, 1138, 1069, 2044, -1000, 851, 1604, 66976,
	-270, -1000, -1000, -1000, 135392, -1000, -1000, -1000, 135392, -1000,
	-302, -305, -1000, -123, 100330, -1000, 1069, -1000, 1069, 2044,
	-1000, 2187, 129088, 2161, -270, -1000, 2187, 1235, -307, -1000,
	-1000, 2187, 1016, -1000, -1000, -1000, -1000, -1000, 481, -1000,
	1016, 1069, 49164, 1069, -1000, -308, -1000, 2187, -1000,
}

var sqlPgo = [...]int{
	0, 4608, 4606, 4604, 4602, 4599, 4598, 4597, 4596, 4593,
	4592, 4591, 4589, 147, 4588, 4582, 4580, 4578, 4577, 4572,
	4571, 4570, 4569, 4567, 4566, 4565, 4562, 4561, 4560, 4559,
	4557, 4549, 4548, 4547, 4545, 4544, 4543, 4541, 4540, 4537,
	4535, 4528, 4525, 4524, 4523, 4516, 4515, 4514, 4513, 4512,
	4511, 4510, 4509, 4508, 4501, 4499, 4498, 4492, 4491, 4490,
	4489, 4488, 4487, 4484, 4482, 4481, 4479, 64, 4478, 4473,
	4472, 4468, 4466, 4451, 4447, 4444, 4439, 4437, 4436, 4435,
	4432, 4431, 4430, 4429, 4428, 4427, 4424, 4421, 71, 4420,
	288, 4417, 4416, 4413, 4401, 4398, 4396, 4395, 4394, 4391,
	4390, 4389, 4388, 287, 4387, 138, 162, 4386, 4383, 3944,
	4381, 4380, 286, 4378, 4377, 4374, 4373, 4371, 294, 4370,
	4369, 4367, 4362, 4361, 4359, 4357, 4353, 4350, 4349, 4348,
	4346, 93, 210, 4342, 4338, 226, 4336, 4335, 4334, 4333,
	4332, 4331, 4328, 4325, 4323, 4318, 4312, 252, 179, 4311,
	279, 4308, 4303, 4302, 4301, 4298, 4297, 4296, 4294, 4293,
	4292, 4291, 4290, 4289, 4288, 4287, 4285, 4283, 4282, 4281,
	4280, 4279, 4278, 4277, 4276, 4275, 4272, 4269, 4268, 4264,
	4263, 4262, 4260, 4259, 4255, 4253, 4252, 4251, 4249, 4244,
	251, 223, 126, 4242, 4241, 276, 275, 4240, 4239, 4237,
	4236, 4233, 143, 5, 40, 4228, 4227, 112, 94, 92,
	114, 107, 109, 4226, 128, 4225, 136, 116, 4222, 123,
	113, 27, 1, 267, 244, 11944, 242, 4221, 4220, 4219,
	256, 200, 4218, 240, 4217, 4216, 4215, 4214, 4211, 4210,
	82, 54, 191, 190, 183, 185, 3, 61, 110, 86,
	69, 49, 20, 96, 217, 22, 11, 265, 4209, 264,
	12, 164, 14, 36, 4208, 4205, 4202, 4200, 3643, 117,
	4193, 272, 246, 180, 4190, 4188, 4187, 654, 4185, 4183,
	52, 4182, 206, 90, 127, 58, 140, 4181, 150, 172,
	37, 4180, 166, 63, 4179, 4178, 100, 101, 9267, 11109,
	4175, 4171, 121, 76, 173, 1377, 199, 168, 205, 262,
	163, 175, 57, 221, 214, 181, 259, 4166, 260, 4165,
	3605, 102, 193, 160, 5920, 4164, 4163, 4162, 85, 4161,
	111, 4158, 4157, 77, 21, 4, 2, 158, 41, 50,
	6, 4155, 26, 133, 48, 32, 4154, 24, 4153, 4152,
	4148, 4146, 51, 4138, 39, 174, 4137, 4136, 291, 4133,
	104, 56, 43, 4132, 29, 227, 4130, 234, 142, 4129,
	4127, 266, 211, 197, 4126, 79, 235, 4125, 4124, 4123,
	4122, 4121, 4120, 146, 10, 141, 4119, 4117, 153, 4115,
	62, 254, 204, 4113, 65, 4110, 4109, 187, 55, 154,
	283, 284, 231, 132, 232, 184, 233, 4105, 4104, 4103,
	222, 4101, 4097, 225, 186, 4096, 4092, 209, 295, 88,
	47, 89, 245, 87, 203, 161, 4091, 208, 4089, 4088,
	292, 192, 224, 9, 13, 108, 115, 4087, 7, 236,
	165, 237, 131, 4086, 6957, 2436, 2883, 4085, 4084, 149,
	135, 84, 137, 157, 270, 97, 4081, 4080, 3548, 4079,
	4078, 4077, 4076, 194, 4075, 4074, 4073, 151, 152, 218,
	4070, 124, 78, 60, 28, 134, 253, 289, 130, 230,
	177, 261, 4069, 4068, 4065, 201, 4062, 80, 106, 171,
	202, 258, 67, 4061, 169, 4060, 159, 290, 73, 178,
	4059, 238, 4057, 4055, 4054, 4051, 4049, 4046, 4045, 263,
	239, 4042, 4040, 4039, 34, 198, 4038, 269, 249, 189,
	95, 59, 4037, 99, 3571, 4036, 122, 229, 66, 8,
	4035, 53, 4032, 3452, 68, 4027, 0, 13757, 9999, 12514,
	13510, 4020, 3308, 4017, 4012, 4011, 228, 81, 4009, 4004,
	4001, 119, 4000, 91, 3999, 3997, 83, 3996, 25, 16,
	19, 30, 23, 492, 343, 3993, 3992, 176, 144, 155,
	3991, 278, 247, 3990, 3988, 3987, 3986, 105, 3985, 45,
	3984, 42, 3982, 3981, 46, 17, 33, 3980, 3979, 170,
	3978, 125, 257, 3977, 167, 3972, 74, 145, 3970, 3969,
	3967, 72, 70, 268, 212, 215, 98, 3966, 285, 3965,
	207, 3964, 3963, 31, 3962, 3961, 248, 120, 118, 44,
	255, 148, 35, 188, 219, 3959, 3958, 182, 3957, 3956,
	3955, 277, 3954, 3953, 38, 3952, 3951, 3950, 15, 3949,
	3948, 213, 3288, 3947, 3946, 18, 3942, 196,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 603,
	603, 603, 604, 604, 605, 605, 605, 24, 45, 17,
	18, 18, 18, 18, 606, 606, 606, 606, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 243, 243, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 599, 599, 245, 245,
	244, 237, 237, 238, 238, 239, 239, 607, 607, 246,
	246, 246, 247, 247, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 498, 498, 498, 529, 529, 529,
	529, 531, 531, 626, 626, 627, 627, 627, 627, 627,
	134, 134, 396, 396, 396, 55, 55, 55, 55, 55,
	594, 594, 207, 207, 207, 209, 209, 208, 208, 208,
	208, 208, 79, 79, 613, 613, 612, 611, 611, 611,
	614, 614, 614, 206, 206, 206, 130, 130, 130, 130,
	130, 130, 131, 131, 132, 132, 210, 210, 210, 212,
	212, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 216, 16, 16, 16, 113, 113, 113,
	113, 113, 113, 113, 108, 108, 533, 533, 534, 534,
	201, 201, 202, 202, 202, 202, 203, 203, 204, 204,
	204, 70, 70, 213, 213, 215, 215, 214, 214, 214,
	214, 214, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 59, 60, 60, 60, 60, 60, 60, 61, 61,
	68, 68, 68, 68, 68, 68, 68, 68, 192, 192,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 76, 76, 76, 76, 76, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 629, 629, 630,
	630, 631, 631, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 85,
	85, 356, 356, 319, 319, 86, 86, 86, 87, 87,
	88, 88, 72, 72, 592, 592, 372, 372, 489, 489,
	73, 600, 600, 600, 602, 602, 601, 601, 90, 90,
	395, 395, 91, 91, 91, 91, 91, 91, 92, 92,
	92, 92, 92, 92, 92, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 100,
	100, 100, 100, 100, 101, 101, 101, 98, 98, 98,
	95, 95, 95, 94, 94, 94, 99, 99, 99, 591,
	308, 308, 97, 97, 97, 96, 96, 96, 373, 373,
	102, 102, 102, 102, 320, 103, 103, 103, 103, 103,
	103, 103, 103, 106, 106, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 491, 491,
	104, 104, 104, 456, 456, 109, 109, 109, 411, 411,
	110, 110, 110, 110, 110, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 596, 596, 365, 365,
	271, 271, 271, 271, 122, 122, 122, 122, 123, 123,
	123, 124, 124, 197, 197, 140, 140, 140, 140, 139,
	139, 139, 139, 139, 139, 139, 139, 62, 62, 62,
	63, 63, 64, 64, 65, 65, 66, 66, 67, 67,
	67, 67, 67, 143, 143, 623, 623, 145, 142, 142,
	142, 142, 142, 141, 141, 144, 144, 144, 144, 146,
	148, 148, 148, 148, 148, 147, 147, 147, 147, 147,
	149, 149, 523, 523, 381, 381, 521, 521, 543, 543,
	522, 522, 326, 326, 326, 326, 326, 327, 327, 327,
	532, 532, 532, 532, 532, 532, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 198,
	198, 199, 200, 200, 200, 200, 200, 175, 175, 175,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 382, 382, 178, 178, 178, 162, 162, 151, 151,
	151, 151, 151, 151, 151, 156, 156, 156, 156, 156,
	156, 156, 156, 152, 152, 164, 164, 164, 164, 164,
	157, 157, 158, 158, 158, 159, 159, 159, 159, 185,
	185, 161, 161, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 153, 153, 153, 153, 166, 166, 166, 166,
	418, 418, 418, 190, 190, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 188, 188, 188, 188, 188, 188, 615, 615, 616,
	616, 616, 182, 182, 182, 182, 182, 182, 470, 470,
	176, 176, 176, 176, 181, 181, 181, 181, 184, 184,
	184, 184, 401, 401, 173, 173, 173, 174, 174, 174,
	179, 179, 180, 357, 357, 177, 177, 183, 183, 183,
	183, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	155, 155, 155, 155, 186, 186, 172, 172, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 633,
	633, 168, 168, 168, 167, 167, 167, 167, 170, 170,
	171, 171, 171, 171, 171, 171, 169, 160, 189, 593,
	593, 589, 589, 589, 589, 589, 589, 589, 589, 590,
	590, 590, 590, 595, 595, 114, 114, 114, 114, 114,
	114, 114, 125, 125, 125, 125, 125, 125, 125, 128,
	128, 115, 115, 115, 115, 115, 115, 115, 118, 118,
	116, 116, 116, 116, 117, 117, 80, 80, 80, 80,
	80, 15, 15, 15, 81, 81, 262, 262, 221, 221,
	221, 344, 344, 222, 222, 334, 334, 334, 334, 217,
	217, 218, 218, 219, 220, 220, 82, 82, 634, 634,
	634, 608, 608, 608, 609, 609, 609, 609, 609, 609,
	328, 328, 329, 329, 436, 436, 436, 436, 436, 332,
	332, 332, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 342, 343, 343, 335, 335, 341, 340, 340, 339,
	339, 338, 338, 336, 337, 337, 337, 346, 346, 345,
	348, 348, 347, 435, 552, 552, 554, 554, 554, 554,
	554, 554, 554, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 419, 419, 635, 635, 636, 637, 550, 550, 550,
	551, 546, 546, 547, 547, 547, 547, 547, 330, 330,
	331, 331, 331, 331, 548, 549, 363, 363, 474, 553,
	553, 555, 555, 557, 638, 638, 638, 638, 638, 638,
	639, 639, 639, 434, 434, 433, 433, 433, 354, 354,
	558, 558, 558, 558, 559, 559, 559, 559, 559, 562,
	561, 560, 560, 560, 560, 560, 84, 84, 84, 398,
	398, 397, 397, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 194, 194,
	274, 274, 274, 78, 78, 78, 12, 12, 12, 12,
	12, 12, 12, 289, 289, 13, 13, 13, 610, 610,
	610, 83, 83, 83, 83, 83, 83, 352, 352, 352,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 598, 598, 597, 597, 275, 275,
	641, 641, 89, 89, 89, 89, 89, 89, 89, 89,
	492, 492, 493, 493, 77, 77, 77, 77, 77, 420,
	420, 417, 417, 416, 416, 362, 362, 472, 472, 472,
	473, 279, 279, 280, 280, 240, 240, 240, 31, 30,
	22, 22, 26, 26, 27, 27, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 28, 28, 48, 48, 48,
	48, 49, 49, 49, 49, 52, 52, 53, 53, 47,
	47, 47, 47, 50, 50, 44, 44, 54, 54, 54,
	54, 54, 617, 619, 619, 618, 618, 622, 622, 622,
	622, 622, 622, 620, 620, 621, 621, 624, 624, 625,
	625, 121, 121, 126, 126, 126, 126, 126, 127, 127,
	127, 127, 129, 129, 129, 129, 138, 138, 193, 193,
	193, 193, 193, 193, 193, 56, 56, 56, 56, 69,
	69, 69, 69, 136, 643, 643, 643, 137, 137, 137,
	642, 642, 272, 272, 430, 430, 431, 431, 644, 644,
	432, 432, 432, 432, 432, 265, 264, 266, 266, 267,
	267, 75, 75, 75, 255, 255, 254, 256, 256, 257,
	257, 252, 252, 535, 535, 259, 259, 259, 260, 260,
	248, 248, 249, 249, 250, 250, 251, 251, 263, 263,
	530, 530, 645, 645, 112, 112, 112, 196, 196, 318,
	318, 318, 427, 427, 427, 355, 355, 286, 286, 429,
	429, 429, 429, 429, 394, 394, 394, 195, 195, 370,
	370, 384, 384, 385, 385, 486, 486, 386, 119, 119,
	120, 120, 135, 135, 225, 225, 223, 223, 223, 223,
	223, 223, 223, 223, 230, 230, 231, 231, 232, 232,
	233, 234, 234, 234, 234, 374, 374, 235, 235, 235,
	224, 224, 224, 226, 226, 226, 226, 226, 226, 226,
	229, 229, 229, 229, 236, 236, 236, 228, 228, 569,
	569, 569, 571, 571, 573, 573, 572, 572, 568, 568,
	570, 570, 640, 640, 400, 400, 400, 351, 353, 349,
	349, 350, 350, 360, 360, 358, 359, 359, 361, 361,
	471, 471, 471, 241, 241, 241, 391, 391, 391, 391,
	392, 392, 423, 423, 421, 421, 421, 421, 422, 422,
	424, 424, 424, 425, 425, 426, 426, 388, 388, 389,
	389, 390, 390, 390, 390, 452, 452, 227, 227, 227,
	367, 367, 367, 368, 368, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 443, 443, 441, 441,
	441, 441, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 476, 477, 477, 369, 369, 478, 428, 428, 587,
	587, 587, 588, 588, 469, 469, 479, 479, 479, 479,
	479, 479, 467, 467, 468, 468, 487, 488, 488, 404,
	404, 404, 404, 402, 402, 405, 405, 405, 405, 405,
	403, 403, 480, 480, 480, 480, 393, 393, 481, 481,
	481, 481, 482, 483, 483, 484, 484, 437, 438, 438,
	494, 494, 494, 494, 496, 366, 366, 366, 366, 366,
	545, 544, 544, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 511, 511, 511, 511, 511, 511,
	511, 497, 497, 497, 497, 497, 501, 501, 501, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	502, 502, 507, 507, 508, 508, 508, 503, 504, 509,
	509, 509, 509, 646, 646, 513, 513, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 499, 499, 499, 506,
	506, 506, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 412, 412, 414, 414, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	446, 446, 446, 446, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 563,
	563, 563, 563, 563, 563, 563, 563, 448, 448, 566,
	566, 567, 567, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 574, 574, 575, 575, 577, 577,
	578, 578, 579, 580, 580, 580, 581, 582, 582, 576,
	576, 583, 583, 583, 583, 584, 584, 585, 585, 585,
	585, 585, 586, 586, 586, 586, 586, 458, 458, 459,
	459, 465, 465, 465, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 325,
	325, 324, 276, 276, 276, 276, 276, 276, 379, 379,
	377, 377, 377, 380, 380, 378, 378, 376, 376, 375,
	375, 455, 455, 453, 453, 457, 457, 406, 406, 512,
	512, 512, 512, 512, 512, 512, 512, 407, 407, 407,
	415, 408, 408, 409, 409, 409, 409, 409, 449, 450,
	410, 410, 410, 451, 451, 460, 464, 464, 463, 462,
	462, 461, 461, 439, 439, 440, 440, 387, 387, 647,
	647, 383, 383, 485, 485, 485, 485, 322, 322, 371,
	371, 321, 321, 313, 313, 314, 314, 314, 314, 364,
	364, 466, 466, 514, 514, 515, 515, 516, 516, 517,
	517, 518, 519, 520, 454, 454, 297, 296, 283, 284,
	295, 294, 293, 282, 285, 290, 291, 292, 287, 288,
	304, 303, 302, 253, 258, 309, 310, 310, 312, 312,
	311, 311, 299, 300, 301, 490, 281, 315, 315, 316,
	316, 316, 317, 317, 317, 317, 277, 277, 278, 278,
	305, 305, 306, 307, 307, 298, 298, 298, 268, 268,
	268, 269, 269, 270, 270, 528, 528, 525, 525, 525,
	526, 526, 526, 527, 527, 527, 527, 524, 524, 524,
	524, 524, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 537, 537, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 539, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 542, 542,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 0,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 3, 3, 3, 6, 4, 9,
	7, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 5, 2, 0, 1, 2, 3, 1, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 7, 4, 7, 8, 8,
	9, 11, 5, 2, 6, 9, 4, 7, 7, 10,
	7, 10, 10, 13, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 1, 1, 5, 3, 3,
	2, 2, 6, 3, 3, 3, 3, 4, 4, 3,
	1, 3, 3, 2, 2, 1, 3, 3, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 3, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 5, 3, 5, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 7, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 12, 15, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 1,
	1, 1, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 2, 4, 8,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 9,
	5, 3, 1, 5, 9, 6, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 2, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 8, 11, 5, 4, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 16, 19, 15, 18, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 14, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 610, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 391, 437, 449, 406, 143, 428, 411,
	-144, -145, 467, -56, -69, -137, -136, 73, 130, 421,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -628, 102, -570,
	-93, -96, -129, -632, 164, 224, -115, -116, -117, 373,
	-123, -124, 430, -126, -127, -128, 433, 165, -64, -63,
	158, -223, -225, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 472, -180, -189, -158, 533, 49, 488,
	82, 148, 441, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -569, -94, -95, -98, -100, -101, -97, -99,
	429, -226, -224, 607, 548, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 570, 579, -229, -227, -228, -236, 459, 556,
	508, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, -320, 2, -299, -305, -306, -307, -298,
	-268, -539, -542, 4, -536, -540, 171, 234, 336, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 334, 329, 330, 331, 323, 324,
	320, 325, 321, 322, 326, 327, 333, 328, 338, 339,
	340, 343, 221, 345, 346, 349, 367, 353, 354, 355,
	358, 359, 362, 365, 366, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 378, 379, 381, 382, 383, 385,
	386, 387, 389, 391, 392, 394, 395, 397, 398, 399,
	400, 401, 402, 403, 405, 406, 408, 407, 409, 411,
	413, 414, 415, 421, 428, 422, 424, 425, 426, 427,
	429, 430, 431, 432, 433, 435, 436, 437, 439, 440,
	441, 442, 443, 445, 447, 448, 452, 453, 469, 470,
	490, 449, 450, 451, 454, 455, 456, 457, 458, 462,
	460, 461, 463, 464, 465, 467, 468, 471, 472, 474,
	475, 476, 477, 478, 479, 480, 483, 485, 486, 487,
	488, 507, 489, 491, 495, 496, 497, 498, 492, 493,
	506, 500, 501, 503, 504, 509, 510, 511, 512, 513,
	514, 515, 516, 518, 526, 527, 528, 530, 533, 534,
	535, 536, 524, 538, 539, 542, 543, 544, 547, 545,
	546, 548, 550, 553, 554, 555, 561, 560, 562, 563,
	565, 566, 571, 572, 574, 575, 576, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 125, 126, 155,
	167, 168, 180, 195, 196, 208, 210, 218, 219, 220,
	241, 242, 244, 249, 271, 342, 344, 360, 364, 380,
	384, 388, 390, 404, 444, 481, 494, 499, 519, 520,
	521, 522, 529, 531, 556, 557, 558, 564, 573, -320,
	2, -299, 351, -292, 2, -268, -268, 391, 28, 2,
	28, 379, 461, 511, 513, 2, -596, -365, 2, 28,
	-271, -268, 102, 206, 459, -292, 2, -596, 206, -365,
	25, 2, -268, 2, 365, 22, 27, 66, 77, 98,
	141, 166, 189, 192, -631, 367, 398, 447, 463, 506,
	516, 530, 2, 560, 292, 460, 508, 234, 120, 535,
	454, -610, 452, 453, 365, 396, 439, 209, 549, -272,
	2, 449, -268, 292, 2, 610, 94, 74, 444, 464,
	-147, 2, 282, 527, -148, -149, -146, 519, -523, 454,
	439, 314, -268, 610, 610, 610, 28, -281, -268, 508,
	234, 454, 120, 504, 610, 2, 508, 370, 560, 460,
	120, 401, 234, 535, 192, 141, 27, 454, -610, 584,
	585, 292, 127, -594, 2, -589, 4, -540, -536, -314,
	-313, 508, 514, 120, -307, -298, 599, -306, 610, 610,
	610, 610, 2, 252, 253, 400, 399, 464, 465, 28,
	610, 610, 610, 610, 452, 2, 166, 22, 27, 66,
	93, 98, 127, 189, 192, 356, -629, 367, 398, 463,
	506, 510, 516, 530, -609, 489, 68, 427, 454, -608,
	-610, 292, 535, 141, -416, 120, 282, 204, 543, 513,
	511, 541, 133, 240, 546, 545, 610, 610, -106, 2,
	607, 32, 31, -105, -109, 143, 467, -216, 508, 245,
	2, -268, 610, 610, 610, 2, 252, 253, 452, 453,
	28, 610, 610, 190, -589, 2, 610, 610, 610, 2,
	28, 252, 253, 452, 453, 245, 2, 68, 456, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 2, -191, 464, 489, 215,
	47, 46, 74, 28, 397, 79, 371, 121, 127, 150,
	536, 207, 234, 235, 260, 93, 94, -418, 44, 253,
	68, 252, 453, -615, 452, -470, 509, 455, 461, 503,
	264, 449, 527, 102, 550, 440, 576, 401, 402, 501,
	415, 283, 159, 191, 4, 120, 314, 439, 466, 268,
	267, 519, 282, 448, 374, 84, 610, -640, 2, 508,
	-642, 2, 527, 527, 2, -642, 2, -642, 2, -642,
	2, -643, 527, 573, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, -224, -226, -225, 610, 610, 610, 610, 610,
	610, 610, -191, 464, 2, 74, 28, -358, -360, 540,
	243, 152, 357, -223, -225, 2, -569, -521, 2, -444,
	-543, -446, 597, 598, 590, 505, 67, -324, 335, 577,
	-458, 127, 541, 351, -542, -447, -460, 155, 367, 444,
	-380, 8, 9, 5, 6, 7, -277, -448, -454, 532,
	170, 341, -317, 611, 10, 607, -566, -225, -459, 37,
	210, 65, -525, -316, -278, -497, 244, -315, -298, -563,
	-564, 4, -536, -537, -526, -500, -508, -504, -505, -511,
	-268, -539, 77, 111, 112, 110, 115, 114, 285, 284,
	116, 113, 466, 549, 66, 36, 218, 219, 249, 342,
	220, 75, -565, 142, -538, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 54, 557, -509, 122, 519,
	520, 521, 522, 195, 196, 58, 167, 168, 364, 388,
	499, 529, 531, 208, 271, 43, 106, 191, 239, 222,
	248, 250, 254, 272, 275, 315, 332, 337, 361, 363,
	438, 473, -646, 558, 494, 69, 70, -571, 407, -572,
	-292, -571, 610, 610, 612, 610, -349, -351, -353, 2,
	28, 139, 607, 2, -475, 2, -476, -480, -225, 265,
	-479, 607, -477, 605, -299, 352, -567, 445, -563, -564,
	-277, -298, -316, 4, -536, -538, 609, -354, 607, 120,
	454, 508, 78, 234, 93, 166, 192, -411, 607, -268,
	28, 351, 523, 612, -350, 395, -456, 607, 351, 354,
	190, 354, 60, 296, 2, 2, 2, 2, 2, 218,
	-268, 508, 119, 2, 263, 2, 2, 2, 2, 2,
	2, 2, -373, 218, 2, -299, 560, -373, 218, 2,
	-373, 218, 2, -417, 2, 87, -282, 218, 2, -268,
	-308, 218, 2, -303, -305, -312, 218, 2, -310, -268,
	-531, 218, 2, -529, 4, -536, 116, 466, -444, 2,
	-135, 2, 60, -268, 560, 2, 469, 2, 607, -147,
	2, 71, 527, 43, 464, -148, 2, -431, 2, -432,
	-264, -265, -266, -487, -267, 251, 394, 403, 580, 131,
	335, 576, -623, 190, 589, 523, -521, -521, -521, -381,
	609, 2, 2, 2, 2, 2, 2, -480, 218, -299,
	2, -296, -524, 4, -536, -540, -537, -541, -539, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 127, 131, 135, 139, 140, 144,
	148, 152, 170, 172, 185, 189, 190, 206, 209, 212,
	225, 238, 243, 245, 265, 269, 276, 284, 285, 335,
	341, 347, 351, 352, 356, 357, 377, 393, 410, 434,
	459, 466, 484, 502, 508, 517, 523, 525, 532, 540,
	541, 549, 551, 559, 567, 568, 569, 570, -542, 77,
	2, -480, 218, 2, -302, 218, -480, -305, 2, -282,
	2, -444, -603, 515, 162, 422, 2, -321, 218, -299,
	-301, -305, -303, 2, 2, 2, 2, -310, 2, -529,
	218, 2, 28, 28, 560, 395, 245, 523, 612, -371,
	-313, -314, -520, 8, -364, -268, 609, -444, 2, -135,
	-118, 2, 185, -444, 218, 2, -135, 218, 2, -444,
	218, 2, -135, 218, 2, -268, 2, -611, 2, -533,
	218, -528, 10, -527, 5, 4, -536, -540, -537, 218,
	-268, 2, 296, 2, 2, 530, 2, 98, 508, 119,
	2, 426, -630, 447, 534, 2, 2, 2, 2, 2,
	2, 2, 508, -287, 2, -268, 185, 492, -310, 218,
	-311, 2, 460, -641, 407, -529, 218, 2, 560, -303,
	218, 2, -303, 234, 247, -282, 218, 2, 513, 511,
	513, 511, 190, 2, 245, 2, 245, 2, -481, 2,
	-482, -476, -483, 605, 352, -491, 2, -490, -527, 556,
	-106, 607, -106, 607, 464, 607, -533, -299, -299, -444,
	2, -135, -118, 2, -444, 2, -135, 2, -268, 2,
	-132, -533, -131, 607, 190, -268, 2, -444, 2, -135,
	-118, 2, -444, 2, -135, 2, -216, 185, 2, 120,
	508, -191, 2, 185, 551, 2, 8, 2, 225, -533,
	455, 402, 177, 2, 469, 2, 470, 74, -418, 576,
	74, 190, 2, 190, 2, -401, 2, 570, 395, 190,
	2, 2, -593, 2, 351, 190, 2, 190, 2, 190,
	2, 190, 2, 190, 2, -190, 465, 528, 507, 399,
	253, 2, -135, 567, -118, 253, 252, -444, 567, 2,
	-616, 185, 453, -444, 2, 526, 262, 160, 190, -401,
	2, 190, 2, 190, 2, 5, 2, 400, 490, 2,
	251, 394, 490, 2, -299, 508, 560, 460, 120, 28,
	2, 452, 2, 2, 88, 89, 190, 2, 190, 2,
	205, 190, 2, 190, 508, -382, 609, 576, 2, -393,
	-480, -430, -431, -430, 523, -358, -360, -191, 469, 2,
	-230, -391, -232, 185, -421, -422, -233, 276, 172, 347,
	-234, -400, 28, 139, -400, -400, 60, 608, 608, 11,
	12, 76, 41, 597, 598, 599, 600, 183, 601, 602,
	595, 596, 594, 587, 588, 592, 257, 258, 95, 591,
	589, 86, 290, 446, 173, 174, 175, 176, 423, 232,
	34, 233, 14, 15, 16, -324, 33, 356, 275, 577,
	222, 473, 590, 17, 18, 19, 248, 250, 337, 50,
	225, -276, 367, -323, 505, 67, -444, -444, -444, -444,
	-444, -444, -444, -444, 363, 607, -387, -439, 605, -225,
	607, 607, 607, 607, -520, -225, -444, -458, 608, -378,
	607, -225, -458, -453, 607, 444, 605, 607, -461, -444,
	5, 5, 5, 607, 609, -574, 571, 185, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 390, -502, 607, -501, 607, -501,
	-501, 561, -499, 607, 579, 572, 607, -499, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 561, 612, -571, -354, 607, -383, -485, -444, 599,
	-383, -383, 351, -375, -444, 106, -404, 254, 315, 191,
	272, 438, 239, -441, 611, -441, -469, 579, -225, -477,
	-298, -225, -479, 607, -475, -469, -107, -520, -90, -103,
	-112, -135, -150, -195, -196, 599, -299, 607, 190, 607,
	609, -524, 190, -364, -282, -309, -268, -299, -315, -316,
	-321, -293, -268, 2, 2, 138, -375, -589, 535, 454,
	28, 460, -531, -271, 38, -455, -494, -495, -545, 611,
	-544, -497, -507, -503, -506, 380, 384, -526, 54, 557,
	-509, 244, 4, -536, -538, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 519, 520, 521, 522, 195,
	196, 58, 558, 494, 69, 70, -589, 535, 454, 28,
	460, 185, -531, 185, -531, 2, 2, 155, 2, 2,
	2, -268, -246, 612, 64, 431, 155, -373, 218, -246,
	155, -246, 155, -322, 218, -321, -246, 155, -246, 612,
	155, -246, 612, 155, 609, 612, 155, -531, 2, -417,
	-523, -375, 38, -431, 2, 127, 4, 5, -644, 612,
	274, -327, 289, 334, 214, 352, 574, 345, 131, -532,
	5, 4, -454, -466, 127, 282, 244, -514, -516, 8,
	-515, 9, -517, 597, 598, -522, -521, 109, 609, -524,
	-243, 424, 467, 366, -242, 24, 29, 143, 236, 319,
	554, 161, -339, 237, 429, -336, 370, 155, 485, 544,
	-603, -606, 451, 515, 162, 422, 90, 345, 467, 366,
	424, 155, -397, -399, 38, 118, 319, 365, 61, 228,
	294, 295, 488, 564, 155, 467, 366, 424, 366, -13,
	-257, 24, 143, -259, -254, 467, -606, 99, 424, 583,
	429, 376, 500, 393, -606, -603, 270, -605, 566, 333,
	-245, 485, 544, -603, -606, 451, 424, -244, -341, -336,
	370, 155, 611, 24, 143, 424, 467, 366, -626, -627,
	29, 424, 366, -597, -289, -568, 225, 570, 155, -289,
	-289, -480, 218, -620, 185, 2, -613, -131, 266, 5,
	10, -533, -131, -371, 612, 612, -524, 599, 453, 452,
	155, 155, 155, 155, 253, 185, 335, 335, 570, 2,
	2, 2, 2, 2, 192, -608, -631, 2, 2, -299,
	218, -356, 351, -592, -372, 508, -299, 185, 335, 43,
	-302, 218, 2, -305, 560, -597, 335, -304, 218, -299,
	38, 607, 335, 2, -417, 2, 234, -568, 335, -481,
	-318, -299, -476, -318, 467, -292, 38, -441, -299, 608,
	612, -491, -491, -533, -204, 570, 190, 607, -216, 570,
	570, 253, -488, 612, -487, 225, -534, -533, -132, -533,
	427, 253, -533, -592, -282, 2, -299, 2, 508, 255,
	-533, -204, 225, -533, -533, -533, -523, 28, 470, 2,
	-190, 465, 528, 89, 470, 2, -299, 508, 120, 234,
	80, -620, 185, 2, -268, -595, 185, -590, 439, 454,
	535, -589, -299, 120, -299, 120, -299, 120, -299, -299,
	2, 2, 2, 2, 2, 85, 2, -135, -444, 2,
	85, 2, 46, 486, -616, 185, 2, 526, 2, 526,
	2, -268, -268, -268, 489, 274, -299, -299, -299, -300,
	-305, 455, 509, 536, 453, -444, 2, -633, 2, 190,
	185, 2, 508, 234, 508, 234, 120, 190, 74, 120,
	28, 508, 450, 609, 4, -246, 612, -272, -230, -391,
	-523, -392, -391, -231, -230, -233, 185, 403, 545, 319,
	471, 259, -422, -421, 28, -444, -426, 179, 318, -444,
	-424, -446, 597, 598, -515, -517, -374, 345, -224, -224,
	-224, -361, -471, -444, 393, 234, -496, -494, -494, -297,
	-524, 519, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, 275, 222,
	473, 50, 225, -444, 523, -444, -444, -444, -444, 312,
	335, 341, 532, 170, 542, 139, 345, -647, 502, 40,
	-451, -225, -379, 607, -465, 35, 484, 28, -458, 607,
	2, -439, -444, -440, -325, -323, -268, 597, 598, 599,
	600, 601, 602, 587, 588, 589, 14, 15, 16, 592,
	596, 594, 595, 183, 95, 591, 290, 446, 86, 173,
	174, 175, 176, 257, 258, 17, 18, 19, 34, 590,
	-376, -375, -375, 608, 559, 28, 139, 599, 2, 608,
	612, 38, 608, -444, -376, -457, -453, -375, -464, -463,
	567, -412, -413, 575, 299, 123, 216, 297, -414, 458,
	-518, 8, -524, 599, -575, 178, 209, 607, 608, 2,
	608, 2, 608, -444, 2, 608, -444, 2, 608, -444,
	2, 608, -444, 2, 608, 2, 608, 2, -444, -444,
	-444, -444, -444, -444, -444, -375, 8, -518, -518, 519,
	519, -518, -518, -518, -510, 380, 381, 382, 383, 277,
	278, 279, 280, 384, 385, 386, 387, 304, 305, 306,
	307, 300, 301, 302, 303, 308, 309, 310, 311, 200,
	201, 202, 203, 196, 197, 198, 199, -510, -406, 2,
	-512, -375, 4, 575, 299, 123, 216, 297, 458, 5,
	-406, 2, -407, 2, -444, -375, -408, -445, -446, 597,
	598, 590, -324, -458, -409, 2, -444, -376, -444, 57,
	269, 525, -410, -444, 190, -375, -375, 2, -375, 2,
	-572, 38, -375, -367, 612, 190, 38, 4, -367, -367,
	607, 608, 612, -405, 213, 293, 288, 247, -405, -475,
	-404, 254, -402, 361, -402, -402, -469, -283, 605, 613,
	-524, -469, -468, -467, 38, -292, 358, -469, -469, 609,
	608, -468, 606, -587, 607, 610, 610, 610, 610, 610,
	-299, 607, -375, -524, 609, 491, 2, 608, 248, 248,
	248, 248, 248, 351, 445, 608, 523, -591, -308, -312,
	509, 2, 570, -105, 353, 608, 612, -366, 37, 605,
	609, -518, 2, 2, -513, 561, 607, 607, -413, 607,
	190, -591, -312, 509, 2, -596, -365, -365, 523, -268,
	2, -299, -373, -246, 155, -373, -373, -246, 612, 155,
	-282, -303, -308, -310, -312, -268, -529, -531, -246, -304,
	-623, 608, 527, -432, -326, 403, 483, 425, 462, 504,
	8, 9, 8, 9, 612, -524, 612, -624, 93, 523,
	78, 607, 454, -261, 283, 523, -435, 218, 78, -546,
	93, -285, -547, -268, 72, 541, 393, 189, 153, -624,
	93, 393, -624, 93, 2, 236, 93, 467, 489, 607,
	28, 60, -480, 41, 41, 28, -604, -605, 270, 190,
	576, 508, 234, 454, 523, 523, -480, -399, -494, 118,
	294, 295, 60, -519, -514, 597, 598, -519, 60, -519,
	-519, -519, 570, -302, -480, 454, 523, 523, 523, 413,
	413, -254, -148, 523, 523, 28, -191, 432, 127, -645,
	589, 413, 270, -605, 523, 190, 612, 41, 41, 28,
	-604, 190, 523, -321, -283, 555, 42, 555, 42, 555,
	523, 42, 454, 523, 612, 42, 523, 523, -13, 467,
	-598, -273, 105, 325, 287, 326, 97, 322, 96, 321,
	103, 323, 104, 324, 562, 338, 563, 339, 63, 320,
	298, 327, 487, 328, -274, -275, 146, 372, 553, 120,
	-529, -13, -13, 467, 366, 424, 155, -621, 225, 28,
	-610, 225, -488, 225, -488, -313, -268, 609, -135, -444,
	-444, -135, -444, -135, 46, 155, 155, 2, 2, -641,
	263, 607, -330, 335, 190, -364, -489, 245, 612, -372,
	-589, 155, -529, -398, -397, 335, -304, 218, 2, 155,
	-354, 335, 149, 607, 401, 2, 155, -284, 218, -269,
	-268, -417, -248, 512, 155, -395, 551, -427, -135, 607,
	127, 38, -427, -384, -385, -486, -386, -285, 607, -292,
	-441, -106, -490, 608, 608, 608, -203, 355, -202, -268,
	5, -216, -355, -286, -285, 119, 405, 405, -210, 570,
	-131, -132, 608, 612, -488, 225, 492, -204, -204, -488,
	-488, -299, 185, -533, -204, -204, -204, 2, 2, 2,
	2, -401, -299, -282, -321, -299, 28, 609, -531, -531,
	-312, -308, -401, -282, -401, -282, -401, -282, -401, -401,
	-135, -444, 489, 2, 464, 185, 185, 609, -401, -357,
	434, 2, 401, 120, 508, 370, 234, -299, -321, -299,
	-321, -282, 120, -282, 121, -299, 4, -480, -392, -231,
	352, 259, 471, -424, -425, -446, 444, 445, -425, 444,
	445, 8, 9, 8, 9, -235, 475, 340, -373, 612,
	-240, 39, 135, 259, -299, 576, 151, -444, -444, 523,
	-647, 502, -451, 151, -444, 312, 341, 532, 170, 542,
	139, 345, 190, 607, -445, -445, 608, -377, -444, -444,
	606, 615, 608, 609, 608, -360, 612, -358, -444, -375,
	-375, 608, 609, -375, -364, 606, 606, 612, 608, -462,
	-463, 144, -444, 523, 523, 523, 523, 607, 608, 609,
	-580, 362, 607, 607, -444, 608, 608, 608, 608, 38,
	612, 612, 612, 608, 612, 612, 612, 608, 608, 608,
	612, 608, 576, 576, 608, 608, 608, 608, 612, 608,
	612, 608, 190, 608, 608, -415, 377, 608, 11, 12,
	597, 598, 599, 600, 183, 601, 602, 595, 596, 594,
	587, 588, 589, 86, 290, 446, 14, 15, 16, -324,
	248, 225, -445, -445, -445, -445, 608, -449, -450, 190,
	185, 38, -410, -410, -410, 608, 190, -375, 608, 608,
	607, -573, 292, 335, 608, -438, -437, 568, -485, -368,
	2, -475, -294, -524, -438, -438, -375, -444, 254, 254,
	-403, 551, 351, -405, -475, -468, -520, -443, -442, 187,
	39, 135, 329, 330, 331, 221, 188, -468, -292, -354,
	-468, -468, -524, -469, -469, -467, 608, -588, -520, 608,
	-369, -478, -567, -360, 609, -524, -213, -568, -192, 5,
	341, -192, -192, -192, -192, -299, -531, 523, 523, 225,
	25, 378, -494, 605, 606, 8, -524, 607, -518, -518,
	-518, -531, 190, 190, 225, 351, 190, -529, 2, -246,
	-373, -246, -246, -321, -322, -246, -246, -246, -396, 570,
	-521, -431, 539, 83, 403, 519, -521, -242, 424, 467,
	-285, -285, -299, -220, -219, -217, -268, 5, -309, 204,
	414, -529, 335, -435, 218, -247, 335, 218, -293, -494,
	607, -419, 572, 259, 259, 551, -285, -293, 259, 218,
	-285, 218, -293, 2, -293, -599, 403, 346, -444, -218,
	-217, 60, -337, 281, 401, 336, -243, 424, 467, 366,
	-135, -135, -135, 607, -623, 551, 138, -299, -321, -299,
	-309, -529, -304, 467, 366, 424, 332, -315, -519, -519,
	-397, 467, 366, 424, -309, -529, -302, -529, -253, 218,
	-268, -253, 218, 454, -282, 413, 576, 45, -645, 523,
	190, -444, -444, -244, -135, -135, -135, 607, -283, -245,
	424, 5, 218, -285, 5, -285, 218, 5, -268, -285,
	-309, -529, -627, 24, 143, -285, -309, -529, -273, 372,
	-533, 341, 547, -282, -597, -289, 454, 523, 523, -480,
	-617, -618, 206, 437, 454, 440, -531, -131, -207, 570,
	-131, -201, 229, 599, -594, -533, -268, 560, -268, -328,
	-331, -329, -285, -436, -435, -550, -551, -546, 275, 234,
	541, 247, 171, 93, -221, -222, 572, 570, 155, -319,
	-299, 605, -204, -533, -299, -489, -310, -311, 155, -354,
	335, -529, 38, 155, 607, 2, 2, -303, 351, 335,
	-284, 218, -249, 145, -645, -282, -438, -368, -394, -429,
	434, 351, -355, 556, -292, -394, -370, 612, 190, 589,
	609, -355, -484, 599, -106, -106, -204, 612, 607, 589,
	589, 607, -533, 608, 612, 609, 607, 589, 589, -212,
	355, -211, 147, 261, 246, 477, 478, 479, 480, 137,
	476, 124, 317, 230, -488, -533, -210, -132, 190, 190,
	-65, 570, 508, -204, 611, 440, -268, -401, -401, -401,
	464, 464, -268, -364, -295, -524, -282, -299, -296, -321,
	185, 185, -282, 545, -425, 352, 286, -471, -241, 578,
	-299, 611, -444, -444, 151, 151, -444, -445, -445, -444,
	151, 190, 607, -444, -455, 33, 33, 608, 612, -440,
	-444, -323, 608, 559, -360, -360, 608, 599, -524, 611,
	608, -453, 148, -444, 517, 299, 216, 297, -414, 297,
	-414, -414, -518, 5, -524, 599, -581, -288, 607, -268,
	568, -359, 357, 608, -496, -494, -444, -444, -444, -444,
	-444, -518, -499, -499, -514, -514, -444, -449, -444, -496,
	-494, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, 139, 335, 345, -445, -450, -449, -444, -444, -494,
	608, 608, 608, -375, -105, 607, 292, -388, 209, -444,
	-488, 612, -388, -388, 608, -475, -475, 607, -444, 254,
	606, 612, 614, 589, 589, -354, 609, -467, -468, 606,
	608, 612, 608, 612, -428, 38, 608, -524, -438, -215,
	-214, 136, 53, 107, 134, 341, 248, -619, 570, -531,
	-531, 454, 354, 5, 8, 605, 606, 609, -518, 608,
	608, 608, -531, -531, 454, -589, 535, 454, 28, -531,
	-246, -246, 119, 319, -444, 523, 523, 608, 612, 589,
	60, 225, 155, 335, 553, 335, -547, 153, -552, -444,
	607, 234, 607, 607, 2, -237, -238, -239, 143, 467,
	24, -625, 2, 551, 155, -246, 155, -246, 574, 608,
	612, -337, 607, 607, 523, 454, -261, 523, 570, -375,
	-444, -205, 127, -523, -606, 611, -606, 611, 454, 523,
	523, 454, 523, 523, 335, 155, 570, 169, 169, 576,
	-253, -444, -444, 185, 523, 570, -375, 523, -498, 48,
	26, 335, -303, -246, 155, 523, 523, 535, 467, -533,
	-533, 341, -13, -309, -529, -304, 467, 366, 424, -596,
	-596, 206, -312, -621, -488, -209, 355, -208, 147, 436,
	137, 261, 230, -488, -207, 190, 245, 570, -304, 2,
	608, 608, 612, 612, -553, -247, -299, -284, 234, 234,
	-291, -269, 38, 349, 349, 607, -299, -86, 570, -487,
	-520, -600, 570, 43, -302, 38, 155, -597, -135, -304,
	-492, -493, 5, 38, -299, 155, 351, 335, -250, 268,
	-645, -528, -568, -360, -394, -383, 336, 91, 608, -438,
	-385, -368, -444, 2, 608, -202, -203, -533, -533, -533,
	-204, -216, -286, 2, -534, -533, -533, 612, 607, 589,
	589, 589, 589, 589, 589, -210, -488, -131, -135, 355,
	-299, 599, -401, -343, -342, 370, 345, -343, 444, 444,
	352, 179, 264, -240, -283, -444, -444, 151, 33, 33,
	-444, -444, -455, 608, -444, -444, -375, 606, 5, -444,
	608, 608, 8, -444, 608, 609, -582, -268, -444, 608,
	60, 608, 608, 612, 612, 608, 608, 608, 608, 608,
	608, 608, -450, 190, 139, 345, 607, 608, 608, -105,
	-452, 212, 60, -475, -452, -452, -403, -364, -475, -442,
	-283, 605, -283, 605, -524, -520, -478, 607, 609, -214,
	589, -533, -533, -192, 206, -619, -619, 570, -312, 606,
	2, 605, -524, 608, -312, 190, -591, -312, 509, 119,
	-285, -285, -219, -521, 508, 444, -253, 393, -435, 155,
	155, -554, 93, -556, 76, 171, 102, 335, 341, 541,
	393, 72, 127, 351, 410, -635, -636, -637, 38, 581,
	582, 608, -362, -472, -567, 607, -268, -362, -364, 335,
	497, 127, 351, 335, 127, 351, 565, 119, 2, 535,
	79, -285, -293, -217, -364, -364, -299, -309, -529, 163,
	608, 612, 589, 2, 599, 599, -309, -529, -304, -309,
	-529, -302, 155, -253, 368, 169, 523, -135, -444, 163,
	608, -283, 5, 5, 155, -280, 76, -285, 5, -285,
	-303, 119, 454, 523, 523, 351, 351, 354, -617, -618,
	-207, 612, 607, 589, 589, 589, -207, -534, -131, 2,
	-354, -344, 236, -285, -551, -548, -549, 393, -436, -555,
	-557, 171, 393, -332, 607, -284, -269, 607, -135, 2,
	-220, 607, -330, 355, 606, -602, 355, -601, 117, 137,
	-529, -398, -135, -304, -352, 570, -354, 608, 612, 149,
	-420, 551, -283, -299, 155, -251, 267, -645, -528, -248,
	-423, -421, 140, 607, 351, -135, -360, 589, 608, 608,
	119, 608, -211, -212, -533, -131, -533, -533, -533, -131,
	-210, -488, -66, -67, 234, 93, 375, -296, 508, 234,
	607, 607, -240, -444, -444, -444, 608, -360, -524, 599,
	-576, 370, 608, -471, -444, -444, -445, 190, 607, -455,
	608, -577, 569, -444, -389, -390, -444, 442, 108, 210,
	-577, -577, 608, -520, -520, 2, -533, 354, 2, 523,
	605, 2, 190, -531, 190, 190, 225, 225, 38, 413,
	-435, -293, -293, -297, -290, -268, 171, 218, 341, 565,
	-419, 259, 607, -445, 545, -299, 607, 2, 217, 217,
	30, 60, -638, 131, 238, 608, 612, -473, -279, -268,
	-444, -473, 608, 608, 341, 545, 341, 565, -444, 545,
	-494, 607, -246, -246, 608, 608, -444, 523, -523, 100,
	-521, 2, -606, -253, -282, -444, 185, -444, 523, 5,
	-246, -297, -246, -246, -280, 535, -309, -529, -304, -622,
	509, 461, 536, 455, 193, 443, -622, 185, -208, -209,
	-533, -131, -131, -207, 38, -338, -339, 2, -553, 259,
	-290, 259, 227, 154, -362, 607, 607, -364, -634, 570,
	608, -328, -221, -87, -88, 524, -487, 612, 607, 589,
	-354, 319, 119, 38, 5, 607, 607, -268, 351, 607,
	-283, -263, 92, -645, -528, -249, -394, 336, -364, 93,
	-423, -451, -204, 607, -204, 608, 612, 28, 607, 28,
	607, -299, -321, -375, -375, 608, -360, 60, 612, 608,
	608, -445, -455, 608, -578, -579, -288, 612, 607, 607,
	468, 606, 606, -531, 2, -531, -531, -531, 454, -253,
	393, -268, -547, -556, -290, 335, 551, -444, -445, -270,
	607, -444, 607, 607, 38, 127, 238, 132, 223, -434,
	-639, 101, 498, 226, -472, -240, 608, -433, 551, 410,
	-445, -280, -362, 607, 607, 607, 589, 190, -135, 607,
	-498, -246, -303, 523, 2, 2, 190, -596, 608, -612,
	408, -135, -221, 607, -333, 81, 94, 128, 217, 194,
	235, 489, 495, 28, -333, 608, -362, -362, 608, -334,
	351, 119, 319, 608, 38, -88, 9, -601, -602, -444,
	38, 119, -135, -492, -362, -299, -362, 351, -255, -254,
	276, -528, -250, 608, -293, -394, -534, -67, -364, -364,
	608, 608, -583, 401, 445, 211, -375, -361, 608, 612,
	38, -390, 2, 2, 2, -619, -312, 413, -247, 155,
	213, 608, -558, 291, -268, 608, -398, -398, 38, 132,
	223, -340, -336, 607, -241, -473, 213, -299, -607, 551,
	608, -346, -345, -342, -348, -347, -342, -375, -521, 100,
	368, -375, -280, -531, -531, 351, -614, 191, -613, 5,
	10, -334, -363, -474, -285, -433, 608, 608, 82, 119,
	-344, -135, 608, -135, 2, -352, 608, 608, -420, 608,
	-299, -252, -535, 413, 415, -645, -251, -438, 140, 608,
	608, 608, 608, -584, -585, 50, 538, 109, -444, -584,
	-584, -579, -581, 190, 171, 579, -559, -562, -561, 586,
	474, 191, 369, 608, 497, 564, 608, 608, -638, -364,
	579, -354, -444, -433, 608, 612, 556, 608, 612, 556,
	608, 190, 608, -246, -619, -246, -622, -206, 570, 46,
	-262, -261, 608, 612, -434, -433, -340, 392, 133, 143,
	-338, -634, -433, 607, -434, 607, -260, -259, -645, -514,
	-263, 140, 336, 545, -204, -586, 153, -585, 389, 184,
	444, 389, 184, -586, -586, -531, -290, 55, -561, 586,
	-562, 586, 545, 133, -438, 608, 55, -558, -345, 225,
	-347, 190, 368, 190, 452, -613, 30, -474, -340, -434,
	-222, 570, 445, 445, 2, -221, -334, -434, -362, -340,
	-362, -256, -257, -258, -364, -255, 336, 545, 467, 109,
	209, 518, 319, 33, 589, -560, 319, 431, 64, 467,
	-560, 589, -559, 607, 607, -531, 355, -222, -340, -438,
	2, -334, -340, 608, -222, 608, -530, 366, -252, 467,
	-384, 444, 359, -585, -444, 23, 341, 127, -444, -638,
	-375, -375, -246, -203, 607, -438, -222, -262, -222, -433,
	-438, -434, -645, -260, -384, -438, 608, 608, -203, -438,
	-438, -434, -340, -529, -256, -438, -335, -336, 523, 608,
	-340, -222, 607, -222, -438, -375, -438, 608, -335,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 565, 566, 568, 569, 570, 572,
	573, 575, 577, 579, 580, 581, 583, 584, 586, 587,
	588, 589, 590, 592, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	665, 667, 0, 1448, 1450, 1452, 1454, 0, 821, 0,
	36, 37, 39, 0, -2, 342, 344, 346, 348, 0,
	380, 382, 383, 385, 387, 388, 389, 391, -2, 0,
	498, 499, 501, 503, -2, 0, 1035, 1037, 1039, 0,
	654, 656, 0, 1042, 1044, 1046, 0, 0, 677, 678,
	0, 1562, -2, 669, 671, 673, 675, 746, 748, 750,
	752, 754, 756, 758, 760, 762, 764, 765, 767, 769,
	771, 773, 775, 776, 778, 780, 782, 783, 785, 786,
	788, 790, 792, 794, 796, 798, 800, 802, 804, 806,
	808, 810, 812, -2, 815, 816, 817, -2, -2, 0,
	-2, -2, -2, 1466, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 442, 444, 446, 448, 450, 453,
	455, 457, 1620, 505, 507, 509, 511, 513, 515, 517,
	0, -2, 1634, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1593, 1595, 1597, 1599, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 567, 571, 574, 576, 578, 582, 585,
	591, 593, 595, 550, 551, 554, 2332, 2350, 2351, 2352,
	2355, 2356, 2357, 2358, 2359, 2360, 2822, 2903, 2904, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 552,
	553, 1229, 0, 619, 617, 2317, 620, 2616, 622, 624,
	492, 493, 494, 495, 496, 497, 0, 647, 633, 1632,
	648, 650, 651, 652, 653, 614, 612, 0, 652, 647,
	2386, 645, 1446, 1447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 421, 1288, 1289, 1290, 1431,
	1432, 2664, 1473, 0, 241, 666, -2, -2, 2787, -2,
	700, 701, -2, -2, 715, 719, 710, 2791, 0, 2667,
	2651, -2, 722, 1449, 1451, 1453, 819, 820, 2336, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 251, -2, -2, -2, -2,
	0, 0, 2713, 2438, 2285, 2352, 2288, 2283, 343, 345,
	347, 349, 350, 0, 0, 0, 0, 0, 0, 0,
	381, 384, 386, 390, -2, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 1101,
	1102, 1353, 0, 0, 0, -2, 500, 502, 555, 556,
	0, 1621, 1621, 563, 564, -2, 0, 0, 0, 0,
	313, 303, 1036, 1038, 1040, 1041, 0, 0, 0, 0,
	0, 655, 657, 0, 0, 281, 1043, 1045, 1047, 1048,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 670,
	672, 674, 676, 747, 749, 751, 753, 755, 757, 759,
	761, 763, 766, 768, 770, 772, 774, 777, 779, 781,
	784, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, 811, 813, 814, 827, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 929, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 1016, 0, 0, 830, 833, 834, 835, 836, 837,
	838, 0, 902, 927, 928, 938, 818, 0, 1269, 1622,
	1475, 1456, 1470, 1475, 1458, 1459, 1460, 1461, 1462, 1467,
	1469, 1463, 1464, 1465, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 443, 445, 447, 449, 451, 454,
	456, 458, -2, 1591, 1592, 506, 508, 510, 512, 514,
	516, 518, 658, 0, 660, 0, 832, -2, 0, 1626,
	1626, 1626, 0, 0, 1592, 1590, 0, 663, 664, 726,
	727, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	2159, 1987, 0, 728, -2, 2020, 2022, 2762, 2589, 2787,
	2158, 2024, 2025, 2026, 2027, 2028, 0, 2030, 2031, 2032,
	2033, 2034, 2035, 0, 2037, 0, 2042, 2043, 2044, 0,
	2769, 2262, 2346, -2, 0, 0, 2775, 2342, 0, 2125,
	2060, -2, -2, 2369, 2348, 1831, 1832, 1833, 1834, 1835,
	-2, -2, 2805, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 0, 2750, 2770, 2771, 2776, 2778,
	2772, 2759, 2085, 2452, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1858, 1867, -2,
	-2, -2, -2, -2, -2, -2, 2763, 2764, 2781, 2784,
	2790, 2795, 2796, 2768, 2777, 2804, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 1859, -2, -2, -2, -2, 1609, 2630, 1612,
	1229, 1610, 1594, 1596, 0, 1598, 0, 0, 0, 1603,
	1629, 1627, 0, 1678, 1607, 1608, 1701, 1701, 1725, 0,
	1706, 0, 1725, 1621, 1752, 0, 1712, 2656, 2061, 2062,
	0, 2352, 2347, -2, -2, 2802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 621,
	623, 0, 0, 0, 646, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 425, 426, 427, 428, 2770,
	0, 0, 0, 433, 0, 435, 436, 437, 438, 439,
	440, 441, 211, 2770, 523, 548, 0, 211, 2770, 526,
	211, 2770, 529, 0, 532, 1351, 211, 2770, 535, 2313,
	211, 2770, 538, 540, 2321, 211, 2770, 544, 2328, 2326,
	545, 0, 547, 231, 227, 228, 229, 230, 1442, 1443,
	1444, 1445, 0, 1472, 1352, 668, 0, 694, 0, 698,
	699, 2758, -2, 0, 2676, 703, 704, -2, 706, 1476,
	1480, 1481, 1482, 1483, 1484, 0, 0, 0, 0, 1489,
	0, 0, 0, 0, 695, 696, 713, 714, 720, 723,
	0, 822, 823, 824, 825, 826, 71, 0, 2770, 1752,
	73, 0, 2307, 2377, 2378, 2379, 2380, 2381, 2803, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893,
	2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2805,
	77, 0, 2770, 82, 0, 2770, 0, -2, 95, 0,
	108, 0, 135, -2, -2, -2, 116, 0, 2770, 0,
	2282, -2, 0, 223, 304, 305, 306, 0, 1073, -2,
	0, 1282, 1284, 1284, 0, -2, 0, 0, 0, 1026,
	2279, 2284, 1027, 2303, 1028, 2289, 0, 351, 352, 353,
	354, 355, 0, 356, 2770, 358, 359, 0, 361, 362,
	2770, 364, 365, 0, 367, 0, 369, 0, 263, 267,
	2770, 316, 317, 2365, 2366, 2373, 2374, 2375, 2376, 2770,
	394, 397, 0, 399, 400, 0, 402, 0, 0, 0,
	406, -2, 422, 0, 419, 409, 410, 412, 413, 414,
	415, 416, 0, 462, 460, 2318, 0, 0, -2, 2770,
	0, 1070, 0, 0, 1331, -2, 0, 1275, 0, 1338,
	2770, 1334, 0, -2, 0, 1619, 2770, 1493, 1105, 1106,
	1107, 1108, 1764, 489, 0, 1526, 0, 1528, 0, 1548,
	1758, 1701, 0, 0, 1763, 0, -2, 608, 2335, -2,
	558, 0, 559, 0, -2, 0, 330, 0, 0, 1051,
	1053, 1054, 1056, 1057, 1060, 1061, 1062, 1063, 0, 1065,
	1738, 282, 284, 0, 0, 0, 1050, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 0, 0, 679, 0,
	0, 828, 829, 0, 0, 845, 846, 847, 0, 330,
	2668, 2625, 2474, 854, 0, 857, 860, -2, 0, 0,
	0, 0, 864, 0, 869, 870, 871, 0, -2, 0,
	878, 880, 1034, 882, 0, 0, 884, 0, 888, 0,
	891, 0, 893, 0, 895, -2, -2, -2, 903, 904,
	-2, 909, -2, 0, 913, -2, 0, 916, 0, 919,
	-2, 0, 929, 925, 926, 0, 0, 0, 0, 946,
	947, 0, 956, 0, 959, 960, 961, 0, 965, 966,
	0, 968, 969, 970, 971, 0, 2740, 2673, 2438, 0,
	979, -2, 985, 987, 0, -2, 0, 1003, 0, 1007,
	0, 0, 1015, 0, 0, 831, 0, 839, 840, 211,
	1756, 1455, -2, 1457, 0, -2, 0, 659, 0, 662,
	1651, 1577, 1574, 0, 1648, 1649, 1578, 0, 0, 0,
	1585, 0, 1624, 1625, 0, 0, 0, 1564, 1565, 0,
	0, 0, 0, 2164, 2165, 2166, 2167, 2180, 2168, 2169,
	2179, 2177, 2178, 2170, 2171, 2176, 2190, 2191, 2181, 2182,
	2172, 2185, 2183, 2184, 2186, 2187, 2188, 2189, 0, 0,
	2195, 0, 2173, 2174, 2175, 2203, 0, 0, 2204, 0,
	2206, 0, 2196, 2192, 2193, 2194, 0, 1966, 1968, 2270,
	0, 0, 0, 2202, 2197, 2198, 1904, 1905, 1906, 1907,
	1908, 1941, 1945, 1946, 0, 0, 2021, 2267, 2266, 2023,
	0, 0, 2218, 0, 2036, -2, 0, 2159, 2213, 0,
	0, 2045, 2046, 2047, 0, 0, 2218, 0, 0, 2261,
	2057, 2058, 1896, 0, 0, 2127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 1844, 0, 1846, 0, 1847,
	1848, 1855, 1868, 0, 0, 0, 0, 1872, 0, 0,
	0, 0, 0, 0, 0, 2242, -2, 0, 0, 0,
	0, 1860, 0, 1611, 0, 0, 1682, 2271, 2275, 2276,
	1682, 1682, 0, 0, 2219, 1749, 1749, 0, 0, 1744,
	1744, 1744, 1742, 1725, 0, 1725, 1735, 0, 1725, 1725,
	0, -2, 1706, 0, 0, 1735, 0, 1719, 596, 598,
	600, 602, 603, 604, 606, 1753, 1754, 0, 0, 0,
	0, 2353, 0, 0, 0, 0, 2325, 0, 0, 2338,
	0, 0, 2312, 376, 377, 0, 0, 0, 2723, 2667,
	0, -2, 626, 649, 1621, 0, 2221, 1779, 1783, 0,
	1785, 1786, 1787, 1788, 1789, 0, 0, 1780, -2, 1856,
	1858, 1879, 2370, 2371, 2372, 1839, 1840, 1841, 1842, 1843,
	1851, 1838, 1838, 1838, 1849, 1878, 1870, 1878, 1874, 1824,
	1825, 1826, 1861, 1862, 1863, 1864, 0, 2723, 2667, 0,
	-2, 0, 636, 0, 0, 1559, 423, 0, 430, 431,
	432, 0, 519, 0, 209, 210, 0, 211, 2770, 524,
	0, 527, 0, 211, 2770, 2277, 533, 0, 536, 0,
	0, 542, 0, 0, 0, 0, 0, 211, 1561, 0,
	0, 0, 0, -2, 708, 716, 717, 718, 0, 1478,
	0, 1485, 737, 738, 739, 1487, 1488, 0, 1490, 711,
	740, 741, 742, 743, 744, 745, 0, 2291, 2292, 2293,
	2294, 2297, 2298, 0, 0, 709, 730, 712, 0, 724,
	117, 1428, 0, 0, 164, 0, 1428, 1428, 0, 0,
	0, 0, 192, 0, 0, 1139, 0, 0, 0, 0,
	135, 149, 160, 129, 130, 131, 0, 0, 0, 0,
	0, 0, 83, 1251, 0, 1254, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 97,
	98, 0, 0, 103, 104, 0, 148, 0, 0, 0,
	0, 0, 1523, 0, 139, 135, 0, 0, 134, 136,
	119, 0, 0, 135, 150, 162, 0, 198, 200, 1136,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 233,
	0, 0, 0, 1276, 0, 0, 0, 1618, 0, 0,
	0, 0, 2770, 1426, 0, 1411, 0, 1738, 2523, -2,
	-2, 282, 1738, 1025, 0, 0, 2353, 2287, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 398,
	401, 403, 404, 405, 0, 1330, 0, 411, 452, 1199,
	2770, 0, 0, 479, 474, 0, 476, 0, 0, 0,
	1250, 2770, 1248, 2322, 0, 1273, 0, 1229, 2770, 2320,
	0, 0, 0, 1339, 2362, 1348, 1352, 1511, 0, 491,
	0, 1529, 1531, 0, 0, 1759, 0, 1761, 1701, 1621,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 1064, 288, 0, 1737, 0, 0, 318, 1738, 282,
	2642, 1049, 330, 330, 1738, 681, 1738, 683, 0, 0,
	848, 849, 0, 330, 330, 330, 855, 856, 858, 859,
	-2, -2, -2, -2, 861, 862, 953, 0, 0, 0,
	952, 872, 0, 874, 877, 881, 0, 1019, 2651, 2667,
	2723, 1032, 953, 2438, 953, 2438, 953, 2438, 953, 953,
	897, 941, 949, 908, 915, 0, 910, 914, 917, 920,
	0, 922, 930, 0, -2, 0, 933, 0, 935, 0,
	937, 953, 954, 957, 964, 967, 972, 973, 974, 975,
	2333, 976, 977, 978, -2, 982, 983, 0, 994, 999,
	1000, 996, 0, 0, 0, 0, 0, 0, 1010, 1011,
	0, 0, 1018, 0, 841, 1268, 0, 1468, 1651, 1577,
	661, 1568, 1650, 1569, 1576, 1579, 0, 0, 1581, 0,
	1583, 0, 1646, 1647, 1654, 1655, 0, 1665, 1666, 1658,
	0, -2, 0, 0, 1661, 1662, 1587, 0, 1604, 1605,
	1606, 1635, 1638, 1367, 0, 2903, 1900, 1774, 1901, 1902,
	2306, 0, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, -2, -2, -2, -2, -2, -2, -2, -2,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, -2, -2, -2, 1942, 1943, 1944, -2, 2205, 2207,
	0, 2270, 0, -2, 0, -2, -2, -2, -2, 1963,
	0, 1965, 1970, 1972, 1974, 0, 0, 0, 0, 2269,
	1984, 2253, 2254, 0, 0, 2161, 2162, 2163, 1969, 0,
	1988, 2268, 2265, 0, 0, 2199, 0, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	0, 2217, 1634, 2049, 0, 0, 0, 0, 2056, 2041,
	2215, 0, 2214, 0, 0, 0, 2225, 0, 2260, 2256,
	0, 2304, 1895, 1882, 1883, 1884, 1885, 1886, 1887, 1897,
	0, 2301, 2339, 2345, 2135, 0, 0, 0, 2086, 2087,
	2088, 2089, 2090, 0, 2092, 2093, 0, 2095, 2096, 0,
	2098, 2099, 0, 2101, 2102, 2103, 2104, 2105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 0, 0, 2107,
	0, 2228, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2109, 0, 2111, 2219, 2239, 0, 0, 1989, 0,
	0, 0, 0, 2159, 0, 2114, 2219, 2247, 0, 0,
	0, 0, 0, 2219, 0, 2252, 0, 2121, 0, 2123,
	1613, 0, 0, 1769, 0, 0, 0, 2274, 1769, 1769,
	0, 1677, 0, 0, 1745, 1746, 1747, 1748, 0, 0,
	1749, 0, 1739, 1743, 1740, 1741, 1735, 1698, 0, 0,
	2308, 1735, 1704, 1734, 0, 1229, 1724, 1735, 1735, 0,
	-2, 1708, 1725, 0, 0, 597, 599, 601, 605, 607,
	0, 0, 1634, -2, 0, -2, 332, 1228, 0, 0,
	0, 0, 0, 0, 616, 618, 0, 0, 539, 0,
	0, 632, 0, 610, 0, 613, 0, 1770, 1773, 0,
	0, 1784, 1790, 1791, 0, -2, 0, 0, 1880, 0,
	0, 0, 0, 0, 644, 0, 647, 0, 0, 0,
	434, 549, 211, 521, 0, 211, 211, 530, 0, 0,
	211, 541, 211, 2329, 211, 2327, 232, 546, 1560, 244,
	0, 697, 0, 1477, 1486, 0, 734, 0, 736, 0,
	2295, 2299, 2296, 2300, 0, 725, 0, 0, 0, 0,
	1427, 0, 0, 1374, 0, 0, 168, 2770, 0, 213,
	0, 0, 1192, 2314, 0, 1182, 0, 0, 2460, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 132, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 1253, 1255,
	1262, 1264, 0, 1258, 2302, 0, 0, 1259, 0, 1261,
	1263, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 1285, 0, 0, 1286, 1287, 1499, 1500, 0,
	1522, 1523, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 2281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1278, 0,
	1326, 1324, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 0, 0, 0, 0,
	-2, 1280, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 321, 2280, 2290, 0, 1058, 1059,
	357, 360, 363, 366, 250, 0, 0, 396, 407, 0,
	0, 1111, 1083, 0, 0, 461, 330, 0, 0, 475,
	479, 2331, 1068, 1246, 1249, 0, 1229, 2770, 1296, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 2770, 2309,
	2361, 2362, 1513, 1523, 0, 1769, 0, 1546, 1532, 0,
	0, 0, 1546, 1550, 1551, 1553, 1554, 0, 0, 1760,
	1766, 557, 609, 1621, 1621, 330, 328, 2592, 326, 323,
	325, 0, 0, 1535, 1537, 0, 0, 0, 276, 0,
	285, 1738, 283, 0, 288, 0, 0, 0, 473, 680,
	685, 843, 0, 330, 851, 852, 853, 899, 943, 951,
	998, 863, 865, 866, 867, 0, 0, 0, 1033, 1029,
	1030, 1031, 883, 953, 886, 953, 889, 953, 892, 894,
	912, 918, 931, 924, 932, 0, 0, 0, 945, 962,
	0, 981, 0, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1006, 1008, 1013, 1012, 1017, 842, 1757, 1572, 1573,
	1575, 0, 1584, 0, 0, 1660, -2, -2, 1659, 1663,
	1664, -2, -2, -2, -2, 1580, 0, 1589, 1586, 0,
	1645, 1365, 1366, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1985, 0, -2, 1964, 1967, 1971, 1973, 1975,
	0, 0, 0, 0, 0, 0, 2208, 0, 2210, 1986,
	2263, 2266, 2201, 0, 2157, 0, 0, 1633, 1634, 1634,
	0, 2055, 0, 2216, 0, 2223, 2224, 0, 2048, 0,
	2257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 2091, 2094, 2097, 2100, 0,
	0, 0, 0, 2080, 0, 0, 0, 2084, 1850, 1836,
	0, 1878, 1876, 1877, 1871, 1878, 1875, 1828, 0, 1827,
	0, 2106, 0, 2108, 2110, 0, 0, 2112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 1993, 1994, 2014, 2113, 2245, 2246, 0,
	0, 0, 0, 0, 0, 2119, 0, 2251, 2120, 2122,
	1621, 0, 1614, 0, 1679, 1668, 1768, 0, 2272, 1738,
	1681, 1683, 2273, 2311, 1668, 1668, 0, 2220, 0, 0,
	1729, 0, 0, 0, 1731, 1702, 0, 0, 1696, 0,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1703, 1229, 1733,
	1705, 1709, 2339, 0, 1735, 0, 1720, 0, 1722, 1755,
	0, 1714, 1717, 0, 0, 2354, 1769, 0, 370, 378,
	379, 371, 372, 373, 374, 0, 1414, 0, 0, 0,
	0, 0, 2222, 0, 1775, 0, 1781, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 1558, 429, 520,
	211, 525, 528, 2278, 211, 534, 537, 543, 240, 0,
	693, -2, 732, 733, 735, 0, 731, 165, 1428, 0,
	0, 0, 1370, 0, 1094, 0, 1089, 1090, 1372, 1376,
	1382, 1385, 0, 170, 2770, 182, 0, 2770, 0, 1155,
	0, 0, 0, 0, 0, 0, 1430, 0, 0, 2770,
	211, 2770, 211, 186, 188, 191, 0, 197, 193, 0,
	1091, 0, 1143, 0, 0, 1146, 118, 1428, 0, 0,
	121, 125, 137, 0, 0, 0, 147, 0, 0, 0,
	1387, 1391, 1399, 0, 0, 0, 1256, 1257, 1260, 1266,
	84, 0, 0, 0, 1395, 1397, 1403, 96, 99, 2770,
	2323, 101, 2770, 0, 1369, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 123, 127, 138, 0, 1405, 120,
	0, 226, 0, 0, 216, 211, 2770, 0, 218, 0,
	219, 220, 234, 0, 0, 0, 1071, 1072, 1325, 0,
	1271, 1272, 0, 1283, 1277, 0, 0, 0, 0, 0,
	1407, 1408, 0, 0, 0, 1426, 1423, 1738, 246, 0,
	1738, 254, 0, 2286, 0, 268, 393, 0, 0, 0,
	0, 1110, 1210, 1112, 1114, 1115, 1116, 213, 0, 2362,
	1182, 2512, 2362, 0, 0, 1078, 0, 0, 0, 467,
	463, 0, 472, 478, 477, 483, -2, 0, 0, 0,
	0, -2, 0, 0, 1341, 1335, 1336, 0, 0, 0,
	0, 2770, 1515, 1523, 0, 1619, 1634, 490, 1524, 1546,
	0, 0, 0, 1534, 1530, 1527, 1769, 0, 0, 0,
	0, 0, 1762, 1765, 560, 561, 307, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 286,
	0, 289, 0, 0, 0, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 288, 319, 278, 1738, 0, 0,
	682, 0, 0, 850, 0, 873, 876, 885, 887, 890,
	934, 936, 953, 963, 988, 2310, 989, 1133, 0, 1133,
	0, 0, 1009, 1582, 0, 1657, 1588, 1639, 1640, 0,
	1367, 0, 1903, 1948, 0, 0, -2, 0, 0, 1952,
	0, 0, 0, -2, 0, 0, 0, 2209, 2211, 0,
	2265, 2200, 2050, 0, 0, 0, 2054, 2038, 2039, 0,
	2160, 2226, 2255, 2259, 0, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 0, 2305, 2340, 2344, 2133, 2134, 2138, 2319,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 1873, 0, 0, 2227, 2238, 2240, 1990,
	1991, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, -2, -2, -2, 2008, 2009, 2010, -2, -2, -2,
	2015, 0, 0, 0, 2241, 2243, 2244, 2248, 2249, 0,
	2116, 2117, 2118, 2250, 0, 1621, 1615, 1676, 0, 1767,
	1680, 0, 1676, 1676, 1628, 1727, 0, 0, 1751, 0,
	1699, 0, 1700, 0, 0, 1732, 0, 1707, 1710, 1711,
	1721, 0, 1713, 0, 1716, 0, 2050, -2, 331, 333,
	335, 0, 338, 339, 0, 0, 0, 625, 0, 1414,
	1414, 0, 627, 611, 0, 0, 1777, 0, 0, 1853,
	1857, 1881, 638, 640, 0, 0, 2723, 2667, 0, 637,
	522, 531, 242, 0, 1736, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 212, 0, 1191, 0, 1153, 0,
	0, 1181, 0, 0, 1197, 172, 173, 174, 0, 0,
	0, 0, 184, 0, 0, 180, 0, 190, 196, 195,
	0, 1140, 0, 0, 0, 0, 1375, 0, 0, 0,
	144, 145, 146, 0, 151, 0, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 1506, 0,
	1496, 141, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 1364, 236, 0, 0, 0, 0, 0, 1270,
	1328, 1329, 1279, 1388, 1392, 1400, 0, 0, 0, 0,
	0, 652, 1425, 0, 254, 252, 0, 255, 0, 258,
	259, 0, 0, 254, 248, 0, 0, 0, 1229, 408,
	1081, 1198, 0, 0, 1200, 1117, 1121, 0, 2362, 2362,
	0, 2316, 0, 1079, 0, 0, 1199, 459, 0, 466,
	0, 480, 0, 0, 1250, 0, 0, 1274, 1299, 1229,
	0, 1340, 1342, 0, 1350, 0, 0, 0, 1517, 1523,
	0, 1510, 1511, 1653, 1525, 1544, -2, 0, 0, 1634,
	1552, 1549, 1555, 1556, 0, 327, 0, 322, 324, 0,
	310, 0, 1536, 1538, 0, 1052, 1055, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 288, 1738, 314, 0,
	844, 868, 944, 990, 1132, 0, 0, 992, 0, 0,
	1656, 1643, 1644, 1641, 1367, 1950, 1954, 0, 0, 0,
	1956, -2, 0, 1978, -2, -2, 2212, 2264, 2029, 1634,
	2051, 2053, 2040, 2258, 1898, 0, 2140, 2137, 0, 2124,
	0, 2075, 2076, 0, 0, 2079, 2081, 2082, 2083, 1837,
	1830, 1829, 2237, 0, 0, 0, 0, 2115, 1616, 0,
	2129, 0, 0, 1684, 2129, 2129, 1728, 0, 1730, 1697,
	1685, 0, 1694, 0, 2340, 1723, 1715, 0, 0, 336,
	0, 340, 341, 375, 0, 628, 629, 0, 0, 1771,
	1776, 0, 1782, 1852, 0, 0, 0, 0, 0, 243,
	166, 167, 1095, 1093, 1379, 1383, 1380, 0, 169, 0,
	0, 1154, 0, 1157, 0, 0, 0, 0, 1164, 1182,
	0, 0, 0, 0, 0, 0, 1184, 0, 1183, 0,
	0, 1214, 0, 1355, 1362, 0, -2, 0, 0, 0,
	176, 202, 0, 0, 0, 0, 205, 1429, 178, 0,
	0, 211, 211, 1092, 0, 0, 1371, 1373, 1386, 0,
	0, 0, 0, 154, 0, 0, 1389, 1393, 1401, 1396,
	1398, 1404, 0, 102, 0, 1507, 0, 140, 0, 0,
	0, 1406, 224, 225, 0, 211, 0, 211, 217, 211,
	1364, 0, 0, 0, 0, 0, 0, 0, 1409, 1410,
	245, 0, 0, 0, 0, 0, 247, 320, 254, 395,
	0, 1142, 0, 1210, 1202, 1203, 1204, 0, 1113, 1209,
	1211, 0, 0, 1118, 0, 0, 0, 0, 1098, 1080,
	0, 1111, 1083, 0, 464, 481, 0, 484, 0, 487,
	1069, 1247, 1291, 1229, 1294, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 1519, 1523, 0, 1512, 1513,
	1546, 1652, 0, 0, 0, 1533, 1653, 0, 329, 330,
	0, 330, 290, 0, 291, 292, 293, 300, 301, 302,
	279, 280, 684, 686, 0, 0, 692, 1131, 0, 0,
	0, 0, 1642, 1958, -2, -2, 1979, 0, 2341, 2343,
	1634, 0, 2126, 1636, 0, 0, -2, 0, 0, 0,
	1617, 1600, 0, 1675, 1667, 1669, 1671, 2654, 2433, 2769,
	1601, 1602, 1750, 0, 0, 1718, 337, 1413, 630, 0,
	0, 1778, 0, 635, 0, 0, 0, 0, 0, 1381,
	171, 0, 0, 1158, 1159, 2315, 1161, 0, 1163, 1165,
	1166, 1167, 0, 1171, 0, 2364, 0, 1176, 1179, 1180,
	0, 0, 1193, 1215, 0, 1224, 0, 1357, 1367, 1361,
	0, 1359, 1227, 0, 175, 204, 177, 206, 201, 0,
	1364, 0, 179, 189, 0, 0, 122, 0, 0, 2427,
	157, 155, 153, 100, 1368, 143, 0, 124, 0, 226,
	235, 1363, 237, 221, 211, 0, 1390, 1394, 1402, 0,
	1417, 1418, 1419, 1420, 0, 0, 0, 0, 256, 0,
	257, 260, 261, 0, 0, 1083, 1141, 1082, 1201, 0,
	1212, 1213, 0, 0, 0, 0, 0, 0, 1085, 0,
	1084, 0, 0, 465, 468, 0, 471, 0, 0, 0,
	0, 0, 1298, 0, 1343, 1341, 0, 1349, 0, 0,
	0, 1495, 0, 0, 1514, 1515, 488, 1539, 0, 0,
	1546, 1557, 309, 0, 312, 287, 0, 688, 0, 690,
	0, 991, 993, 0, 0, 2052, 2144, 0, 0, 2077,
	2078, -2, 0, 2018, 2128, 2130, 0, 0, 0, 0,
	0, 1686, 1695, 1414, 1772, 642, 639, 641, 0, 1377,
	0, 1384, 213, 1156, 1160, 0, 0, 0, 1172, 1233,
	0, 0, 1250, 1250, 1185, 0, 0, 1218, 1219, 1138,
	0, 1220, 1221, 1222, 1356, 1645, 1362, 1195, 0, 0,
	203, 208, 0, 0, 0, 0, 0, 0, 142, 0,
	215, 238, 1364, 0, 1421, 1422, 0, 0, 253, 272,
	0, 1292, 1085, 0, 1119, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1120, 1227, 0, 0, 1190, 1096,
	0, 1099, 0, 1081, 0, 469, 470, 485, 0, 486,
	0, 0, 1299, 0, 0, 1350, 0, 0, 1502, 1494,
	1523, 1516, 1517, 1769, 0, 1547, 0, 687, 0, 0,
	1001, 1002, 0, 0, 0, 0, 2139, 1637, 2019, 0,
	0, 1670, 1672, 1673, 1674, 631, 0, 1378, 183, 0,
	1168, 1170, 1238, 0, 0, 0, 0, 0, 1186, 1216,
	1217, 1214, 1137, 0, 1360, 1358, 1226, 1229, 181, 0,
	1227, 0, 1147, 0, 0, 1150, 0, 0, 158, 2427,
	156, 0, 211, 1414, 211, 0, 275, 0, 266, 264,
	265, 1077, 0, 1206, 1208, 1224, 1227, 1138, 0, 1100,
	1142, 1098, 482, 1293, 1297, 1295, 1333, 1227, 0, 1224,
	0, 1509, 1523, 1503, 1504, 0, 1519, 0, 0, 330,
	689, 691, 2136, 2156, 2145, -2, 2726, 2434, 0, 2156,
	2156, 2131, 2132, 0, 0, 0, 1173, 1234, 1235, 0,
	1230, 1231, 1232, 2363, 1174, 1175, 1177, 1178, 1769, 0,
	0, 1233, 207, 187, 1144, 0, 0, 1145, 0, 0,
	161, 0, 163, 239, 1412, 1415, 0, 262, 0, 0,
	1074, 1076, 1205, 0, 1138, 1224, 1083, 0, 0, 0,
	1083, 1085, 1224, 0, 1138, 0, 1498, 1508, 0, 1518,
	1495, 0, 1542, 0, 311, 2141, 0, 0, 2147, 2148,
	2149, 2150, 2151, 2142, 2143, 643, 1162, 0, 1236, 0,
	1237, 0, 0, 0, 1194, 1223, 0, 1238, 1148, 0,
	1151, 0, 159, 0, 0, 270, 271, 1207, 1083, 1138,
	1769, 0, 1086, 0, 1088, 1085, 1097, 1138, 0, 1083,
	0, 1521, 1497, 1501, 2324, 1502, 1540, 0, 0, 0,
	2153, 2154, 0, 0, 0, 1239, 0, 1242, 1243, 0,
	1240, 0, 1214, 0, 0, 211, 0, 1769, 1083, 1189,
	1087, 1077, 1083, 1227, 1769, 1224, 1491, 1523, 1509, 0,
	1769, 2152, 2155, 2146, 1169, 1241, 1244, 1245, 1225, 1196,
	0, 0, 1416, 273, 0, 1187, 1769, 1075, 1769, 1224,
	1346, 1138, 0, 1498, 1769, 1543, 1135, 0, 0, 1188,
	1344, 1138, 1083, 1520, 1492, 1541, 1149, 1134, 0, 274,
	1083, 1769, 0, 1769, 1347, 0, 1345, 1135, 1152,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 595, 3, 601, 596, 3,
	607, 608, 599, 597, 612, 598, 609, 600, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 3,
	587, 589, 588, 592, 611, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 605, 3, 606, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 594, 614, 590,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 591,
	57930, 593, 57931, 603, 57932, 604, 57933, 610, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1519
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1535
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1536
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1537
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1539
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1540
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1541
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1542
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1629
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1662
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1702
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1713
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1725
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1735
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1814
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1846
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1879
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1944
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1967
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1988
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2050
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2059
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2070
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2078
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2089
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2099
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2109
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2118
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2129
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2135
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2161
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2166
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2187
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2301
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2311
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2320
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = true
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = false
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2566
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2570
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2573
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2657
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2916
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = nil
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3094
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3203
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3208
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3212
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3218
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3223
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3228
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3232
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3252
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3260
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = nil
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3336
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3350
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3479
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3532
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3553
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3554
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3558
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3563
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3578
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3582
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3583
		{
			return helpWith(sqllex, "CREATE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3606
		{
			return unimplemented(sqllex, "create access method")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplemented(sqllex, "create cast")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "create publication")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "create rule")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "create server")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3628
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3631
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3632
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3635
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3636
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3645
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3646
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3647
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3650
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			return unimplemented(sqllex, "drop server")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3657
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3661
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3775
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3783
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3818
		{

			sqlVAL.union.val = nil
		}
	case 480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3865
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DELETE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3905
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3917
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3931
		{
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "DROP")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4197
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4221
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4229
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "DELETE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
			return helpWith(sqllex, "DELETE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "INSERT")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4310
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4343
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4434
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4450
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "GRANT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4546
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4559
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "RESET")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "RESET")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "USE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4633
		{
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4634
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "USE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4701
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return unimplemented(sqllex, "set from current")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4890
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4907
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = tree.Low
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = tree.Normal
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = tree.High
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5067
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5074
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5083
		{
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5087
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5106
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.str = "client_encoding"
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.str = "timezone"
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5173
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5236
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5245
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5398
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5430
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5455
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5471
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = true
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = true
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = false
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5507
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5553
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5569
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5577
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5585
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5628
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5632
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = true
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5636
		{
			sqlVAL.union.val = false
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5647
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = true
		}
	case 953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = false
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5737
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5745
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5756
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5778
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5808
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5813
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5823
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5852
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5857
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5897
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5905
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5931
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5936
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5940
		{
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5949
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5963
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5972
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5984
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6053
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6301
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6303
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6355
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6368
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6400
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6408
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6419
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6519
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6534
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6562
		{

			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.str = ""
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = nil
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6601
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6605
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6641
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6654
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6668
		{
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6669
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6751
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6765
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.str = ""
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: tree.DefaultVal{},
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7018
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{

			sqlVAL.union.val = true
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = false
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7077
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7080
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7176
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7187
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7204
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7214
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7229
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7294
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7296
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7297
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: tree.DefaultVal{},
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7463
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7472
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7480
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7504
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7514
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7520
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7523
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7526
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7528
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7541
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7606
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.str = ""
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = true
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7640
		{

			sqlVAL.union.val = true
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = false
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7655
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7669
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7681
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7693
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7703
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7713
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7717
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = true
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = true
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = nil
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7853
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7878
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7880
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7882
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7884
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7886
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7888
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7923
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7940
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7958
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7974
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7990
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7994
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = false
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = true
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = false
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8054
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8060
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.str = ""
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.str = ""
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8127
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8133
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8358
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8364
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8376
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8382
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8396
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8402
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8461
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = true
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = false
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = tree.Types
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8521
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8525
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8550
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8553
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8554
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8565
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8613
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8642
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8665
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8691
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8709
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8720
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8737
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8741
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8769
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8784
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8788
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8878
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.str = ""
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8901
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8906
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{

		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8938
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.str = ""
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.str = ""
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.str = ""
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.str = ""
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8993
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9018
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9070
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9173
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9264
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9279
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9459
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9460
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9521
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9565
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9581
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = true
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = false
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9635
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = nil
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9649
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = true
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = false
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = false
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = true
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9678
		{
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9679
		{
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9683
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9724
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9736
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9741
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9767
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9856
		{
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9860
		{
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9894
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9895
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9928
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9943
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9965
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9996
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10012
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10043
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10085
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10095
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10130
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10141
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10171
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10204
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10206
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = nil
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = true
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = false
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.str = tree.AstFull
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.str = tree.AstRight
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.str = tree.AstInner
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10323
		{
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10324
		{
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.str = tree.AstHash
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.str = ""
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10416
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10428
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10438
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = true
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = false
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = true
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = false
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10500
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10508
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10509
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10527
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10529
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10537
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10550
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10557
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10619
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = types.Geography
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10668
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10676
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10710
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = nil
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = types.Int2
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = types.Int
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = types.Float4
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = types.Float
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10761
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10769
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = types.Bool
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = types.Float
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10802
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10808
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10830
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = types.String
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = true
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = false
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = types.Date
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10879
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10887
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10901
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10910
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10918
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10935
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = true
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = false
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = false
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = types.Interval
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10959
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = nil
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11088
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11148
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11297
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11426
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11492
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11514
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11622
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11630
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11731
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11757
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11766
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11781
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11815
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11826
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11827
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11851
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11917
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12047
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12056
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12074
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12093
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12103
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12118
		{
			return unimplemented(sqllex, "treat")
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12139
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12144
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12191
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.str = ""
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12293
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12361
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12390
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12466
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12652
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12797
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12806
		{
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12807
		{
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12856
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12879
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12887
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12960
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12976
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12985
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12996
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13005
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13013
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13030
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13222
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13249
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13262
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13269
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.str = ""
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
