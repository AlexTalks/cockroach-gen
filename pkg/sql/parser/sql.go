// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:882
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13913

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1617,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 421,
	-2, 0,
	-1, 74,
	245, 249,
	523, 249,
	-2, 0,
	-1, 88,
	234, 1350,
	247, 1350,
	263, 417,
	396, 417,
	407, 1099,
	447, 417,
	460, 1099,
	508, 1099,
	534, 417,
	560, 1099,
	-2, 0,
	-1, 94,
	133, 1617,
	240, 1617,
	545, 1617,
	546, 1617,
	-2, 0,
	-1, 112,
	152, 1588,
	172, 1588,
	185, 1588,
	243, 1588,
	276, 1588,
	347, 1588,
	357, 1588,
	540, 1588,
	-2, 1559,
	-1, 153,
	160, 938,
	262, 938,
	399, 899,
	465, 899,
	507, 899,
	526, 938,
	528, 899,
	-2, 0,
	-1, 157,
	4, 1619,
	21, 1619,
	22, 1619,
	23, 1619,
	24, 1619,
	25, 1619,
	26, 1619,
	27, 1619,
	29, 1619,
	30, 1619,
	36, 1619,
	41, 1619,
	42, 1619,
	44, 1619,
	45, 1619,
	46, 1619,
	47, 1619,
	48, 1619,
	49, 1619,
	50, 1619,
	51, 1619,
	53, 1619,
	54, 1619,
	55, 1619,
	56, 1619,
	58, 1619,
	59, 1619,
	60, 1619,
	61, 1619,
	62, 1619,
	63, 1619,
	64, 1619,
	68, 1619,
	69, 1619,
	70, 1619,
	71, 1619,
	73, 1619,
	74, 1619,
	75, 1619,
	79, 1619,
	80, 1619,
	81, 1619,
	82, 1619,
	83, 1619,
	84, 1619,
	85, 1619,
	88, 1619,
	89, 1619,
	90, 1619,
	91, 1619,
	92, 1619,
	94, 1619,
	96, 1619,
	97, 1619,
	98, 1619,
	99, 1619,
	100, 1619,
	101, 1619,
	103, 1619,
	104, 1619,
	105, 1619,
	107, 1619,
	108, 1619,
	109, 1619,
	117, 1619,
	118, 1619,
	119, 1619,
	120, 1619,
	121, 1619,
	123, 1619,
	124, 1619,
	125, 1619,
	126, 1619,
	128, 1619,
	129, 1619,
	130, 1619,
	132, 1619,
	133, 1619,
	134, 1619,
	136, 1619,
	137, 1619,
	138, 1619,
	141, 1619,
	142, 1619,
	143, 1619,
	145, 1619,
	146, 1619,
	147, 1619,
	149, 1619,
	150, 1619,
	151, 1619,
	153, 1619,
	154, 1619,
	155, 1619,
	156, 1619,
	157, 1619,
	158, 1619,
	159, 1619,
	160, 1619,
	161, 1619,
	162, 1619,
	163, 1619,
	164, 1619,
	165, 1619,
	166, 1619,
	167, 1619,
	168, 1619,
	169, 1619,
	171, 1619,
	177, 1619,
	178, 1619,
	179, 1619,
	180, 1619,
	184, 1619,
	186, 1619,
	187, 1619,
	188, 1619,
	192, 1619,
	193, 1619,
	194, 1619,
	195, 1619,
	196, 1619,
	197, 1619,
	198, 1619,
	199, 1619,
	200, 1619,
	201, 1619,
	202, 1619,
	203, 1619,
	204, 1619,
	205, 1619,
	207, 1619,
	208, 1619,
	210, 1619,
	211, 1619,
	213, 1619,
	214, 1619,
	215, 1619,
	216, 1619,
	217, 1619,
	218, 1619,
	219, 1619,
	220, 1619,
	221, 1619,
	223, 1619,
	224, 1619,
	226, 1619,
	227, 1619,
	228, 1619,
	229, 1619,
	230, 1619,
	234, 1619,
	235, 1619,
	236, 1619,
	237, 1619,
	240, 1619,
	241, 1619,
	242, 1619,
	244, 1619,
	246, 1619,
	247, 1619,
	249, 1619,
	251, 1619,
	252, 1619,
	253, 1619,
	255, 1619,
	259, 1619,
	260, 1619,
	261, 1619,
	262, 1619,
	263, 1619,
	264, 1619,
	266, 1619,
	267, 1619,
	268, 1619,
	270, 1619,
	271, 1619,
	273, 1619,
	274, 1619,
	277, 1619,
	278, 1619,
	279, 1619,
	280, 1619,
	281, 1619,
	282, 1619,
	283, 1619,
	286, 1619,
	287, 1619,
	288, 1619,
	289, 1619,
	291, 1619,
	292, 1619,
	293, 1619,
	294, 1619,
	295, 1619,
	296, 1619,
	297, 1619,
	298, 1619,
	299, 1619,
	300, 1619,
	301, 1619,
	302, 1619,
	303, 1619,
	304, 1619,
	305, 1619,
	306, 1619,
	307, 1619,
	308, 1619,
	309, 1619,
	310, 1619,
	311, 1619,
	312, 1619,
	314, 1619,
	316, 1619,
	317, 1619,
	318, 1619,
	319, 1619,
	320, 1619,
	321, 1619,
	322, 1619,
	323, 1619,
	324, 1619,
	325, 1619,
	326, 1619,
	327, 1619,
	328, 1619,
	329, 1619,
	330, 1619,
	331, 1619,
	333, 1619,
	334, 1619,
	336, 1619,
	338, 1619,
	339, 1619,
	340, 1619,
	342, 1619,
	343, 1619,
	344, 1619,
	345, 1619,
	346, 1619,
	349, 1619,
	352, 1619,
	353, 1619,
	354, 1619,
	355, 1619,
	358, 1619,
	359, 1619,
	360, 1619,
	362, 1619,
	364, 1619,
	365, 1619,
	366, 1619,
	367, 1619,
	368, 1619,
	369, 1619,
	370, 1619,
	371, 1619,
	372, 1619,
	373, 1619,
	374, 1619,
	375, 1619,
	376, 1619,
	378, 1619,
	379, 1619,
	380, 1619,
	381, 1619,
	382, 1619,
	383, 1619,
	384, 1619,
	385, 1619,
	386, 1619,
	387, 1619,
	388, 1619,
	389, 1619,
	390, 1619,
	391, 1619,
	392, 1619,
	394, 1619,
	395, 1619,
	397, 1619,
	398, 1619,
	399, 1619,
	400, 1619,
	401, 1619,
	402, 1619,
	403, 1619,
	404, 1619,
	405, 1619,
	406, 1619,
	407, 1619,
	408, 1619,
	409, 1619,
	411, 1619,
	413, 1619,
	414, 1619,
	415, 1619,
	421, 1619,
	422, 1619,
	424, 1619,
	425, 1619,
	426, 1619,
	427, 1619,
	428, 1619,
	429, 1619,
	430, 1619,
	431, 1619,
	432, 1619,
	433, 1619,
	435, 1619,
	436, 1619,
	437, 1619,
	439, 1619,
	440, 1619,
	441, 1619,
	442, 1619,
	443, 1619,
	444, 1619,
	445, 1619,
	447, 1619,
	448, 1619,
	449, 1619,
	450, 1619,
	451, 1619,
	452, 1619,
	453, 1619,
	454, 1619,
	455, 1619,
	456, 1619,
	457, 1619,
	458, 1619,
	460, 1619,
	461, 1619,
	462, 1619,
	463, 1619,
	464, 1619,
	465, 1619,
	467, 1619,
	468, 1619,
	469, 1619,
	470, 1619,
	471, 1619,
	472, 1619,
	474, 1619,
	475, 1619,
	476, 1619,
	477, 1619,
	478, 1619,
	479, 1619,
	480, 1619,
	481, 1619,
	483, 1619,
	485, 1619,
	486, 1619,
	487, 1619,
	488, 1619,
	489, 1619,
	490, 1619,
	491, 1619,
	492, 1619,
	493, 1619,
	494, 1619,
	495, 1619,
	496, 1619,
	497, 1619,
	498, 1619,
	499, 1619,
	500, 1619,
	501, 1619,
	503, 1619,
	504, 1619,
	506, 1619,
	507, 1619,
	509, 1619,
	510, 1619,
	511, 1619,
	512, 1619,
	513, 1619,
	514, 1619,
	515, 1619,
	516, 1619,
	518, 1619,
	519, 1619,
	520, 1619,
	521, 1619,
	522, 1619,
	524, 1619,
	526, 1619,
	527, 1619,
	528, 1619,
	529, 1619,
	530, 1619,
	531, 1619,
	533, 1619,
	534, 1619,
	535, 1619,
	536, 1619,
	538, 1619,
	539, 1619,
	542, 1619,
	543, 1619,
	544, 1619,
	545, 1619,
	546, 1619,
	547, 1619,
	548, 1619,
	550, 1619,
	553, 1619,
	554, 1619,
	555, 1619,
	556, 1619,
	557, 1619,
	558, 1619,
	560, 1619,
	561, 1619,
	562, 1619,
	563, 1619,
	564, 1619,
	565, 1619,
	566, 1619,
	571, 1619,
	572, 1619,
	573, 1619,
	574, 1619,
	575, 1619,
	576, 1619,
	-2, 0,
	-1, 158,
	1, 1467,
	131, 1467,
	251, 1467,
	335, 1467,
	394, 1467,
	403, 1467,
	580, 1467,
	610, 1467,
	-2, 0,
	-1, 160,
	1, 1467,
	610, 1467,
	-2, 0,
	-1, 161,
	1, 1467,
	610, 1467,
	-2, 0,
	-1, 162,
	1, 1467,
	523, 1467,
	610, 1467,
	-2, 0,
	-1, 191,
	152, 1587,
	172, 1587,
	185, 1587,
	243, 1587,
	276, 1587,
	347, 1587,
	357, 1587,
	540, 1587,
	-2, 1562,
	-1, 238,
	4, 1626,
	5, 1626,
	6, 1626,
	7, 1626,
	8, 1626,
	9, 1626,
	10, 1626,
	21, 1626,
	22, 1626,
	23, 1626,
	24, 1626,
	25, 1626,
	26, 1626,
	27, 1626,
	29, 1626,
	30, 1626,
	36, 1626,
	37, 1626,
	41, 1626,
	42, 1626,
	43, 1626,
	44, 1626,
	45, 1626,
	46, 1626,
	47, 1626,
	48, 1626,
	49, 1626,
	50, 1626,
	51, 1626,
	53, 1626,
	54, 1626,
	55, 1626,
	56, 1626,
	58, 1626,
	59, 1626,
	60, 1626,
	61, 1626,
	62, 1626,
	63, 1626,
	64, 1626,
	65, 1626,
	66, 1626,
	67, 1626,
	68, 1626,
	69, 1626,
	70, 1626,
	71, 1626,
	73, 1626,
	74, 1626,
	75, 1626,
	77, 1626,
	79, 1626,
	80, 1626,
	81, 1626,
	82, 1626,
	83, 1626,
	84, 1626,
	85, 1626,
	88, 1626,
	89, 1626,
	90, 1626,
	91, 1626,
	92, 1626,
	94, 1626,
	96, 1626,
	97, 1626,
	98, 1626,
	99, 1626,
	100, 1626,
	101, 1626,
	103, 1626,
	104, 1626,
	105, 1626,
	106, 1626,
	107, 1626,
	108, 1626,
	109, 1626,
	110, 1626,
	111, 1626,
	112, 1626,
	113, 1626,
	114, 1626,
	115, 1626,
	116, 1626,
	117, 1626,
	118, 1626,
	119, 1626,
	120, 1626,
	121, 1626,
	122, 1626,
	123, 1626,
	124, 1626,
	125, 1626,
	126, 1626,
	127, 1626,
	128, 1626,
	129, 1626,
	130, 1626,
	132, 1626,
	133, 1626,
	134, 1626,
	136, 1626,
	137, 1626,
	138, 1626,
	141, 1626,
	142, 1626,
	143, 1626,
	145, 1626,
	146, 1626,
	147, 1626,
	149, 1626,
	150, 1626,
	151, 1626,
	153, 1626,
	154, 1626,
	155, 1626,
	156, 1626,
	157, 1626,
	158, 1626,
	159, 1626,
	160, 1626,
	161, 1626,
	162, 1626,
	163, 1626,
	164, 1626,
	165, 1626,
	166, 1626,
	167, 1626,
	168, 1626,
	169, 1626,
	170, 1626,
	171, 1626,
	177, 1626,
	178, 1626,
	179, 1626,
	180, 1626,
	184, 1626,
	186, 1626,
	187, 1626,
	188, 1626,
	191, 1626,
	192, 1626,
	193, 1626,
	194, 1626,
	195, 1626,
	196, 1626,
	197, 1626,
	198, 1626,
	199, 1626,
	200, 1626,
	201, 1626,
	202, 1626,
	203, 1626,
	204, 1626,
	205, 1626,
	207, 1626,
	208, 1626,
	210, 1626,
	211, 1626,
	213, 1626,
	214, 1626,
	215, 1626,
	216, 1626,
	217, 1626,
	218, 1626,
	219, 1626,
	220, 1626,
	221, 1626,
	222, 1626,
	223, 1626,
	224, 1626,
	226, 1626,
	227, 1626,
	228, 1626,
	229, 1626,
	230, 1626,
	234, 1626,
	235, 1626,
	236, 1626,
	237, 1626,
	239, 1626,
	240, 1626,
	241, 1626,
	242, 1626,
	244, 1626,
	246, 1626,
	247, 1626,
	248, 1626,
	249, 1626,
	250, 1626,
	251, 1626,
	252, 1626,
	253, 1626,
	254, 1626,
	255, 1626,
	259, 1626,
	260, 1626,
	261, 1626,
	262, 1626,
	263, 1626,
	264, 1626,
	266, 1626,
	267, 1626,
	268, 1626,
	270, 1626,
	271, 1626,
	272, 1626,
	273, 1626,
	274, 1626,
	275, 1626,
	277, 1626,
	278, 1626,
	279, 1626,
	280, 1626,
	281, 1626,
	282, 1626,
	283, 1626,
	284, 1626,
	285, 1626,
	286, 1626,
	287, 1626,
	288, 1626,
	289, 1626,
	291, 1626,
	292, 1626,
	293, 1626,
	294, 1626,
	295, 1626,
	296, 1626,
	297, 1626,
	298, 1626,
	299, 1626,
	300, 1626,
	301, 1626,
	302, 1626,
	303, 1626,
	304, 1626,
	305, 1626,
	306, 1626,
	307, 1626,
	308, 1626,
	309, 1626,
	310, 1626,
	311, 1626,
	312, 1626,
	314, 1626,
	315, 1626,
	316, 1626,
	317, 1626,
	318, 1626,
	319, 1626,
	320, 1626,
	321, 1626,
	322, 1626,
	323, 1626,
	324, 1626,
	325, 1626,
	326, 1626,
	327, 1626,
	328, 1626,
	329, 1626,
	330, 1626,
	331, 1626,
	332, 1626,
	333, 1626,
	334, 1626,
	335, 1626,
	336, 1626,
	337, 1626,
	338, 1626,
	339, 1626,
	340, 1626,
	341, 1626,
	342, 1626,
	343, 1626,
	344, 1626,
	345, 1626,
	346, 1626,
	349, 1626,
	353, 1626,
	354, 1626,
	355, 1626,
	358, 1626,
	359, 1626,
	360, 1626,
	361, 1626,
	362, 1626,
	363, 1626,
	364, 1626,
	365, 1626,
	366, 1626,
	367, 1626,
	368, 1626,
	369, 1626,
	370, 1626,
	371, 1626,
	372, 1626,
	373, 1626,
	374, 1626,
	375, 1626,
	376, 1626,
	378, 1626,
	379, 1626,
	380, 1626,
	381, 1626,
	382, 1626,
	383, 1626,
	384, 1626,
	385, 1626,
	386, 1626,
	387, 1626,
	388, 1626,
	389, 1626,
	390, 1626,
	391, 1626,
	392, 1626,
	394, 1626,
	395, 1626,
	397, 1626,
	398, 1626,
	399, 1626,
	400, 1626,
	401, 1626,
	402, 1626,
	403, 1626,
	404, 1626,
	405, 1626,
	406, 1626,
	407, 1626,
	408, 1626,
	409, 1626,
	411, 1626,
	413, 1626,
	414, 1626,
	415, 1626,
	421, 1626,
	422, 1626,
	424, 1626,
	425, 1626,
	426, 1626,
	427, 1626,
	428, 1626,
	429, 1626,
	430, 1626,
	431, 1626,
	432, 1626,
	433, 1626,
	435, 1626,
	436, 1626,
	437, 1626,
	438, 1626,
	439, 1626,
	440, 1626,
	441, 1626,
	442, 1626,
	443, 1626,
	444, 1626,
	445, 1626,
	447, 1626,
	448, 1626,
	449, 1626,
	450, 1626,
	451, 1626,
	452, 1626,
	453, 1626,
	454, 1626,
	455, 1626,
	456, 1626,
	457, 1626,
	458, 1626,
	460, 1626,
	461, 1626,
	462, 1626,
	463, 1626,
	464, 1626,
	465, 1626,
	466, 1626,
	467, 1626,
	468, 1626,
	469, 1626,
	470, 1626,
	471, 1626,
	472, 1626,
	473, 1626,
	474, 1626,
	475, 1626,
	476, 1626,
	477, 1626,
	478, 1626,
	479, 1626,
	480, 1626,
	481, 1626,
	483, 1626,
	485, 1626,
	486, 1626,
	487, 1626,
	488, 1626,
	489, 1626,
	490, 1626,
	491, 1626,
	492, 1626,
	493, 1626,
	494, 1626,
	495, 1626,
	496, 1626,
	497, 1626,
	498, 1626,
	499, 1626,
	500, 1626,
	501, 1626,
	503, 1626,
	504, 1626,
	505, 1626,
	506, 1626,
	507, 1626,
	509, 1626,
	510, 1626,
	511, 1626,
	512, 1626,
	513, 1626,
	514, 1626,
	515, 1626,
	516, 1626,
	518, 1626,
	519, 1626,
	520, 1626,
	521, 1626,
	522, 1626,
	524, 1626,
	526, 1626,
	527, 1626,
	528, 1626,
	529, 1626,
	530, 1626,
	531, 1626,
	532, 1626,
	533, 1626,
	534, 1626,
	535, 1626,
	536, 1626,
	538, 1626,
	539, 1626,
	541, 1626,
	542, 1626,
	543, 1626,
	544, 1626,
	545, 1626,
	546, 1626,
	547, 1626,
	548, 1626,
	549, 1626,
	550, 1626,
	553, 1626,
	554, 1626,
	555, 1626,
	556, 1626,
	557, 1626,
	558, 1626,
	560, 1626,
	561, 1626,
	562, 1626,
	563, 1626,
	564, 1626,
	565, 1626,
	566, 1626,
	571, 1626,
	572, 1626,
	573, 1626,
	574, 1626,
	575, 1626,
	576, 1626,
	577, 1626,
	590, 1626,
	597, 1626,
	598, 1626,
	599, 1626,
	607, 1626,
	611, 1626,
	-2, 0,
	-1, 757,
	4, 1348,
	21, 1348,
	22, 1348,
	23, 1348,
	24, 1348,
	25, 1348,
	26, 1348,
	27, 1348,
	29, 1348,
	30, 1348,
	36, 1348,
	41, 1348,
	42, 1348,
	44, 1348,
	45, 1348,
	46, 1348,
	47, 1348,
	48, 1348,
	49, 1348,
	50, 1348,
	51, 1348,
	53, 1348,
	54, 1348,
	55, 1348,
	56, 1348,
	58, 1348,
	59, 1348,
	60, 1348,
	61, 1348,
	62, 1348,
	63, 1348,
	64, 1348,
	68, 1348,
	69, 1348,
	70, 1348,
	71, 1348,
	73, 1348,
	74, 1348,
	75, 1348,
	79, 1348,
	80, 1348,
	81, 1348,
	82, 1348,
	83, 1348,
	84, 1348,
	85, 1348,
	88, 1348,
	89, 1348,
	90, 1348,
	91, 1348,
	92, 1348,
	94, 1348,
	96, 1348,
	97, 1348,
	98, 1348,
	99, 1348,
	100, 1348,
	101, 1348,
	103, 1348,
	104, 1348,
	105, 1348,
	107, 1348,
	108, 1348,
	109, 1348,
	117, 1348,
	118, 1348,
	119, 1348,
	120, 1348,
	121, 1348,
	123, 1348,
	124, 1348,
	125, 1348,
	126, 1348,
	128, 1348,
	129, 1348,
	130, 1348,
	132, 1348,
	133, 1348,
	134, 1348,
	136, 1348,
	137, 1348,
	138, 1348,
	141, 1348,
	142, 1348,
	143, 1348,
	145, 1348,
	146, 1348,
	147, 1348,
	149, 1348,
	150, 1348,
	151, 1348,
	153, 1348,
	154, 1348,
	155, 1348,
	156, 1348,
	157, 1348,
	158, 1348,
	159, 1348,
	160, 1348,
	161, 1348,
	162, 1348,
	163, 1348,
	164, 1348,
	165, 1348,
	166, 1348,
	167, 1348,
	168, 1348,
	169, 1348,
	171, 1348,
	177, 1348,
	178, 1348,
	179, 1348,
	180, 1348,
	184, 1348,
	186, 1348,
	187, 1348,
	188, 1348,
	192, 1348,
	193, 1348,
	194, 1348,
	195, 1348,
	196, 1348,
	197, 1348,
	198, 1348,
	199, 1348,
	200, 1348,
	201, 1348,
	202, 1348,
	203, 1348,
	204, 1348,
	205, 1348,
	207, 1348,
	208, 1348,
	210, 1348,
	211, 1348,
	213, 1348,
	214, 1348,
	215, 1348,
	216, 1348,
	217, 1348,
	218, 1348,
	219, 1348,
	220, 1348,
	221, 1348,
	223, 1348,
	224, 1348,
	226, 1348,
	227, 1348,
	228, 1348,
	229, 1348,
	230, 1348,
	234, 1348,
	235, 1348,
	236, 1348,
	237, 1348,
	240, 1348,
	241, 1348,
	242, 1348,
	244, 1348,
	246, 1348,
	247, 1348,
	249, 1348,
	251, 1348,
	252, 1348,
	253, 1348,
	255, 1348,
	259, 1348,
	260, 1348,
	261, 1348,
	262, 1348,
	263, 1348,
	264, 1348,
	266, 1348,
	267, 1348,
	268, 1348,
	270, 1348,
	271, 1348,
	273, 1348,
	274, 1348,
	277, 1348,
	278, 1348,
	279, 1348,
	280, 1348,
	281, 1348,
	282, 1348,
	283, 1348,
	286, 1348,
	287, 1348,
	288, 1348,
	289, 1348,
	291, 1348,
	292, 1348,
	293, 1348,
	294, 1348,
	295, 1348,
	296, 1348,
	297, 1348,
	298, 1348,
	299, 1348,
	300, 1348,
	301, 1348,
	302, 1348,
	303, 1348,
	304, 1348,
	305, 1348,
	306, 1348,
	307, 1348,
	308, 1348,
	309, 1348,
	310, 1348,
	311, 1348,
	312, 1348,
	314, 1348,
	316, 1348,
	317, 1348,
	318, 1348,
	319, 1348,
	320, 1348,
	321, 1348,
	322, 1348,
	323, 1348,
	324, 1348,
	325, 1348,
	326, 1348,
	327, 1348,
	328, 1348,
	329, 1348,
	330, 1348,
	331, 1348,
	333, 1348,
	334, 1348,
	336, 1348,
	338, 1348,
	339, 1348,
	340, 1348,
	342, 1348,
	343, 1348,
	344, 1348,
	345, 1348,
	346, 1348,
	349, 1348,
	353, 1348,
	354, 1348,
	355, 1348,
	358, 1348,
	359, 1348,
	360, 1348,
	362, 1348,
	364, 1348,
	365, 1348,
	366, 1348,
	367, 1348,
	368, 1348,
	369, 1348,
	370, 1348,
	371, 1348,
	372, 1348,
	373, 1348,
	374, 1348,
	375, 1348,
	376, 1348,
	378, 1348,
	379, 1348,
	380, 1348,
	381, 1348,
	382, 1348,
	383, 1348,
	384, 1348,
	385, 1348,
	386, 1348,
	387, 1348,
	388, 1348,
	389, 1348,
	390, 1348,
	391, 1348,
	392, 1348,
	394, 1348,
	395, 1348,
	397, 1348,
	398, 1348,
	399, 1348,
	400, 1348,
	401, 1348,
	402, 1348,
	403, 1348,
	404, 1348,
	405, 1348,
	406, 1348,
	407, 1348,
	408, 1348,
	409, 1348,
	411, 1348,
	413, 1348,
	414, 1348,
	415, 1348,
	421, 1348,
	422, 1348,
	424, 1348,
	425, 1348,
	426, 1348,
	427, 1348,
	428, 1348,
	429, 1348,
	430, 1348,
	431, 1348,
	432, 1348,
	433, 1348,
	435, 1348,
	436, 1348,
	437, 1348,
	439, 1348,
	440, 1348,
	441, 1348,
	442, 1348,
	443, 1348,
	444, 1348,
	445, 1348,
	447, 1348,
	448, 1348,
	449, 1348,
	450, 1348,
	451, 1348,
	452, 1348,
	453, 1348,
	454, 1348,
	455, 1348,
	456, 1348,
	457, 1348,
	458, 1348,
	460, 1348,
	461, 1348,
	462, 1348,
	463, 1348,
	464, 1348,
	465, 1348,
	467, 1348,
	468, 1348,
	469, 1348,
	470, 1348,
	471, 1348,
	472, 1348,
	474, 1348,
	475, 1348,
	476, 1348,
	477, 1348,
	478, 1348,
	479, 1348,
	480, 1348,
	481, 1348,
	483, 1348,
	485, 1348,
	486, 1348,
	487, 1348,
	488, 1348,
	489, 1348,
	490, 1348,
	491, 1348,
	492, 1348,
	493, 1348,
	494, 1348,
	495, 1348,
	496, 1348,
	497, 1348,
	498, 1348,
	499, 1348,
	500, 1348,
	501, 1348,
	503, 1348,
	504, 1348,
	506, 1348,
	507, 1348,
	509, 1348,
	510, 1348,
	511, 1348,
	512, 1348,
	513, 1348,
	514, 1348,
	515, 1348,
	516, 1348,
	518, 1348,
	519, 1348,
	520, 1348,
	521, 1348,
	522, 1348,
	524, 1348,
	526, 1348,
	527, 1348,
	528, 1348,
	529, 1348,
	530, 1348,
	531, 1348,
	533, 1348,
	534, 1348,
	535, 1348,
	536, 1348,
	538, 1348,
	539, 1348,
	542, 1348,
	543, 1348,
	544, 1348,
	545, 1348,
	546, 1348,
	547, 1348,
	548, 1348,
	550, 1348,
	553, 1348,
	554, 1348,
	555, 1348,
	556, 1348,
	557, 1348,
	558, 1348,
	560, 1348,
	561, 1348,
	562, 1348,
	563, 1348,
	564, 1348,
	565, 1348,
	566, 1348,
	571, 1348,
	572, 1348,
	573, 1348,
	574, 1348,
	575, 1348,
	576, 1348,
	-2, 0,
	-1, 776,
	190, 2418,
	523, 2418,
	589, 2418,
	609, 2418,
	-2, 0,
	-1, 777,
	190, 2405,
	523, 2405,
	589, 2405,
	609, 2405,
	-2, 0,
	-1, 779,
	190, 2672,
	523, 2672,
	589, 2672,
	609, 2672,
	-2, 0,
	-1, 782,
	190, 2530,
	523, 2530,
	589, 2530,
	609, 2530,
	-2, 0,
	-1, 783,
	190, 2714,
	523, 2714,
	589, 2714,
	609, 2714,
	-2, 0,
	-1, 791,
	190, 2557,
	523, 2557,
	589, 2557,
	609, 2557,
	-2, 720,
	-1, 826,
	609, 2354,
	612, 2354,
	-2, 1020,
	-1, 827,
	609, 2356,
	612, 2356,
	-2, 1021,
	-1, 828,
	609, 2355,
	612, 2355,
	-2, 1022,
	-1, 829,
	612, 2280,
	-2, 1023,
	-1, 854,
	185, 268,
	-2, 0,
	-1, 878,
	43, 2327,
	-2, 0,
	-1, 879,
	560, 1326,
	-2, 1100,
	-1, 895,
	4, 1760,
	21, 1760,
	22, 1760,
	23, 1760,
	24, 1760,
	25, 1760,
	26, 1760,
	27, 1760,
	29, 1760,
	30, 1760,
	36, 1760,
	41, 1760,
	42, 1760,
	44, 1760,
	45, 1760,
	46, 1760,
	47, 1760,
	48, 1760,
	49, 1760,
	50, 1760,
	51, 1760,
	53, 1760,
	54, 1760,
	55, 1760,
	56, 1760,
	58, 1760,
	59, 1760,
	60, 1760,
	61, 1760,
	62, 1760,
	63, 1760,
	64, 1760,
	68, 1760,
	69, 1760,
	70, 1760,
	71, 1760,
	73, 1760,
	74, 1760,
	75, 1760,
	79, 1760,
	80, 1760,
	81, 1760,
	82, 1760,
	83, 1760,
	84, 1760,
	85, 1760,
	88, 1760,
	89, 1760,
	90, 1760,
	91, 1760,
	92, 1760,
	94, 1760,
	96, 1760,
	97, 1760,
	98, 1760,
	99, 1760,
	100, 1760,
	101, 1760,
	103, 1760,
	104, 1760,
	105, 1760,
	107, 1760,
	108, 1760,
	109, 1760,
	117, 1760,
	118, 1760,
	119, 1760,
	120, 1760,
	121, 1760,
	123, 1760,
	124, 1760,
	125, 1760,
	126, 1760,
	128, 1760,
	129, 1760,
	130, 1760,
	132, 1760,
	133, 1760,
	134, 1760,
	136, 1760,
	137, 1760,
	138, 1760,
	141, 1760,
	142, 1760,
	143, 1760,
	145, 1760,
	146, 1760,
	147, 1760,
	149, 1760,
	150, 1760,
	151, 1760,
	153, 1760,
	154, 1760,
	155, 1760,
	156, 1760,
	157, 1760,
	158, 1760,
	159, 1760,
	160, 1760,
	161, 1760,
	162, 1760,
	163, 1760,
	164, 1760,
	165, 1760,
	166, 1760,
	167, 1760,
	168, 1760,
	169, 1760,
	171, 1760,
	177, 1760,
	178, 1760,
	179, 1760,
	180, 1760,
	184, 1760,
	186, 1760,
	187, 1760,
	188, 1760,
	192, 1760,
	193, 1760,
	194, 1760,
	195, 1760,
	196, 1760,
	197, 1760,
	198, 1760,
	199, 1760,
	200, 1760,
	201, 1760,
	202, 1760,
	203, 1760,
	204, 1760,
	205, 1760,
	207, 1760,
	208, 1760,
	210, 1760,
	211, 1760,
	213, 1760,
	214, 1760,
	215, 1760,
	216, 1760,
	217, 1760,
	218, 1760,
	219, 1760,
	220, 1760,
	221, 1760,
	223, 1760,
	224, 1760,
	226, 1760,
	227, 1760,
	228, 1760,
	229, 1760,
	230, 1760,
	234, 1760,
	235, 1760,
	236, 1760,
	237, 1760,
	240, 1760,
	241, 1760,
	242, 1760,
	244, 1760,
	246, 1760,
	247, 1760,
	249, 1760,
	251, 1760,
	252, 1760,
	253, 1760,
	255, 1760,
	259, 1760,
	260, 1760,
	261, 1760,
	262, 1760,
	263, 1760,
	264, 1760,
	266, 1760,
	267, 1760,
	268, 1760,
	270, 1760,
	271, 1760,
	273, 1760,
	274, 1760,
	277, 1760,
	278, 1760,
	279, 1760,
	280, 1760,
	281, 1760,
	282, 1760,
	283, 1760,
	286, 1760,
	287, 1760,
	288, 1760,
	289, 1760,
	291, 1760,
	292, 1760,
	293, 1760,
	294, 1760,
	295, 1760,
	296, 1760,
	297, 1760,
	298, 1760,
	299, 1760,
	300, 1760,
	301, 1760,
	302, 1760,
	303, 1760,
	304, 1760,
	305, 1760,
	306, 1760,
	307, 1760,
	308, 1760,
	309, 1760,
	310, 1760,
	311, 1760,
	312, 1760,
	314, 1760,
	316, 1760,
	317, 1760,
	318, 1760,
	319, 1760,
	320, 1760,
	321, 1760,
	322, 1760,
	323, 1760,
	324, 1760,
	325, 1760,
	326, 1760,
	327, 1760,
	328, 1760,
	329, 1760,
	330, 1760,
	331, 1760,
	333, 1760,
	334, 1760,
	336, 1760,
	338, 1760,
	339, 1760,
	340, 1760,
	342, 1760,
	343, 1760,
	344, 1760,
	345, 1760,
	346, 1760,
	349, 1760,
	353, 1760,
	354, 1760,
	355, 1760,
	358, 1760,
	359, 1760,
	360, 1760,
	362, 1760,
	364, 1760,
	365, 1760,
	366, 1760,
	367, 1760,
	368, 1760,
	369, 1760,
	370, 1760,
	371, 1760,
	372, 1760,
	373, 1760,
	374, 1760,
	375, 1760,
	376, 1760,
	378, 1760,
	379, 1760,
	380, 1760,
	381, 1760,
	382, 1760,
	383, 1760,
	384, 1760,
	385, 1760,
	386, 1760,
	387, 1760,
	388, 1760,
	389, 1760,
	390, 1760,
	391, 1760,
	392, 1760,
	394, 1760,
	395, 1760,
	397, 1760,
	398, 1760,
	399, 1760,
	400, 1760,
	401, 1760,
	402, 1760,
	403, 1760,
	404, 1760,
	405, 1760,
	406, 1760,
	407, 1760,
	408, 1760,
	409, 1760,
	411, 1760,
	413, 1760,
	414, 1760,
	415, 1760,
	421, 1760,
	422, 1760,
	424, 1760,
	425, 1760,
	426, 1760,
	427, 1760,
	428, 1760,
	429, 1760,
	430, 1760,
	431, 1760,
	432, 1760,
	433, 1760,
	435, 1760,
	436, 1760,
	437, 1760,
	439, 1760,
	440, 1760,
	441, 1760,
	442, 1760,
	443, 1760,
	444, 1760,
	445, 1760,
	447, 1760,
	448, 1760,
	449, 1760,
	450, 1760,
	451, 1760,
	452, 1760,
	453, 1760,
	454, 1760,
	455, 1760,
	456, 1760,
	457, 1760,
	458, 1760,
	460, 1760,
	461, 1760,
	462, 1760,
	463, 1760,
	464, 1760,
	465, 1760,
	467, 1760,
	468, 1760,
	469, 1760,
	470, 1760,
	471, 1760,
	472, 1760,
	474, 1760,
	475, 1760,
	476, 1760,
	477, 1760,
	478, 1760,
	479, 1760,
	480, 1760,
	481, 1760,
	483, 1760,
	485, 1760,
	486, 1760,
	487, 1760,
	488, 1760,
	489, 1760,
	490, 1760,
	491, 1760,
	492, 1760,
	493, 1760,
	494, 1760,
	495, 1760,
	496, 1760,
	497, 1760,
	498, 1760,
	499, 1760,
	500, 1760,
	501, 1760,
	503, 1760,
	504, 1760,
	506, 1760,
	507, 1760,
	509, 1760,
	510, 1760,
	511, 1760,
	512, 1760,
	513, 1760,
	514, 1760,
	515, 1760,
	516, 1760,
	518, 1760,
	519, 1760,
	520, 1760,
	521, 1760,
	522, 1760,
	524, 1760,
	526, 1760,
	527, 1760,
	528, 1760,
	529, 1760,
	530, 1760,
	531, 1760,
	533, 1760,
	534, 1760,
	535, 1760,
	536, 1760,
	538, 1760,
	539, 1760,
	542, 1760,
	543, 1760,
	544, 1760,
	545, 1760,
	546, 1760,
	547, 1760,
	548, 1760,
	550, 1760,
	553, 1760,
	554, 1760,
	555, 1760,
	556, 1760,
	557, 1760,
	558, 1760,
	560, 1760,
	561, 1760,
	562, 1760,
	563, 1760,
	564, 1760,
	565, 1760,
	566, 1760,
	571, 1760,
	572, 1760,
	573, 1760,
	574, 1760,
	575, 1760,
	576, 1760,
	-2, 0,
	-1, 905,
	263, 421,
	-2, 0,
	-1, 982,
	399, 900,
	465, 900,
	507, 900,
	528, 900,
	-2, 0,
	-1, 983,
	399, 899,
	465, 899,
	507, 899,
	528, 899,
	-2, 831,
	-1, 987,
	1, 952,
	606, 952,
	608, 952,
	610, 952,
	-2, 0,
	-1, 989,
	1, 874,
	606, 874,
	608, 874,
	610, 874,
	-2, 0,
	-1, 990,
	1, 878,
	606, 878,
	608, 878,
	610, 878,
	-2, 0,
	-1, 991,
	1, 1019,
	185, 1019,
	606, 1019,
	608, 1019,
	610, 1019,
	-2, 0,
	-1, 999,
	1, 905,
	606, 905,
	608, 905,
	610, 905,
	-2, 0,
	-1, 1006,
	1, 952,
	606, 952,
	608, 952,
	610, 952,
	-2, 0,
	-1, 1007,
	1, 954,
	606, 954,
	608, 954,
	610, 954,
	-2, 0,
	-1, 1008,
	1, 957,
	606, 957,
	608, 957,
	610, 957,
	-2, 0,
	-1, 1014,
	1, 983,
	606, 983,
	608, 983,
	610, 983,
	-2, 0,
	-1, 1015,
	1, 985,
	606, 985,
	608, 985,
	610, 985,
	-2, 0,
	-1, 1020,
	1, 1013,
	606, 1013,
	608, 1013,
	610, 1013,
	-2, 0,
	-1, 1072,
	172, 1630,
	185, 1630,
	276, 1630,
	347, 1630,
	-2, 1566,
	-1, 1087,
	172, 1629,
	185, 1629,
	276, 1629,
	347, 1629,
	-2, 1563,
	-1, 1114,
	609, 2353,
	-2, 728,
	-1, 1143,
	5, 2345,
	607, 2343,
	-2, 2334,
	-1, 1151,
	5, 2366,
	607, 2363,
	-2, 2354,
	-1, 1152,
	5, 2367,
	607, 2364,
	-2, 2355,
	-1, 1160,
	609, 2351,
	-2, 2333,
	-1, 1161,
	607, 2799,
	-2, 2352,
	-1, 1184,
	607, 2798,
	-2, 2368,
	-1, 1185,
	5, 1835,
	-2, 2769,
	-1, 1186,
	5, 1836,
	-2, 2770,
	-1, 1187,
	5, 1837,
	-2, 2784,
	-1, 1188,
	5, 1838,
	-2, 2748,
	-1, 1189,
	5, 1839,
	-2, 2782,
	-1, 1190,
	5, 1847,
	-2, 2761,
	-1, 1191,
	5, 1834,
	-2, 2757,
	-1, 1192,
	5, 1834,
	-2, 2756,
	-1, 1193,
	5, 1834,
	-2, 2775,
	-1, 1194,
	5, 1845,
	-2, 2750,
	-1, 1195,
	5, 1850,
	-2, 2749,
	-1, 1196,
	5, 1852,
	-2, 2794,
	-1, 1199,
	5, 1874,
	-2, 2787,
	-1, 1200,
	5, 1866,
	-2, 2788,
	-1, 1201,
	5, 1874,
	-2, 2789,
	-1, 1202,
	5, 1870,
	-2, 2790,
	-1, 1203,
	5, 1820,
	-2, 2762,
	-1, 1204,
	5, 1821,
	-2, 2763,
	-1, 1205,
	5, 1822,
	-2, 2751,
	-1, 1233,
	5, 1857,
	-2, 2795,
	-1, 1234,
	5, 1858,
	-2, 2785,
	-1, 1235,
	5, 1859,
	561, 1859,
	-2, 2752,
	-1, 1236,
	5, 1860,
	561, 1860,
	-2, 2753,
	-1, 1273,
	607, 2363,
	-2, 2354,
	-1, 1274,
	607, 2364,
	-2, 2355,
	-1, 1372,
	190, 2714,
	523, 2714,
	589, 2714,
	609, 2714,
	-2, 0,
	-1, 1377,
	1, 704,
	610, 704,
	-2, 1475,
	-1, 1507,
	366, 2328,
	424, 2328,
	467, 2328,
	599, 2328,
	-2, 2318,
	-1, 1513,
	190, 129,
	270, 129,
	333, 129,
	566, 129,
	-2, 2710,
	-1, 1514,
	190, 130,
	270, 130,
	333, 130,
	566, 130,
	-2, 2463,
	-1, 1515,
	190, 131,
	270, 131,
	333, 131,
	566, 131,
	-2, 2634,
	-1, 1521,
	611, 2328,
	-2, 2330,
	-1, 1529,
	1, 1323,
	429, 1280,
	467, 1280,
	583, 1280,
	606, 1323,
	608, 1323,
	610, 1323,
	-2, 1615,
	-1, 1535,
	206, 1420,
	225, 1420,
	437, 1420,
	-2, 0,
	-1, 1591,
	407, 1099,
	560, 1099,
	-2, 416,
	-1, 1608,
	43, 2326,
	-2, 1065,
	-1, 1615,
	1, 1323,
	606, 1323,
	608, 1323,
	610, 1323,
	-2, 1615,
	-1, 1623,
	4, 1348,
	21, 1348,
	22, 1348,
	23, 1348,
	24, 1348,
	25, 1348,
	26, 1348,
	27, 1348,
	29, 1348,
	30, 1348,
	36, 1348,
	41, 1348,
	42, 1348,
	44, 1348,
	45, 1348,
	46, 1348,
	47, 1348,
	48, 1348,
	49, 1348,
	50, 1348,
	51, 1348,
	53, 1348,
	54, 1348,
	55, 1348,
	56, 1348,
	58, 1348,
	59, 1348,
	60, 1348,
	61, 1348,
	62, 1348,
	63, 1348,
	64, 1348,
	68, 1348,
	69, 1348,
	70, 1348,
	71, 1348,
	73, 1348,
	74, 1348,
	75, 1348,
	79, 1348,
	80, 1348,
	81, 1348,
	82, 1348,
	83, 1348,
	84, 1348,
	85, 1348,
	88, 1348,
	89, 1348,
	90, 1348,
	91, 1348,
	92, 1348,
	94, 1348,
	96, 1348,
	97, 1348,
	98, 1348,
	99, 1348,
	100, 1348,
	101, 1348,
	103, 1348,
	104, 1348,
	105, 1348,
	107, 1348,
	108, 1348,
	109, 1348,
	117, 1348,
	118, 1348,
	119, 1348,
	120, 1348,
	121, 1348,
	123, 1348,
	124, 1348,
	125, 1348,
	126, 1348,
	128, 1348,
	129, 1348,
	130, 1348,
	132, 1348,
	133, 1348,
	134, 1348,
	136, 1348,
	137, 1348,
	138, 1348,
	141, 1348,
	142, 1348,
	143, 1348,
	145, 1348,
	146, 1348,
	147, 1348,
	149, 1348,
	150, 1348,
	151, 1348,
	153, 1348,
	154, 1348,
	155, 1348,
	156, 1348,
	157, 1348,
	158, 1348,
	159, 1348,
	160, 1348,
	161, 1348,
	162, 1348,
	163, 1348,
	164, 1348,
	165, 1348,
	166, 1348,
	167, 1348,
	168, 1348,
	169, 1348,
	177, 1348,
	178, 1348,
	179, 1348,
	180, 1348,
	184, 1348,
	186, 1348,
	187, 1348,
	188, 1348,
	192, 1348,
	193, 1348,
	194, 1348,
	195, 1348,
	196, 1348,
	197, 1348,
	198, 1348,
	199, 1348,
	200, 1348,
	201, 1348,
	202, 1348,
	203, 1348,
	204, 1348,
	205, 1348,
	207, 1348,
	208, 1348,
	210, 1348,
	211, 1348,
	213, 1348,
	214, 1348,
	215, 1348,
	216, 1348,
	217, 1348,
	218, 1348,
	219, 1348,
	220, 1348,
	221, 1348,
	223, 1348,
	224, 1348,
	226, 1348,
	227, 1348,
	228, 1348,
	229, 1348,
	230, 1348,
	235, 1348,
	236, 1348,
	237, 1348,
	240, 1348,
	241, 1348,
	242, 1348,
	244, 1348,
	246, 1348,
	247, 1348,
	249, 1348,
	251, 1348,
	252, 1348,
	253, 1348,
	255, 1348,
	259, 1348,
	260, 1348,
	261, 1348,
	262, 1348,
	263, 1348,
	264, 1348,
	266, 1348,
	267, 1348,
	268, 1348,
	270, 1348,
	271, 1348,
	273, 1348,
	274, 1348,
	277, 1348,
	278, 1348,
	279, 1348,
	280, 1348,
	281, 1348,
	282, 1348,
	283, 1348,
	286, 1348,
	287, 1348,
	288, 1348,
	289, 1348,
	291, 1348,
	292, 1348,
	293, 1348,
	294, 1348,
	295, 1348,
	296, 1348,
	297, 1348,
	298, 1348,
	299, 1348,
	300, 1348,
	301, 1348,
	302, 1348,
	303, 1348,
	304, 1348,
	305, 1348,
	306, 1348,
	307, 1348,
	308, 1348,
	309, 1348,
	310, 1348,
	311, 1348,
	312, 1348,
	314, 1348,
	316, 1348,
	317, 1348,
	318, 1348,
	319, 1348,
	320, 1348,
	321, 1348,
	322, 1348,
	323, 1348,
	324, 1348,
	325, 1348,
	326, 1348,
	327, 1348,
	328, 1348,
	329, 1348,
	330, 1348,
	331, 1348,
	333, 1348,
	334, 1348,
	338, 1348,
	339, 1348,
	340, 1348,
	342, 1348,
	343, 1348,
	344, 1348,
	345, 1348,
	346, 1348,
	349, 1348,
	351, 1348,
	353, 1348,
	354, 1348,
	355, 1348,
	358, 1348,
	359, 1348,
	360, 1348,
	362, 1348,
	364, 1348,
	365, 1348,
	366, 1348,
	367, 1348,
	368, 1348,
	369, 1348,
	370, 1348,
	371, 1348,
	372, 1348,
	373, 1348,
	374, 1348,
	375, 1348,
	376, 1348,
	378, 1348,
	379, 1348,
	380, 1348,
	381, 1348,
	382, 1348,
	383, 1348,
	384, 1348,
	385, 1348,
	386, 1348,
	387, 1348,
	388, 1348,
	389, 1348,
	390, 1348,
	391, 1348,
	392, 1348,
	394, 1348,
	395, 1348,
	397, 1348,
	398, 1348,
	399, 1348,
	400, 1348,
	401, 1348,
	402, 1348,
	403, 1348,
	404, 1348,
	405, 1348,
	406, 1348,
	407, 1348,
	408, 1348,
	409, 1348,
	411, 1348,
	413, 1348,
	414, 1348,
	415, 1348,
	421, 1348,
	422, 1348,
	424, 1348,
	425, 1348,
	426, 1348,
	427, 1348,
	428, 1348,
	429, 1348,
	430, 1348,
	431, 1348,
	432, 1348,
	433, 1348,
	435, 1348,
	436, 1348,
	437, 1348,
	439, 1348,
	440, 1348,
	441, 1348,
	442, 1348,
	443, 1348,
	444, 1348,
	445, 1348,
	447, 1348,
	448, 1348,
	449, 1348,
	450, 1348,
	451, 1348,
	452, 1348,
	453, 1348,
	454, 1348,
	455, 1348,
	456, 1348,
	457, 1348,
	458, 1348,
	460, 1348,
	461, 1348,
	462, 1348,
	463, 1348,
	464, 1348,
	465, 1348,
	467, 1348,
	468, 1348,
	469, 1348,
	470, 1348,
	471, 1348,
	472, 1348,
	474, 1348,
	475, 1348,
	476, 1348,
	477, 1348,
	478, 1348,
	479, 1348,
	480, 1348,
	481, 1348,
	483, 1348,
	485, 1348,
	486, 1348,
	487, 1348,
	488, 1348,
	489, 1348,
	490, 1348,
	491, 1348,
	492, 1348,
	493, 1348,
	494, 1348,
	495, 1348,
	496, 1348,
	497, 1348,
	498, 1348,
	499, 1348,
	500, 1348,
	501, 1348,
	503, 1348,
	504, 1348,
	506, 1348,
	507, 1348,
	509, 1348,
	510, 1348,
	511, 1348,
	512, 1348,
	513, 1348,
	514, 1348,
	515, 1348,
	516, 1348,
	518, 1348,
	519, 1348,
	520, 1348,
	521, 1348,
	522, 1348,
	524, 1348,
	526, 1348,
	527, 1348,
	528, 1348,
	529, 1348,
	530, 1348,
	531, 1348,
	533, 1348,
	534, 1348,
	535, 1348,
	536, 1348,
	538, 1348,
	539, 1348,
	542, 1348,
	543, 1348,
	544, 1348,
	545, 1348,
	546, 1348,
	547, 1348,
	548, 1348,
	550, 1348,
	553, 1348,
	554, 1348,
	555, 1348,
	556, 1348,
	557, 1348,
	558, 1348,
	560, 1348,
	561, 1348,
	562, 1348,
	563, 1348,
	564, 1348,
	565, 1348,
	566, 1348,
	571, 1348,
	572, 1348,
	573, 1348,
	574, 1348,
	575, 1348,
	576, 1348,
	-2, 0,
	-1, 1646,
	1, 561,
	606, 561,
	608, 561,
	610, 561,
	-2, 1586,
	-1, 1649,
	4, 2793,
	11, 2793,
	12, 2793,
	14, 2793,
	15, 2793,
	16, 2793,
	17, 2793,
	18, 2793,
	19, 2793,
	21, 2793,
	22, 2793,
	23, 2793,
	24, 2793,
	25, 2793,
	26, 2793,
	27, 2793,
	29, 2793,
	30, 2793,
	33, 2793,
	34, 2793,
	36, 2793,
	38, 2793,
	41, 2793,
	42, 2793,
	44, 2793,
	45, 2793,
	46, 2793,
	47, 2793,
	48, 2793,
	49, 2793,
	50, 2793,
	51, 2793,
	53, 2793,
	54, 2793,
	55, 2793,
	56, 2793,
	58, 2793,
	59, 2793,
	60, 2793,
	61, 2793,
	62, 2793,
	63, 2793,
	64, 2793,
	67, 2793,
	68, 2793,
	69, 2793,
	70, 2793,
	71, 2793,
	73, 2793,
	74, 2793,
	75, 2793,
	76, 2793,
	79, 2793,
	80, 2793,
	81, 2793,
	82, 2793,
	83, 2793,
	84, 2793,
	85, 2793,
	86, 2793,
	88, 2793,
	89, 2793,
	90, 2793,
	91, 2793,
	92, 2793,
	94, 2793,
	95, 2793,
	96, 2793,
	97, 2793,
	98, 2793,
	99, 2793,
	100, 2793,
	101, 2793,
	103, 2793,
	104, 2793,
	105, 2793,
	106, 2793,
	107, 2793,
	108, 2793,
	109, 2793,
	117, 2793,
	118, 2793,
	119, 2793,
	120, 2793,
	121, 2793,
	123, 2793,
	124, 2793,
	125, 2793,
	126, 2793,
	128, 2793,
	129, 2793,
	130, 2793,
	132, 2793,
	133, 2793,
	134, 2793,
	136, 2793,
	137, 2793,
	138, 2793,
	141, 2793,
	142, 2793,
	143, 2793,
	145, 2793,
	146, 2793,
	147, 2793,
	149, 2793,
	150, 2793,
	151, 2793,
	153, 2793,
	154, 2793,
	155, 2793,
	156, 2793,
	157, 2793,
	158, 2793,
	159, 2793,
	160, 2793,
	161, 2793,
	162, 2793,
	163, 2793,
	164, 2793,
	165, 2793,
	166, 2793,
	167, 2793,
	168, 2793,
	169, 2793,
	173, 2793,
	174, 2793,
	175, 2793,
	176, 2793,
	177, 2793,
	178, 2793,
	179, 2793,
	180, 2793,
	183, 2793,
	184, 2793,
	186, 2793,
	187, 2793,
	188, 2793,
	191, 2793,
	192, 2793,
	193, 2793,
	194, 2793,
	195, 2793,
	196, 2793,
	197, 2793,
	198, 2793,
	199, 2793,
	200, 2793,
	201, 2793,
	202, 2793,
	203, 2793,
	204, 2793,
	205, 2793,
	207, 2793,
	208, 2793,
	210, 2793,
	211, 2793,
	213, 2793,
	214, 2793,
	215, 2793,
	216, 2793,
	217, 2793,
	218, 2793,
	219, 2793,
	220, 2793,
	221, 2793,
	222, 2793,
	223, 2793,
	224, 2793,
	225, 2793,
	226, 2793,
	227, 2793,
	228, 2793,
	229, 2793,
	230, 2793,
	232, 2793,
	233, 2793,
	235, 2793,
	236, 2793,
	237, 2793,
	239, 2793,
	240, 2793,
	241, 2793,
	242, 2793,
	244, 2793,
	246, 2793,
	247, 2793,
	248, 2793,
	249, 2793,
	250, 2793,
	251, 2793,
	252, 2793,
	253, 2793,
	254, 2793,
	255, 2793,
	257, 2793,
	258, 2793,
	259, 2793,
	260, 2793,
	261, 2793,
	262, 2793,
	263, 2793,
	264, 2793,
	266, 2793,
	267, 2793,
	268, 2793,
	270, 2793,
	271, 2793,
	272, 2793,
	273, 2793,
	274, 2793,
	275, 2793,
	277, 2793,
	278, 2793,
	279, 2793,
	280, 2793,
	281, 2793,
	282, 2793,
	283, 2793,
	286, 2793,
	287, 2793,
	288, 2793,
	289, 2793,
	290, 2793,
	291, 2793,
	292, 2793,
	293, 2793,
	294, 2793,
	295, 2793,
	296, 2793,
	297, 2793,
	298, 2793,
	299, 2793,
	300, 2793,
	301, 2793,
	302, 2793,
	303, 2793,
	304, 2793,
	305, 2793,
	306, 2793,
	307, 2793,
	308, 2793,
	309, 2793,
	310, 2793,
	311, 2793,
	312, 2793,
	314, 2793,
	315, 2793,
	316, 2793,
	317, 2793,
	318, 2793,
	319, 2793,
	320, 2793,
	321, 2793,
	322, 2793,
	323, 2793,
	324, 2793,
	325, 2793,
	326, 2793,
	327, 2793,
	328, 2793,
	329, 2793,
	330, 2793,
	331, 2793,
	333, 2793,
	334, 2793,
	337, 2793,
	338, 2793,
	339, 2793,
	340, 2793,
	342, 2793,
	343, 2793,
	344, 2793,
	345, 2793,
	346, 2793,
	349, 2793,
	353, 2793,
	354, 2793,
	355, 2793,
	356, 2793,
	358, 2793,
	359, 2793,
	360, 2793,
	362, 2793,
	364, 2793,
	365, 2793,
	366, 2793,
	367, 2793,
	368, 2793,
	369, 2793,
	370, 2793,
	371, 2793,
	372, 2793,
	373, 2793,
	374, 2793,
	375, 2793,
	376, 2793,
	378, 2793,
	379, 2793,
	380, 2793,
	381, 2793,
	382, 2793,
	383, 2793,
	384, 2793,
	385, 2793,
	386, 2793,
	387, 2793,
	388, 2793,
	389, 2793,
	390, 2793,
	391, 2793,
	392, 2793,
	394, 2793,
	395, 2793,
	397, 2793,
	398, 2793,
	399, 2793,
	400, 2793,
	401, 2793,
	402, 2793,
	403, 2793,
	404, 2793,
	405, 2793,
	406, 2793,
	407, 2793,
	408, 2793,
	409, 2793,
	411, 2793,
	413, 2793,
	414, 2793,
	415, 2793,
	421, 2793,
	422, 2793,
	423, 2793,
	424, 2793,
	425, 2793,
	426, 2793,
	427, 2793,
	428, 2793,
	429, 2793,
	430, 2793,
	431, 2793,
	432, 2793,
	433, 2793,
	435, 2793,
	436, 2793,
	437, 2793,
	438, 2793,
	439, 2793,
	440, 2793,
	441, 2793,
	442, 2793,
	443, 2793,
	444, 2793,
	445, 2793,
	446, 2793,
	447, 2793,
	448, 2793,
	449, 2793,
	450, 2793,
	451, 2793,
	452, 2793,
	453, 2793,
	454, 2793,
	455, 2793,
	456, 2793,
	457, 2793,
	458, 2793,
	460, 2793,
	461, 2793,
	462, 2793,
	463, 2793,
	464, 2793,
	465, 2793,
	467, 2793,
	468, 2793,
	469, 2793,
	470, 2793,
	471, 2793,
	472, 2793,
	473, 2793,
	474, 2793,
	475, 2793,
	476, 2793,
	477, 2793,
	478, 2793,
	479, 2793,
	480, 2793,
	481, 2793,
	483, 2793,
	485, 2793,
	486, 2793,
	487, 2793,
	488, 2793,
	489, 2793,
	490, 2793,
	491, 2793,
	492, 2793,
	493, 2793,
	494, 2793,
	495, 2793,
	496, 2793,
	497, 2793,
	498, 2793,
	499, 2793,
	500, 2793,
	501, 2793,
	503, 2793,
	504, 2793,
	505, 2793,
	506, 2793,
	507, 2793,
	509, 2793,
	510, 2793,
	511, 2793,
	512, 2793,
	513, 2793,
	514, 2793,
	515, 2793,
	516, 2793,
	518, 2793,
	519, 2793,
	520, 2793,
	521, 2793,
	522, 2793,
	524, 2793,
	526, 2793,
	527, 2793,
	528, 2793,
	529, 2793,
	530, 2793,
	531, 2793,
	533, 2793,
	534, 2793,
	535, 2793,
	536, 2793,
	538, 2793,
	539, 2793,
	542, 2793,
	543, 2793,
	544, 2793,
	545, 2793,
	546, 2793,
	547, 2793,
	548, 2793,
	550, 2793,
	553, 2793,
	554, 2793,
	555, 2793,
	556, 2793,
	557, 2793,
	558, 2793,
	560, 2793,
	561, 2793,
	562, 2793,
	563, 2793,
	564, 2793,
	565, 2793,
	566, 2793,
	571, 2793,
	572, 2793,
	573, 2793,
	574, 2793,
	575, 2793,
	576, 2793,
	577, 2793,
	579, 2793,
	587, 2793,
	588, 2793,
	589, 2793,
	590, 2793,
	591, 2793,
	592, 2793,
	594, 2793,
	595, 2793,
	596, 2793,
	597, 2793,
	598, 2793,
	599, 2793,
	600, 2793,
	601, 2793,
	602, 2793,
	605, 2793,
	608, 2793,
	609, 2793,
	611, 2793,
	612, 2793,
	-2, 0,
	-1, 1654,
	190, 2672,
	523, 2672,
	589, 2672,
	609, 2672,
	-2, 0,
	-1, 1707,
	399, 900,
	465, 900,
	507, 900,
	528, 900,
	-2, 0,
	-1, 1718,
	1, 1420,
	606, 1420,
	608, 1420,
	610, 1420,
	-2, 0,
	-1, 1735,
	1, 895,
	606, 895,
	608, 895,
	610, 895,
	-2, 0,
	-1, 1736,
	1, 939,
	606, 939,
	608, 939,
	610, 939,
	-2, 0,
	-1, 1737,
	1, 947,
	606, 947,
	608, 947,
	610, 947,
	-2, 0,
	-1, 1740,
	1, 904,
	606, 904,
	608, 904,
	610, 904,
	-2, 0,
	-1, 1742,
	1, 910,
	606, 910,
	608, 910,
	610, 910,
	-2, 0,
	-1, 1745,
	1, 906,
	606, 906,
	608, 906,
	610, 906,
	-2, 0,
	-1, 1750,
	1, 920,
	606, 920,
	608, 920,
	610, 920,
	-2, 0,
	-1, 1781,
	1, 2655,
	606, 2655,
	608, 2655,
	609, 2655,
	610, 2655,
	-2, 0,
	-1, 1785,
	1, 994,
	606, 994,
	608, 994,
	610, 994,
	-2, 0,
	-1, 1802,
	1, 1470,
	610, 1470,
	-2, 1475,
	-1, 1805,
	172, 1629,
	185, 1629,
	276, 1629,
	347, 1629,
	-2, 1567,
	-1, 1905,
	152, 1588,
	172, 1588,
	185, 1588,
	243, 1588,
	276, 1588,
	347, 1588,
	357, 1588,
	540, 1588,
	-2, 2039,
	-1, 1966,
	608, 2214,
	-2, 0,
	-1, 2001,
	152, 1588,
	172, 1588,
	185, 1588,
	243, 1588,
	276, 1588,
	347, 1588,
	357, 1588,
	540, 1588,
	-2, 1721,
	-1, 2041,
	523, 2669,
	609, 2669,
	612, 2669,
	-2, 0,
	-1, 2058,
	607, 1862,
	-2, 1850,
	-1, 2090,
	190, 2669,
	609, 2669,
	612, 2669,
	-2, 0,
	-1, 2133,
	1, 706,
	610, 706,
	-2, 1475,
	-1, 2278,
	225, 263,
	-2, 2362,
	-1, 2279,
	225, 264,
	-2, 316,
	-1, 2389,
	1, 897,
	606, 897,
	608, 897,
	610, 897,
	-2, 0,
	-1, 2390,
	1, 941,
	606, 941,
	608, 941,
	610, 941,
	-2, 0,
	-1, 2391,
	1, 949,
	606, 949,
	608, 949,
	610, 949,
	-2, 0,
	-1, 2392,
	1, 996,
	606, 996,
	608, 996,
	610, 996,
	-2, 0,
	-1, 2433,
	1, 922,
	606, 922,
	608, 922,
	610, 922,
	-2, 0,
	-1, 2453,
	1, 979,
	606, 979,
	608, 979,
	610, 979,
	-2, 0,
	-1, 2500,
	444, 1656,
	445, 1656,
	-2, 1895,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1915,
	-1, 2532,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1916,
	-1, 2533,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1917,
	-1, 2534,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1918,
	-1, 2535,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1919,
	-1, 2536,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1920,
	-1, 2537,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1921,
	-1, 2538,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1922,
	-1, 2550,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1934,
	-1, 2551,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1935,
	-1, 2552,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1936,
	-1, 2556,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1943,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1947,
	-1, 2564,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1955,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1956,
	-1, 2566,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1957,
	-1, 2567,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1958,
	-1, 2741,
	5, 2366,
	190, 2225,
	607, 2363,
	-2, 2354,
	-1, 2742,
	190, 2226,
	-2, 2744,
	-1, 2743,
	190, 2227,
	-2, 2556,
	-1, 2744,
	190, 2228,
	-2, 2436,
	-1, 2745,
	190, 2229,
	-2, 2494,
	-1, 2746,
	190, 2230,
	-2, 2541,
	-1, 2747,
	190, 2231,
	-2, 2667,
	-1, 2748,
	190, 2232,
	-2, 2022,
	-1, 2819,
	1, 1722,
	2, 1722,
	106, 1722,
	152, 1722,
	172, 1722,
	185, 1722,
	191, 1722,
	209, 1722,
	212, 1722,
	239, 1722,
	243, 1722,
	254, 1722,
	272, 1722,
	276, 1722,
	315, 1722,
	347, 1722,
	351, 1722,
	357, 1722,
	434, 1722,
	438, 1722,
	540, 1722,
	551, 1722,
	568, 1722,
	569, 1722,
	570, 1722,
	580, 1722,
	606, 1722,
	608, 1722,
	610, 1722,
	612, 1722,
	-2, 1721,
	-1, 2832,
	607, 2335,
	-2, 2349,
	-1, 2834,
	1, 333,
	568, 333,
	-2, 1615,
	-1, 2864,
	607, 1861,
	-2, 1851,
	-1, 3058,
	1, 1323,
	429, 1280,
	467, 1280,
	583, 1280,
	606, 1323,
	608, 1323,
	610, 1323,
	-2, 1615,
	-1, 3234,
	352, 1659,
	-2, 2783,
	-1, 3235,
	352, 1660,
	-2, 2652,
	-1, 3239,
	444, 2291,
	445, 2291,
	-2, 2020,
	-1, 3240,
	444, 2295,
	445, 2295,
	-2, 2021,
	-1, 3241,
	444, 2292,
	445, 2292,
	-2, 2020,
	-1, 3242,
	444, 2296,
	445, 2296,
	-2, 2021,
	-1, 3255,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1945,
	-1, 3256,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1949,
	-1, 3262,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1951,
	-1, 3489,
	1, 701,
	606, 701,
	608, 701,
	610, 701,
	-2, 1475,
	-1, 3671,
	43, 2326,
	-2, 1066,
	-1, 3676,
	1, 1323,
	606, 1323,
	608, 1323,
	610, 1323,
	-2, 1615,
	-1, 3781,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1953,
	-1, 3788,
	248, 0,
	250, 0,
	337, 0,
	-2, 1972,
	-1, 3856,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2001,
	-1, 3857,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2002,
	-1, 3858,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2003,
	-1, 3862,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2007,
	-1, 3863,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2008,
	-1, 3864,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2009,
	-1, 3912,
	607, 2336,
	-2, 2350,
	-1, 4110,
	609, 2900,
	-2, 1541,
	-1, 4165,
	248, 0,
	250, 0,
	337, 0,
	-2, 1973,
	-1, 4168,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1976,
	-1, 4169,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1978,
	-1, 4281,
	609, 2351,
	-2, 1358,
	-1, 4438,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1977,
	-1, 4439,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1979,
	-1, 4450,
	248, 0,
	-2, 2012,
	-1, 4635,
	248, 0,
	-2, 2013,
	-1, 4849,
	50, 0,
	222, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 2747,
}

const sqlPrivate = 57344

const sqlLast = 138064

var sqlAct = [...]int{
	274, 3660, 4786, 5040, 4785, 3393, 2997, 4681, 1353, 4965,
	3131, 4894, 4673, 4910, 4848, 4506, 4742, 4835, 4979, 4860,
	3144, 4723, 1266, 4817, 2275, 4776, 4796, 4861, 2930, 3659,
	4605, 4148, 4799, 4862, 4919, 2972, 4639, 4582, 4553, 3821,
	2353, 2182, 4569, 4399, 4388, 4488, 4394, 3922, 3512, 1277,
	4847, 1350, 4355, 4329, 3773, 1345, 2510, 3101, 4511, 1544,
	4459, 2365, 4427, 4102, 1571, 4277, 4588, 4094, 4379, 716,
	2363, 4381, 4278, 4708, 1814, 828, 2579, 3693, 4022, 1343,
	4258, 2774, 1097, 3248, 2931, 4404, 3644, 3012, 3687, 2115,
	3518, 3633, 4068, 4049, 2511, 4051, 3515, 1411, 2102, 2190,
	4455, 2045, 2518, 828, 788, 3649, 3724, 3120, 3573, 3726,
	3090, 2007, 1088, 3501, 3156, 3648, 1504, 3651, 3117, 3626,
	2046, 2326, 1154, 2846, 727, 3915, 3625, 2025, 3502, 3115,
	3439, 3408, 4147, 3399, 3416, 3376, 1096, 182, 4204, 3397,
	903, 4, 3132, 907, 2264, 2262, 3151, 3146, 1976, 4895,
	2218, 3065, 2812, 2202, 3537, 825, 3882, 1672, 3446, 268,
	3375, 3232, 2515, 1913, 1883, 2592, 1610, 4640, 3150, 267,
	2361, 3094, 2263, 784, 1348, 2258, 1952, 3029, 2657, 2239,
	823, 2246, 2971, 1392, 898, 2170, 1257, 3102, 2174, 1336,
	1147, 2659, 1802, 2648, 2576, 1152, 1715, 1322, 2113, 2160,
	2499, 2792, 1977, 2482, 1143, 2480, 1647, 2811, 2847, 761,
	3125, 2313, 1613, 829, 830, 2954, 976, 1670, 1573, 2955,
	3652, 1379, 2875, 4743, 2916, 1947, 2651, 1260, 2801, 1239,
	2629, 182, 1986, 2782, 834, 1815, 2737, 769, 1897, 2771,
	1993, 1274, 191, 1996, 837, 2814, 1816, 2481, 2703, 192,
	1750, 2483, 1735, 2272, 1333, 111, 1645, 2312, 924, 2339,
	1638, 780, 834, 1512, 1539, 2504, 4911, 4966, 1128, 720,
	44, 43, 837, 1262, 1237, 717, 41, 729, 32, 1801,
	30, 1150, 28, 818, 744, 1821, 1256, 3285, 39, 1197,
	997, 879, 3279, 3923, 1550, 703, 5051, 1543, 880, 725,
	2791, 3896, 1145, 3897, 2104, 2104, 1092, 3395, 4857, 2104,
	2104, 1741, 2104, 5043, 1388, 5031, 5030, 3712, 2104, 2791,
	2791, 4999, 4479, 4997, 4939, 4510, 1681, 4510, 2284, 163,
	4896, 4476, 4886, 3703, 4897, 2125, 2791, 73, 4884, 46,
	45, 4881, 2791, 1663, 4473, 4882, 2362, 3474, 1149, 1829,
	1830, 3702, 4878, 3712, 74, 4845, 4879, 158, 4844, 2284,
	4843, 4833, 2284, 4831, 3161, 4510, 1126, 4510, 1092, 4826,
	79, 4821, 1860, 4591, 1254, 4510, 4820, 3471, 4794, 1832,
	4510, 67, 4510, 4762, 2784, 4755, 4231, 2855, 48, 2791,
	160, 4754, 4747, 4722, 4719, 2791, 2284, 2284, 4510, 4702,
	4637, 3456, 4619, 4345, 2855, 1885, 4131, 1082, 47, 4584,
	88, 4529, 4528, 3953, 1831, 2284, 2284, 4517, 4516, 4509,
	4466, 2284, 4510, 4510, 2284, 1073, 4440, 4415, 2125, 3294,
	2855, 3161, 1072, 2122, 3128, 3295, 1388, 50, 68, 2605,
	2606, 2607, 2624, 2625, 2626, 1272, 51, 2877, 4412, 1093,
	4324, 57, 3712, 94, 2791, 2284, 161, 4304, 4167, 2627,
	1300, 2791, 2855, 4118, 49, 4112, 110, 3719, 3886, 3719,
	4065, 3952, 94, 107, 4066, 3953, 2654, 3907, 1240, 1240,
	1087, 3908, 3905, 3889, 3805, 3801, 3906, 2791, 2284, 2791,
	2122, 3718, 1885, 3392, 1552, 3719, 3387, 2791, 3386, 3337,
	2791, 3335, 2791, 3338, 2851, 3336, 3327, 1292, 1241, 1552,
	3328, 2617, 1564, 3325, 52, 3296, 1243, 2791, 1244, 2791,
	2613, 1837, 1269, 1558, 899, 3160, 1552, 3142, 2125, 3161,
	3141, 2349, 95, 2900, 2349, 2854, 2125, 2791, 2844, 2855,
	2836, 2790, 2791, 2348, 2284, 2791, 2125, 2349, 3247, 2791,
	4763, 73, 4641, 902, 901, 4632, 4620, 4591, 3161, 3886,
	2783, 2791, 4392, 4345, 238, 2122, 4305, 4131, 74, 2655,
	1859, 1861, 4067, 3004, 2195, 2915, 2139, 2103, 2119, 3096,
	1293, 2283, 3022, 2913, 79, 1972, 1538, 4001, 3776, 1268,
	3749, 1994, 2251, 2828, 3704, 1717, 1293, 2827, 2618, 2619,
	2620, 2621, 1829, 1830, 2826, 2825, 1551, 1270, 2612, 2824,
	238, 1245, 1242, 240, 3705, 3110, 1081, 1080, 1079, 1078,
	1077, 4871, 1076, 3284, 88, 1075, 1071, 1070, 1852, 1069,
	1068, 1067, 1832, 1066, 3205, 2686, 1065, 1064, 1063, 1062,
	1061, 1060, 1059, 1058, 1057, 2425, 1056, 1055, 3346, 3347,
	2656, 1054, 2653, 1036, 974, 973, 972, 971, 970, 240,
	969, 239, 968, 967, 966, 905, 965, 1831, 964, 963,
	962, 2105, 2105, 961, 960, 232, 2105, 2105, 49, 2105,
	110, 99, 2622, 2623, 233, 2105, 94, 107, 959, 958,
	1685, 957, 956, 955, 954, 953, 952, 951, 950, 53,
	949, 948, 947, 946, 945, 1882, 944, 239, 943, 942,
	1667, 941, 193, 940, 56, 2615, 939, 928, 927, 59,
	1829, 1830, 926, 3361, 922, 921, 914, 913, 1563, 69,
	2122, 912, 897, 896, 853, 852, 58, 190, 102, 1557,
	851, 106, 4222, 1860, 2122, 54, 95, 850, 238, 162,
	1832, 1543, 841, 2122, 840, 3702, 839, 55, 193, 838,
	804, 153, 1355, 1152, 795, 794, 238, 238, 238, 1293,
	793, 775, 262, 261, 1837, 62, 1885, 73, 260, 259,
	153, 258, 257, 238, 1853, 1831, 256, 255, 254, 1552,
	1152, 1152, 1152, 253, 74, 252, 159, 240, 251, 2122,
	238, 250, 249, 248, 1915, 247, 2783, 246, 1414, 245,
	79, 2658, 1152, 244, 243, 240, 240, 240, 242, 1355,
	3352, 241, 4179, 3932, 4406, 3901, 1361, 1529, 3720, 3442,
	3307, 3290, 240, 3281, 3185, 3075, 2859, 2833, 2818, 2923,
	2923, 157, 3390, 1884, 1152, 239, 1152, 2684, 1152, 240,
	88, 2670, 2125, 2887, 1383, 1576, 194, 2103, 2122, 232,
	2119, 1997, 2472, 239, 239, 239, 2475, 3112, 233, 1095,
	2668, 2616, 1396, 1397, 1398, 2168, 1743, 232, 232, 232,
	239, 1355, 1293, 2124, 2020, 3391, 233, 233, 233, 1615,
	1828, 905, 1837, 1522, 232, 99, 193, 239, 1955, 1924,
	1796, 1576, 1517, 233, 49, 1954, 110, 1546, 1576, 1400,
	1276, 232, 94, 107, 3127, 193, 193, 1152, 3, 1152,
	233, 4870, 1955, 4867, 1576, 4846, 4830, 3362, 2652, 1954,
	1884, 193, 1152, 1958, 1152, 1833, 1834, 1835, 1836, 1838,
	1839, 1859, 1861, 4727, 1542, 4644, 4501, 4629, 193, 1253,
	4623, 190, 102, 1327, 1330, 106, 1375, 1953, 1882, 4454,
	2868, 4078, 1619, 1622, 4413, 1916, 4621, 1914, 1340, 238,
	4391, 4237, 95, 4202, 4201, 4195, 1377, 4194, 3346, 3347,
	238, 238, 1576, 4193, 4186, 4185, 4183, 3346, 3347, 906,
	4178, 834, 1527, 1407, 153, 1501, 1506, 4175, 4174, 1852,
	1509, 837, 1152, 4064, 1882, 1152, 3936, 3935, 3346, 3347,
	3989, 2921, 2602, 2603, 2604, 2628, 2614, 2608, 240, 2610,
	2611, 2609, 2596, 2597, 2598, 2599, 2600, 2601, 3934, 240,
	240, 3911, 3877, 1922, 3876, 4408, 3875, 3797, 182, 182,
	3792, 1369, 3437, 3383, 3374, 1541, 1540, 3345, 3342, 3341,
	3339, 3334, 1360, 1608, 3333, 157, 3346, 3347, 3332, 3364,
	3365, 3366, 3329, 238, 3326, 3306, 239, 3289, 3282, 3280,
	194, 3143, 2819, 3111, 2291, 1625, 1882, 239, 239, 1686,
	232, 2641, 1828, 3363, 1917, 5046, 1650, 1652, 1915, 233,
	2329, 232, 232, 3346, 3347, 3999, 3364, 3365, 3366, 1827,
	233, 233, 238, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1383, 240, 4079, 1383, 4163, 4988, 193, 4987, 1648,
	4909, 99, 4907, 1278, 3823, 3346, 3347, 2289, 193, 900,
	4787, 3361, 4707, 1549, 4693, 1556, 1152, 1562, 4689, 4688,
	4687, 4667, 1152, 4666, 4664, 4643, 4642, 238, 4617, 2582,
	3352, 240, 4603, 4600, 4599, 1853, 1093, 3388, 4592, 3352,
	239, 4580, 4579, 2920, 2920, 4525, 4496, 238, 3361, 3346,
	3347, 4452, 4435, 4434, 232, 1829, 1830, 190, 102, 4375,
	3352, 106, 1641, 233, 4371, 1806, 4368, 4346, 1833, 1834,
	1835, 1836, 1838, 1839, 1691, 4221, 240, 4200, 3463, 239,
	4132, 3987, 3986, 1759, 3969, 1832, 1661, 238, 1666, 3968,
	3966, 193, 1662, 232, 1884, 906, 240, 2920, 3892, 4079,
	153, 1679, 233, 1684, 1800, 3880, 3787, 1680, 3352, 1902,
	3721, 3357, 3355, 3356, 3348, 3349, 3350, 3351, 3353, 3354,
	1831, 2685, 3713, 3679, 239, 1904, 3592, 1152, 1152, 1152,
	193, 2588, 3548, 1152, 3517, 3465, 240, 3311, 232, 3310,
	1274, 3305, 1274, 3271, 239, 3352, 3362, 233, 3089, 1961,
	1960, 1959, 1956, 1948, 1708, 1946, 2866, 1414, 232, 2865,
	2830, 157, 2823, 238, 2789, 2666, 1901, 233, 1742, 1152,
	1974, 4407, 828, 1355, 1744, 193, 194, 3352, 2063, 828,
	1807, 1355, 2019, 1355, 239, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1975, 1970, 1969, 193, 4474, 1968, 232, 1967,
	1966, 1965, 1964, 1803, 1963, 1962, 238, 233, 1943, 1942,
	3368, 1941, 240, 1940, 1983, 3362, 1811, 1939, 2023, 1073,
	1810, 3352, 1938, 1882, 2042, 1937, 1072, 1837, 1936, 1935,
	4646, 3434, 2092, 1934, 2094, 193, 1933, 1932, 1931, 1930,
	1805, 1929, 1928, 1355, 1882, 1917, 1903, 1900, 1895, 1152,
	2036, 1368, 3362, 2030, 1639, 240, 1824, 1825, 1957, 1297,
	239, 2031, 1288, 4645, 4378, 4233, 4171, 3931, 3904, 3895,
	3293, 1093, 2857, 1152, 232, 2004, 1980, 1981, 1829, 1830,
	182, 1414, 2821, 233, 3362, 1644, 4235, 3930, 1916, 3461,
	2184, 1898, 1882, 3708, 2127, 3346, 3347, 2015, 1949, 1950,
	2057, 2159, 3363, 239, 1395, 2159, 2109, 2157, 1832, 2111,
	4307, 193, 2998, 2159, 1393, 2116, 4985, 232, 1388, 2118,
	4978, 4690, 4593, 1383, 2121, 4411, 233, 2037, 3362, 1882,
	2131, 834, 4349, 2683, 2086, 4348, 4589, 2669, 834, 4347,
	4306, 837, 4224, 1831, 1272, 4138, 1272, 4137, 837, 2024,
	4136, 2130, 4135, 2028, 193, 2166, 2667, 2976, 4134, 4133,
	3955, 1882, 3954, 3899, 1240, 3898, 3723, 2029, 3722, 2002,
	1394, 3363, 3715, 3714, 4863, 4935, 4933, 4082, 1995, 4874,
	4859, 2229, 1955, 1997, 3774, 1798, 2005, 1388, 2145, 1954,
	4013, 1707, 1388, 1973, 3395, 3331, 3330, 1093, 3253, 2958,
	2248, 1391, 3984, 3519, 2107, 1882, 1938, 1926, 3363, 4624,
	1760, 1716, 3582, 1999, 2014, 2013, 1052, 1576, 1576, 3027,
	2012, 1269, 2010, 1269, 2009, 4622, 2008, 1414, 3662, 4072,
	3661, 4500, 2011, 2195, 1252, 4955, 2265, 2381, 2354, 4583,
	3363, 3551, 4892, 2043, 4389, 2133, 3350, 3351, 3353, 3354,
	3357, 3355, 3356, 3348, 3349, 3350, 3351, 3353, 3354, 1938,
	3634, 3157, 1053, 1717, 2266, 4086, 4061, 2060, 4019, 4010,
	3992, 3746, 3487, 2359, 3348, 3349, 3350, 3351, 3353, 3354,
	2051, 2297, 4456, 3825, 3363, 3299, 2649, 2864, 1268, 2225,
	1268, 2233, 1971, 4883, 3960, 1951, 3642, 2243, 2323, 2129,
	1618, 4868, 1534, 1364, 1326, 2193, 1270, 4880, 1270, 3698,
	2956, 4682, 3358, 3359, 3360, 1923, 3019, 4395, 2654, 3357,
	3355, 3356, 3348, 3349, 3350, 3351, 3353, 3354, 4793, 3016,
	4660, 3014, 1576, 3522, 1576, 2228, 1576, 2162, 1643, 2330,
	2152, 3979, 3124, 3617, 4520, 4492, 4937, 4936, 4523, 3358,
	3359, 3360, 4970, 2189, 1576, 1576, 3357, 3355, 3356, 3348,
	3349, 3350, 3351, 3353, 3354, 3000, 2235, 1576, 4869, 4519,
	4498, 892, 2201, 2238, 2276, 2281, 3768, 3491, 834, 1576,
	4549, 1576, 1576, 1576, 4032, 2268, 2269, 4294, 837, 3355,
	3356, 3348, 3349, 3350, 3351, 3353, 3354, 1585, 1758, 1032,
	4916, 2270, 2901, 1695, 1644, 828, 1593, 1536, 1050, 2319,
	2146, 2655, 2236, 2223, 5042, 2919, 1048, 4697, 1046, 4542,
	2380, 3184, 4531, 3067, 2490, 2203, 2439, 1152, 2238, 2238,
	2917, 2195, 1541, 1540, 3356, 3348, 3349, 3350, 3351, 3353,
	3354, 2324, 2437, 1835, 1836, 1838, 1839, 1395, 2207, 1044,
	2336, 2919, 4031, 4338, 4337, 2234, 2222, 2219, 1041, 4030,
	4029, 2242, 1152, 2134, 4292, 4021, 2917, 4007, 4006, 4004,
	2756, 4003, 4289, 1757, 3991, 3951, 3462, 3950, 893, 3623,
	3622, 3584, 2357, 2282, 2488, 3455, 3304, 3303, 3302, 2385,
	2933, 3301, 2656, 1594, 2653, 3257, 3025, 3024, 1152, 3021,
	1152, 3010, 3002, 2193, 2992, 2204, 2991, 1152, 2986, 2985,
	2063, 2063, 1414, 1394, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1648, 1152, 1648, 1152, 1152, 1152, 1152, 2305, 2333, 2373,
	2410, 4971, 2346, 2304, 834, 2194, 2344, 3519, 4521, 4493,
	2492, 3963, 2367, 2338, 837, 1756, 2342, 2984, 2474, 1152,
	3580, 2266, 2354, 1152, 1152, 2963, 1693, 1093, 2350, 1093,
	2351, 1152, 1389, 2479, 2191, 1152, 1369, 1152, 1152, 1641,
	2962, 2341, 767, 2341, 767, 1414, 2237, 2936, 2924, 4917,
	2845, 1152, 1152, 1152, 1152, 2208, 3121, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 2372, 1395, 1378, 2187, 2563,
	2516, 2517, 2057, 2057, 2151, 2150, 2489, 1804, 2159, 2161,
	2858, 2389, 3493, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 2400, 2658, 3550, 2699, 1152, 1643, 2192, 2490,
	1589, 2237, 2237, 2980, 2630, 2631, 1389, 2574, 1274, 1839,
	2698, 2520, 2303, 4242, 1631, 1414, 1630, 4250, 2630, 2646,
	4288, 2209, 2210, 2433, 1274, 1537, 3354, 2188, 4433, 2960,
	2973, 2974, 1394, 1709, 2973, 2974, 4290, 2872, 2572, 2503,
	1152, 1414, 2973, 2974, 3747, 2694, 2205, 4308, 2649, 2849,
	2487, 2249, 1385, 1091, 2426, 1629, 2220, 1628, 2462, 2488,
	1312, 2908, 2476, 802, 2740, 2740, 2754, 2470, 2630, 2377,
	2491, 2775, 2777, 1794, 2478, 3346, 3347, 2781, 2477, 2484,
	1038, 4249, 2015, 3581, 1073, 1602, 2594, 1073, 1073, 1688,
	2578, 2507, 2206, 4558, 2508, 2509, 1389, 2154, 4936, 1797,
	2645, 2578, 2806, 2194, 2231, 2245, 3200, 3211, 3346, 3347,
	2652, 3364, 3365, 3366, 3164, 2848, 1607, 1773, 1717, 1717,
	2947, 2831, 2195, 895, 894, 1769, 1385, 4286, 2835, 2443,
	4162, 2226, 2244, 3230, 5003, 715, 1390, 3018, 2394, 2060,
	2060, 2798, 4973, 2486, 1090, 2431, 1355, 1355, 2388, 4972,
	2465, 2935, 2051, 2051, 2895, 2590, 1809, 2004, 3245, 2946,
	2696, 710, 2397, 2343, 2871, 2697, 2240, 2643, 2700, 3017,
	2701, 2702, 766, 3490, 766, 2221, 1093, 800, 1739, 1755,
	2568, 2874, 3015, 3361, 3013, 1705, 1093, 1739, 3756, 1414,
	1093, 4652, 1985, 4865, 3755, 1386, 2192, 4041, 2896, 2893,
	3988, 182, 3202, 2569, 1387, 2852, 1367, 1689, 2797, 2570,
	1390, 2489, 1272, 2575, 2156, 2211, 1385, 2766, 2658, 2890,
	2749, 3214, 2779, 3814, 2063, 2241, 2882, 4336, 1272, 1383,
	2736, 2870, 2886, 2820, 2787, 2788, 2918, 4005, 1240, 2803,
	2804, 2799, 4974, 4002, 2390, 3976, 2897, 3352, 4675, 4948,
	4291, 2002, 2155, 1736, 937, 4042, 3268, 2805, 1092, 2810,
	1614, 2860, 2816, 2817, 2464, 2453, 4982, 2450, 1692, 1386,
	1024, 2898, 1414, 1042, 1957, 3939, 2398, 1989, 1387, 1093,
	3352, 1042, 768, 1042, 768, 2487, 1738, 3266, 1355, 1269,
	2438, 2212, 1694, 3244, 1086, 1738, 3058, 2586, 4040, 2934,
	1390, 2925, 4432, 2959, 2584, 1269, 2436, 2391, 2867, 1152,
	1152, 3926, 1152, 1612, 1043, 3629, 1737, 2892, 1949, 1950,
	3621, 2451, 1752, 1042, 2881, 1992, 3578, 2889, 2884, 2560,
	2885, 890, 2461, 889, 2899, 4284, 2876, 828, 3020, 1355,
	1987, 2983, 2922, 4559, 2966, 3368, 2057, 3100, 2452, 2891,
	2981, 4287, 4976, 2961, 3362, 4557, 1268, 3213, 1990, 1386,
	3011, 4555, 2288, 2287, 3974, 2471, 1770, 4957, 1387, 4956,
	1576, 4866, 1268, 4677, 1270, 2965, 3237, 3238, 2843, 3811,
	2902, 1388, 4717, 1576, 2658, 1576, 1025, 3362, 3210, 1588,
	1270, 3093, 3135, 2950, 5005, 2904, 3108, 801, 2217, 4924,
	2571, 1988, 1576, 4153, 4273, 3152, 4152, 2964, 2230, 4554,
	2573, 2975, 2977, 2978, 2979, 3750, 2928, 2906, 2990, 3630,
	2982, 2938, 2941, 3695, 3696, 2232, 1355, 1282, 1355, 3263,
	3208, 1882, 3165, 3166, 3026, 4709, 4556, 3410, 4266, 3059,
	3060, 1089, 1284, 3172, 3173, 3174, 1024, 803, 4710, 1311,
	1152, 799, 2996, 2104, 2907, 1388, 2227, 1084, 3264, 1024,
	3812, 2229, 3269, 834, 1882, 3104, 2994, 3070, 2989, 1279,
	1086, 1591, 3072, 837, 3001, 2905, 4864, 3186, 3008, 3187,
	3627, 4771, 4711, 1086, 3188, 4483, 1614, 4759, 4837, 2999,
	4838, 3567, 3098, 4267, 3506, 3212, 834, 4285, 2988, 2224,
	4683, 2558, 2249, 3068, 2561, 182, 837, 3695, 3182, 1771,
	3363, 2261, 711, 2060, 2987, 1285, 1152, 1541, 3073, 3149,
	4704, 4980, 1152, 1152, 1991, 3155, 2051, 3154, 4365, 1085,
	3534, 3492, 2231, 1030, 1029, 3559, 765, 3087, 2463, 1767,
	3158, 1286, 3062, 3363, 272, 1388, 3097, 1718, 4713, 3568,
	2396, 4975, 3259, 3139, 2557, 1535, 3595, 1295, 3162, 2232,
	4923, 1944, 1025, 2577, 3167, 3459, 3168, 2163, 2164, 2260,
	3538, 4712, 3216, 3130, 3218, 1025, 3140, 2230, 1152, 1152,
	1026, 3614, 2215, 1283, 1152, 2432, 1039, 3533, 1648, 4714,
	4429, 2280, 3566, 3560, 712, 1690, 3076, 1152, 1152, 3079,
	3063, 3081, 3159, 1152, 1152, 1772, 2393, 3181, 3138, 1152,
	3119, 3137, 3179, 1768, 1101, 2228, 2387, 2834, 2198, 4054,
	2249, 2658, 3191, 1808, 3193, 3540, 3195, 4149, 3190, 4052,
	3192, 3068, 3194, 4981, 3196, 3197, 3558, 3409, 3189, 5001,
	2216, 2185, 938, 3061, 713, 4676, 714, 4445, 3126, 3265,
	1985, 3126, 1704, 1706, 1152, 1152, 1152, 3206, 3260, 3267,
	1152, 3348, 3349, 3350, 3351, 3353, 3354, 4946, 4804, 4983,
	1152, 4318, 734, 1366, 2919, 3219, 2199, 4757, 3221, 1989,
	1894, 3236, 3225, 2214, 3358, 3359, 3360, 1152, 3975, 2939,
	3539, 3357, 3355, 3356, 3348, 3349, 3350, 3351, 3353, 3354,
	3309, 4262, 3227, 3226, 3507, 1027, 2802, 4263, 4902, 1030,
	1029, 3628, 4056, 2815, 2640, 2503, 3231, 4268, 4903, 2197,
	3292, 4758, 1030, 1029, 3246, 1092, 5006, 1992, 3827, 4990,
	4377, 4428, 1028, 3198, 4382, 1989, 3287, 3288, 4143, 1114,
	4471, 3291, 2800, 4055, 4341, 3927, 1301, 1299, 4154, 3770,
	4366, 3228, 2559, 2585, 4383, 4724, 1026, 2995, 2252, 4265,
	1990, 1723, 4809, 2259, 3283, 4922, 2175, 4741, 4602, 1026,
	4340, 2176, 4339, 4100, 3683, 3258, 4269, 3473, 2842, 1152,
	1152, 1152, 1152, 1992, 2311, 1031, 1982, 1298, 1291, 1152,
	1152, 1152, 702, 4077, 1152, 1818, 1818, 1819, 1987, 4054,
	5011, 4150, 2506, 1280, 1152, 1274, 1414, 929, 1813, 4052,
	1152, 2196, 1152, 3402, 3403, 2147, 1990, 4518, 3447, 4611,
	2105, 1274, 2144, 2496, 3513, 4659, 3866, 4101, 4025, 4198,
	4008, 1110, 3917, 930, 3961, 3959, 3684, 4050, 3675, 1414,
	3509, 3109, 3103, 4715, 842, 3091, 2337, 2331, 2325, 4716,
	2317, 1274, 2296, 2295, 1414, 3810, 1582, 1281, 1093, 1988,
	4725, 3298, 1303, 3881, 2967, 4777, 1355, 4596, 3771, 774,
	849, 2923, 4430, 3440, 3947, 3385, 2063, 2253, 4744, 915,
	1414, 1027, 1818, 2444, 3427, 2177, 3918, 2140, 4103, 4400,
	1355, 3404, 4056, 3088, 1027, 4155, 1314, 2142, 1355, 1817,
	1817, 2793, 4575, 2181, 4573, 920, 3475, 4264, 1028, 4495,
	3525, 3521, 3520, 3919, 3251, 3916, 3229, 3454, 4053, 1083,
	1152, 1028, 2378, 4055, 3894, 3407, 1991, 4060, 3406, 1746,
	1745, 2370, 2360, 2293, 1152, 2796, 1740, 3921, 2184, 3414,
	2841, 3469, 2143, 2840, 2839, 1355, 2838, 4274, 4275, 2837,
	1637, 2063, 3095, 3508, 3412, 3436, 1623, 1635, 1090, 4507,
	936, 1031, 2497, 4670, 3441, 3498, 3499, 4901, 1152, 1624,
	1819, 1819, 4380, 2184, 1031, 4356, 2795, 4073, 2178, 2183,
	4156, 2794, 1991, 1355, 3967, 2944, 1817, 3523, 2335, 2940,
	3527, 3556, 1383, 3637, 4943, 3433, 3460, 3481, 2057, 3445,
	3477, 4481, 3488, 3479, 3480, 1355, 3396, 1355, 3483, 1272,
	3484, 4577, 3485, 3570, 5010, 3572, 3494, 3449, 3450, 3451,
	3452, 3411, 3867, 1152, 1152, 1272, 3583, 2248, 3380, 3381,
	3382, 1414, 3868, 3413, 2248, 4199, 4480, 3066, 3425, 1894,
	2968, 2969, 1355, 3956, 3428, 3429, 1355, 3472, 3457, 3163,
	3606, 3071, 3069, 3510, 3612, 1272, 3524, 931, 932, 3529,
	4726, 2179, 3531, 3598, 3418, 3600, 4508, 4595, 3604, 3505,
	3553, 3516, 3610, 2057, 3948, 2364, 1576, 3466, 3467, 3426,
	3468, 2265, 4783, 3431, 4576, 3432, 1269, 1698, 4490, 1355,
	1576, 3596, 1576, 4503, 843, 844, 1414, 4671, 4053, 4502,
	2256, 3478, 1269, 828, 1576, 3557, 4790, 3482, 3544, 3555,
	1724, 4774, 2185, 4205, 3489, 3883, 1576, 3576, 3593, 2665,
	3920, 4228, 3571, 4472, 3495, 1790, 4811, 4947, 1355, 916,
	917, 3569, 1269, 1792, 1789, 4491, 3676, 4945, 3647, 4885,
	3631, 4700, 4691, 4478, 4451, 1274, 4239, 4197, 3689, 3691,
	4059, 3377, 3786, 1268, 3448, 3667, 3541, 3744, 2254, 773,
	3419, 3743, 3549, 1787, 3585, 2060, 3542, 3470, 3605, 1268,
	1576, 1270, 3611, 4784, 3674, 2457, 3152, 3340, 2051, 3563,
	3270, 3562, 1576, 3564, 1576, 3152, 3092, 1270, 4672, 3565,
	3009, 3003, 2957, 1636, 2869, 2029, 2466, 2355, 2022, 1268,
	1634, 2255, 3579, 935, 3711, 2018, 3588, 1793, 3957, 3543,
	1674, 3594, 3417, 3424, 3682, 4561, 1764, 1270, 3607, 1762,
	3378, 2990, 3766, 1734, 3619, 3765, 3613, 1732, 3700, 1730,
	1728, 1414, 3748, 1813, 1414, 1726, 1720, 1714, 3204, 2435,
	2060, 846, 845, 3203, 1712, 1633, 3423, 3632, 3170, 3635,
	2485, 3620, 2402, 2051, 2274, 1751, 2405, 933, 934, 2316,
	3545, 3546, 834, 3547, 2294, 2093, 2091, 3618, 1152, 3685,
	1927, 3624, 837, 1687, 1152, 1152, 2965, 1606, 1152, 1152,
	1152, 2664, 1152, 3639, 3692, 4858, 3672, 4319, 3758, 4012,
	3670, 1152, 2063, 4011, 3671, 4773, 2180, 3741, 182, 182,
	1152, 4323, 4303, 4398, 3597, 1152, 847, 848, 4328, 4316,
	1040, 1414, 4255, 4254, 3589, 3590, 3697, 3591, 4099, 4090,
	1152, 1791, 1788, 4028, 3764, 3706, 4009, 4228, 1414, 918,
	919, 3763, 3690, 3982, 1114, 1114, 1114, 3980, 2063, 2063,
	1152, 1152, 3958, 1152, 1152, 1152, 3709, 3710, 3678, 1272,
	3739, 1786, 1498, 3673, 3420, 3421, 3422, 3663, 2459, 3122,
	3114, 1152, 3772, 2458, 3107, 1152, 266, 2063, 2063, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 4393,
	1152, 3099, 3839, 3789, 3840, 3699, 3084, 4920, 1152, 1152,
	2063, 3742, 3083, 1093, 1763, 1152, 3064, 1761, 3752, 2888,
	3753, 1733, 3754, 3769, 2057, 1731, 1152, 1729, 1727, 3799,
	3800, 3761, 2434, 1725, 1719, 1713, 1269, 1274, 1274, 2883,
	3767, 1152, 1711, 1632, 2292, 2401, 2290, 2273, 2267, 2250,
	2213, 2200, 2186, 2126, 2123, 2120, 1569, 2117, 2112, 2110,
	2106, 2097, 3807, 3688, 4915, 1249, 4842, 3608, 2516, 3830,
	2057, 2057, 2259, 1414, 1822, 3794, 3796, 2035, 3249, 4937,
	3913, 1045, 1047, 1049, 2148, 4669, 1355, 1355, 3222, 3806,
	3220, 1250, 3057, 4823, 4382, 3736, 3878, 2516, 3845, 2057,
	2057, 1355, 1355, 1268, 828, 1355, 3900, 3822, 3734, 1656,
	3829, 3813, 3815, 3816, 4383, 4735, 2136, 2137, 3727, 4414,
	2469, 1270, 4335, 4243, 1152, 1671, 3153, 3817, 2167, 1587,
	3874, 2919, 2057, 4613, 3842, 2945, 3837, 3924, 3925, 3844,
	3838, 3870, 2919, 4606, 2392, 4111, 2917, 2195, 1152, 1335,
	3836, 2334, 3937, 3938, 2429, 182, 3944, 2942, 2175, 3879,
	1784, 1785, 1334, 2176, 2424, 4822, 2467, 3871, 2399, 4295,
	3890, 3891, 4330, 1710, 3250, 1829, 1830, 4631, 2948, 1152,
	1152, 1829, 1830, 1699, 4505, 1823, 3609, 4206, 4184, 3887,
	3888, 2060, 3536, 2949, 4087, 2970, 1826, 1362, 3885, 1302,
	4940, 3738, 1251, 4931, 2051, 1832, 4024, 3945, 263, 4893,
	2949, 3946, 2468, 3082, 3902, 1152, 1152, 3729, 2318, 1373,
	3016, 3014, 3007, 1152, 3023, 3005, 2951, 4782, 4023, 2175,
	3962, 2953, 3728, 4764, 2176, 3006, 1335, 2060, 2060, 2135,
	1831, 1272, 1272, 4977, 2952, 1576, 1831, 1335, 1576, 4734,
	2051, 2051, 4728, 1355, 4668, 699, 3981, 4597, 3983, 3940,
	3993, 4038, 4568, 834, 4482, 4097, 2060, 2060, 4089, 4076,
	3903, 3910, 3677, 837, 3129, 2780, 2132, 2177, 2063, 2051,
	2051, 2044, 3998, 4000, 4813, 3997, 4504, 3933, 3737, 4814,
	2993, 1533, 1532, 3458, 2809, 2181, 5009, 3346, 3347, 2060,
	1829, 1830, 4813, 4730, 4020, 4096, 1543, 4814, 4026, 4950,
	2911, 2912, 2051, 2909, 2910, 4046, 4176, 2660, 1269, 1269,
	1576, 3985, 4014, 3990, 1697, 4104, 1152, 4043, 4044, 4027,
	1696, 4069, 3929, 2911, 1274, 1152, 2909, 4113, 2695, 1766,
	4598, 4543, 1765, 4332, 4327, 1576, 1576, 1576, 2177, 2965,
	4326, 4172, 1576, 1576, 1576, 3928, 3818, 3602, 4058, 3599,
	1921, 3135, 1920, 3224, 4120, 4083, 2181, 2473, 4994, 4958,
	2178, 2183, 4828, 4768, 1576, 4039, 4767, 4766, 3152, 4037,
	1414, 4699, 4698, 4648, 4105, 1268, 1268, 4571, 4124, 4535,
	4475, 4469, 4373, 4353, 4062, 4293, 4234, 4127, 3516, 4117,
	2057, 4036, 4108, 1270, 1270, 4063, 4075, 1414, 4084, 3978,
	1152, 1152, 4047, 4128, 4071, 3970, 1152, 1152, 2063, 3681,
	4088, 1152, 1152, 3680, 1152, 3530, 3476, 3209, 3201, 1152,
	4093, 1498, 1160, 4048, 4107, 3178, 4057, 3177, 3176, 3175,
	1152, 2178, 2183, 3113, 3086, 3085, 2943, 3735, 3730, 3731,
	3732, 3733, 4091, 2179, 2879, 2873, 1152, 2862, 2861, 2850,
	2589, 2460, 2430, 2423, 2422, 4106, 2421, 2420, 2419, 2332,
	2306, 2302, 2301, 4115, 4109, 4114, 2300, 2299, 270, 270,
	270, 2298, 705, 706, 4139, 721, 705, 721, 732, 4157,
	4119, 772, 4125, 2100, 4158, 792, 4126, 2099, 2098, 2096,
	798, 2034, 2033, 1783, 2185, 4170, 1782, 270, 1721, 1601,
	1600, 1599, 1598, 1597, 1596, 1595, 1590, 1274, 1586, 4166,
	1584, 1583, 1526, 1525, 2179, 1274, 1524, 4151, 911, 1414,
	1414, 4141, 1414, 1405, 1404, 270, 1403, 1402, 1272, 1274,
	2057, 1401, 1365, 4140, 1321, 1320, 1319, 1114, 1318, 1317,
	1576, 1576, 1316, 1315, 1313, 1498, 1308, 1307, 3496, 1306,
	1305, 3440, 1304, 1414, 904, 8, 1232, 2060, 2138, 1051,
	1037, 2173, 4674, 4272, 4271, 2185, 4270, 1907, 2456, 93,
	2051, 1912, 4211, 1592, 4146, 1152, 1152, 866, 87, 2257,
	3977, 1003, 4810, 4703, 1567, 874, 4092, 1274, 4792, 1274,
	4085, 3497, 4229, 4230, 3532, 3028, 2404, 1722, 4196, 4244,
	4245, 2406, 4232, 3435, 2822, 1269, 4214, 4216, 4756, 4279,
	4180, 4279, 1355, 3308, 4638, 4238, 4444, 2663, 4241, 2171,
	4302, 1925, 1414, 3389, 1355, 89, 1136, 1355, 1182, 4296,
	4364, 4363, 4311, 4256, 3964, 4314, 3650, 182, 4219, 1152,
	4207, 4203, 1414, 4210, 4360, 4359, 4208, 4209, 4212, 4283,
	2048, 4213, 2050, 4142, 4282, 705, 705, 4247, 4248, 4220,
	4223, 1100, 2172, 270, 1417, 4836, 4298, 4299, 2149, 5000,
	1142, 2165, 1268, 2158, 2863, 2739, 1159, 4331, 2180, 4333,
	1576, 1576, 1156, 2052, 4253, 4240, 4251, 2054, 1158, 1157,
	1270, 1498, 2053, 1945, 1155, 2047, 4095, 2060, 3133, 4297,
	4227, 3707, 4246, 1642, 1640, 1005, 2153, 2583, 1355, 2647,
	2051, 1272, 3297, 1918, 1116, 4357, 4384, 1138, 2644, 1272,
	1414, 1296, 1127, 1115, 3415, 1576, 1344, 3394, 3694, 4325,
	4401, 4334, 4354, 1272, 3909, 2495, 884, 4301, 4317, 3343,
	2650, 4351, 1287, 2763, 4315, 2755, 4312, 2751, 3486, 2180,
	4310, 3123, 1799, 4313, 1576, 1576, 1576, 1576, 1576, 1576,
	4344, 4458, 1896, 4390, 3134, 1795, 4385, 1399, 1120, 4350,
	1414, 2581, 1909, 3275, 2505, 3701, 1507, 3438, 2856, 1521,
	1344, 4816, 1152, 1152, 1152, 3826, 3207, 4343, 1269, 4402,
	2310, 1272, 1248, 1272, 4342, 1247, 1269, 1294, 1246, 4798,
	1414, 4795, 4405, 4362, 4358, 1152, 2247, 4396, 1152, 1152,
	1269, 4376, 4370, 4374, 4367, 3645, 3646, 2141, 1152, 2903,
	2593, 2063, 4369, 3664, 1132, 1520, 1152, 1152, 2448, 3759,
	3400, 4074, 4387, 1603, 4403, 797, 4512, 1144, 4352, 1881,
	3053, 3052, 4663, 1414, 1384, 1576, 4410, 2352, 1382, 1344,
	1344, 1381, 1380, 4967, 3973, 1268, 3972, 3971, 237, 4417,
	1355, 4416, 4436, 1268, 3243, 2366, 2368, 4431, 1269, 1820,
	1269, 1812, 234, 1270, 236, 4424, 235, 1268, 2371, 3914,
	1414, 1270, 3444, 4891, 3995, 3636, 23, 22, 1152, 21,
	2379, 116, 2382, 2383, 2384, 1270, 42, 20, 155, 4447,
	133, 1152, 152, 151, 125, 150, 4441, 149, 148, 147,
	1152, 4477, 4419, 154, 146, 2063, 4423, 145, 140, 144,
	143, 142, 4453, 141, 1152, 139, 4321, 1152, 137, 4464,
	4465, 138, 4425, 132, 136, 1268, 135, 1268, 134, 131,
	130, 1152, 129, 2057, 1152, 128, 127, 4467, 126, 4468,
	124, 1414, 156, 1270, 123, 1270, 122, 121, 1355, 120,
	4515, 119, 118, 117, 785, 786, 4551, 61, 1576, 1576,
	1576, 60, 4485, 115, 4486, 4494, 1498, 113, 2184, 114,
	4484, 19, 4487, 40, 14, 4372, 65, 3272, 3273, 1274,
	66, 18, 13, 35, 92, 105, 104, 103, 4386, 4560,
	36, 101, 100, 34, 17, 16, 15, 98, 4548, 4534,
	97, 4279, 96, 33, 31, 4526, 4527, 4570, 11, 1414,
	9, 4409, 1576, 37, 3647, 2006, 4586, 4607, 12, 4536,
	4532, 4574, 5, 187, 2500, 4524, 186, 2057, 189, 185,
	188, 91, 184, 183, 90, 4537, 29, 10, 4544, 179,
	4546, 4581, 4547, 4545, 4578, 1152, 1152, 4594, 4587, 4081,
	4563, 4562, 82, 181, 4567, 180, 178, 177, 4590, 1498,
	4572, 176, 1152, 2063, 4616, 83, 4618, 80, 175, 86,
	4552, 174, 4585, 81, 4550, 85, 4608, 4612, 84, 27,
	6, 64, 1412, 7, 1355, 4426, 3745, 1355, 108, 1355,
	1355, 109, 4610, 38, 78, 4405, 4604, 77, 4615, 76,
	2060, 75, 4609, 26, 63, 25, 4614, 1152, 173, 1152,
	218, 1152, 217, 2051, 216, 215, 4565, 4566, 4538, 214,
	1289, 1274, 213, 212, 211, 206, 4627, 4628, 210, 1498,
	208, 207, 209, 4626, 1152, 4647, 1274, 205, 4649, 228,
	4650, 4651, 227, 4279, 221, 220, 4658, 226, 225, 224,
	223, 222, 219, 231, 1310, 1498, 204, 203, 4279, 3370,
	3371, 3372, 3373, 202, 4636, 200, 270, 4630, 270, 270,
	2757, 1339, 270, 1349, 196, 199, 201, 4657, 198, 197,
	4656, 195, 230, 1272, 1363, 2057, 229, 72, 4685, 171,
	1274, 1274, 792, 4678, 2060, 792, 172, 71, 170, 169,
	4653, 4686, 168, 167, 1152, 166, 4679, 2051, 165, 4706,
	164, 1274, 4279, 4279, 1274, 70, 24, 2, 1576, 270,
	1, 270, 270, 1339, 0, 270, 270, 0, 1576, 0,
	1349, 0, 4694, 4279, 0, 0, 4279, 0, 0, 4696,
	1521, 4701, 1152, 1152, 270, 0, 1545, 0, 0, 0,
	0, 0, 1152, 0, 0, 4720, 4721, 4695, 0, 0,
	1269, 4718, 1565, 0, 4729, 0, 0, 0, 4590, 1580,
	0, 4732, 0, 4731, 0, 0, 4738, 4737, 0, 4740,
	0, 0, 4745, 4746, 0, 0, 0, 0, 1605, 4750,
	1521, 1349, 4752, 4751, 4753, 270, 270, 0, 1339, 4761,
	1152, 1152, 4749, 1498, 1152, 4769, 0, 0, 1355, 0,
	0, 1355, 4765, 0, 0, 4772, 2587, 0, 4770, 792,
	4748, 270, 270, 4760, 0, 1272, 0, 1268, 0, 4797,
	4800, 0, 1907, 1668, 4780, 4781, 0, 4819, 4815, 4812,
	1272, 0, 0, 1675, 4788, 1270, 4818, 0, 911, 4789,
	0, 0, 2060, 0, 0, 0, 0, 0, 0, 4807,
	4806, 4839, 4808, 4841, 0, 2051, 0, 0, 1152, 1152,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4801, 0, 4802, 0, 4805, 1498, 2762, 0, 0,
	4824, 4829, 0, 0, 1272, 1272, 4832, 0, 0, 0,
	4840, 0, 1269, 0, 1152, 0, 0, 0, 0, 0,
	4855, 4872, 4877, 0, 4856, 1272, 0, 1269, 1272, 4853,
	4854, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4900, 2184, 4899, 4692,
	0, 0, 4898, 0, 0, 0, 0, 0, 0, 4906,
	270, 4875, 0, 4912, 0, 0, 4908, 4873, 4890, 0,
	1152, 0, 0, 0, 0, 4888, 0, 4705, 1355, 1268,
	0, 1269, 1269, 4905, 4921, 0, 4570, 4904, 0, 0,
	0, 4914, 0, 0, 1268, 4913, 0, 1270, 4938, 0,
	0, 0, 1269, 0, 4918, 1269, 4736, 0, 4927, 4928,
	4934, 0, 1270, 0, 0, 4932, 0, 0, 0, 0,
	0, 4941, 4954, 4952, 4930, 4887, 4942, 4889, 1274, 4929,
	1274, 4797, 4953, 4963, 4800, 4944, 0, 0, 4949, 4961,
	0, 4951, 0, 0, 0, 0, 4818, 4960, 1268, 1268,
	4279, 4969, 4279, 0, 4959, 0, 0, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 1270, 1270, 1355, 1268,
	0, 0, 1268, 3171, 4991, 0, 4984, 0, 4992, 2322,
	4993, 4986, 0, 0, 0, 4998, 4996, 1270, 0, 0,
	1270, 0, 4968, 4962, 0, 4964, 0, 0, 1152, 1152,
	0, 4995, 0, 5004, 0, 0, 1152, 5002, 1152, 1152,
	0, 0, 5007, 0, 5020, 0, 0, 5019, 5022, 4989,
	0, 3135, 5013, 0, 5024, 5023, 0, 5021, 5026, 0,
	5029, 5017, 5025, 0, 5028, 0, 5027, 4825, 0, 0,
	0, 0, 0, 4827, 0, 0, 5033, 1355, 5034, 0,
	5036, 0, 3135, 5041, 5039, 5037, 5035, 5038, 5045, 5032,
	5044, 705, 0, 0, 0, 0, 5047, 1152, 0, 3782,
	3783, 5048, 0, 5050, 5041, 5052, 0, 0, 0, 0,
	0, 0, 270, 0, 270, 2169, 0, 0, 270, 5014,
	5015, 0, 0, 0, 0, 0, 0, 0, 0, 805,
	0, 1545, 1339, 2026, 270, 0, 270, 2032, 5016, 0,
	3233, 0, 0, 0, 270, 0, 721, 0, 0, 0,
	0, 270, 0, 0, 816, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 1272, 0, 0, 2101, 0, 0,
	0, 0, 0, 0, 0, 2449, 0, 0, 5049, 270,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 3846,
	3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856,
	3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 0,
	3869, 0, 0, 0, 0, 0, 0, 0, 4273, 792,
	0, 2757, 2757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	0, 1269, 0, 0, 3736, 0, 0, 810, 73, 0,
	0, 0, 4266, 0, 822, 0, 4259, 3734, 0, 73,
	0, 2285, 0, 0, 0, 74, 0, 3727, 815, 0,
	0, 0, 0, 4257, 0, 0, 74, 0, 0, 0,
	0, 79, 4261, 0, 0, 0, 0, 0, 1829, 1830,
	0, 0, 79, 0, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 4267, 1268, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 1832, 814,
	0, 88, 0, 0, 1270, 0, 1270, 1879, 0, 0,
	0, 0, 88, 0, 3346, 3347, 767, 3364, 3365, 3366,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	3738, 4260, 0, 1831, 0, 0, 3791, 2762, 0, 0,
	1498, 812, 905, 1851, 0, 0, 3729, 0, 0, 0,
	0, 0, 1848, 905, 0, 49, 0, 110, 0, 0,
	0, 3728, 0, 94, 107, 0, 0, 270, 110, 0,
	0, 270, 0, 1498, 94, 107, 0, 0, 0, 0,
	0, 0, 0, 2757, 2757, 2757, 2757, 0, 1498, 3361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 1344, 0, 3737, 2762, 2762,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 95, 270, 0, 0, 0, 270,
	1837, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 270, 0, 0, 1114, 3725, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 270, 1114, 270,
	0, 0, 0, 705, 0, 270, 0, 807, 0, 1870,
	0, 0, 1880, 0, 0, 0, 3352, 792, 0, 1859,
	1861, 911, 0, 0, 0, 4262, 1344, 1344, 0, 0,
	0, 4263, 0, 0, 0, 0, 0, 0, 811, 0,
	0, 4268, 0, 0, 1846, 1847, 0, 0, 0, 0,
	270, 0, 1339, 270, 0, 0, 2519, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 0, 0, 270, 0, 766, 1852, 0, 0,
	0, 3368, 2403, 4265, 0, 0, 0, 270, 270, 0,
	270, 817, 270, 2853, 270, 1498, 270, 809, 0, 0,
	4269, 0, 99, 0, 0, 0, 3735, 3730, 3731, 3732,
	3733, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	1507, 2440, 0, 3362, 2441, 0, 2442, 0, 0, 0,
	2762, 2762, 2762, 2762, 0, 0, 0, 0, 270, 270,
	270, 270, 0, 0, 0, 806, 0, 0, 0, 2661,
	0, 0, 0, 0, 1882, 0, 0, 1521, 190, 102,
	1498, 0, 106, 0, 0, 0, 0, 772, 0, 190,
	102, 792, 813, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 3615, 238, 0,
	0, 0, 0, 0, 0, 0, 906, 808, 0, 238,
	1882, 153, 0, 0, 0, 0, 0, 906, 0, 0,
	1858, 0, 153, 0, 0, 3640, 0, 0, 0, 0,
	0, 819, 820, 0, 0, 0, 0, 3668, 0, 0,
	0, 4264, 0, 1853, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 2832, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 157, 0, 2595, 0, 0, 0, 0, 0,
	0, 4274, 4275, 157, 0, 0, 0, 194, 0, 3363,
	0, 3717, 0, 0, 0, 239, 0, 0, 194, 0,
	0, 0, 1884, 3740, 0, 1498, 239, 0, 1498, 232,
	0, 0, 0, 0, 0, 1521, 0, 0, 233, 0,
	232, 0, 0, 0, 0, 0, 1344, 0, 0, 233,
	0, 0, 3346, 3347, 0, 3364, 3365, 3366, 0, 0,
	0, 0, 0, 0, 0, 705, 1653, 0, 0, 0,
	0, 0, 0, 0, 3790, 0, 0, 193, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 0, 0, 0, 1869, 0, 270, 0, 705, 1521,
	0, 1521, 0, 0, 0, 1498, 0, 1872, 1849, 1845,
	270, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 1498, 2914, 0, 0, 0, 3361, 0, 0,
	0, 270, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2757, 2757, 0, 0, 0, 0, 0,
	3358, 3359, 3360, 0, 0, 0, 0, 3357, 3355, 3356,
	3348, 3349, 3350, 3351, 3353, 3354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 1349, 0, 0, 721, 0, 721, 0, 0, 0,
	2878, 0, 0, 0, 0, 0, 270, 0, 0, 270,
	0, 0, 0, 270, 0, 270, 0, 0, 0, 0,
	1339, 0, 270, 270, 0, 1349, 1349, 2894, 0, 0,
	0, 0, 270, 0, 3352, 0, 0, 0, 0, 0,
	0, 0, 0, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 0, 2757, 0, 0, 1498, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 2932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4450, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3368,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 270, 0, 265, 265,
	701, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 3362, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 4497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2762, 2762, 0, 0, 1107, 1829, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 3074, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 0, 270, 1882, 270,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 905,
	0, 1885, 0, 0, 0, 0, 3118, 0, 0, 0,
	1831, 0, 49, 0, 110, 0, 2932, 0, 705, 0,
	94, 107, 0, 0, 0, 0, 0, 3147, 911, 2932,
	2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762,
	2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762,
	270, 2762, 0, 1829, 1830, 0, 4033, 0, 0, 4034,
	0, 0, 0, 0, 0, 0, 0, 3363, 0, 270,
	1339, 270, 0, 0, 0, 0, 1860, 0, 0, 0,
	95, 1349, 270, 1832, 0, 1339, 0, 1339, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 1521, 0, 0, 0, 1885,
	0, 0, 4635, 0, 0, 0, 0, 1837, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 270, 270, 270, 1339, 0,
	0, 1339, 0, 270, 1498, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 4121, 4122, 4123, 4662,
	0, 0, 0, 2366, 4129, 4130, 1859, 1861, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 1521, 0, 270,
	0, 0, 0, 0, 4684, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2322, 0, 0, 0, 0, 0, 3358, 3359,
	3360, 0, 0, 0, 0, 3357, 3355, 3356, 3348, 3349,
	3350, 3351, 3353, 3354, 1852, 1837, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 190, 102, 0, 0, 106,
	1832, 0, 0, 1498, 1498, 0, 1498, 0, 0, 1879,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 0, 238, 1885, 0, 0, 0,
	3401, 0, 0, 906, 0, 1831, 0, 1498, 153, 0,
	0, 1344, 1852, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 1114,
	1114, 0, 0, 3430, 0, 0, 0, 0, 0, 0,
	0, 4225, 4226, 0, 240, 0, 0, 0, 3443, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	74, 0, 0, 0, 3464, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 79, 0, 0, 1882,
	0, 0, 239, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 232, 0, 0, 0,
	0, 1521, 1837, 0, 0, 233, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 88, 0, 3346, 3347,
	0, 3364, 3365, 3366, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 1651, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 270, 1880, 0, 0, 0, 705, 0,
	0, 1859, 1861, 705, 0, 0, 705, 905, 1853, 705,
	705, 0, 0, 0, 1498, 705, 0, 1876, 0, 1877,
	0, 2366, 110, 270, 0, 0, 1846, 1847, 94, 107,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 3361, 1868, 0, 0, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 1852,
	0, 0, 0, 0, 1498, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	270, 270, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 1498, 4418, 0, 4420, 4421, 4422,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 2932,
	2932, 270, 0, 3503, 2026, 0, 1325, 0, 1325, 1325,
	2932, 0, 2032, 0, 0, 1867, 0, 0, 0, 0,
	3443, 2932, 2032, 0, 2932, 2032, 1882, 1498, 2032, 0,
	3352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 270, 2026, 0, 270, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 1498, 1519, 2026, 0, 270, 0,
	3575, 3575, 2757, 0, 0, 1339, 4470, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3368, 0, 2932, 0, 2932,
	0, 3603, 2932, 2026, 0, 1853, 2932, 2026, 0, 0,
	792, 1114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 1871, 0, 0, 1498, 0, 3362, 0, 0,
	1339, 0, 2757, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 3760, 0, 0, 1412, 0,
	0, 1657, 1658, 0, 1884, 270, 0, 3641, 0, 0,
	0, 3643, 2932, 0, 0, 270, 0, 0, 0, 270,
	0, 0, 1349, 190, 102, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 4564,
	0, 0, 3118, 1498, 0, 1339, 0, 270, 0, 0,
	2932, 0, 705, 238, 1882, 0, 0, 0, 0, 2932,
	0, 906, 0, 0, 0, 1344, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 3803, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 3819, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 240, 0, 0, 0, 1774, 4189, 3751, 0,
	0, 4188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 3757, 2762,
	0, 1545, 0, 3363, 1339, 270, 0, 270, 0, 0,
	2322, 0, 194, 1339, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 2757, 0, 0, 0,
	0, 0, 0, 233, 270, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2762,
	0, 193, 0, 1866, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 2757, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 3912, 0, 0,
	0, 0, 3824, 0, 0, 0, 0, 1885, 2757, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 1829,
	1830, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 1860, 0, 3358, 3359, 3360, 0, 0, 1832,
	0, 3357, 3355, 3356, 3348, 3349, 3350, 3351, 3353, 3354,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 2366,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 270,
	270, 0, 0, 1848, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 705, 705, 0, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 1519, 0, 0, 0,
	0, 0, 0, 2762, 0, 0, 0, 0, 0, 4161,
	0, 0, 1870, 0, 0, 1880, 270, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 1344, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 1876, 1325,
	1877, 1837, 0, 0, 0, 0, 1519, 1846, 1847, 0,
	2762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3346, 3347, 1868, 3364, 3365, 3366, 0,
	0, 0, 0, 0, 0, 2762, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 792, 2322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 3575, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3361, 0,
	0, 270, 0, 0, 0, 0, 1867, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 2026, 0, 270, 0, 0, 0,
	721, 721, 1349, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 3118, 0, 0,
	3118, 2032, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 270, 0, 0, 0,
	0, 270, 0, 0, 0, 1882, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 3352, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 2932, 270, 0, 0, 1829,
	1830, 0, 0, 0, 0, 3147, 3147, 0, 0, 0,
	0, 911, 2932, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 3369, 0, 1832,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	3368, 0, 0, 0, 1853, 1885, 4218, 0, 0, 0,
	0, 0, 0, 0, 1831, 2308, 0, 0, 0, 2315,
	0, 0, 0, 0, 1851, 0, 1865, 0, 0, 0,
	0, 2328, 0, 0, 0, 0, 0, 4236, 0, 0,
	0, 0, 3362, 0, 0, 0, 0, 2340, 0, 2340,
	0, 0, 0, 0, 0, 2347, 0, 0, 0, 0,
	0, 0, 1865, 1884, 0, 0, 4181, 1869, 1865, 0,
	0, 0, 0, 0, 1865, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 3321, 0,
	2315, 0, 3322, 2375, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 1882,
	0, 1837, 0, 0, 2395, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 1545, 0, 270, 2411, 0,
	2413, 0, 2415, 0, 2417, 0, 2418, 0, 0, 1849,
	1845, 270, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	1859, 1861, 0, 0, 1865, 0, 0, 0, 0, 1865,
	0, 0, 1349, 0, 270, 1349, 0, 0, 2445, 2446,
	2447, 0, 1865, 2932, 2932, 0, 3503, 1865, 3363, 0,
	3575, 2932, 0, 0, 0, 0, 0, 0, 0, 4281,
	0, 4281, 1545, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 2932, 0, 2032, 0, 0, 1852, 1545,
	1545, 270, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 270, 2026, 0,
	270, 0, 3575, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 1865, 0,
	0, 2932, 0, 2932, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4442, 2732, 2733, 2734, 2735, 2728,
	2729, 2730, 2731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 2932,
	2932, 0, 0, 0, 0, 3118, 3118, 0, 0, 0,
	0, 0, 3503, 0, 0, 0, 0, 4442, 0, 0,
	0, 0, 0, 270, 0, 0, 1344, 0, 0, 3358,
	3359, 3360, 0, 270, 0, 0, 3357, 3355, 3356, 3348,
	3349, 3350, 3351, 3353, 3354, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 2519, 0, 2708, 2709, 2710, 2711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 2720,
	2721, 2722, 2723, 2716, 2717, 2718, 2719, 2724, 2725, 2726,
	2727, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	2829, 0, 0, 0, 1865, 2519, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2704,
	2705, 2706, 2707, 2712, 2713, 2714, 2715, 0, 0, 0,
	2761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 2932, 2032, 1865,
	2032, 0, 0, 4489, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 2880, 0, 0, 1325,
	0, 0, 4513, 1325, 4513, 1325, 0, 0, 1829, 1830,
	0, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 2328, 0, 0, 0, 0, 0, 792, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 1832, 3575,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 270, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 4489, 0,
	0, 4281, 1848, 0, 1545, 0, 0, 0, 2932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 3785, 0,
	0, 0, 0, 3046, 0, 270, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 3824,
	1837, 1984, 0, 0, 0, 0, 3036, 3034, 0, 0,
	0, 0, 0, 3038, 3040, 3030, 0, 0, 0, 0,
	0, 0, 0, 0, 3575, 4655, 0, 2315, 0, 0,
	0, 0, 0, 4489, 0, 0, 2328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 4281, 0, 0, 3054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4281, 0,
	0, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3169, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 0, 0, 1852, 0, 3180,
	0, 3183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4281, 4281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4281, 0, 270, 4281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 1545, 0, 0,
	0, 0, 0, 0, 3215, 1519, 3217, 1519, 0, 0,
	0, 0, 0, 3223, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 1099, 3032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4778, 3048, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	0, 0, 0, 4513, 0, 0, 270, 3252, 0, 0,
	3047, 3037, 3035, 3039, 3041, 3031, 3033, 3049, 3051, 0,
	1858, 0, 1865, 0, 0, 0, 0, 0, 3043, 3045,
	2932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3055, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3824, 0, 0, 1865,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 1865, 0, 0,
	1545, 0, 0, 0, 0, 0, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1829, 1830, 0, 0, 0, 1865, 0, 1865,
	1865, 1865, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 2761, 2761, 0, 0, 1860, 0, 3050, 0, 0,
	0, 4489, 1832, 0, 0, 0, 1865, 0, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	2932, 0, 0, 0, 0, 1829, 1830, 1851, 0, 0,
	4281, 0, 4281, 0, 0, 1545, 1848, 1865, 0, 0,
	0, 0, 0, 3056, 0, 0, 0, 0, 1860, 0,
	0, 0, 3042, 3044, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	1865, 0, 0, 1865, 0, 0, 1865, 0, 0, 0,
	0, 1885, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 0,
	1831, 0, 3780, 0, 0, 2932, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 3147, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 2932, 0, 0, 0,
	0, 0, 0, 0, 0, 3453, 0, 0, 0, 0,
	0, 3147, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 3367, 0, 2761, 2761, 2761, 2761, 0, 0, 0,
	1865, 0, 1865, 0, 0, 3779, 0, 1865, 0, 0,
	0, 0, 0, 1859, 1861, 0, 1325, 0, 0, 0,
	1519, 1519, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 3552, 3554, 0, 0, 2328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1852, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 1858, 0, 0, 1831, 0, 0,
	0, 1099, 1099, 1099, 0, 0, 0, 1851, 0, 0,
	0, 1882, 0, 0, 0, 3665, 1848, 1853, 0, 3669,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 1553, 0, 1559,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 3261, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 1865, 1865, 1837, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	1664, 0, 0, 0, 0, 3762, 0, 1519, 0, 0,
	0, 0, 0, 1677, 0, 1682, 0, 0, 0, 1884,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 3775, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 1852, 0, 1747, 0, 0, 1753, 0, 0, 0,
	1866, 1860, 0, 0, 1865, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1849, 1845, 1879, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	1865, 1865, 1848, 2761, 2761, 0, 0, 1865, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 3367, 3367, 0,
	0, 1865, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 1906, 0, 0,
	0, 0, 0, 1919, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 1853, 0, 0,
	1837, 0, 0, 2761, 2761, 2761, 2761, 2761, 2761, 2761,
	2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761,
	2761, 2761, 2761, 0, 2761, 3367, 3367, 3367, 3367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 1829, 1830, 0, 1859,
	1861, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	1865, 0, 0, 0, 0, 1876, 0, 1877, 0, 1860,
	0, 0, 0, 0, 1846, 1847, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 1978,
	1978, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 1852, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 2328, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 3254, 0, 0, 0,
	1865, 0, 0, 0, 0, 2328, 0, 0, 0, 0,
	1148, 0, 0, 0, 0, 0, 4070, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 4080, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2328, 0, 0, 1099, 0, 4098, 0, 0, 0,
	1858, 1865, 1865, 0, 0, 0, 269, 269, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	4144, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 1869, 0, 0, 1848, 0, 0,
	0, 0, 1882, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 2638, 0, 0, 0, 2639,
	0, 0, 1865, 1865, 0, 0, 1865, 3367, 3367, 1865,
	0, 1271, 0, 1865, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 1853, 0, 0, 0, 1837, 1865, 1865, 1865, 1865,
	1865, 0, 0, 0, 0, 0, 1865, 0, 1865, 0,
	0, 3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367,
	3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367,
	3367, 0, 0, 0, 3367, 0, 0, 1865, 1865, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 1865,
	1884, 4300, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 2328, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2427, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 2454, 0, 0, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 2328, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 4397, 0, 0, 0, 0, 0, 2494,
	0, 2498, 0, 0, 0, 0, 0, 0, 2512, 1882,
	1865, 1865, 0, 0, 0, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 0, 2562, 0, 2564, 2565, 2566, 2567, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	1184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2591, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 1906, 0, 0, 0, 2642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 2672, 2675, 2678, 2681, 0, 0, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2753, 1884, 2765, 2767,
	2772, 0, 0, 0, 1865, 1865, 0, 0, 0, 1865,
	1865, 0, 4499, 1865, 1865, 0, 0, 0, 1865, 0,
	0, 0, 1865, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2328, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 269, 269, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 4625, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 269,
	269, 0, 0, 269, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 269, 0, 0, 0, 0, 0,
	0, 0, 1865, 1865, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 1865, 3367, 2761, 0, 0, 269,
	269, 0, 1865, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 0, 0, 0, 0, 0,
	3077, 3078, 0, 3080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 736, 0,
	0, 0, 3367, 2761, 0, 4739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 1865, 2761, 0,
	0, 0, 0, 0, 0, 1865, 0, 737, 0, 0,
	0, 0, 0, 0, 1865, 0, 1865, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4791, 0, 269, 0,
	0, 758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 3199, 0, 0, 0, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 741, 0, 0,
	3367, 0, 0, 0, 4834, 0, 0, 0, 1866, 1860,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	742, 0, 0, 743, 0, 1879, 1865, 3367, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 1885, 0, 0, 0, 0, 0, 0, 3367,
	0, 1831, 0, 1886, 1887, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 757, 1137, 112, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3255,
	3256, 0, 0, 0, 0, 3262, 0, 0, 0, 0,
	0, 0, 0, 754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3276, 3277, 0, 0, 0, 0,
	2642, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 1271, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 3286, 0, 0, 0, 0,
	0, 0, 269, 2000, 269, 0, 764, 1870, 745, 0,
	1880, 3300, 835, 0, 0, 0, 0, 1859, 1861, 835,
	0, 0, 0, 0, 0, 0, 0, 1865, 3312, 0,
	0, 0, 0, 1876, 0, 1877, 0, 765, 0, 746,
	0, 0, 1846, 1847, 0, 0, 0, 269, 0, 0,
	0, 1865, 0, 0, 269, 0, 0, 0, 1275, 1074,
	1868, 0, 0, 0, 752, 0, 0, 0, 0, 0,
	1094, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	766, 0, 0, 0, 735, 0, 0, 0, 747, 736,
	0, 0, 0, 762, 763, 760, 0, 0, 0, 0,
	0, 755, 0, 0, 748, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 737, 0,
	2772, 2772, 2772, 0, 0, 0, 0, 0, 0, 738,
	0, 1867, 0, 0, 0, 1978, 0, 749, 0, 756,
	0, 1275, 1882, 3405, 0, 0, 0, 750, 1275, 0,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 751, 0, 0, 1275, 0, 759, 0, 0, 0,
	0, 0, 758, 1865, 0, 0, 0, 1865, 0, 0,
	768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 740, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	0, 1853, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 743, 269, 0, 0, 1871, 835,
	0, 1099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 1099, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 269, 0, 269, 0, 0,
	0, 0, 1869, 269, 3586, 3587, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 269, 0, 269, 0,
	269, 0, 269, 0, 269, 0, 0, 0, 765, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 269, 269, 269,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 747,
	1275, 0, 1275, 0, 762, 763, 760, 0, 0, 0,
	0, 0, 755, 0, 0, 748, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 0, 0, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2512,
	0, 768, 0, 0, 0, 3777, 3778, 0, 0, 3781,
	0, 0, 753, 3784, 0, 0, 0, 0, 0, 0,
	0, 0, 3788, 0, 0, 0, 0, 0, 0, 0,
	112, 3795, 0, 0, 0, 0, 3405, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3831, 3832, 0, 3833, 3834, 3835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3841, 0, 0, 0, 3843, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 112, 1271, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 3872,
	3873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3884, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3893, 0, 0, 0, 0, 1094, 112, 112,
	0, 0, 0, 0, 0, 0, 0, 1275, 1275, 0,
	0, 0, 0, 0, 112, 0, 112, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 112,
	0, 112, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 269, 0, 0, 269, 0, 0,
	0, 269, 0, 269, 0, 1860, 0, 0, 0, 0,
	269, 269, 1832, 0, 0, 0, 0, 0, 0, 0,
	269, 1879, 0, 0, 0, 3949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 112, 1831, 0, 3965,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1275, 0, 1275, 0, 1275, 269, 0, 0,
	0, 3994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 1275, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 4015, 4016, 0, 1275,
	0, 1275, 1275, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 1074, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 0, 0, 0, 0,
	0, 0, 1905, 0, 0, 0, 1911, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 269, 0, 835, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 1846, 1847,
	0, 0, 0, 0, 0, 0, 4116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	2064, 2064, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 1998, 0, 2001, 0,
	112, 4159, 4160, 0, 0, 0, 0, 4164, 4165, 0,
	0, 0, 4168, 4169, 0, 0, 0, 0, 0, 0,
	4173, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 4177, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 269, 269, 269, 269, 0, 4182, 0, 0,
	0, 269, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 1275, 0, 1853, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 1099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	4322, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 4437, 4438, 4439, 0, 0, 1094, 0,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2512, 0, 0, 4448,
	4449, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 4457, 4460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 269, 0, 0, 0, 269, 269,
	0, 0, 0, 1275, 0, 1275, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 4514, 0, 0, 0, 0, 0, 0, 0,
	0, 4522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4530, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 269, 4539, 0, 269, 4541, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 1074, 0,
	0, 1074, 1074, 0, 1829, 1830, 269, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2580, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 1094, 0, 1851,
	0, 0, 0, 0, 0, 269, 0, 1905, 1848, 0,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1161, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4661, 0,
	0, 0, 4665, 0, 1258, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 271, 271, 271,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 112, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 269, 271, 269, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 0, 0, 0, 4733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2512, 0, 0, 0, 0, 0,
	0, 0, 0, 4460, 857, 0, 0, 0, 0, 858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 1275, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 859, 1867,
	876, 1275, 1099, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 860, 0, 0, 0, 0,
	861, 1275, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 885, 0, 0, 0, 2064, 0, 0, 862,
	1275, 0, 0, 0, 0, 0, 1858, 0, 0, 4852,
	4852, 4852, 0, 883, 0, 0, 0, 1271, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 0,
	0, 0, 0, 0, 0, 4876, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 1871, 112, 0, 112,
	0, 863, 0, 0, 864, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 0, 0, 887, 0, 0, 0,
	0, 767, 0, 0, 835, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4852, 0, 0, 0, 0, 112, 0, 0, 112,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 886, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 3793, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	1275, 0, 1275, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 865, 4852,
	5008, 0, 0, 0, 269, 0, 1275, 5012, 0, 867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 1275, 0, 0, 0, 0,
	868, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 269,
	1275, 0, 0, 0, 269, 0, 0, 0, 0, 877,
	0, 0, 1275, 0, 1275, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 854, 0, 878, 0, 2580, 0,
	0, 0, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1905,
	0, 1275, 0, 0, 1275, 0, 0, 0, 269, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 871, 890, 0, 889, 0, 0, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 873, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 2064, 891, 0, 888, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 271, 271, 0,
	0, 271, 0, 0, 0, 0, 0, 2064, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	2064, 0, 0, 0, 0, 0, 0, 0, 271, 1418,
	271, 271, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 1275, 0,
	0, 1258, 269, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 2000, 0, 2000,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 269, 0,
	0, 275, 1418, 0, 0, 0, 0, 0, 0, 1418,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 269, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 112, 112,
	0, 112, 0, 0, 827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 1275, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 1275, 1275, 0, 0,
	0, 0, 1275, 1275, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	1275, 1258, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 112,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 271, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 1275,
	1275, 0, 1275, 269, 269, 0, 0, 0, 271, 1275,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	269, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1258, 1258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 269, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 1418, 1418,
	271, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 1275, 1275, 1275, 1275, 1275, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 271, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	271, 2064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 271, 0, 271, 0,
	0, 0, 0, 1275, 271, 1275, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 1418, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 1418, 0, 1829, 1830,
	1275, 1862, 1863, 1864, 1873, 1874, 1875, 0, 1418, 271,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	1418, 1860, 1418, 1418, 1418, 0, 0, 0, 1832, 1415,
	0, 0, 0, 271, 0, 2064, 0, 1879, 0, 0,
	0, 0, 0, 0, 112, 0, 271, 271, 0, 271,
	0, 271, 0, 271, 1885, 271, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	1258, 1275, 0, 1851, 0, 0, 1577, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 1416, 0, 1275, 1275,
	1275, 0, 0, 0, 0, 0, 0, 271, 271, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 112, 0, 0, 0, 0, 0, 0, 2000, 0,
	2000, 0, 1577, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 1275,
	0, 0, 1275, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 1577, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 1418, 112, 0, 0,
	0, 1275, 0, 1258, 0, 0, 0, 0, 0, 0,
	1578, 1258, 1868, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	1275, 1275, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 1275, 1418, 0, 1275, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 1275, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 271, 0,
	0, 0, 271, 1853, 271, 0, 0, 0, 0, 0,
	0, 271, 271, 112, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 112, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 1884, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 827, 0, 0, 0, 0, 0, 0,
	827, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 271, 1418, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 271, 0, 271, 0,
	1832, 0, 0, 0, 0, 271, 0, 0, 1275, 1879,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 1418, 0, 0, 0, 1831, 0, 0, 0, 1416,
	0, 0, 0, 0, 1418, 1851, 1418, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 271,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1577, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 2580, 0,
	0, 0, 1837, 271, 271, 271, 271, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1578, 1578, 0, 0, 0,
	0, 1870, 0, 0, 1880, 1416, 0, 0, 271, 0,
	0, 1859, 1861, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1577, 1868, 1577, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 1577, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 1577, 1577, 1577, 0, 0, 0, 0, 0,
	1578, 0, 1578, 0, 1578, 112, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 0, 1578, 1578, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 1578, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 1578,
	1578, 1578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 112, 0, 0, 1884, 0, 0, 1418, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 1416, 0, 271, 0, 0, 0, 271,
	271, 3324, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 271, 271, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	1415, 1418, 0, 1418, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 271, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 1418, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 1418, 0, 271, 1418, 271, 0, 827, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 1577, 0, 271, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 1577, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 1577, 1831, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 1578, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1578, 0, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 1418,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	271, 1871, 0, 0, 0, 271, 0, 1415, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 1418, 1418, 1418, 0,
	1415, 0, 0, 1418, 1418, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1418, 0, 0, 0, 271,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 1418, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	3323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 1418, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 1577, 0, 1577, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 827, 1577, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 1418, 0, 0, 271, 0, 0, 271,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 975, 1578, 1024,
	1578, 0, 0, 271, 1416, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 983, 1578, 0, 0, 0, 0, 0,
	0, 1418, 1418, 1577, 0, 1577, 0, 0, 0, 998,
	0, 981, 980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 1000, 0, 0, 0, 0, 0, 982,
	0, 1418, 271, 0, 985, 0, 1418, 0, 1578, 1035,
	0, 0, 1415, 0, 0, 1415, 0, 0, 995, 996,
	1578, 0, 1578, 0, 0, 0, 0, 1013, 0, 0,
	0, 0, 0, 0, 0, 1418, 1418, 1418, 1418, 1418,
	1418, 0, 0, 0, 0, 1025, 987, 0, 0, 0,
	0, 1418, 988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 1416, 0, 0, 989, 0, 0, 0, 0,
	0, 1418, 0, 0, 1022, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 1023, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 1418, 0, 0, 0,
	0, 0, 991, 0, 0, 0, 0, 0, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 992,
	993, 1418, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 1001, 999, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 1010,
	0, 0, 1030, 1029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1032, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 1026,
	271, 0, 0, 0, 1415, 0, 0, 0, 0, 1418,
	1418, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 1034,
	1418, 1416, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 1017, 1018, 0, 0,
	0, 0, 0, 0, 271, 271, 0, 0, 0, 0,
	1020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1027, 1015, 0, 0, 0, 0,
	0, 0, 0, 1033, 1011, 0, 0, 1004, 1002, 0,
	1007, 0, 0, 0, 0, 0, 1008, 0, 0, 977,
	0, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 1577, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 1019, 0, 1009, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 271, 1012, 0, 0, 0, 0, 0, 0, 0,
	0, 990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 0, 1014, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1016, 0, 0, 271, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 1577, 1577, 1577, 1418,
	0, 0, 0, 1577, 1577, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 1578, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 1578, 1578, 0, 0, 1415, 0,
	1578, 1578, 1578, 0, 0, 271, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 1416, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 1829, 1830, 1831, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 1866, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	1415, 1415, 0, 1415, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 1577, 1577, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 1415, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 1416, 1416, 0,
	1416, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 1415, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 1415, 0, 1837, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	1416, 1577, 1577, 0, 1870, 0, 0, 1880, 0, 1852,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 1415, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 1868, 1578, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 1577, 1577, 1577, 1577, 1577,
	1577, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 0, 0, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 1578, 1578, 1578, 1578, 1578, 1867, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 1416, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 1853, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 0, 1578, 1884, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 1577,
	1577, 1577, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 1577, 0, 0, 1578, 1578, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3320, 0, 0, 1416, 0, 0,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1578, 279, 281, 280,
	282, 283, 284, 285, 1419, 286, 287, 1420, 1421, 1422,
	0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 1428, 652, 298, 299, 300, 301, 302,
	303, 1429, 1430, 0, 304, 653, 654, 655, 1431, 305,
	306, 656, 1432, 1499, 1433, 307, 308, 309, 310, 311,
	312, 313, 0, 1434, 315, 316, 317, 314, 318, 1435,
	319, 0, 320, 321, 322, 323, 324, 325, 1436, 326,
	327, 328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439,
	1441, 1442, 1443, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 1444, 342, 338, 340, 1445, 343, 341,
	344, 1446, 345, 346, 347, 1447, 1448, 348, 349, 350,
	1449, 351, 352, 353, 1450, 354, 355, 356, 1451, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 1452, 276, 1453, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 1454, 375, 376, 377, 1455, 1456, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1457, 390, 665, 1458, 666, 391, 1459, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 1460, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1461, 1218, 407, 670, 671, 1462,
	672, 1463, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1464, 420, 422, 421, 1465, 423, 674, 1223, 424,
	425, 1224, 1466, 426, 427, 428, 429, 430, 431, 434,
	1467, 1468, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1469, 278, 1227, 478, 479, 480, 1470, 675, 481,
	676, 483, 484, 1471, 0, 485, 0, 1472, 1473, 487,
	488, 489, 1474, 1475, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1476, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 1477,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 1478, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	1479, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1480, 570, 571, 569, 572,
	573, 574, 1481, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	1482, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 1483, 603,
	604, 0, 600, 591, 1484, 605, 606, 607, 608, 609,
	610, 611, 612, 1485, 613, 688, 689, 690, 691, 1486,
	622, 1487, 614, 615, 616, 692, 617, 693, 1488, 618,
	619, 620, 621, 0, 623, 624, 1489, 1490, 625, 626,
	627, 629, 630, 628, 631, 1491, 632, 1492, 0, 633,
	634, 635, 694, 695, 696, 1493, 637, 636, 638, 639,
	697, 640, 641, 1494, 1495, 1496, 1497, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 2807, 0, 0, 0, 0, 0, 0, 0, 2808,
	279, 281, 280, 282, 283, 284, 285, 1419, 286, 287,
	1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 1428, 652, 298, 299,
	300, 301, 302, 303, 1429, 1430, 0, 304, 653, 654,
	655, 1431, 305, 306, 656, 1432, 1499, 1433, 307, 308,
	309, 310, 311, 312, 313, 0, 1434, 315, 316, 317,
	314, 318, 1435, 319, 0, 320, 321, 322, 323, 324,
	325, 1436, 326, 327, 328, 1216, 329, 330, 331, 1437,
	1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 1444, 342, 338, 340,
	1445, 343, 341, 344, 1446, 345, 346, 347, 1447, 1448,
	348, 349, 350, 1449, 351, 352, 353, 1450, 354, 355,
	356, 1451, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 1452,
	276, 1453, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 1454, 375, 376, 377, 1455, 1456,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1457, 390, 665, 1458, 666,
	391, 1459, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 1460, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1461, 1218, 407,
	670, 671, 1462, 672, 1463, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1464, 420, 422, 421, 1465, 423,
	674, 1223, 424, 425, 1224, 1466, 426, 427, 428, 429,
	430, 431, 434, 1467, 1468, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1469, 278, 1227, 478, 479, 480,
	1470, 675, 481, 676, 483, 484, 1471, 0, 485, 0,
	1472, 1473, 487, 488, 489, 1474, 1475, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1476, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 1477, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 1478,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1479, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1480, 570,
	571, 569, 572, 573, 574, 1481, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 1482, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 1483, 603, 604, 0, 600, 591, 1484, 605, 606,
	607, 608, 609, 610, 611, 612, 1485, 613, 688, 689,
	690, 691, 1486, 622, 1487, 614, 615, 616, 692, 617,
	693, 1488, 618, 619, 620, 621, 0, 623, 624, 1489,
	1490, 625, 626, 627, 629, 630, 628, 631, 1491, 632,
	1492, 0, 633, 634, 635, 694, 695, 696, 1493, 637,
	636, 638, 639, 697, 640, 641, 1494, 1495, 1496, 1497,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 3802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3804, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4217, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4215, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4443,
	279, 281, 280, 282, 283, 284, 285, 1419, 286, 287,
	1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 1428, 652, 298, 299,
	300, 301, 302, 303, 1429, 1430, 0, 304, 653, 654,
	655, 1431, 305, 306, 656, 1432, 1499, 1433, 307, 308,
	309, 310, 311, 312, 313, 0, 1434, 315, 316, 317,
	314, 318, 1435, 319, 0, 320, 321, 322, 323, 324,
	325, 1436, 326, 327, 328, 1216, 329, 330, 331, 1437,
	1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 1444, 342, 338, 340,
	1445, 343, 341, 344, 1446, 345, 346, 347, 1447, 1448,
	348, 349, 350, 1449, 351, 352, 353, 1450, 354, 355,
	356, 1451, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 1452,
	276, 1453, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 1454, 375, 376, 377, 1455, 1456,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1457, 390, 665, 1458, 666,
	391, 1459, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 1460, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1461, 1218, 407,
	670, 671, 1462, 672, 1463, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1464, 420, 422, 421, 1465, 423,
	674, 1223, 424, 425, 1224, 1466, 426, 427, 428, 429,
	430, 431, 434, 1467, 1468, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1469, 278, 1227, 478, 479, 480,
	1470, 675, 481, 676, 483, 484, 1471, 0, 485, 0,
	1472, 1473, 487, 488, 489, 1474, 1475, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1476, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 1477, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 1478,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1479, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1480, 570,
	571, 569, 572, 573, 574, 1481, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 1482, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 1483, 603, 604, 0, 600, 591, 1484, 605, 606,
	607, 608, 609, 610, 611, 612, 1485, 613, 688, 689,
	690, 691, 1486, 622, 1487, 614, 615, 616, 692, 617,
	693, 1488, 618, 619, 620, 621, 0, 623, 624, 1489,
	1490, 625, 626, 627, 629, 630, 628, 631, 1491, 632,
	1492, 0, 633, 634, 635, 694, 695, 696, 1493, 637,
	636, 638, 639, 697, 640, 641, 1494, 1495, 1496, 1497,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4309, 279,
	281, 280, 282, 283, 284, 285, 1419, 286, 287, 1420,
	1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 1428, 652, 298, 299, 300,
	301, 302, 303, 1429, 1430, 0, 304, 653, 654, 655,
	1431, 305, 306, 656, 1432, 1499, 1433, 307, 308, 309,
	310, 311, 312, 313, 0, 1434, 315, 316, 317, 314,
	318, 1435, 319, 0, 320, 321, 322, 323, 324, 325,
	1436, 326, 327, 328, 1216, 329, 330, 331, 1437, 1438,
	1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 1444, 342, 338, 340, 1445,
	343, 341, 344, 1446, 345, 346, 347, 1447, 1448, 348,
	349, 350, 1449, 351, 352, 353, 1450, 354, 355, 356,
	1451, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 1452, 276,
	1453, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 1454, 375, 376, 377, 1455, 1456, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1457, 390, 665, 1458, 666, 391,
	1459, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 1460, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1461, 1218, 407, 670,
	671, 1462, 672, 1463, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1464, 420, 422, 421, 1465, 423, 674,
	1223, 424, 425, 1224, 1466, 426, 427, 428, 429, 430,
	431, 434, 1467, 1468, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1469, 278, 1227, 478, 479, 480, 1470,
	675, 481, 676, 483, 484, 1471, 0, 485, 0, 1472,
	1473, 487, 488, 489, 1474, 1475, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1476, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 1477, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 1478, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 1479, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1480, 570, 571,
	569, 572, 573, 574, 1481, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 1482, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	1483, 603, 604, 0, 600, 591, 1484, 605, 606, 607,
	608, 609, 610, 611, 612, 1485, 613, 688, 689, 690,
	691, 1486, 622, 1487, 614, 615, 616, 692, 617, 693,
	1488, 618, 619, 620, 621, 0, 623, 624, 1489, 1490,
	625, 626, 627, 629, 630, 628, 631, 1491, 632, 1492,
	0, 633, 634, 635, 694, 695, 696, 1493, 637, 636,
	638, 639, 697, 640, 641, 1494, 1495, 1496, 1497, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4145, 279, 281,
	280, 282, 283, 284, 285, 1419, 286, 287, 1420, 1421,
	1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 1428, 652, 298, 299, 300, 301,
	302, 303, 1429, 1430, 0, 304, 653, 654, 655, 1431,
	305, 306, 656, 1432, 1499, 1433, 307, 308, 309, 310,
	311, 312, 313, 0, 1434, 315, 316, 317, 314, 318,
	1435, 319, 0, 320, 321, 322, 323, 324, 325, 1436,
	326, 327, 328, 1216, 329, 330, 331, 1437, 1438, 1440,
	1439, 1441, 1442, 1443, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 1444, 342, 338, 340, 1445, 343,
	341, 344, 1446, 345, 346, 347, 1447, 1448, 348, 349,
	350, 1449, 351, 352, 353, 1450, 354, 355, 356, 1451,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 1452, 276, 1453,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 1454, 375, 376, 377, 1455, 1456, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1457, 390, 665, 1458, 666, 391, 1459,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 1460, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1461, 1218, 407, 670, 671,
	1462, 672, 1463, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1464, 420, 422, 421, 1465, 423, 674, 1223,
	424, 425, 1224, 1466, 426, 427, 428, 429, 430, 431,
	434, 1467, 1468, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1469, 278, 1227, 478, 479, 480, 1470, 675,
	481, 676, 483, 484, 1471, 0, 485, 0, 1472, 1473,
	487, 488, 489, 1474, 1475, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1476, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	1477, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 1478, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1479, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1480, 570, 571, 569,
	572, 573, 574, 1481, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 1482, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 1483,
	603, 604, 0, 600, 591, 1484, 605, 606, 607, 608,
	609, 610, 611, 612, 1485, 613, 688, 689, 690, 691,
	1486, 622, 1487, 614, 615, 616, 692, 617, 693, 1488,
	618, 619, 620, 621, 0, 623, 624, 1489, 1490, 625,
	626, 627, 629, 630, 628, 631, 1491, 632, 1492, 0,
	633, 634, 635, 694, 695, 696, 1493, 637, 636, 638,
	639, 697, 640, 641, 1494, 1495, 1496, 1497, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3820, 279, 281, 280,
	282, 283, 284, 285, 1419, 286, 287, 1420, 1421, 1422,
	0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 1428, 652, 298, 299, 300, 301, 302,
	303, 1429, 1430, 0, 304, 653, 654, 655, 1431, 305,
	306, 656, 1432, 1499, 1433, 307, 308, 309, 310, 311,
	312, 313, 0, 1434, 315, 316, 317, 314, 318, 1435,
	319, 0, 320, 321, 322, 323, 324, 325, 1436, 326,
	327, 328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439,
	1441, 1442, 1443, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 1444, 342, 338, 340, 1445, 343, 341,
	344, 1446, 345, 346, 347, 1447, 1448, 348, 349, 350,
	1449, 351, 352, 353, 1450, 354, 355, 356, 1451, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 1452, 276, 1453, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 1454, 375, 376, 377, 1455, 1456, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1457, 390, 665, 1458, 666, 391, 1459, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 1460, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1461, 1218, 407, 670, 671, 1462,
	672, 1463, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1464, 420, 422, 421, 1465, 423, 674, 1223, 424,
	425, 1224, 1466, 426, 427, 428, 429, 430, 431, 434,
	1467, 1468, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1469, 278, 1227, 478, 479, 480, 1470, 675, 481,
	676, 483, 484, 1471, 0, 485, 0, 1472, 1473, 487,
	488, 489, 1474, 1475, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1476, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 1477,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 1478, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	1479, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1480, 570, 571, 569, 572,
	573, 574, 1481, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	1482, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 1483, 603,
	604, 0, 600, 591, 1484, 605, 606, 607, 608, 609,
	610, 611, 612, 1485, 613, 688, 689, 690, 691, 1486,
	622, 1487, 614, 615, 616, 692, 617, 693, 1488, 618,
	619, 620, 621, 0, 623, 624, 1489, 1490, 625, 626,
	627, 629, 630, 628, 631, 1491, 632, 1492, 0, 633,
	634, 635, 694, 695, 696, 1493, 637, 636, 638, 639,
	697, 640, 641, 1494, 1495, 1496, 1497, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3638, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2662, 279, 281, 280, 282, 283,
	284, 285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423,
	647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 1428, 652, 298, 299, 300, 301, 302, 303, 1429,
	1430, 0, 304, 653, 654, 655, 1431, 305, 306, 656,
	1432, 1499, 1433, 307, 308, 309, 310, 311, 312, 313,
	0, 1434, 315, 316, 317, 314, 318, 1435, 319, 0,
	320, 321, 322, 323, 324, 325, 1436, 326, 327, 328,
	1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442,
	1443, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 1444, 342, 338, 340, 1445, 343, 341, 344, 1446,
	345, 346, 347, 1447, 1448, 348, 349, 350, 1449, 351,
	352, 353, 1450, 354, 355, 356, 1451, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 1452, 276, 1453, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 1454,
	375, 376, 377, 1455, 1456, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1457, 390, 665, 1458, 666, 391, 1459, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 1460,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1461, 1218, 407, 670, 671, 1462, 672, 1463,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1464,
	420, 422, 421, 1465, 423, 674, 1223, 424, 425, 1224,
	1466, 426, 427, 428, 429, 430, 431, 434, 1467, 1468,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1469,
	278, 1227, 478, 479, 480, 1470, 675, 481, 676, 483,
	484, 1471, 0, 485, 0, 1472, 1473, 487, 488, 489,
	1474, 1475, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 1476, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 1477, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 1478, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 1479, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 1480, 570, 571, 569, 572, 573, 574,
	1481, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 1482, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 1483, 603, 604, 0,
	600, 591, 1484, 605, 606, 607, 608, 609, 610, 611,
	612, 1485, 613, 688, 689, 690, 691, 1486, 622, 1487,
	614, 615, 616, 692, 617, 693, 1488, 618, 619, 620,
	621, 0, 623, 624, 1489, 1490, 625, 626, 627, 629,
	630, 628, 631, 1491, 632, 1492, 0, 633, 634, 635,
	694, 695, 696, 1493, 637, 636, 638, 639, 697, 640,
	641, 1494, 1495, 1496, 1497, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 1410, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2286, 279, 281, 280, 282, 283, 284,
	285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423, 647,
	1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	1428, 652, 298, 299, 300, 301, 302, 303, 1429, 1430,
	0, 304, 653, 654, 655, 1431, 305, 306, 656, 1432,
	1499, 1433, 307, 308, 309, 310, 311, 312, 313, 0,
	1434, 315, 316, 317, 314, 318, 1435, 319, 0, 320,
	321, 322, 323, 324, 325, 1436, 326, 327, 328, 1216,
	329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442, 1443,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	1444, 342, 338, 340, 1445, 343, 341, 344, 1446, 345,
	346, 347, 1447, 1448, 348, 349, 350, 1449, 351, 352,
	353, 1450, 354, 355, 356, 1451, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 1452, 276, 1453, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 1454, 375,
	376, 377, 1455, 1456, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1457,
	390, 665, 1458, 666, 391, 1459, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 1219, 397, 398, 1460, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1461, 1218, 407, 670, 671, 1462, 672, 1463, 408,
	409, 1220, 673, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1464, 420,
	422, 421, 1465, 423, 674, 1223, 424, 425, 1224, 1466,
	426, 427, 428, 429, 430, 431, 434, 1467, 1468, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1469, 278,
	1227, 478, 479, 480, 1470, 675, 481, 676, 483, 484,
	1471, 0, 485, 0, 1472, 1473, 487, 488, 489, 1474,
	1475, 490, 491, 677, 1228, 492, 1229, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	1476, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 1477, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 1478, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 1479, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 1480, 570, 571, 569, 572, 573, 574, 1481,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 1482, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 1483, 603, 604, 0, 600,
	591, 1484, 605, 606, 607, 608, 609, 610, 611, 612,
	1485, 613, 688, 689, 690, 691, 1486, 622, 1487, 614,
	615, 616, 692, 617, 693, 1488, 618, 619, 620, 621,
	0, 623, 624, 1489, 1490, 625, 626, 627, 629, 630,
	628, 631, 1491, 632, 1492, 0, 633, 634, 635, 694,
	695, 696, 1493, 637, 636, 638, 639, 697, 640, 641,
	1494, 1495, 1496, 1497, 642, 643, 698, 644, 645, 646,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 1419, 286, 287, 1420, 1421, 1422,
	0, 1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 1428, 652, 298, 299, 300, 301, 302,
	303, 1429, 1430, 0, 304, 653, 654, 655, 1431, 305,
	306, 656, 1432, 1499, 1433, 307, 308, 309, 310, 311,
	312, 313, 0, 1434, 315, 316, 317, 314, 318, 1435,
	319, 0, 320, 321, 322, 323, 324, 325, 1436, 326,
	327, 328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439,
	1441, 1442, 1443, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 1444, 342, 338, 340, 1445, 343, 341,
	344, 1446, 345, 346, 347, 1447, 1448, 348, 349, 350,
	1449, 351, 352, 353, 1450, 354, 355, 356, 1451, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 1452, 276, 1453, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 1454, 375, 376, 377, 1455, 1456, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1457, 390, 665, 1458, 666, 391, 1459, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 1460, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1461, 1218, 407, 670, 671, 1462,
	672, 1463, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1464, 420, 422, 421, 1465, 423, 674, 1223, 424,
	425, 1224, 1466, 426, 427, 428, 429, 430, 431, 434,
	1467, 1468, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1469, 278, 1227, 478, 479, 480, 1470, 675, 481,
	676, 483, 484, 1471, 0, 485, 0, 1472, 1473, 487,
	488, 489, 1474, 1475, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1476, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 1477,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 1478, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	1479, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1480, 570, 571, 569, 572,
	573, 574, 1481, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	1482, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 1483, 603,
	604, 0, 600, 591, 1484, 605, 606, 607, 608, 609,
	610, 611, 612, 1485, 613, 688, 689, 690, 691, 1486,
	622, 1487, 614, 615, 616, 692, 617, 693, 1488, 618,
	619, 620, 621, 0, 623, 624, 1489, 1490, 625, 626,
	627, 629, 630, 628, 631, 1491, 632, 1492, 0, 633,
	634, 635, 694, 695, 696, 1493, 637, 636, 638, 639,
	697, 640, 641, 1494, 1495, 1496, 1497, 642, 643, 698,
	644, 645, 646, 2637, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 2634,
	286, 287, 0, 0, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	2635, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	2633, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	2636, 0, 0, 0, 0, 0, 0, 0, 1135, 2632,
	0, 1095, 1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 238, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 240, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 1649, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 232,
	642, 643, 698, 644, 645, 646, 1109, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 1910, 1908, 0, 0,
	1133, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 238, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 240, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	1649, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 232, 642, 643, 698, 644, 645,
	646, 1109, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 1910, 3274, 0, 0, 1133, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 238, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 240, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 1649, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 232,
	642, 643, 698, 644, 645, 646, 1109, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 1910, 1908, 0, 0,
	1133, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 2768, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 2773, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 2769, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 2770,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 2682, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	1135, 2680, 0, 2679, 1133, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 0, 0, 0, 0, 0, 0, 0, 1135, 2677,
	0, 2676, 1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 2674, 0, 2673,
	1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 1135, 2671, 0, 1749, 1133, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 1748, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 1098, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 1113, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 4803, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 1113, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 2514, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 2513, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 4533, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 1113, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 1113, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 4110, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 1979, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 3798, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 1979, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 2773, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 1908, 0, 2778, 1133, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 2776, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 2764, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 2752, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 2750, 0, 2741, 2748, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 2744, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 2745, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 2746, 444, 2743, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 2747, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 2742, 646, 1109, 0, 0, 0,
	2738, 0, 2741, 2748, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 2744, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 2745, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 2746, 444, 2743, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 2747, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 2742, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 0, 0, 0,
	0, 0, 1916, 0, 1135, 0, 0, 0, 1133, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 2493, 286, 287, 0, 0, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 2455, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 2428, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 1754, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 1683, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 1678, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 1665, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	1660, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 1561,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1560, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 1555, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1554, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 1548, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 1510, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 1514, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 1515, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 1513,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 1359, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	4851, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 4850,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	4849, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 4851,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 4850, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 4462, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 4463,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 4461, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 3241, 3242, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 3239, 3240, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 2501, 2502, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 0, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 2760, 0, 0, 0, 0,
	0, 0, 2758, 2759, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 0, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 3234, 3235,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 0, 0, 0, 0, 0, 0,
	0, 2163, 2164, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 0, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 4851, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 0, 1178, 0, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	0, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 4850, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 1095, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 1174, 0,
	304, 653, 654, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1259, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 278, 1227,
	478, 479, 480, 0, 1179, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 1265, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 1267, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 238, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 0, 600, 591,
	240, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 1649, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 232, 642, 643, 698, 644, 645, 646, 1273,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 1263, 0, 2003,
	0, 1175, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 1174, 0, 304, 653, 654, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1259, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 278, 1227, 478, 479, 480, 0, 1179, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 1265, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	1267, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 238, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	0, 600, 591, 240, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 1649, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 232, 642, 643, 698, 644,
	645, 646, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3398, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1263, 0, 2003, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 1174, 0,
	304, 653, 654, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1259, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 278, 1227,
	478, 479, 480, 0, 1179, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 1265, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 1267, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1263, 0, 1261,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 1174, 0, 304, 653, 654,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	670, 671, 0, 672, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1259, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 278, 1227, 478, 479, 480,
	0, 1179, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 1265, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 1267, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 1263, 0, 1261, 0, 1175, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 1174, 0,
	304, 653, 654, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1259, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 278, 1227,
	478, 479, 480, 0, 1179, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 1265, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 1267, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 1263, 0, 1261,
	0, 1175, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 1174, 0, 304, 653, 654, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 278, 1227, 478, 479, 480, 0, 1179, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 4280, 0, 1175, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 1174, 0, 304, 653, 654, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 278, 1227, 478, 479, 480, 0,
	1179, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 1267, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 273, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 2605, 2606, 2607, 2624,
	2625, 2626, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 2627, 0, 647, 0,
	0, 0, 0, 288, 289, 1900, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 1885,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 2617, 0,
	315, 316, 317, 314, 318, 0, 319, 2613, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 2618, 2619, 2620, 2621, 371,
	372, 373, 662, 0, 0, 2612, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 2622,
	2623, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 2615, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 2616, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 1884, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 1095, 0, 1575, 2602,
	2603, 2604, 2628, 2614, 2608, 0, 2610, 2611, 2609, 2596,
	2597, 2598, 2599, 2600, 2601, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 238, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 240, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	1649, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 232, 642, 643, 698, 644, 645,
	646, 0, 1646, 233, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 193, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 238,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 240, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 1649, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	232, 642, 643, 698, 644, 645, 646, 1575, 1574, 233,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 193, 0, 647,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	1499, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 673, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 0,
	1227, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1575, 1574, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	1673, 0, 647, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 1499, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 0, 1227, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1575, 1574, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 3716, 0, 647, 0, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 1499, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1218, 407,
	670, 671, 0, 672, 0, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 0, 1227, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 2369, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1575, 2278, 0, 0,
	0, 0, 2279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 1673, 0, 647, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 1499,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 2277, 422,
	421, 0, 423, 674, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 0, 1227,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1575,
	1574, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 1673,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1095, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1655, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 238,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 240, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 1649, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 273, 0,
	232, 642, 643, 698, 644, 645, 646, 0, 0, 233,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 193, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 273, 3148, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 2017, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 5018, 0, 1175, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 1174, 0, 304,
	653, 654, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 278, 1227, 478,
	479, 480, 0, 1179, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 3666,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 1643, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 273, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 3136, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 273, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 3823, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 925,
	0, 826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 2356,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 833, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 923, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 831, 605, 606, 607, 608,
	609, 832, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 2062, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 836, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	0, 2068, 0, 296, 2058, 297, 2074, 0, 2081, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 2084,
	2085, 0, 0, 305, 306, 0, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 1198, 337, 339, 2072, 2071, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	2070, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 2079, 2080, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 2065, 2066, 0, 2061, 0, 408, 409, 1220, 0,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 0, 481, 2073, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	0, 1228, 492, 1229, 0, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	2055, 506, 507, 508, 2056, 509, 510, 511, 0, 512,
	0, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 2069, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 0, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 2067, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 2083, 594, 595, 596, 597, 0,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 2075,
	2076, 2077, 2078, 0, 622, 0, 614, 615, 616, 0,
	617, 0, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 0, 2059, 2082, 0,
	637, 636, 638, 639, 0, 640, 641, 0, 0, 0,
	0, 642, 643, 0, 644, 645, 646, 826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 3943, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 2049, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 833, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 3942, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 831, 605, 606, 607, 608, 609, 832, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 3941, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 826, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2089, 286, 287, 0, 0,
	0, 0, 836, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 833, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 2088, 565, 566, 567, 568, 0, 2090, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 831, 605, 606, 607, 608,
	609, 832, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 2087, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 826, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 2040,
	286, 287, 0, 0, 0, 0, 836, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 833, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 2039, 565, 566, 567, 568,
	0, 2041, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 831,
	605, 606, 607, 608, 609, 832, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 2038, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 824, 0,
	826, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	836, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 833, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 831, 605, 606, 607, 608, 609,
	832, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 826, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 836, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	833, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 831, 605,
	606, 607, 608, 609, 832, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 826, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 836,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 833, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 2407, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 2408, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 831, 605, 606, 607, 608, 609, 832, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 2409,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 273, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 836, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 1575, 1574, 0, 0, 0, 0, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 836, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 1499, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 0, 1227, 478, 479, 480, 4035, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 3616, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1703, 0, 1575,
	1574, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 1702, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 1701, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	1700, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1568, 0, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1570, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1575, 1574, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	1499, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 673, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 0,
	1227, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1575, 1574, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 1499, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 673, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 0, 1227, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 1575, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 1499, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1218, 407,
	670, 671, 0, 672, 0, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 0, 1227, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 2933, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 3658, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 2937, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 3657, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 2936, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 3654, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 3656,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 3653, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 2935, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 3655, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 2933, 305, 306,
	656, 0, 0, 2927, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 2929, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 2937, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 2936, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 2926, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 2935, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 2934, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1780, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 1779, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	1778, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 1781, 557, 564, 565, 566, 567, 568, 0,
	1777, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 1775, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	1776, 636, 638, 639, 697, 640, 641, 1503, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1505, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 1265, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1500, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1502, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1406, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1408, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 1265, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 731, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 730, 284, 285, 719, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 722, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 728, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 724,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 718, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 719, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 722, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 723, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 724, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 719, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	722, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 723, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 724, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 719,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 722, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 4045, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	724, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 1265, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 3561,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 3106, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	3105, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 2376,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 2314, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 2321, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 2320, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 2307, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 2309, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 2271, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 1265, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1621, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1620, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1523, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1516, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1518, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1342, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1341, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1332, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1331, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1329, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1328, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1324, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1323, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 700, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	264, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 722, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	723, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 724, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 2416, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	2414, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 2412, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 2327, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 2114, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	2108, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 910,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 909, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 908, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 3657, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 4361, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1370, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1373, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 1371, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 791,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 790, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 789,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 1374,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 787, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1370, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1373, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 1371, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 791, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 790,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 789, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 1374, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 787,
	689, 690, 691, 0, 622, 0, 614, 1372, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 709, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 708, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 707, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 3148, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 4654, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 3504,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	4252, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 3996, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 2813, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 3148, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 3145, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 2232, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 790, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 789, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 787, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	2386, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 2374,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1676, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1669,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 781, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 777, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 782, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 791, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 790, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 789, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 1654, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 787, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1627,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1626, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1611, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1609, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1604,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1581, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1579, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1566,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1528, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1508,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1376, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 790, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 789, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 787, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1347,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1346, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1338, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1337, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 1290, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 796, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 781, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 777, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 776, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 782, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 791, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 790, 549, 550, 551, 552, 778, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 789, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 779, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 787, 689, 690, 691, 0, 622, 0, 614,
	783, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	770, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 771, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 733, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	726, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 704, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 3686, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 790, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 789, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 787, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 3601, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 3577, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 3574,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 3528, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 3526, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 3514, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 3511, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 3116, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 771, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	2345, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 0,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1309, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 1238, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 0, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 0, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 0, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 0, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 1617, 0,
	1354, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1616, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	0, 640, 641, 1531, 0, 1354, 0, 642, 643, 0,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 1530,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 1352, 0,
	1354, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1351, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	0, 640, 641, 2128, 0, 1354, 0, 642, 643, 0,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 2095, 0,
	1354, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	1354, 640, 641, 0, 0, 0, 0, 642, 643, 0,
	644, 645, 646, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	0, 640, 641, 0, 0, 0, 0, 642, 643, 0,
	644, 645, 646, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	1829, 1830, 1879, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 1866, 1860, 0, 0, 0, 0, 1831, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 1851, 1879,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 1852, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 1853, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 1884, 0, 0,
	0, 0, 1871, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 1884, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3319, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 3318, 0, 1829, 1830, 1837, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 1851, 1846,
	1847, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 1858, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 1852, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 1878,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1882,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2639, 0, 0, 0, 1853, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 1870, 0, 0, 1880, 0, 0, 1884, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 1851, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	4779, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 1858, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 4775, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 1851, 1846, 1847, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 4680, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 1858, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 1878, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1867, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 4634, 1854, 1855, 1856, 1857, 0, 0,
	0, 1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 0, 0, 1831, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 1851, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0,
	0, 0, 0, 4633, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1858, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1853, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 1878, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 1867, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 4446,
	1854, 1855, 1856, 1857, 0, 0, 0, 1853, 1829, 1830,
	1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1885, 0, 1884, 0, 0, 0,
	0, 0, 0, 1831, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 1851, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0, 4276,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1858, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1853, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 1884, 0, 1878, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 1867, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 4192, 1854, 1855, 1856, 1857,
	0, 0, 0, 1853, 1829, 1830, 1837, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	1885, 0, 1884, 0, 0, 0, 0, 0, 0, 1831,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 1851,
	1846, 1847, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	1878, 0, 0, 0, 0, 4191, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 1858, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1853,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 1884, 0,
	1878, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1867,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 4190, 1854, 1855, 1856, 1857, 0, 0, 0, 1853,
	1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1885, 0, 1884, 0,
	0, 0, 0, 0, 0, 1831, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 1851, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 1878, 0, 0, 0,
	0, 3828, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 1858, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 3316, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 1851, 1846, 1847, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 3315, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 1858, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 1878, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1867, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 3314, 1854, 1855, 1856, 1857, 0, 0,
	0, 1853, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 1870, 0, 0, 1880, 0, 1832, 0,
	0, 0, 0, 1859, 1861, 0, 0, 1879, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1885, 0, 0, 0, 1846, 1847,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 1868, 2195, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0,
	0, 0, 0, 3313, 0, 0, 0, 0, 0, 2193,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 1882, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 1871, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 1878, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 1867, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 3278, 0, 2194,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 1853, 0, 0, 1837, 4926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 1870, 0, 0, 1880, 1832,
	0, 0, 0, 0, 0, 1859, 1861, 0, 1879, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 2192, 1877, 0, 1885, 0, 0, 0, 0,
	1846, 1847, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 1868, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	1882, 1837, 0, 3378, 0, 0, 0, 0, 3377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 1871, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 3249, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 1878, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 1867, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 3250,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 1853, 0, 0, 1837, 0, 0,
	0, 0, 0, 2786, 0, 0, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1870, 2785, 0, 1880,
	1832, 0, 0, 0, 0, 0, 1859, 1861, 0, 1879,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 1885, 0, 0, 0,
	0, 1846, 1847, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1868,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 1882, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 1871, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 0, 0, 1837, 0,
	4540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1870, 0, 0,
	1880, 1832, 0, 0, 0, 0, 0, 1859, 1861, 0,
	1879, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 1885, 0, 0,
	0, 0, 1846, 1847, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	1868, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 1882, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 1871, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 1878, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 1867, 1092, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 1871, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 1885, 0, 1884, 0, 0, 0, 0,
	0, 0, 1831, 0, 1876, 0, 1877, 0, 0, 0,
	0, 0, 1851, 1846, 1847, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1878, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 1858,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 1884, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 4320,
	0, 0, 1867, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 4017, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1870, 1884, 0, 1880, 1832, 0, 0, 0, 0, 0,
	1859, 1861, 0, 1879, 0, 0, 0, 0, 0, 4018,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	1885, 0, 0, 0, 0, 1846, 1847, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 1868, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 1882, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 1871, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	1878, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1867,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 1853,
	1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 3384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 3379, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1885, 0, 1884, 0,
	0, 0, 0, 0, 0, 1831, 0, 1876, 0, 1877,
	3809, 0, 0, 0, 0, 1851, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 1878, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 1858, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 3317, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 1851, 1846, 1847, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 1858, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 1878, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1867, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 0, 0, 1831, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 1851, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1858, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2358, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839,
}

var sqlPact = [...]int{
	308, -1000, -1000, -1000, -1000, 211, -1000, -1000, 208, 204,
	203, 199, 197, 195, 193, 192, 191, 188, 185, -1000,
	-1000, -1000, -1000, -1000, -1000, 183, -1000, -1000, 178, -1000,
	177, 176, 172, -1000, -1000, 171, -1000, 169, -1000, -1000,
	-1000, -1000, 168, 163, 162, 92528, 91963, 93091, 2421, 116783,
	99855, 2113, 81805, 116218, 81240, 115653, 2287, 10541, 115088, 2847,
	161, -1000, 114523, 160, 155, 154, -1000, 113958, -1000, 1923,
	-1000, 150, -1000, 5077, 71596, 149, 146, 144, 142, 2822,
	137, -1000, 130, 125, -1000, -1000, 124, -1000, 12882, 1558,
	-1000, 123, 122, -1000, 522, 97597, 121, 117, 116, 2857,
	115, 114, 68767, 112, 108, 107, 2785, 2938, -1000, -1000,
	2166, -1000, -1000, 106, 103, 101, 99, 98, 96, 94,
	93, 92, 91, 90, 88, 87, -1000, 86, 85, 84,
	83, 82, -1000, 81, 79, 78, -1000, 64, -1000, 63,
	60, 59, 58, 56, 54, 53, 52, 50, 48, 47,
	46, 45, 44, 16755, -1000, -1000, 43, 2058, 1776, 1767,
	1736, 1734, 1726, 1009, 41, 37, 36, 34, 33, 32,
	31, 30, 29, 28, 27, 26, 23, 21, 20, 19,
	17, 16, 151, 15, 12, 10, 9, 8, 7, 6,
	2435, -1000, 1881, 867, 31824, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 125228, 117346, 2, -94, 1, -1000, 3433, 947,
	56789, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 301,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 516, 2329, 775, -1000, -1000, -1000, 113395, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2417, -16, -1000, 2142,
	-1000, -1000, -1000, -1000, -1000, 772, -1000, 2416, 2373, 270,
	2372, -1000, -1000, -1000, 3509, 2546, 3930, 3928, 3927, 3925,
	3924, 124665, 1921, 3922, 2613, 3921, 3920, 3917, 3916, 3914,
	3913, 3912, -1000, 91398, 1064, 90833, 90268, 3530, 112832, 89703,
	112267, 127486, 48673, 824, 3507, -1000, -1000, -1000, -1000, -1000,
	-1000, 117346, -1000, 1063, -1000, -1000, 3910, 2184, 764, 99290,
	-1000, -1000, 111702, 1945, -1000, -1000, -1000, 945, 1244, 34140,
	34140, 34140, 300, -1000, -1000, -1000, -1000, -1000, -1000, 3909,
	3905, 3904, 3902, 3901, -1000, -1000, 80675, 24693, 80110, 79545,
	111137, 48094, 89138, 88573, 3894, 3891, 3890, 110572, 126921, 3634,
	3633, 1062, 2140, 1482, -1000, -1000, -1000, -1000, -1000, -1000,
	-26, 73288, 3668, 117346, -1000, 298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47515, 604, 46936, 521, 46357, 510, 110007,
	-1000, -1000, -1000, -1000, 75590, -1000, 109442, 2540, 3889, 3888,
	1187, 3886, 3401, 1861, 3884, 2025, 1279, 3883, 3882, 3881,
	3880, 3879, 3878, 3877, 1557, 108877, 3072, 1604, 108312, 1833,
	126356, 1060, 88008, 93091, 2702, 107747, 1524, 1483, -1000, -1000,
	-1000, -1000, 3223, 2935, 2928, 1372, -1000, -1000, -1000, -1000,
	60230, 5986, 5169, -1000, -1000, 10962, 107182, 63095, 93091, 93091,
	-1000, -1000, -1000, -1000, -1000, -1000, 45778, 341, 45199, 708,
	106617, -1000, -1000, 60803, 3000, -1000, -1000, -1000, -1000, -1000,
	106052, 44620, 324, 44041, 688, 117346, -1000, 3068, 2067, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2246, 1721, 3692,
	2842, 75015, 2163, 1437, 3469, 3222, 3215, 1529, 2132, 3214,
	3876, 2739, 3213, 3208, 3207, 3205, 3201, 1768, 2663, 309,
	2657, 31245, 3050, 1849, 43462, 1633, 1528, 3197, 3194, 3707,
	2119, 2103, 2095, 78980, 3874, 3871, 3442, 3141, 3112, 2900,
	3111, -1000, 2997, 1545, 291, -1000, -1000, -1000, -1000, -1000,
	-1000, 1503, -1000, -1000, -1000, -1000, -1000, 83494, -1000, -1000,
	1855, -1000, -1000, 1855, -1000, -1000, -1000, -1000, -1000, 1434,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1881, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2422, -1000, 2134, -1000, -1000, 2603, 3416,
	3416, 3416, 3506, 491, 474, -1000, 151, -1000, -1000, 137461,
	-1000, -1000, 49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252,
	2297, -1000, 761, -1000, -1000, 806, -1000, 760, 679, 622,
	-1000, -1000, -1000, -1000, -1000, -1000, 759, -1000, -1000, -1000,
	-1000, -1000, -1000, 3668, -1000, 27639, -1000, -1000, -1000, 360,
	758, 49252, -1000, -1000, 3727, 3725, 1028, -1000, 290, 956,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3065, 755, 754, -1000, 752, 751, 750, 749,
	746, -1000, 742, -1000, 741, 738, 735, 730, 726, 724,
	722, 721, -1000, 2151, -1000, -1000, -1000, -1000, -1000, -1000,
	668, 666, 666, 666, -1000, 1054, -1000, -1000, -1000, 350,
	665, 326, 664, 663, 662, -1000, 718, 717, 715, 714,
	713, 712, 710, 707, 706, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1051, -1000, -1000, -1000, -1000, -27, 117346, -1000,
	516, -27, -1000, -1000, 705, -1000, 35877, 35877, 35877, -1000,
	-1000, 2415, 49252, -1000, 2524, -1000, -20, -20, 924, 58508,
	-1000, 55615, 924, 289, 818, 64234, -1000, 2995, -1000, -1000,
	695, 275, -1000, -1000, -1000, -1000, 25266, 2988, 117346, 117346,
	117346, 93091, 93091, 93091, 117346, 3870, 3869, 3309, 49252, -1000,
	-1000, 71031, 129176, 93654, -1000, -1000, 3613, 69330, 70467, 3061,
	129176, 3060, 128616, 3867, -1000, -1000, -1000, -1000, -1000, 3276,
	3866, 3865, 3861, -1000, 117346, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 245, 3275, -1000, -1000, 97032, 245, 3274, -1000,
	245, 3273, -1000, 96469, -1000, -1000, 2369, 3272, -1000, -1000,
	248, 3270, -1000, -1000, -1000, 246, 3269, -1000, -1000, 274,
	-84, 3268, -1000, -1000, -1000, -1000, -1000, -1000, 137461, -1000,
	-1000, -1000, 128051, -1000, 3432, -1000, 117346, -1000, 49252, -1000,
	-1000, 3608, 1781, 3482, 3546, -1000, -1000, -36, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2593, 2588, 1156, 2450, -1000,
	3323, 1950, 34140, 3389, -1000, -1000, -1000, -1000, -1000, 266,
	25266, -1000, -1000, -1000, -1000, -1000, -1000, 3575, 3267, 1463,
	-1000, 2446, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2232, 3266, -1000, 1707, 3265, 2196, -1000, -1000, 2012,
	-1000, 133897, 1416, -1000, -1000, -1000, -1000, 1661, 3264, -19,
	-1000, -1000, 2714, -1000, -1000, -1000, -1000, 2125, -1000, 1331,
	3263, -1000, 2836, 2836, 87443, 3232, 62522, 60803, 73288, -31,
	-1000, -1000, -1000, -1000, -157, -1000, 24114, 137461, -1000, -1000,
	-1000, -1000, 1890, 137461, 972, -1000, -1000, 3261, -1000, 137461,
	919, -1000, -1000, 3259, -1000, 2660, -1000, 3059, -1000, -1000,
	2498, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2497,
	1031, -1000, 3849, -1000, -1000, 3845, -1000, 3844, 3840, 3839,
	-1000, 1800, 2120, 3838, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 86880, 2413, -1000, -1000, 85750, 3054, -1000, 2495,
	3545, -1000, 86315, 1058, -1000, 1014, 2493, -1000, 95906, 1052,
	2492, -1000, 3837, 3519, 2734, 1014, 2491, -1000, -1000, -1000,
	-1000, -1000, 1053, -1000, 66499, -1000, 66499, -1000, 1676, -1000,
	124102, -20, 93091, 3668, -1000, -65, -1000, -1000, -1000, 947,
	-1000, 59654, -1000, 59654, 98725, 76163, 988, 2987, 68192, 137291,
	-1000, 1023, -1000, -1000, 137461, -1000, -1000, -1000, 2659, -1000,
	-266, 2830, -1000, 76163, 61949, 2658, -1000, 137461, -1000, -1000,
	-1000, -1000, 137461, -1000, -1000, -1000, 76163, 85750, -1000, 105487,
	85187, -1000, -1000, 1541, 2647, -1000, -1000, -1000, 76163, 1332,
	76163, 76163, 76163, -1000, 104922, -1000, -1000, 2126, 1759, 3425,
	2116, 93091, -1000, 2022, -1000, -1000, -1000, 3458, 3230, 117346,
	-1000, -1000, 3051, -1000, 72724, 95343, -1000, 94780, -1000, 94217,
	-1000, 93091, -1000, 93091, -1000, 3836, 3835, 3834, -1000, -1000,
	3832, -1000, 3831, 3449, -1000, 643, 42883, 137461, 3439, -1000,
	3830, 2079, 3050, 137461, -1000, 3217, 1760, 1744, 117346, -1000,
	-1000, 117346, -1000, 117346, -1000, -1000, -1000, 1620, -1000, -1000,
	2589, -1000, -1000, -1000, -1000, 93091, 93091, 93091, 93091, 1792,
	-1000, 42304, -1000, -1000, 3153, 3829, 1804, -1000, 2010, -1000,
	2986, 3462, -1000, 1539, 1895, 253, 3733, -1000, -1000, 254,
	-1000, -1000, -36, -1000, 123539, -1000, 2603, -1000, 117346, -1000,
	2604, 3028, 3045, 1720, 2430, 2690, -1000, 41725, 2624, 52726,
	2437, 151, -1000, -1000, 151, 151, 32982, -1000, -1000, 69330,
	69330, 25266, 1472, 49252, 49252, 49252, 49252, 49252, 49252, 49252,
	49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252,
	49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252,
	49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252, 49252, 2259,
	49252, 1426, 49252, 49252, 49252, 49252, 1848, -1000, -1000, 2041,
	542, 2249, 679, -1000, -1000, -1000, 3659, 3659, 3659, 591,
	591, 591, 14397, 14397, 644, 3828, 806, -1000, 49252, -1000,
	105, 59072, 49252, 25841, -1000, 474, 9237, 2656, -1000, 473,
	26449, -1000, -1000, -1000, 27639, 622, 41117, 49252, 1039, 137461,
	-1000, -1000, 1515, 3679, 23535, 3083, 2890, 678, 868, 849,
	30637, 30029, 29421, 28813, 845, 633, 49252, 49252, 49252, 49252,
	49252, 49252, 49252, 49252, -1000, -1000, 3700, -1000, 3679, -1000,
	-1000, -1000, -1000, 3679, 1471, 1456, 3679, -1000, 3679, 3679,
	7649, 7649, 40538, 39959, 39380, 53305, 38801, 49252, 28234, 38222,
	37643, -1000, 117346, -27, 3607, 49252, 194, -1000, 134799, -1000,
	194, 194, 677, -67, 137461, 2668, 2668, 57362, 2468, 2325,
	2325, 2325, -1000, 924, 18286, 924, 103233, 2335, 924, 924,
	229, 282, 464, 55042, 2524, 103233, 796, 675, -1, -5,
	-6, -1000, -1000, -13, -17, -1000, -1000, 93091, 673, 25841,
	25266, 228, 2106, -68, 2681, 2678, -1000, 2676, 2675, -1000,
	2672, 2407, -1000, -1000, -1000, 1913, -70, 1407, 93091, 117346,
	1520, 3827, -66, -1000, 5180, -73, -1000, 1355, 227, 3679,
	-1000, -1000, -1000, -1000, -1000, 3826, 3825, -1000, 1046, 672,
	669, 353, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	668, 666, 666, 666, -1000, 350, 665, 326, 664, 663,
	662, -1000, -1000, -1000, -1000, -1000, 2984, 93091, 117346, 1508,
	3823, 82368, -84, 93654, -76, -1000, -1000, 117346, -1000, -1000,
	-1000, 3822, -1000, 93091, -1000, -1000, 93091, 245, 3254, -1000,
	93091, -1000, 93091, 241, 3234, -1000, -1000, 117346, -1000, 93091,
	93091, -1000, 117346, 117346, 117346, 129176, 129176, 240, -1000, 93091,
	901, -75, 1195, -36, -1000, -1000, -1000, -1000, 1855, -1000,
	1972, -1000, -1000, -1000, -1000, -1000, -1000, 1537, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1028, -1000, -1000, -1000,
	-1000, -1000, -1000, 3675, 3672, -29, -1000, -1000, 25266, -1000,
	-37, 1693, 557, 1405, -1000, 78415, 2576, 3434, 3814, 2729,
	3412, 1672, -1000, 1611, -1000, 3520, 83494, 3555, 3573, 1360,
	-1000, 2982, -1000, -1000, -1000, 943, 1775, 1879, 1397, 1382,
	83494, 1707, -1000, 69330, -1000, 2726, 3505, 1425, 1417, 1425,
	1425, 1413, -1000, 83494, 1867, 1374, 1306, 1305, -1000, -1000,
	2081, 2065, -1000, -1000, 104359, -1000, 1303, 1301, 3632, 2422,
	2305, 843, 2056, -1000, 1415, 1299, 2981, -1000, -1000, -39,
	3554, 3564, 1360, -1000, 2980, 1298, -1000, -1000, -1000, 3503,
	93091, 25266, 1609, 1607, 1594, 1864, 1296, -30, -1000, 3552,
	1294, 1293, -1000, 1072, 8170, 3342, -1000, 129176, 1072, 1072,
	2156, 3231, 2792, 1715, -1000, 2807, 858, 2806, -1000, -1000,
	-1000, 858, -31, 73288, 117346, 226, -1000, 105, 49252, 49252,
	105, 49252, 105, -1000, 3537, 3227, 3221, 3813, -1000, -1000,
	-1000, -1000, -1000, 3812, 2059, 2610, -1000, -1000, 661, 2490,
	2976, 117346, 2687, -33, 93091, -1000, 72160, 3216, 129176, 1707,
	2487, -1000, -1000, 84622, -1000, 3189, 516, 2486, -1000, 466,
	3811, 3185, -1000, 122976, -1000, 3432, 1424, 3184, 1111, 307,
	3606, -1000, 307, 67064, -1000, 117346, -1000, -20, 748, 77289,
	-78, -81, 463, -1000, 103796, 117346, 117346, 3377, 2102, 2100,
	-1000, 1011, 60803, -1000, 60803, -83, -1000, -266, 2804, 1602,
	-1000, 988, 988, 858, -1000, 858, -1000, 93091, 3043, -1000,
	-1000, 76163, 988, 988, 988, -1000, -1000, -1000, -1000, 3807,
	3806, 3805, 3803, -1000, -1000, 1013, 93091, 117346, 93091, -1000,
	-1000, 1713, -1000, 225, -1000, 129176, -1000, 129176, 117346, 93091,
	-1000, 1013, 117346, 1013, 117346, 1013, 117346, 1013, 1013, -1000,
	-1000, -1000, -1000, -1000, 105, -1000, -1000, 137461, -1000, 49252,
	-1000, -1000, 1597, 3796, 1718, -1000, 3038, -1000, 3033, -1000,
	25, -1000, -1000, 1976, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3795, 137461, -1000, 1967, -1000, -1000, -1000,
	-1000, 93091, 93091, 93091, 93091, 117346, 3340, -1000, 117346, 3337,
	93091, -1000, 3729, -1000, -1000, 83494, -1000, 2604, 3028, -1000,
	-1000, -1000, -1000, -1000, -1000, 1485, 2379, -1000, 2637, -1000,
	1642, -1000, -1000, -1000, 137461, 53884, -1000, -1000, 137461, 1912,
	-1000, 52147, 51568, -1000, -1000, 1798, 93091, 2695, -1000, 2695,
	-64, -1000, 134614, 2635, 93091, -1000, -1000, -1000, -1000, -1000,
	942, 1164, 1164, 1387, 1387, 1387, 1387, 3534, 709, 338,
	6172, 5227, 5227, 7498, 7498, 7498, 7498, 7498, 5227, 6064,
	591, 591, 6064, 6064, 6064, 6064, 6064, 591, 591, 591,
	5227, 5227, 5227, 591, 14397, 17409, 9455, 49252, 49252, 1292,
	2030, 542, 8971, 49252, 9722, 9722, 9722, 9722, -1000, 2097,
	-1000, -1000, -1000, -1000, 2970, 656, 53305, 53305, -1000, -1000,
	-1000, -1000, 27044, 49252, -1000, -1000, -1000, -1000, 37035, -1000,
	-1000, 133711, -323, 461, -1000, 224, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 460,
	-63, 11, -1000, 49252, 49252, 49252, 459, -1000, 222, 49252,
	117346, -1000, 130212, 784, -177, -1000, -93, 1461, -1000, 49252,
	-1000, -1000, 1288, -1000, 1285, 1284, 1283, -1000, 654, 457,
	-1000, 221, -1000, 2318, 652, 650, 49252, -1000, -1000, -1000,
	-1000, -1000, 133445, -1000, -1000, 133275, -1000, -1000, 133009, -1000,
	-1000, 132839, -1000, -1000, -1000, -1000, -1000, 137025, 129779, 129742,
	17472, 7050, 15938, 15009, -95, 456, -102, 454, 940, 939,
	450, 446, 443, -107, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -109, 442, -1000, 2967,
	-63, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 441,
	-1000, 440, -1000, 136855, -63, 439, 7312, -1000, 53305, 53305,
	53305, 53305, -1000, 436, -1000, 134348, -1000, 136589, 36456, 36456,
	36456, 435, 136419, 49252, -63, -110, -1000, -112, -1000, -1000,
	550, -115, 946, 35877, 56202, 25266, -1000, 946, 946, 49252,
	-1000, 49252, 2654, -1000, -1000, -1000, -1000, 2651, 2066, 2668,
	57362, -1000, -1000, -1000, -1000, 103233, -1000, 3668, 3005, -1000,
	103233, -1000, -1000, 117346, 516, -1000, 103233, 103233, 25266, 924,
	-1000, 924, 103233, 743, -1000, -1000, -1000, -1000, -1000, 434,
	65371, 11, 220, 25266, 1014, -1000, -1000, 2793, 2793, 2793,
	2793, 2793, 93091, -1000, -1000, 129176, 1282, -34, -122, 2803,
	-1000, 3638, -1000, 2167, -1000, 69330, -1000, 804, 1190, 25266,
	-1000, -1000, -1000, 648, -1000, 3679, 3679, -1000, 3679, 129176,
	2957, 187, 2802, -1000, 2406, -32, 157, 129176, 3794, -1000,
	-1000, 245, -1000, 93091, 245, 245, -1000, 93091, 93091, 2369,
	-1000, 248, -1000, 246, -1000, -1000, -84, -1000, 1022, 34140,
	-1000, 1855, -1000, -1000, 1614, -1000, 2108, -1000, 1443, -1000,
	-1000, -1000, -1000, 34140, -1000, 3504, 117346, 117346, 93091, -1000,
	101544, 117346, -1000, 2270, 129176, -1000, 2485, 122413, 2469, 121850,
	69330, -1000, -1000, 647, 951, 2633, 2632, 1102, 117346, 117346,
	2631, 121287, 120724, -1000, 3793, 117346, 2164, 49252, 3502, 2269,
	2722, 105, 105, -1000, 105, -1000, -1000, 645, 1423, 93091,
	93091, 117346, 129176, 93091, 2149, -1000, -1000, -1000, -1000, -1000,
	84057, -1000, -1000, 3698, 3695, -1000, 1425, -1000, -1000, -1000,
	1425, 1707, 2105, 117346, 129176, 93091, 129176, 120161, 119598, -1000,
	-1000, 1852, 117346, -1000, -1000, -1000, -1000, 1487, -1000, 843,
	1278, 2954, 49252, 49252, 2230, 105, 105, -1000, 105, 639,
	25266, 2112, -1000, 3066, 117346, 3724, 119035, 3722, 117346, 117346,
	117346, 129176, 3413, 117346, 117346, 129176, -1000, 118472, 8170, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2189, 74440, 1116, 117346, 1331, -1000,
	-1000, 1846, 1277, 1276, 83494, 2254, 1841, 1959, 129176, 60803,
	1010, 60803, 2744, -1000, -1000, 22956, -1000, 137461, 137461, -1000,
	137461, -1000, 72160, 76163, 117346, -1000, -1000, 1056, 117346, 77852,
	978, 3182, 65934, -157, 988, 76163, 93091, -33, 2687, 117346,
	-1000, -1000, 1707, 3178, 516, 2483, -1000, 129176, 3604, 3173,
	636, 3791, 3787, -1000, 93091, 2403, 2481, -1000, -1000, 117909,
	3288, 843, 117346, 946, 57362, 2053, -1000, 63670, 1073, 117346,
	1969, 143, -1000, -1000, -1000, 5, 117346, -1000, 814, -1000,
	-1000, 748, 748, 988, -259, 635, -1000, 904, 903, 61376,
	-117, -1000, 219, 623, 899, 897, -1000, 5070, -1000, -266,
	-1000, 76163, 1011, 60803, 2951, 2947, -1000, -1000, 1021, -1000,
	1516, 988, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -21, 1955, 117346, -84, -84, -47, -34,
	-1000, 1013, -1000, 1013, -1000, 1013, -1000, -1000, -1000, 137461,
	-1000, -1000, -1000, 1710, 1704, 117346, -1000, -1000, 117346, -1000,
	25266, 117346, 93091, 25266, 93091, 3020, 3017, -1000, -1000, -1000,
	117346, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1151,
	-1000, 1912, 2377, -1000, 622, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2562, -1000, -35, 32982, 926, -1000,
	-1000, 93091, -23, 49252, 49252, 8694, 8621, 49252, 53305, 53305,
	-1000, 49252, 8077, -1000, -1000, -1000, -1000, -1000, 2942, 619,
	49252, 69330, 5751, 5273, -1000, 432, 12593, 6064, -1000, 49252,
	-1000, 425, -1000, 429, 35298, -1000, 135250, -51, -123, -1000,
	18879, -63, -124, -1000, -1000, 803, -1000, 3284, -1000, 49252,
	136153, 2536, 2143, 1906, 1740, 3679, 3721, 22377, -1000, 67628,
	1035, 2351, 132573, -1000, -1000, -1000, -1000, 69330, 69330, 49252,
	49252, -1000, 49252, 49252, 49252, -1000, -1000, -1000, 3679, 930,
	-1000, -1000, -1000, 930, -1000, -1000, 1425, -1000, 1425, -1000,
	49252, -1000, -1000, 2941, 49252, -1000, 69330, 69330, 53305, 53305,
	53305, 53305, 53305, 53305, 53305, 53305, 53305, 53305, 53305, 53305,
	53305, 53305, 53305, 53305, 53305, 53305, 53305, 53305, 2667, 53305,
	3656, 3656, 3656, 997, -1000, 3015, 2941, 49252, 49252, 69330,
	428, 426, 424, -1000, 49252, -63, -1000, -1000, 6474, 618,
	-1000, 2551, -1000, 2886, -1000, 49252, -1000, -144, -1000, 2524,
	-1000, -1000, 2886, 2886, -125, 137461, 57362, 57362, -1000, 611,
	49252, 2650, -1000, -1000, 783, -311, -1000, 896, -1000, -1000,
	-1000, -1000, -1000, -1000, 894, -1000, 516, -1000, -1000, -1000,
	216, 103233, 103233, 782, -1000, -126, -1000, -1000, -131, -1000,
	3603, 423, 25266, -1000, 946, 2759, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2669, -277, 129176, 129176, 1837, 2371, 3720,
	-1000, 3694, 802, 781, 214, 3679, 420, 399, 398, -84,
	129176, 129176, 1801, 69903, 129176, -1000, -1000, -1000, 245, -1000,
	-1000, -1000, 241, -1000, -1000, -1000, -1000, 2735, -1000, -36,
	-1000, -1000, -1000, 49252, -1000, -1000, 3423, 610, 1274, 1272,
	-1000, -137, -1000, 893, 891, -1000, -1000, 2963, -1000, 3167,
	-1000, 2480, -1000, 1061, 2479, 1738, -1000, 49252, 603, 2730,
	602, 597, 3783, 2201, 3777, 1110, 3162, 2369, 3158, 2369,
	-1000, -1000, -1000, 948, -1000, 137461, 2269, -1000, 595, 594,
	-1000, -37, 1657, 556, 1271, 1020, -1000, -1000, 49252, 49252,
	102670, -1000, 484, 3427, -24, -1000, -1000, -1000, 1769, 1268,
	1266, -1000, -1000, -1000, -1000, 1707, 1763, 1265, 1264, -1000,
	-1000, -1000, -1000, -1000, 2475, -1000, -1000, 3151, 1019, -1000,
	3104, 3100, 934, 117346, 49252, 49252, 135968, 135686, -1000, 1018,
	-1000, -1000, 49252, -1000, -39, 1262, 3550, 2473, 93091, -1000,
	2369, 3148, 1257, -1000, 1256, -1000, -1000, -1000, 3549, 3548,
	1237, -1000, -1000, -1000, 76163, -1000, -1000, 73867, -1000, -1000,
	1072, 117346, 129176, 93091, 1811, -1000, -1000, 82368, 82931, 117346,
	2792, -84, 858, -1000, 2462, 858, 1010, 2940, -1000, 2662,
	-1000, 1016, 93091, 3773, 395, -138, -40, 69330, -1000, -1000,
	-1000, -1000, 2469, 93091, 117346, 1315, 2723, 117346, 117346, 3601,
	-1000, 2424, 612, 93091, 927, -1000, 3668, -1000, -1000, -1000,
	1015, -1000, 3521, 93091, 3600, 3144, 1014, 105, 93091, 3670,
	-1000, -1000, 3597, 93091, 3143, 2402, 2472, 2600, 843, 76726,
	1014, 2348, -53, -1000, 1969, 34719, 3424, -143, -1000, -1000,
	-1000, 946, 67064, 57362, 49252, 3767, -145, -1000, -1000, -1000,
	-1000, -1000, 100418, 100418, 76163, 76163, 76163, 988, 117346, 117346,
	3765, 76163, 76163, 76163, -45, 593, -1000, 890, 889, 883,
	-1000, -1000, -1000, -1000, -1000, -1000, 881, 878, 876, 1011,
	-1000, -1000, -266, 60803, 105, -1000, 2363, 93091, -1000, 21798,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1013, -157, -1000,
	-1000, -1000, 2237, 2436, 2237, 1942, 1939, -1000, -1000, 2376,
	-1000, -1000, -1000, -1000, 2696, 3409, 25266, 3540, 9722, 49252,
	49252, 7118, 2077, 1082, 9722, 49252, 49252, 69330, 11701, -150,
	49252, 49252, -1000, 49252, 780, 137461, -1000, 3716, 49252, 390,
	389, -1000, -1000, -1000, 3678, -1000, -1000, -1000, 137461, 49252,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 382, -1000, 213,
	-1000, -1000, -1000, 125791, -1000, 49252, 378, 3498, -1000, 377,
	376, 10685, 6379, 132403, 132137, 131967, 375, -1000, -1000, 369,
	367, 137461, 3015, 137461, -1000, -1000, 967, 967, 1404, 1404,
	1404, 1404, 3656, 1158, 2044, 1114, 637, 637, 637, 976,
	997, 997, 637, 637, 637, 997, 2937, 2670, 590, 6567,
	-1000, -1000, 137461, 137461, 366, -1000, -1000, -1000, -63, 365,
	6474, -1000, 2881, 3497, 137461, -1000, 57362, 2881, 2881, -1000,
	-1000, 2066, 117346, 137461, 57362, -1000, 3005, -1000, 20055, 19470,
	-1000, 25266, -1000, -1000, -1000, -1000, 3668, -1000, 65371, -1000,
	588, -1000, 133, -1000, 2759, -1000, 873, -1000, -1000, 76163,
	76163, 2793, -1000, 2895, -277, -184, 117346, -1000, -1000, 779,
	3764, 801, 25266, 363, -1000, -1000, -1000, -84, -84, 117346,
	2936, 93091, 117346, 1484, -84, -1000, -1000, -1000, 3374, 137461,
	117346, 117346, -1000, 101544, 34140, 34140, 1553, 102107, 117346, 3138,
	-1000, 3137, -1000, 1102, 5130, 131701, 57935, -1000, 57935, 117346,
	-1000, -1000, -1000, -1000, 1980, 1665, 3763, 1172, -1000, 3460,
	117346, -1000, 117346, -1000, -1000, -1000, 117346, 117346, 93091, 117346,
	-1000, 129176, 3119, -151, 137461, -46, -1000, 871, -1000, 1428,
	-1000, 21219, 117346, 129176, 93091, 117346, 129176, 93091, 3134, 117346,
	2283, -1000, -1000, 3098, -1000, 137461, 135516, 105, 49252, 3118,
	-158, 25266, -1000, 3715, 3709, 3133, 3466, -1000, 117346, 3708,
	117346, 93091, 3373, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1753, 1251, 1250, 2401, 2399, 2370, -47, 2254, 1010, -49,
	580, -1000, 870, -1000, -1000, 866, 863, 1010, -1000, 76163,
	60803, 3761, 516, -1000, 2719, -1000, 98160, 77852, 2337, -1000,
	-1000, 579, 117346, 117346, 577, -1000, 105, -1000, 3760, 101544,
	572, -1000, 2355, -1000, 778, -1000, 2597, 129176, 1707, 105,
	93091, -1000, 994, 516, 362, -50, -1000, 3220, 1086, 25266,
	93091, 3128, 2602, 843, 76726, -1000, 1424, 2690, -1000, -52,
	-1000, 684, 105, 2348, -1000, -53, 137461, -1000, 856, -1000,
	-160, -1000, -1000, 356, -1000, 3370, -1000, -1000, -181, -1000,
	-1000, 3341, 3341, 76163, 60803, 76163, 76163, 76163, 60803, -1000,
	1011, 858, -1000, 2477, -1000, -1000, -1000, -1000, -1000, 25266,
	1774, -1000, 566, 565, -1000, -1000, -1000, -1000, 3409, 9722,
	9722, 49252, 49252, 49252, 9722, 11701, -182, -1000, 9722, 9722,
	-63, -1000, -1000, 135250, -1000, -1000, -1000, 137461, -1000, 20640,
	2257, -1000, 131531, -1000, 32982, -1000, -1000, 49252, 49252, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53305, 2934, 564,
	69330, -1000, -1000, 351, 1033, 49252, 50989, 2524, 1033, 1033,
	-1000, -188, -1000, -1000, -1000, 3668, -1000, 3668, 133, -1000,
	-1000, 3759, 25266, -1000, 76163, -1000, -1000, -1000, 2366, -1000,
	-1000, 3101, -179, 711, -1000, 3758, -1000, -1000, 141, 129176,
	2933, 132, 2791, -1000, -1000, -1000, -1000, -1000, -1000, 2756,
	3596, -1000, 2052, -1000, 117346, 117346, -1000, 117346, -1000, 25266,
	117346, 2897, 1324, -1000, 951, 2630, 559, 53305, 1145, 93091,
	944, 2862, 2856, -1000, 3626, 3494, 2808, -189, -1000, 117346,
	49252, 117346, -190, -191, 2456, -1000, -1000, 1144, 1323, 49252,
	1123, -1000, -1000, -1000, 69330, 558, 2369, 2369, -196, -197,
	-1000, -1000, -1000, 49252, 1219, 117346, 33561, -1000, 3757, 3427,
	-1000, -1000, -1000, -1000, -1000, -1000, 117346, -1000, 117346, -1000,
	49252, -1000, 135065, 49252, 1216, -1000, -1000, -1000, 3706, 2369,
	25266, 2369, -1000, 2369, 3466, 1165, 117346, 129176, 93091, 1880,
	1880, 3010, -1000, -1000, -1000, 2642, 2642, 76163, 60803, 60803,
	-1000, -54, 1010, -1000, 3594, 2251, 3755, -1000, -1000, -1000,
	-1000, 2625, -1000, -1000, -1000, 117346, 2623, 2837, 57935, 555,
	554, 117346, 989, -1000, -199, 77852, 978, 932, -1000, -55,
	551, -1000, 853, -1000, -1000, -1000, -1000, 516, -1000, 2728,
	3589, -1000, 3705, 547, 546, 117346, 2397, 545, 25266, 3421,
	843, 76726, -1000, 3288, 1969, -1000, 2463, 117346, 3410, -1000,
	2690, 542, -1000, 988, 541, 988, -1000, -206, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -56, -1000, 938, 922,
	-1000, -1000, 93091, 93091, 49252, 49252, -1000, 9722, 9722, 9722,
	-1000, 339, -1000, -1000, 2348, 3487, -1000, -57, 131265, 131095,
	1045, 53305, 69330, -208, -1000, -1000, 117346, 137461, -60, -1000,
	137461, 539, 538, 477, -1000, -1000, -1000, 777, 744, -1000,
	-1000, -1000, -1000, 129176, 3751, -1000, 129176, -84, 129176, 129176,
	1717, 100981, 117346, -1000, -1000, 1738, 2346, -1000, -1000, -1000,
	117346, 2470, -1000, -1000, -1000, 1099, 49252, 6567, 53305, 537,
	49252, -1000, 536, 534, 3586, 3328, -1000, 2705, 2945, 2127,
	57935, -1000, 3409, -1000, 130829, -1000, 1080, 2070, -1000, -1000,
	-1000, -1000, 137461, 53305, 3466, 57935, -1000, -1000, 533, 532,
	137461, 531, 852, 2932, -1000, -1000, -1000, -1000, -1000, 137461,
	105, 137461, 527, 3550, -1000, -1000, -1000, -1000, 2369, 93091,
	-1000, -1000, -1000, 1214, -1000, -1000, -1000, -1000, 3750, 3749,
	2931, 82368, -1000, -209, -1000, -1000, -1000, 2092, 105, 978,
	-1000, -1000, 2337, 525, -1000, -1000, 2334, 2334, -214, 57935,
	57935, -215, 2384, 2721, -1000, 335, 3584, 932, -1000, 3664,
	-1000, 3347, 3347, 49252, 3581, 3366, -1000, 105, -1000, 3670,
	57935, -1000, 93091, 57935, 2396, 2146, 2582, 76726, -1000, 2600,
	-1000, -1000, -216, 117346, 1969, -1000, -1000, 76163, -1000, -1000,
	2477, -1000, 117346, -1000, 117346, -1000, -1000, -217, -223, -1000,
	2256, 49252, 32982, -1000, -1000, 1045, -225, -1000, -62, -1000,
	3565, 50989, 3745, 3744, 3741, -1000, -1000, -277, -1000, -84,
	-84, -84, 117346, -1000, 2048, -1000, 2469, -1000, -1000, 3120,
	2878, 130659, 6567, 2554, 117346, 130382, 1707, 1707, -1000, 3559,
	2930, -1000, -1000, 2230, 523, -1000, -1000, -1000, -1000, 926,
	117346, -1000, 2873, 93091, 6567, 1097, -230, 2237, 2237, 49252,
	32403, 2280, -1000, 49252, -1000, -1000, 3466, 129176, -1000, -1000,
	129176, 2391, -1000, 2915, 3667, -1000, 2384, 117346, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1080,
	-232, -237, -1000, -1000, 3453, -1000, 3344, 2719, 105, -1000,
	-1000, -1000, -239, 137461, 105, 3740, 994, 318, -245, 1086,
	-247, 93091, 2055, -1000, 843, -1000, 2602, 946, 3296, -1000,
	-248, -1000, -250, -253, -1000, -1000, 317, 50410, 50410, 50410,
	-63, -64, -1000, 117346, 517, -1000, -1000, -1000, -1000, -1000,
	118, -1000, -1000, 3094, 921, -1000, 908, 1982, 315, 1124,
	313, 13, -1000, -1000, -1000, 2808, -1000, 117346, -1000, -1000,
	920, 516, -1000, 49252, 1080, -256, -1000, 1071, -267, -1000,
	1057, -270, -1000, 2929, -1000, -276, 2369, -277, 240, 1880,
	992, 3533, -1000, -1000, -1000, 2568, -278, -1000, -1000, 2127,
	1080, 2230, 2555, -1000, 2251, 989, -1000, -1000, -1000, -1000,
	-1000, 1080, 515, 2127, 513, 1584, 843, -1000, -1000, 1425,
	3421, 3294, 1384, 988, -1000, -1000, -1000, 3224, -1000, 54463,
	2356, 1935, 134163, 3224, 3224, -1000, -1000, 129176, 117346, 3518,
	-1000, 910, 909, 1533, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 946, -284, 3515, 2554, 137461, -1000, -1000, 2237,
	2749, -1000, 2237, 2927, -1000, 2279, -1000, -1000, -1000, -1000,
	2917, -1000, 1777, 3649, -1000, -1000, -1000, 117346, 2230, 2127,
	985, 1904, 1902, 3737, 978, 2384, 2127, 57935, 2230, 57935,
	2181, -1000, 117346, -1000, 2146, 1336, -1000, 1662, -1000, -1000,
	2013, 3580, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -84,
	-1000, 851, -1000, 3316, -1000, 1122, 2182, 2182, -1000, -1000,
	847, 908, -1000, 511, -1000, 509, -1000, 129176, 2354, -1000,
	-1000, -1000, 985, 2230, 946, 506, -1000, 3736, -1000, 2384,
	-1000, 2230, -285, 985, -287, 2253, -1000, -1000, -157, 2055,
	-1000, 1647, 67064, 1930, -1000, -1000, 2347, 49831, 49252, -1000,
	3643, -1000, -1000, 2653, -1000, 49252, 2808, 49252, 49252, 240,
	64798, 946, 985, -1000, -1000, 2568, 985, 1080, 946, 2127,
	-1000, 843, 1584, 67064, -261, -1000, -1000, -1000, 137461, -1000,
	-1000, -1000, 137461, -1000, -292, -293, -1000, -259, 100418, -1000,
	946, -1000, 946, 2127, -1000, 2230, 129176, 2181, -261, -1000,
	2230, 1211, -295, -1000, -1000, 2230, 985, -1000, -1000, -1000,
	-1000, -1000, 478, -1000, 985, 946, 49252, 946, -1000, -312,
	-1000, 2230, -1000,
}

var sqlPgo = [...]int{
	0, 4610, 4607, 4606, 4605, 4600, 4598, 4595, 4593, 4592,
	4589, 4588, 4587, 150, 4586, 4579, 4577, 4576, 4572, 4571,
	4569, 4568, 4566, 4565, 4564, 4555, 4553, 4547, 4546, 4543,
	4542, 4541, 4540, 4539, 4538, 4537, 4535, 4534, 4532, 4529,
	4527, 4522, 4521, 4520, 4518, 4515, 4514, 4513, 4512, 4509,
	4505, 4504, 4502, 4500, 4498, 4495, 4494, 4493, 4491, 4489,
	4487, 4484, 4483, 4481, 4478, 4476, 4475, 62, 4473, 4471,
	4470, 4469, 4468, 4465, 4463, 4461, 4459, 4458, 4457, 4455,
	4451, 4447, 4446, 4445, 4443, 4442, 4439, 4438, 66, 4429,
	282, 4427, 4426, 4424, 4423, 4422, 4421, 4420, 4419, 4418,
	4416, 4413, 4412, 280, 4408, 140, 184, 4405, 4403, 3934,
	4400, 4398, 278, 4394, 4393, 4392, 4390, 4387, 294, 4386,
	4385, 4384, 4383, 4382, 4381, 4380, 4377, 4376, 4375, 4374,
	4373, 157, 217, 4372, 4371, 288, 4370, 4366, 4364, 4363,
	4361, 4359, 4357, 4353, 4351, 4347, 4345, 261, 173, 4344,
	276, 4343, 4342, 4341, 4339, 4337, 4336, 4334, 4332, 4330,
	4328, 4326, 4325, 4322, 4320, 4319, 4318, 4316, 4314, 4313,
	4311, 4308, 4305, 4303, 4301, 4300, 4299, 4298, 4297, 4294,
	4293, 4289, 4288, 4287, 4285, 4284, 4283, 4282, 4280, 4278,
	252, 216, 158, 4277, 4276, 271, 270, 4271, 4269, 4267,
	4266, 4265, 147, 20, 40, 4264, 4263, 91, 95, 93,
	114, 109, 106, 4262, 125, 4259, 143, 128, 113, 29,
	1, 255, 249, 10776, 242, 4256, 4254, 4252, 251, 203,
	4251, 246, 4249, 4244, 4238, 4237, 4236, 4234, 83, 54,
	188, 185, 181, 179, 98, 48, 107, 88, 63, 43,
	17, 108, 223, 16, 9, 267, 4233, 266, 13, 149,
	11, 30, 4232, 4231, 4228, 4224, 3802, 118, 4222, 269,
	237, 177, 4221, 4220, 4219, 366, 4217, 4216, 53, 4215,
	189, 87, 129, 28, 146, 4213, 167, 172, 45, 4211,
	245, 96, 4210, 4209, 97, 102, 9620, 5972, 4208, 4205,
	116, 79, 121, 3346, 169, 159, 208, 127, 174, 166,
	55, 214, 213, 190, 204, 4204, 259, 4203, 3578, 89,
	198, 164, 6074, 4200, 4199, 4197, 86, 4196, 110, 4195,
	4194, 73, 21, 3, 2, 154, 42, 41, 4, 4186,
	31, 132, 52, 26, 4181, 32, 4179, 4178, 4177, 4175,
	44, 4172, 49, 168, 4170, 4166, 287, 4165, 112, 56,
	65, 4161, 59, 222, 4158, 233, 139, 4157, 4155, 264,
	211, 197, 4154, 81, 230, 4153, 4152, 4151, 4148, 4147,
	4145, 148, 10, 142, 4144, 4142, 156, 4141, 60, 247,
	205, 4132, 77, 4131, 4128, 187, 57, 153, 285, 196,
	228, 131, 232, 201, 236, 4127, 4125, 4123, 239, 4122,
	4120, 226, 178, 4119, 4116, 254, 290, 90, 46, 74,
	235, 85, 200, 161, 4115, 210, 4114, 4108, 279, 192,
	221, 7, 12, 105, 115, 4107, 5, 238, 165, 240,
	134, 4104, 8261, 1790, 2594, 4103, 4102, 160, 135, 76,
	138, 163, 268, 101, 4101, 4098, 2811, 4097, 4094, 4093,
	4092, 193, 4089, 4087, 4086, 152, 207, 243, 4085, 94,
	72, 58, 23, 133, 286, 273, 130, 227, 186, 260,
	4084, 4083, 4081, 202, 4078, 70, 170, 171, 206, 256,
	67, 4076, 120, 4075, 162, 302, 78, 176, 4074, 225,
	4073, 4072, 4069, 4068, 4067, 4063, 4062, 289, 248, 4056,
	4055, 4054, 35, 199, 4053, 265, 191, 182, 111, 82,
	4051, 104, 3664, 4050, 122, 218, 64, 8, 4049, 51,
	4048, 2571, 61, 4045, 0, 13688, 10150, 12731, 13631, 4044,
	2524, 4041, 4032, 4030, 220, 84, 4025, 4024, 4016, 117,
	4014, 92, 4013, 4011, 80, 4010, 25, 19, 18, 33,
	27, 348, 281, 4008, 4006, 22, 144, 136, 4005, 274,
	229, 4003, 4001, 3997, 3996, 100, 3994, 36, 3993, 39,
	3990, 3988, 50, 14, 34, 3984, 3983, 155, 3981, 123,
	257, 3977, 180, 3976, 69, 145, 3975, 3974, 3970, 71,
	68, 263, 215, 219, 99, 3968, 291, 3965, 209, 3964,
	3963, 24, 3962, 3961, 250, 126, 119, 47, 253, 151,
	38, 183, 224, 3960, 3959, 175, 3958, 3957, 3953, 284,
	3949, 3948, 37, 3946, 3944, 3943, 15, 3942, 3940, 212,
	3290, 3939, 3938, 6, 3936, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 601,
	601, 601, 602, 602, 603, 603, 603, 24, 45, 17,
	18, 18, 18, 18, 604, 604, 604, 604, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 597, 597, 243, 243, 242,
	235, 235, 236, 236, 237, 237, 605, 605, 244, 244,
	244, 245, 245, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 496, 496, 496, 527, 527, 527, 527,
	529, 529, 624, 624, 625, 625, 625, 625, 625, 134,
	134, 394, 394, 394, 55, 55, 55, 55, 55, 592,
	592, 207, 207, 207, 209, 209, 208, 208, 208, 208,
	208, 79, 79, 611, 611, 610, 609, 609, 609, 612,
	612, 612, 206, 206, 206, 130, 130, 130, 130, 130,
	130, 131, 131, 132, 132, 210, 210, 210, 212, 212,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 216, 16, 16, 16, 113, 113, 113, 113,
	113, 113, 113, 108, 108, 531, 531, 532, 532, 201,
	201, 202, 202, 202, 202, 203, 203, 204, 204, 204,
	70, 70, 213, 213, 215, 215, 214, 214, 214, 214,
	214, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	58, 58, 58, 58, 58, 59, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 61, 61, 68,
	68, 68, 68, 68, 68, 68, 68, 192, 192, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 76, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 627, 627, 628, 628,
	629, 629, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 85, 85,
	354, 354, 317, 317, 86, 86, 86, 87, 87, 88,
	88, 72, 72, 590, 590, 370, 370, 487, 487, 73,
	598, 598, 598, 600, 600, 599, 599, 90, 90, 393,
	393, 91, 91, 91, 91, 91, 91, 92, 92, 92,
	92, 92, 92, 92, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 100, 100,
	100, 100, 100, 101, 101, 101, 98, 98, 98, 95,
	95, 95, 94, 94, 94, 99, 99, 99, 589, 306,
	306, 97, 97, 97, 96, 96, 96, 371, 371, 102,
	102, 102, 102, 318, 103, 103, 103, 103, 103, 103,
	103, 103, 106, 106, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 489, 489, 104,
	104, 104, 454, 454, 109, 109, 109, 409, 409, 110,
	110, 110, 110, 110, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 594, 594, 363, 363, 269,
	269, 269, 269, 122, 122, 122, 122, 123, 123, 123,
	124, 124, 197, 197, 140, 140, 140, 140, 139, 139,
	139, 139, 139, 139, 139, 139, 62, 62, 62, 63,
	63, 64, 64, 65, 65, 66, 66, 67, 67, 67,
	67, 67, 143, 143, 621, 621, 145, 142, 142, 142,
	142, 142, 141, 141, 144, 144, 144, 144, 146, 148,
	148, 148, 148, 148, 147, 147, 147, 147, 147, 149,
	149, 521, 521, 379, 379, 519, 519, 541, 541, 520,
	520, 324, 324, 324, 324, 324, 325, 325, 325, 530,
	530, 530, 530, 530, 530, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 198, 198,
	199, 200, 200, 200, 200, 200, 175, 175, 175, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	380, 380, 178, 178, 178, 162, 162, 151, 151, 151,
	151, 151, 151, 151, 156, 156, 156, 156, 156, 156,
	156, 156, 152, 152, 164, 164, 164, 164, 164, 157,
	157, 158, 158, 158, 159, 159, 159, 159, 185, 185,
	161, 161, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 153, 153, 153, 153, 166, 166, 166, 166, 416,
	416, 416, 190, 190, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	188, 188, 188, 188, 188, 188, 613, 613, 614, 614,
	614, 182, 182, 182, 182, 182, 182, 468, 468, 176,
	176, 176, 176, 181, 181, 181, 181, 184, 184, 184,
	184, 399, 399, 173, 173, 173, 174, 174, 174, 179,
	179, 180, 355, 355, 177, 177, 183, 183, 183, 183,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 155,
	155, 155, 155, 186, 186, 172, 172, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 631, 631,
	168, 168, 168, 167, 167, 167, 167, 170, 170, 171,
	171, 171, 171, 171, 171, 169, 160, 189, 591, 591,
	587, 587, 587, 587, 587, 587, 587, 587, 588, 588,
	588, 588, 593, 593, 114, 114, 114, 114, 114, 114,
	114, 125, 125, 125, 125, 125, 125, 125, 128, 128,
	115, 115, 115, 115, 115, 115, 115, 118, 118, 116,
	116, 116, 116, 117, 117, 80, 80, 80, 80, 80,
	15, 15, 15, 81, 81, 260, 260, 219, 219, 219,
	342, 342, 220, 220, 332, 332, 332, 332, 217, 217,
	218, 218, 82, 82, 632, 632, 632, 606, 606, 606,
	607, 607, 607, 607, 607, 607, 326, 326, 327, 327,
	434, 434, 434, 434, 434, 330, 330, 330, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 340, 341, 341,
	333, 333, 339, 338, 338, 337, 337, 336, 336, 334,
	335, 335, 335, 344, 344, 343, 346, 346, 345, 433,
	550, 550, 552, 552, 552, 552, 552, 552, 552, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 417, 417, 633,
	633, 634, 635, 548, 548, 548, 549, 544, 544, 545,
	545, 545, 545, 545, 328, 328, 329, 329, 329, 329,
	546, 547, 361, 361, 472, 551, 551, 553, 553, 555,
	636, 636, 636, 636, 636, 636, 637, 637, 637, 432,
	432, 431, 431, 431, 352, 352, 556, 556, 556, 556,
	557, 557, 557, 557, 557, 560, 559, 558, 558, 558,
	558, 558, 84, 84, 84, 396, 396, 395, 395, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 194, 194, 272, 272, 272, 78,
	78, 78, 12, 12, 12, 12, 12, 12, 12, 287,
	287, 13, 13, 13, 608, 608, 608, 83, 83, 83,
	83, 83, 83, 350, 350, 350, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	596, 596, 595, 595, 273, 273, 639, 639, 89, 89,
	89, 89, 89, 89, 89, 89, 490, 490, 491, 491,
	77, 77, 77, 77, 77, 418, 418, 415, 415, 414,
	414, 360, 360, 470, 470, 470, 471, 277, 277, 278,
	278, 238, 238, 238, 31, 30, 22, 22, 26, 26,
	27, 27, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 28, 28, 48, 48, 48, 48, 49, 49, 49,
	49, 52, 52, 53, 53, 47, 47, 47, 47, 50,
	50, 44, 44, 54, 54, 54, 54, 54, 615, 617,
	617, 616, 616, 620, 620, 620, 620, 620, 620, 618,
	618, 619, 619, 622, 622, 623, 623, 121, 121, 126,
	126, 126, 126, 126, 127, 127, 127, 127, 129, 129,
	129, 129, 138, 138, 193, 193, 193, 193, 193, 193,
	193, 56, 56, 56, 56, 69, 69, 69, 69, 136,
	641, 641, 641, 137, 137, 137, 640, 640, 270, 270,
	428, 428, 429, 429, 642, 642, 430, 430, 430, 430,
	430, 263, 262, 264, 264, 265, 265, 75, 75, 75,
	253, 253, 252, 254, 254, 255, 255, 250, 250, 533,
	533, 257, 257, 257, 258, 258, 246, 246, 247, 247,
	248, 248, 249, 249, 261, 261, 528, 528, 643, 643,
	112, 112, 112, 196, 196, 316, 316, 316, 425, 425,
	425, 353, 353, 284, 284, 427, 427, 427, 427, 427,
	392, 392, 392, 195, 195, 368, 368, 382, 382, 383,
	383, 484, 484, 384, 119, 119, 120, 120, 135, 135,
	223, 223, 221, 221, 221, 221, 221, 221, 221, 221,
	228, 228, 229, 229, 230, 230, 231, 232, 232, 232,
	232, 372, 372, 233, 233, 233, 222, 222, 222, 224,
	224, 224, 224, 224, 224, 224, 227, 227, 227, 227,
	234, 234, 234, 226, 226, 567, 567, 567, 569, 569,
	571, 571, 570, 570, 566, 566, 568, 568, 638, 638,
	398, 398, 398, 349, 351, 347, 347, 348, 348, 358,
	358, 356, 357, 357, 359, 359, 469, 469, 469, 239,
	239, 239, 389, 389, 389, 389, 390, 390, 421, 421,
	419, 419, 419, 419, 420, 420, 422, 422, 422, 423,
	423, 424, 424, 386, 386, 387, 387, 388, 388, 388,
	388, 450, 450, 225, 225, 225, 365, 365, 365, 366,
	366, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 441, 441, 439, 439, 439, 439, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 474, 475, 475,
	367, 367, 476, 426, 426, 585, 585, 585, 586, 586,
	467, 467, 477, 477, 477, 477, 477, 477, 465, 465,
	466, 466, 485, 486, 486, 402, 402, 402, 402, 400,
	400, 403, 403, 403, 403, 403, 401, 401, 478, 478,
	478, 478, 391, 391, 479, 479, 479, 479, 480, 481,
	481, 482, 482, 435, 436, 436, 492, 492, 492, 492,
	494, 364, 364, 364, 364, 364, 543, 542, 542, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	509, 509, 509, 509, 509, 509, 509, 495, 495, 495,
	495, 495, 499, 499, 499, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 500, 500, 505, 505,
	506, 506, 506, 501, 502, 507, 507, 507, 507, 644,
	644, 511, 511, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 497, 497, 497, 504, 504, 504, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 410, 410, 412, 412, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 444, 444, 444, 444,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 561, 561, 561, 561, 561,
	561, 561, 561, 446, 446, 564, 564, 565, 565, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	572, 572, 573, 573, 575, 575, 576, 576, 577, 578,
	578, 578, 579, 580, 580, 574, 574, 581, 581, 581,
	581, 582, 582, 583, 583, 583, 583, 583, 584, 584,
	584, 584, 584, 456, 456, 457, 457, 463, 463, 463,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 323, 323, 322, 274, 274,
	274, 274, 274, 274, 377, 377, 375, 375, 375, 378,
	378, 376, 376, 374, 374, 373, 373, 453, 453, 451,
	451, 455, 455, 404, 404, 510, 510, 510, 510, 510,
	510, 510, 510, 405, 405, 405, 413, 406, 406, 407,
	407, 407, 407, 407, 447, 448, 408, 408, 408, 449,
	449, 458, 462, 462, 461, 460, 460, 459, 459, 437,
	437, 438, 438, 385, 385, 645, 645, 381, 381, 483,
	483, 483, 483, 320, 320, 369, 369, 319, 319, 311,
	311, 312, 312, 312, 312, 362, 362, 464, 464, 512,
	512, 513, 513, 514, 514, 515, 515, 516, 517, 518,
	452, 452, 295, 294, 281, 282, 293, 292, 291, 280,
	283, 288, 289, 290, 285, 286, 302, 301, 300, 251,
	256, 307, 308, 308, 310, 310, 309, 309, 297, 298,
	299, 488, 279, 313, 313, 314, 314, 314, 315, 315,
	315, 315, 275, 275, 276, 276, 303, 303, 304, 305,
	305, 296, 296, 296, 266, 266, 266, 267, 267, 268,
	268, 526, 526, 523, 523, 523, 524, 524, 524, 525,
	525, 525, 525, 522, 522, 522, 522, 522, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 535, 535,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 537, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 540,
	540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 4, 2, 1, 1, 3, 1,
	3, 2, 4, 3, 2, 3, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 6, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	1, 3, 1, 3, 6, 4, 6, 7, 9, 6,
	2, 2, 3, 0, 8, 6, 8, 7, 2, 0,
	1, 2, 5, 0, 1, 3, 3, 1, 1, 3,
	3, 12, 3, 1, 1, 2, 1, 4, 0, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 4, 3, 6,
	6, 6, 6, 6, 8, 4, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 4, 3, 3,
	4, 3, 4, 4, 4, 3, 5, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 4, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 7,
	2, 5, 0, 1, 3, 3, 1, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 7, 4, 7, 8, 8, 9,
	11, 5, 2, 6, 9, 4, 7, 7, 10, 7,
	10, 10, 13, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 3, 2,
	2, 6, 3, 3, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 2, 1, 3, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 3, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 4, 6, 4, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 5, 3, 5, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	3, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 3, 4,
	5, 4, 4, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 3, 2, 5, 4, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 1, 2, 0, 1, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 3, 3, 6, 5, 8, 3,
	6, 6, 3, 12, 15, 1, 0, 1, 2, 3,
	0, 2, 0, 4, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 2, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 0,
	1, 0, 1, 1, 0, 1, 4, 1, 0, 3,
	7, 7, 1, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 2, 2, 2, 4, 8, 4, 2, 3, 5,
	5, 5, 2, 5, 5, 2, 2, 2, 0, 1,
	1, 3, 4, 10, 11, 9, 5, 3, 1, 5,
	9, 6, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 2, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	8, 11, 5, 4, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 11,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	16, 19, 15, 18, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 2, 4, 2, 3, 1, 0, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	5, 7, 2, 6, 7, 4, 4, 5, 2, 4,
	6, 6, 8, 6, 7, 8, 9, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 6, 8, 8, 4, 7, 3,
	0, 7, 10, 1, 1, 1, 1, 2, 2, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 14, 16, 3,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 610, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 391, 437, 449, 406, 143, 428, 411,
	-144, -145, 467, -56, -69, -137, -136, 73, 130, 421,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -626, 102, -568,
	-93, -96, -129, -630, 164, 224, -115, -116, -117, 373,
	-123, -124, 430, -126, -127, -128, 433, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 472, -180, -189, -158, 533, 49, 488,
	82, 148, 441, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -567, -94, -95, -98, -100, -101, -97, -99,
	429, -224, -222, 607, 548, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 570, 579, -227, -225, -226, -234, 459, 556,
	508, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, -318, 2, -297, -303, -304, -305, -296,
	-266, -537, -540, 4, -534, -538, 171, 234, 336, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 334, 329, 330, 331, 323, 324,
	320, 325, 321, 322, 326, 327, 333, 328, 338, 339,
	340, 343, 221, 345, 346, 349, 367, 353, 354, 355,
	358, 359, 362, 365, 366, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 378, 379, 381, 382, 383, 385,
	386, 387, 389, 391, 392, 394, 395, 397, 398, 399,
	400, 401, 402, 403, 405, 406, 408, 407, 409, 411,
	413, 414, 415, 421, 428, 422, 424, 425, 426, 427,
	429, 430, 431, 432, 433, 435, 436, 437, 439, 440,
	441, 442, 443, 445, 447, 448, 452, 453, 469, 470,
	490, 449, 450, 451, 454, 455, 456, 457, 458, 462,
	460, 461, 463, 464, 465, 467, 468, 471, 472, 474,
	475, 476, 477, 478, 479, 480, 483, 485, 486, 487,
	488, 507, 489, 491, 495, 496, 497, 498, 492, 493,
	506, 500, 501, 503, 504, 509, 510, 511, 512, 513,
	514, 515, 516, 518, 526, 527, 528, 530, 533, 534,
	535, 536, 524, 538, 539, 542, 543, 544, 547, 545,
	546, 548, 550, 553, 554, 555, 561, 560, 562, 563,
	565, 566, 571, 572, 574, 575, 576, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 125, 126, 155,
	167, 168, 180, 195, 196, 208, 210, 218, 219, 220,
	241, 242, 244, 249, 271, 342, 344, 360, 364, 380,
	384, 388, 390, 404, 444, 481, 494, 499, 519, 520,
	521, 522, 529, 531, 556, 557, 558, 564, 573, -318,
	2, -297, 351, -290, 2, -266, -266, 391, 28, 2,
	28, 379, 461, 511, 513, 2, -594, -363, 2, 28,
	-269, -266, 102, 206, 459, -290, 2, -594, 206, -363,
	25, 2, -266, 2, 365, 22, 27, 66, 77, 98,
	141, 166, 189, 192, -629, 367, 398, 447, 463, 506,
	516, 530, 2, 560, 292, 460, 508, 234, 120, 535,
	454, -608, 452, 453, 365, 396, 439, 209, 549, -270,
	2, 449, -266, 292, 2, 610, 94, 74, 444, 464,
	-147, 2, 282, 527, -148, -149, -146, 519, -521, 454,
	439, 314, -266, 610, 610, 610, 28, -279, -266, 508,
	234, 454, 120, 504, 610, 2, 508, 370, 560, 460,
	120, 401, 234, 535, 192, 141, 27, 454, -608, 584,
	585, 292, 127, -592, 2, -587, 4, -538, -534, -312,
	-311, 508, 514, 120, -305, -296, 599, -304, 610, 610,
	610, 610, 2, 252, 253, 400, 399, 464, 465, 28,
	610, 610, 610, 610, 452, 2, 166, 22, 27, 66,
	93, 98, 127, 189, 192, 356, -627, 367, 398, 463,
	506, 510, 516, 530, -607, 489, 68, 427, 454, -606,
	-608, 292, 535, 141, -414, 120, 282, 204, 543, 513,
	511, 541, 133, 240, 546, 545, 610, 610, -106, 2,
	607, 32, 31, -105, -109, 143, 467, -216, 508, 245,
	2, -266, 610, 610, 610, 2, 252, 253, 452, 453,
	28, 610, 610, 190, -587, 2, 610, 610, 610, 2,
	28, 252, 253, 452, 453, 245, 2, 68, 456, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 2, -191, 464, 489, 215,
	47, 46, 74, 28, 397, 79, 371, 121, 127, 150,
	536, 207, 234, 235, 260, 93, 94, -416, 44, 253,
	68, 252, 453, -613, 452, -468, 509, 455, 461, 503,
	264, 449, 527, 102, 550, 440, 576, 401, 402, 501,
	415, 283, 159, 191, 4, 120, 314, 439, 466, 268,
	267, 519, 282, 448, 374, 84, 610, -638, 2, 508,
	-640, 2, 527, 527, 2, -640, 2, -640, 2, -640,
	2, -641, 527, 573, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, -222, -224, -223, 610, 610, 610, 610, 610,
	610, 610, -191, 464, 2, 74, 28, -356, -358, 540,
	243, 152, 357, -221, -223, 2, -567, -519, 2, -442,
	-541, -444, 597, 598, 590, 505, 67, -322, 335, 577,
	-456, 127, 541, 351, -540, -445, -458, 155, 367, 444,
	-378, 8, 9, 5, 6, 7, -275, -446, -452, 532,
	170, 341, -315, 611, 10, 607, -564, -223, -457, 37,
	210, 65, -523, -314, -276, -495, 244, -313, -296, -561,
	-562, 4, -534, -535, -524, -498, -506, -502, -503, -509,
	-266, -537, 77, 111, 112, 110, 115, 114, 285, 284,
	116, 113, 466, 549, 66, 36, 218, 219, 249, 342,
	220, 75, -563, 142, -536, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 54, 557, -507, 122, 519,
	520, 521, 522, 195, 196, 58, 167, 168, 364, 388,
	499, 529, 531, 208, 271, 43, 106, 191, 239, 222,
	248, 250, 254, 272, 275, 315, 332, 337, 361, 363,
	438, 473, -644, 558, 494, 69, 70, -569, 407, -570,
	-290, -569, 610, 610, 612, 610, -347, -349, -351, 2,
	28, 139, 607, 2, -473, 2, -474, -478, -223, 265,
	-477, 607, -475, 605, -297, 352, -565, 445, -561, -562,
	-275, -296, -314, 4, -534, -536, 609, -352, 607, 120,
	454, 508, 78, 234, 93, 166, 192, -409, 607, -266,
	28, 351, 523, 612, -348, 395, -454, 607, 351, 354,
	190, 354, 60, 296, 2, 2, 2, 2, 2, 218,
	-266, 508, 119, 2, 263, 2, 2, 2, 2, 2,
	2, 2, -371, 218, 2, -297, 560, -371, 218, 2,
	-371, 218, 2, -415, 2, 87, -280, 218, 2, -266,
	-306, 218, 2, -301, -303, -310, 218, 2, -308, -266,
	-529, 218, 2, -527, 4, -534, 116, 466, -442, 2,
	-135, 2, 60, -266, 560, 2, 469, 2, 607, -147,
	2, 71, 527, 43, 464, -148, 2, -429, 2, -430,
	-262, -263, -264, -485, -265, 251, 394, 403, 580, 131,
	335, 576, -621, 190, 589, 523, -519, -519, -519, -379,
	609, 2, 2, 2, 2, 2, 2, -478, 218, -297,
	2, -294, -522, 4, -534, -538, -535, -539, -537, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 127, 131, 135, 139, 140, 144,
	148, 152, 170, 172, 185, 189, 190, 206, 209, 212,
	225, 238, 243, 245, 265, 269, 276, 284, 285, 335,
	341, 347, 351, 352, 356, 357, 377, 393, 410, 434,
	459, 466, 484, 502, 508, 517, 523, 525, 532, 540,
	541, 549, 551, 559, 567, 568, 569, 570, -540, 77,
	2, -478, 218, 2, -300, 218, -478, -303, 2, -280,
	2, -442, -601, 515, 162, 422, 2, -319, 218, -297,
	-299, -303, -301, 2, 2, 2, 2, -308, 2, -527,
	218, 2, 28, 28, 560, 395, 245, 523, 612, -369,
	-311, -312, -518, 8, -362, -266, 609, -442, 2, -135,
	-118, 2, 185, -442, 218, 2, -135, 218, 2, -442,
	218, 2, -135, 218, 2, -266, 2, -609, 2, -531,
	218, -526, 10, -525, 5, 4, -534, -538, -535, 218,
	-266, 2, 296, 2, 2, 530, 2, 98, 508, 119,
	2, 426, -628, 447, 534, 2, 2, 2, 2, 2,
	2, 2, 508, -285, 2, -266, 185, 492, -308, 218,
	-309, 2, 460, -639, 407, -527, 218, 2, 560, -301,
	218, 2, -301, 234, 247, -280, 218, 2, 513, 511,
	513, 511, 190, 2, 245, 2, 245, 2, -479, 2,
	-480, -474, -481, 605, 352, -489, 2, -488, -525, 556,
	-106, 607, -106, 607, 464, 607, -531, -297, -297, -442,
	2, -135, -118, 2, -442, 2, -135, 2, -266, 2,
	-132, -531, -131, 607, 190, -266, 2, -442, 2, -135,
	-118, 2, -442, 2, -135, 2, -216, 185, 2, 120,
	508, -191, 2, 185, 551, 2, 8, 2, 225, -531,
	455, 402, 177, 2, 469, 2, 470, 74, -416, 576,
	74, 190, 2, 190, 2, -399, 2, 570, 395, 190,
	2, 2, -591, 2, 351, 190, 2, 190, 2, 190,
	2, 190, 2, 190, 2, -190, 465, 528, 507, 399,
	253, 2, -135, 567, -118, 253, 252, -442, 567, 2,
	-614, 185, 453, -442, 2, 526, 262, 160, 190, -399,
	2, 190, 2, 190, 2, 5, 2, 400, 490, 2,
	251, 394, 490, 2, -297, 508, 560, 460, 120, 28,
	2, 452, 2, 2, 88, 89, 190, 2, 190, 2,
	205, 190, 2, 190, 508, -380, 609, 576, 2, -391,
	-478, -428, -429, -428, 523, -356, -358, -191, 469, 2,
	-228, -389, -230, 185, -419, -420, -231, 276, 172, 347,
	-232, -398, 28, 139, -398, -398, 60, 608, 608, 11,
	12, 76, 41, 597, 598, 599, 600, 183, 601, 602,
	595, 596, 594, 587, 588, 592, 257, 258, 95, 591,
	589, 86, 290, 446, 173, 174, 175, 176, 423, 232,
	34, 233, 14, 15, 16, -322, 33, 356, 275, 577,
	222, 473, 590, 17, 18, 19, 248, 250, 337, 50,
	225, -274, 367, -321, 505, 67, -442, -442, -442, -442,
	-442, -442, -442, -442, 363, 607, -385, -437, 605, -223,
	607, 607, 607, 607, -518, -223, -442, -456, 608, -376,
	607, -223, -456, -451, 607, 444, 605, 607, -459, -442,
	5, 5, 5, 607, 609, -572, 571, 185, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 390, -500, 607, -499, 607, -499,
	-499, 561, -497, 607, 579, 572, 607, -497, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 561, 612, -569, -352, 607, -381, -483, -442, 599,
	-381, -381, 351, -373, -442, 106, -402, 254, 315, 191,
	272, 438, 239, -439, 611, -439, -467, 579, -223, -475,
	-296, -223, -477, 607, -473, -467, -107, -518, -90, -103,
	-112, -135, -150, -195, -196, 599, -297, 607, 190, 607,
	609, -522, 190, -362, -280, -307, -266, -297, -313, -314,
	-319, -291, -266, 2, 2, 138, -373, -587, 535, 454,
	28, 460, -529, -269, 38, -453, -492, -493, -543, 611,
	-542, -495, -505, -501, -504, 380, 384, -524, 54, 557,
	-507, 244, 4, -534, -536, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 519, 520, 521, 522, 195,
	196, 58, 558, 494, 69, 70, -587, 535, 454, 28,
	460, 185, -529, 185, -529, 2, 2, 155, 2, 2,
	2, -266, -244, 612, 64, 431, 155, -371, 218, -244,
	155, -244, 155, -320, 218, -319, -244, 155, -244, 612,
	155, -244, 612, 155, 609, 612, 155, -529, 2, -415,
	-521, -373, 38, -429, 2, 127, 4, 5, -642, 612,
	274, -325, 289, 334, 214, 352, 574, 345, 131, -530,
	5, 4, -452, -464, 127, 282, 244, -512, -514, 8,
	-513, 9, -515, 597, 598, -520, -519, 109, 609, -522,
	-241, 424, 467, 366, -240, 24, 29, 143, 236, 319,
	554, 161, -337, 237, -334, 370, 155, 485, 544, -601,
	-604, 451, 515, 162, 422, 90, 345, 467, 366, 424,
	155, -395, -397, 38, 118, 319, 365, 61, 228, 294,
	295, 488, 564, 155, 467, 366, 424, 366, -13, -255,
	24, 143, -257, -252, 467, -604, 99, 424, 583, 429,
	376, 500, 393, -604, -601, 270, -603, 566, 333, -243,
	485, 544, -601, -604, 451, 424, -242, -339, -334, 370,
	155, 611, 24, 143, 424, 467, 366, -624, -625, 29,
	424, 366, -595, -287, -566, 225, 570, 155, -287, -287,
	-478, 218, -618, 185, 2, -611, -131, 266, 5, 10,
	-531, -131, -369, 612, 612, -522, 599, 453, 452, 155,
	155, 155, 155, 253, 185, 335, 335, 570, 2, 2,
	2, 2, 2, 192, -606, -629, 2, 2, -297, 218,
	-354, 351, -590, -370, 508, -297, 185, 335, 43, -300,
	218, 2, -303, 560, -595, 335, -302, 218, -297, 38,
	607, 335, 2, -415, 2, 234, -566, 335, -479, -316,
	-297, -474, -316, 467, -290, 38, -439, -297, 608, 612,
	-489, -489, -531, -204, 570, 190, 607, -216, 570, 570,
	253, -486, 612, -485, 225, -532, -531, -132, -531, 427,
	253, -531, -590, -280, 2, -297, 2, 508, 255, -531,
	-204, 225, -531, -531, -531, -521, 28, 470, 2, -190,
	465, 528, 89, 470, 2, -297, 508, 120, 234, 80,
	-618, 185, 2, -266, -593, 185, -588, 439, 454, 535,
	-587, -297, 120, -297, 120, -297, 120, -297, -297, 2,
	2, 2, 2, 2, 85, 2, -135, -442, 2, 85,
	2, 46, 486, -614, 185, 2, 526, 2, 526, 2,
	-266, -266, -266, 489, 274, -297, -297, -297, -298, -303,
	455, 509, 536, 453, -442, 2, -631, 2, 190, 185,
	2, 508, 234, 508, 234, 120, 190, 74, 120, 28,
	508, 450, 609, 4, -244, 612, -270, -228, -389, -521,
	-390, -389, -229, -228, -231, 185, 403, 545, 319, 471,
	259, -420, -419, 28, -442, -424, 179, 318, -442, -422,
	-444, 597, 598, -513, -515, -372, 345, -222, -222, -222,
	-359, -469, -442, 393, 234, -494, -492, -492, -295, -522,
	519, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, 275, 222, 473,
	50, 225, -442, 523, -442, -442, -442, -442, 312, 335,
	341, 532, 170, 542, 139, 345, -645, 502, 40, -449,
	-223, -377, 607, -463, 35, 484, 28, -456, 607, 2,
	-437, -442, -438, -323, -321, -266, 597, 598, 599, 600,
	601, 602, 587, 588, 589, 14, 15, 16, 592, 596,
	594, 595, 183, 95, 591, 290, 446, 86, 173, 174,
	175, 176, 257, 258, 17, 18, 19, 34, 590, -374,
	-373, -373, 608, 559, 28, 139, 599, 2, 608, 612,
	38, 608, -442, -374, -455, -451, -373, -462, -461, 567,
	-410, -411, 575, 299, 123, 216, 297, -412, 458, -516,
	8, -522, 599, -573, 178, 209, 607, 608, 2, 608,
	2, 608, -442, 2, 608, -442, 2, 608, -442, 2,
	608, -442, 2, 608, 2, 608, 2, -442, -442, -442,
	-442, -442, -442, -442, -373, 8, -516, -516, 519, 519,
	-516, -516, -516, -508, 380, 381, 382, 383, 277, 278,
	279, 280, 384, 385, 386, 387, 304, 305, 306, 307,
	300, 301, 302, 303, 308, 309, 310, 311, 200, 201,
	202, 203, 196, 197, 198, 199, -508, -404, 2, -510,
	-373, 4, 575, 299, 123, 216, 297, 458, 5, -404,
	2, -405, 2, -442, -373, -406, -443, -444, 597, 598,
	590, -322, -456, -407, 2, -442, -374, -442, 57, 269,
	525, -408, -442, 190, -373, -373, 2, -373, 2, -570,
	38, -373, -365, 612, 190, 38, 4, -365, -365, 607,
	608, 612, -403, 213, 293, 288, 247, -403, -473, -402,
	254, -400, 361, -400, -400, -467, -281, 605, 613, -522,
	-467, -466, -465, 38, -290, 358, -467, -467, 609, 608,
	-466, 606, -585, 607, 610, 610, 610, 610, 610, -297,
	607, -373, -522, 609, 491, 2, 608, 248, 248, 248,
	248, 248, 351, 445, 608, 523, -589, -306, -310, 509,
	2, 570, -105, 353, 608, 612, -364, 37, 605, 609,
	-516, 2, 2, -511, 561, 607, 607, -411, 607, 190,
	-589, -310, 509, 2, -594, -363, -363, 523, -266, 2,
	-297, -371, -244, 155, -371, -371, -244, 612, 155, -280,
	-301, -306, -308, -310, -266, -527, -529, -244, -302, -621,
	608, 527, -430, -324, 403, 483, 425, 462, 504, 8,
	9, 8, 9, 612, -522, 612, -622, 93, 523, 78,
	607, 454, -259, 283, 523, -433, 218, 78, -544, 93,
	-283, -545, -266, 72, 541, 393, 189, 153, -622, 93,
	393, -622, 93, 2, 236, 93, 467, 489, 28, 60,
	-478, 41, 41, 28, -602, -603, 270, 190, 576, 508,
	234, 454, 523, 523, -478, -397, -492, 118, 294, 295,
	60, -517, -512, 597, 598, -517, 60, -517, -517, -517,
	570, -300, -478, 454, 523, 523, 523, 413, 413, -252,
	-148, 523, 523, 28, -191, 432, 127, -643, 589, 413,
	270, -603, 523, 190, 612, 41, 41, 28, -602, 190,
	523, -319, -281, 555, 42, 555, 42, 555, 523, 42,
	454, 523, 612, 42, 523, 523, -13, 467, -596, -271,
	105, 325, 287, 326, 97, 322, 96, 321, 103, 323,
	104, 324, 562, 338, 563, 339, 63, 320, 298, 327,
	487, 328, -272, -273, 146, 372, 553, 120, -527, -13,
	-13, 467, 366, 424, 155, -619, 225, 28, -608, 225,
	-486, 225, -486, -311, -266, 609, -135, -442, -442, -135,
	-442, -135, 46, 155, 155, 2, 2, -639, 263, 607,
	-328, 335, 190, -362, -487, 245, 612, -370, -587, 155,
	-527, -396, -395, 335, -302, 218, 2, 155, -352, 335,
	149, 607, 401, 2, 155, -282, 218, -267, -266, -415,
	-246, 512, 155, -393, 551, -425, -135, 607, 127, 38,
	-425, -382, -383, -484, -384, -283, 607, -290, -439, -106,
	-488, 608, 608, 608, -203, 355, -202, -266, 5, -216,
	-353, -284, -283, 119, 405, 405, -210, 570, -131, -132,
	608, 612, -486, 225, 492, -204, -204, -486, -486, -297,
	185, -531, -204, -204, -204, 2, 2, 2, 2, -399,
	-297, -280, -319, -297, 28, 609, -529, -529, -310, -306,
	-399, -280, -399, -280, -399, -280, -399, -399, -135, -442,
	489, 2, 464, 185, 185, 609, -399, -355, 434, 2,
	401, 120, 508, 370, 234, -297, -319, -297, -319, -280,
	120, -280, 121, -297, 4, -478, -390, -229, 352, 259,
	471, -422, -423, -444, 444, 445, -423, 444, 445, 8,
	9, 8, 9, -233, 475, 340, -371, 612, -238, 39,
	135, 259, -297, 576, 151, -442, -442, 523, -645, 502,
	-449, 151, -442, 312, 341, 532, 170, 542, 139, 345,
	190, 607, -443, -443, 608, -375, -442, -442, 606, 615,
	608, 609, 608, -358, 612, -356, -442, -373, -373, 608,
	609, -373, -362, 606, 606, 612, 608, -460, -461, 144,
	-442, 523, 523, 523, 523, 607, 608, 609, -578, 362,
	607, 607, -442, 608, 608, 608, 608, 38, 612, 612,
	612, 608, 612, 612, 612, 608, 608, 608, 612, 608,
	576, 576, 608, 608, 608, 608, 612, 608, 612, 608,
	190, 608, 608, -413, 377, 608, 11, 12, 597, 598,
	599, 600, 183, 601, 602, 595, 596, 594, 587, 588,
	589, 86, 290, 446, 14, 15, 16, -322, 248, 225,
	-443, -443, -443, -443, 608, -447, -448, 190, 185, 38,
	-408, -408, -408, 608, 190, -373, 608, 608, 607, -571,
	292, 335, 608, -436, -435, 568, -483, -366, 2, -473,
	-292, -522, -436, -436, -373, -442, 254, 254, -401, 551,
	351, -403, -473, -466, -518, -441, -440, 187, 39, 135,
	329, 330, 331, 221, 188, -466, -290, -352, -466, -466,
	-522, -467, -467, -465, 608, -586, -518, 608, -367, -476,
	-565, -358, 609, -522, -213, -566, -192, 5, 341, -192,
	-192, -192, -192, -297, -529, 523, 523, 225, 25, 378,
	-492, 605, 606, 8, -522, 607, -516, -516, -516, -529,
	190, 190, 225, 351, 190, -527, 2, -244, -371, -244,
	-244, -319, -320, -244, -244, -244, -394, 570, -519, -429,
	539, 83, 403, 519, -519, -240, 424, 467, -283, -283,
	-297, -218, -217, -266, 5, -307, 204, 414, -527, 335,
	-433, 218, -245, 335, 218, -291, -492, 607, -417, 572,
	259, 259, 551, -283, -291, 259, 218, -283, 218, -291,
	2, -291, -597, 403, 346, -442, 60, -335, 281, 401,
	336, -241, 424, 467, 366, -135, -135, -135, 607, -621,
	551, 138, -297, -319, -297, -307, -527, -302, 467, 366,
	424, 332, -313, -517, -517, -395, 467, 366, 424, -307,
	-527, -300, -527, -251, 218, -266, -251, 218, 454, -280,
	413, 576, 45, -643, 523, 190, -442, -442, -242, -135,
	-135, -135, 607, -281, -243, 424, 5, 218, -283, 5,
	-283, 218, 5, -266, -283, -307, -527, -625, 24, 143,
	-283, -307, -527, -271, 372, -531, 341, 547, -280, -595,
	-287, 454, 523, 523, -478, -615, -616, 206, 437, 454,
	440, -529, -131, -207, 570, -131, -201, 229, 599, -592,
	-531, -266, 560, -266, -326, -329, -327, -283, -434, -433,
	-548, -549, -544, 275, 234, 541, 247, 171, 93, -219,
	-220, 572, 570, 155, -317, -297, 605, -204, -531, -297,
	-487, -308, -309, 155, -352, 335, -527, 38, 155, 607,
	2, 2, -301, 351, 335, -282, 218, -247, 145, -643,
	-280, -436, -366, -392, -427, 434, 351, -353, 556, -290,
	-392, -368, 612, 190, 589, 609, -353, -482, 599, -106,
	-106, -204, 612, 607, 589, 589, 607, -531, 608, 612,
	609, 607, 589, 589, -212, 355, -211, 147, 261, 246,
	477, 478, 479, 480, 137, 476, 124, 317, 230, -486,
	-531, -210, -132, 190, 190, -65, 570, 508, -204, 611,
	440, -266, -399, -399, -399, 464, 464, -266, -362, -293,
	-522, -280, -297, -294, -319, 185, 185, -280, 545, -423,
	352, 286, -469, -239, 578, -297, 611, -442, -442, 151,
	151, -442, -443, -443, -442, 151, 190, 607, -442, -453,
	33, 33, 608, 612, -438, -442, -321, 608, 559, -358,
	-358, 608, 599, -522, 611, 608, -451, 148, -442, 517,
	299, 216, 297, -412, 297, -412, -412, -516, 5, -522,
	599, -579, -286, 607, -266, 568, -357, 357, 608, -494,
	-492, -442, -442, -442, -442, -442, -516, -497, -497, -512,
	-512, -442, -447, -442, -494, -492, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, 139, 335, 345, -443,
	-448, -447, -442, -442, -492, 608, 608, 608, -373, -105,
	607, 292, -386, 209, -442, -486, 612, -386, -386, 608,
	-473, -473, 607, -442, 254, 606, 612, 614, 589, 589,
	-352, 609, -465, -466, 606, 608, 612, 608, 612, -426,
	38, 608, -522, -436, -215, -214, 136, 53, 107, 134,
	341, 248, -617, 570, -529, -529, 454, 354, 5, 8,
	605, 606, 609, -516, 608, 608, 608, -529, -529, 454,
	-587, 535, 454, 28, -529, -244, -244, 119, 319, -442,
	523, 523, 608, 612, 589, 589, 60, 225, 155, 335,
	553, 335, -545, 153, -550, -442, 607, 234, 607, 607,
	2, -235, -236, -237, 143, 467, 24, -623, 2, 551,
	155, -244, 155, -244, 574, -335, 607, 607, 523, 454,
	-259, 523, 570, -373, -442, -205, 127, -521, -604, 611,
	-604, 611, 454, 523, 523, 454, 523, 523, 335, 155,
	570, 169, 169, 576, -251, -442, -442, 185, 523, 570,
	-373, 523, -496, 48, 26, 335, -301, -244, 155, 523,
	523, 535, 467, -531, -531, 341, -13, -307, -527, -302,
	467, 366, 424, -594, -594, 206, -310, -619, -486, -209,
	355, -208, 147, 436, 137, 261, 230, -486, -207, 190,
	245, 570, -302, 2, 608, 608, 612, 612, -551, -245,
	-297, -282, 234, 234, -289, -267, 38, 349, 349, 607,
	-297, -86, 570, -485, -518, -598, 570, 43, -300, 38,
	155, -595, -135, -302, -490, -491, 5, 38, -297, 155,
	351, 335, -248, 268, -643, -526, -566, -358, -392, -381,
	336, 91, 608, -436, -383, -366, -442, 2, 608, -202,
	-203, -531, -531, -531, -204, -216, -284, 2, -532, -531,
	-531, 612, 607, 589, 589, 589, 589, 589, 589, -210,
	-486, -131, -135, 355, -297, 599, -399, -341, -340, 370,
	345, -341, 444, 444, 352, 179, 264, -238, -281, -442,
	-442, 151, 33, 33, -442, -442, -453, 608, -442, -442,
	-373, 606, 5, -442, 608, 608, 8, -442, 608, 609,
	-580, -266, -442, 608, 60, 608, 608, 612, 612, 608,
	608, 608, 608, 608, 608, 608, -448, 190, 139, 345,
	607, 608, 608, -105, -450, 212, 60, -473, -450, -450,
	-401, -362, -473, -440, -281, 605, -281, 605, -522, -518,
	-476, 607, 609, -214, 589, -531, -531, -192, 206, -617,
	-617, 570, -310, 606, 2, 605, -522, 608, -310, 190,
	-589, -310, 509, 119, -283, -283, -217, -519, -519, 508,
	444, -251, 393, -433, 155, 155, -552, 93, -554, 76,
	171, 102, 335, 341, 541, 393, 72, 127, 351, 410,
	-633, -634, -635, 38, 581, 582, 608, -360, -470, -565,
	607, -266, -360, -362, 335, 497, 127, 351, 335, 127,
	351, 565, 119, 2, 535, 79, -283, -291, -362, -362,
	-297, -307, -527, 163, 608, 612, 589, 2, 599, 599,
	-307, -527, -302, -307, -527, -300, 155, -251, 368, 169,
	523, -135, -442, 163, 608, -281, 5, 5, 155, -278,
	76, -283, 5, -283, -301, 119, 454, 523, 523, 351,
	351, 354, -615, -616, -207, 612, 607, 589, 589, 589,
	-207, -532, -131, 2, -352, -342, 236, -283, -549, -546,
	-547, 393, -434, -553, -555, 171, 393, -330, 607, -282,
	-267, 607, -135, 2, -218, 607, -328, 355, 606, -600,
	355, -599, 117, 137, -527, -396, -135, -302, -350, 570,
	-352, 608, 612, 149, -418, 551, -281, -297, 155, -249,
	267, -643, -526, -246, -421, -419, 140, 607, 351, -135,
	-358, 589, 608, 608, 119, 608, -211, -212, -531, -131,
	-531, -531, -531, -131, -210, -486, -66, -67, 234, 93,
	375, -294, 508, 234, 607, 607, -238, -442, -442, -442,
	608, -358, -522, 599, -574, 370, 608, -469, -442, -442,
	-443, 190, 607, -453, 608, -575, 569, -442, -387, -388,
	-442, 442, 108, 210, -575, -575, 608, -518, -518, 2,
	-531, 354, 2, 523, 605, 2, 190, -529, 190, 190,
	225, 225, 38, 413, -433, -291, -291, -295, -288, -266,
	171, 218, 341, 565, -417, 259, 607, -443, 545, -297,
	607, 2, 217, 217, 30, 60, -636, 131, 238, 608,
	612, -471, -277, -266, -442, -471, 608, 608, 341, 545,
	341, 565, -442, 545, -492, 607, -244, -244, 608, 608,
	-442, 523, -521, 100, -519, 2, -604, -251, -280, -442,
	185, -442, 523, 5, -244, -295, -244, -244, -278, 535,
	-307, -527, -302, -620, 509, 461, 536, 455, 193, 443,
	-620, 185, -208, -209, -531, -131, -131, -207, 38, -336,
	-337, 2, -551, 259, -288, 259, 227, 154, -360, 607,
	607, -362, -632, 570, 608, -326, -219, -87, -88, 524,
	-485, 612, 607, 589, -352, 319, 119, 38, 5, 607,
	607, -266, 351, 607, -281, -261, 92, -643, -526, -247,
	-392, 336, -362, 93, -421, -449, -204, 607, -204, 608,
	612, 28, 607, 28, 607, -297, -319, -373, -373, 608,
	-358, 60, 612, 608, 608, -443, -453, 608, -576, -577,
	-286, 612, 607, 607, 468, 606, 606, -529, 2, -529,
	-529, -529, 454, -251, 393, -266, -545, -554, -288, 335,
	551, -442, -443, -268, 607, -442, 607, 607, 38, 127,
	238, 132, 223, -432, -637, 101, 498, 226, -470, -238,
	608, -431, 551, 410, -443, -278, -360, 607, 607, 607,
	589, 190, -135, 607, -496, -244, -301, 523, 2, 2,
	190, -594, 608, -610, 408, -135, -219, 607, -331, 81,
	94, 128, 217, 194, 235, 489, 495, 28, -331, 608,
	-360, -360, 608, -332, 351, 119, 319, 608, 38, -88,
	9, -599, -600, -442, 38, 119, -135, -490, -360, -297,
	-360, 351, -253, -252, 276, -526, -248, 608, -291, -392,
	-532, -67, -362, -362, 608, 608, -581, 401, 445, 211,
	-373, -359, 608, 612, 38, -388, 2, 2, 2, -617,
	-310, 413, -245, 155, 213, 608, -556, 291, -266, 608,
	-396, -396, 38, 132, 223, -338, -334, 607, -239, -471,
	213, -297, -605, 551, 608, -344, -343, -340, -346, -345,
	-340, -373, -519, 100, 368, -373, -278, -529, -529, 351,
	-612, 191, -611, 5, 10, -332, -361, -472, -283, -431,
	608, 608, 82, 119, -342, -135, 608, -135, 2, -350,
	608, 608, -418, 608, -297, -250, -533, 413, 415, -643,
	-249, -436, 140, 608, 608, 608, 608, -582, -583, 50,
	538, 109, -442, -582, -582, -577, -579, 190, 171, 579,
	-557, -560, -559, 586, 474, 191, 369, 608, 497, 564,
	608, 608, -636, -362, 579, -352, -442, -431, 608, 612,
	556, 608, 612, 556, 608, 190, 608, -244, -617, -244,
	-620, -206, 570, 46, -260, -259, 608, 612, -432, -431,
	-338, 392, 133, 143, -336, -632, -431, 607, -432, 607,
	-258, -257, -643, -512, -261, 140, 336, 545, -204, -584,
	153, -583, 389, 184, 444, 389, 184, -584, -584, -529,
	-288, 55, -559, 586, -560, 586, 545, 133, -436, 608,
	55, -556, -343, 225, -345, 190, 368, 190, 452, -611,
	30, -472, -338, -432, -220, 570, 445, 445, 2, -219,
	-332, -432, -360, -338, -360, -254, -255, -256, -362, -253,
	336, 545, 467, 109, 209, 518, 319, 33, 589, -558,
	319, 431, 64, 467, -558, 589, -557, 607, 607, -529,
	355, -220, -338, -436, 2, -332, -338, 608, -220, 608,
	-528, 366, -250, 467, -382, 444, 359, -583, -442, 23,
	341, 127, -442, -636, -373, -373, -244, -203, 607, -436,
	-220, -260, -220, -431, -436, -432, -643, -258, -382, -436,
	608, 608, -203, -436, -436, -432, -338, -527, -254, -436,
	-333, -334, 523, 608, -338, -220, 607, -220, -436, -373,
	-436, 608, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 564, 565, 567, 568, 569, 571,
	572, 574, 576, 578, 579, 580, 582, 583, 585, 586,
	587, 588, 589, 591, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	664, 666, 0, 1444, 1446, 1448, 1450, 0, 820, 0,
	36, 37, 39, 0, -2, 341, 343, 345, 347, 0,
	379, 381, 382, 384, 386, 387, 388, 390, -2, 0,
	497, 498, 500, 502, -2, 0, 1034, 1036, 1038, 0,
	653, 655, 0, 1041, 1043, 1045, 0, 0, 676, 677,
	0, 1558, -2, 668, 670, 672, 674, 745, 747, 749,
	751, 753, 755, 757, 759, 761, 763, 764, 766, 768,
	770, 772, 774, 775, 777, 779, 781, 782, 784, 785,
	787, 789, 791, 793, 795, 797, 799, 801, 803, 805,
	807, 809, 811, -2, 814, 815, 816, -2, -2, 0,
	-2, -2, -2, 1462, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 441, 443, 445, 447, 449, 452,
	454, 456, 1616, 504, 506, 508, 510, 512, 514, 516,
	0, -2, 1630, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1589, 1591, 1593, 1595, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 566, 570, 573, 575, 577, 581, 584,
	590, 592, 594, 549, 550, 553, 2328, 2346, 2347, 2348,
	2351, 2352, 2353, 2354, 2355, 2356, 2818, 2899, 2900, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 551,
	552, 1225, 0, 618, 616, 2313, 619, 2612, 621, 623,
	491, 492, 493, 494, 495, 496, 0, 646, 632, 1628,
	647, 649, 650, 651, 652, 613, 611, 0, 651, 646,
	2382, 644, 1442, 1443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 420, 1284, 1285, 1286, 1427,
	1428, 2660, 1469, 0, 240, 665, -2, -2, 2783, -2,
	699, 700, -2, -2, 714, 718, 709, 2787, 0, 2663,
	2647, -2, 721, 1445, 1447, 1449, 818, 819, 2332, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 250, -2, -2, -2, -2,
	0, 0, 2709, 2434, 2281, 2348, 2284, 2279, 342, 344,
	346, 348, 349, 0, 0, 0, 0, 0, 0, 0,
	380, 383, 385, 389, -2, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1105, 1097,
	1098, 1349, 0, 0, 0, -2, 499, 501, 554, 555,
	0, 1617, 1617, 562, 563, -2, 0, 0, 0, 0,
	312, 302, 1035, 1037, 1039, 1040, 0, 0, 0, 0,
	0, 654, 656, 0, 0, 280, 1042, 1044, 1046, 1047,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 669,
	671, 673, 675, 746, 748, 750, 752, 754, 756, 758,
	760, 762, 765, 767, 769, 771, 773, 776, 778, 780,
	783, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	804, 806, 808, 810, 812, 813, 826, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 928, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 1015, 0, 0, 829, 832, 833, 834, 835, 836,
	837, 0, 901, 926, 927, 937, 817, 0, 1265, 1618,
	1471, 1452, 1466, 1471, 1454, 1455, 1456, 1457, 1458, 1463,
	1465, 1459, 1460, 1461, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 442, 444, 446, 448, 450, 453,
	455, 457, -2, 1587, 1588, 505, 507, 509, 511, 513,
	515, 517, 657, 0, 659, 0, 831, -2, 0, 1622,
	1622, 1622, 0, 0, 1588, 1586, 0, 662, 663, 725,
	726, 1895, 0, 0, 0, 0, 0, 0, 0, 0,
	2155, 1983, 0, 727, -2, 2016, 2018, 2758, 2585, 2783,
	2154, 2020, 2021, 2022, 2023, 2024, 0, 2026, 2027, 2028,
	2029, 2030, 2031, 0, 2033, 0, 2038, 2039, 2040, 0,
	2765, 2258, 2342, -2, 0, 0, 2771, 2338, 0, 2121,
	2056, -2, -2, 2365, 2344, 1827, 1828, 1829, 1830, 1831,
	-2, -2, 2801, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 0, 2746, 2766, 2767, 2772, 2774,
	2768, 2755, 2081, 2448, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1854, 1863, -2,
	-2, -2, -2, -2, -2, -2, 2759, 2760, 2777, 2780,
	2786, 2791, 2792, 2764, 2773, 2800, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 1855, -2, -2, -2, -2, 1605, 2626, 1608,
	1225, 1606, 1590, 1592, 0, 1594, 0, 0, 0, 1599,
	1625, 1623, 0, 1674, 1603, 1604, 1697, 1697, 1721, 0,
	1702, 0, 1721, 1617, 1748, 0, 1708, 2652, 2057, 2058,
	0, 2348, 2343, -2, -2, 2798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 0, 620,
	622, 0, 0, 0, 645, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 424, 425, 426, 427, 2766,
	0, 0, 0, 432, 0, 434, 435, 436, 437, 438,
	439, 440, 210, 2766, 522, 547, 0, 210, 2766, 525,
	210, 2766, 528, 0, 531, 1347, 210, 2766, 534, 2309,
	210, 2766, 537, 539, 2317, 210, 2766, 543, 2324, 2322,
	544, 0, 546, 230, 226, 227, 228, 229, 1438, 1439,
	1440, 1441, 0, 1468, 1348, 667, 0, 693, 0, 697,
	698, 2754, -2, 0, 2672, 702, 703, -2, 705, 1472,
	1476, 1477, 1478, 1479, 1480, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 694, 695, 712, 713, 719, 722,
	0, 821, 822, 823, 824, 825, 71, 0, 2766, 1748,
	73, 0, 2303, 2373, 2374, 2375, 2376, 2377, 2799, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
	2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889,
	2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2801,
	77, 0, 2766, 82, 0, 2766, 0, -2, 95, 0,
	108, 0, 135, -2, -2, -2, 116, 0, 2766, 0,
	2278, -2, 0, 222, 303, 304, 305, 0, 1072, -2,
	0, 1278, 1280, 1280, 0, -2, 0, 0, 0, 1025,
	2275, 2280, 1026, 2299, 1027, 2285, 0, 350, 351, 352,
	353, 354, 0, 355, 2766, 357, 358, 0, 360, 361,
	2766, 363, 364, 0, 366, 0, 368, 0, 262, 266,
	2766, 315, 316, 2361, 2362, 2369, 2370, 2371, 2372, 2766,
	393, 396, 0, 398, 399, 0, 401, 0, 0, 0,
	405, -2, 421, 0, 418, 408, 409, 411, 412, 413,
	414, 415, 0, 461, 459, 2314, 0, 0, -2, 2766,
	0, 1069, 0, 0, 1327, -2, 0, 1271, 0, 1334,
	2766, 1330, 0, -2, 0, 1615, 2766, 1489, 1101, 1102,
	1103, 1104, 1760, 488, 0, 1522, 0, 1524, 0, 1544,
	1754, 1697, 0, 0, 1759, 0, -2, 607, 2331, -2,
	557, 0, 558, 0, -2, 0, 329, 0, 0, 1050,
	1052, 1053, 1055, 1056, 1059, 1060, 1061, 1062, 0, 1064,
	1734, 281, 283, 0, 0, 0, 1049, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 0, 0, 678, 0,
	0, 827, 828, 0, 0, 844, 845, 846, 0, 329,
	2664, 2621, 2470, 853, 0, 856, 859, -2, 0, 0,
	0, 0, 863, 0, 868, 869, 870, 0, -2, 0,
	877, 879, 1033, 881, 0, 0, 883, 0, 887, 0,
	890, 0, 892, 0, 894, -2, -2, -2, 902, 903,
	-2, 908, -2, 0, 912, -2, 0, 915, 0, 918,
	-2, 0, 928, 924, 925, 0, 0, 0, 0, 945,
	946, 0, 955, 0, 958, 959, 960, 0, 964, 965,
	0, 967, 968, 969, 970, 0, 2736, 2669, 2434, 0,
	978, -2, 984, 986, 0, -2, 0, 1002, 0, 1006,
	0, 0, 1014, 0, 0, 830, 0, 838, 839, 210,
	1752, 1451, -2, 1453, 0, -2, 0, 658, 0, 661,
	1647, 1573, 1570, 0, 1644, 1645, 1574, 0, 0, 0,
	1581, 0, 1620, 1621, 0, 0, 0, 1560, 1561, 0,
	0, 0, 0, 2160, 2161, 2162, 2163, 2176, 2164, 2165,
	2175, 2173, 2174, 2166, 2167, 2172, 2186, 2187, 2177, 2178,
	2168, 2181, 2179, 2180, 2182, 2183, 2184, 2185, 0, 0,
	2191, 0, 2169, 2170, 2171, 2199, 0, 0, 2200, 0,
	2202, 0, 2192, 2188, 2189, 2190, 0, 1962, 1964, 2266,
	0, 0, 0, 2198, 2193, 2194, 1900, 1901, 1902, 1903,
	1904, 1937, 1941, 1942, 0, 0, 2017, 2263, 2262, 2019,
	0, 0, 2214, 0, 2032, -2, 0, 2155, 2209, 0,
	0, 2041, 2042, 2043, 0, 0, 2214, 0, 0, 2257,
	2053, 2054, 1892, 0, 0, 2123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1840, 0, 1842, 0, 1843,
	1844, 1851, 1864, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 2238, -2, 0, 0, 0,
	0, 1856, 0, 1607, 0, 0, 1678, 2267, 2271, 2272,
	1678, 1678, 0, 0, 2215, 1745, 1745, 0, 0, 1740,
	1740, 1740, 1738, 1721, 0, 1721, 1731, 0, 1721, 1721,
	0, -2, 1702, 0, 0, 1731, 0, 1715, 595, 597,
	599, 601, 602, 603, 605, 1749, 1750, 0, 0, 0,
	0, 2349, 0, 0, 0, 0, 2321, 0, 0, 2334,
	0, 0, 2308, 375, 376, 0, 0, 0, 2719, 2663,
	0, -2, 625, 648, 1617, 0, 2217, 1775, 1779, 0,
	1781, 1782, 1783, 1784, 1785, 0, 0, 1776, -2, 1852,
	1854, 1875, 2366, 2367, 2368, 1835, 1836, 1837, 1838, 1839,
	1847, 1834, 1834, 1834, 1845, 1874, 1866, 1874, 1870, 1820,
	1821, 1822, 1857, 1858, 1859, 1860, 0, 2719, 2663, 0,
	-2, 0, 635, 0, 0, 1555, 422, 0, 429, 430,
	431, 0, 518, 0, 208, 209, 0, 210, 2766, 523,
	0, 526, 0, 210, 2766, 2273, 532, 0, 535, 0,
	0, 541, 0, 0, 0, 0, 0, 210, 1557, 0,
	0, 0, 0, -2, 707, 715, 716, 717, 0, 1474,
	0, 1481, 736, 737, 738, 1483, 1484, 0, 1486, 710,
	739, 740, 741, 742, 743, 744, 0, 2287, 2288, 2289,
	2290, 2293, 2294, 0, 0, 708, 729, 711, 0, 723,
	117, 1424, 0, 0, 164, 0, 1424, 1424, 0, 0,
	0, 0, 192, 0, 1135, 0, 0, 0, 0, 135,
	149, 160, 129, 130, 131, 0, 0, 0, 0, 0,
	0, 83, 1247, 0, 1250, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 0, 0, 0, 0, 97, 98,
	0, 0, 103, 104, 0, 148, 0, 0, 0, 0,
	0, 1519, 0, 139, 135, 0, 0, 134, 136, 119,
	0, 0, 135, 150, 162, 0, 197, 199, 1132, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 232, 0,
	0, 0, 1272, 0, 0, 0, 1614, 0, 0, 0,
	0, 2766, 1422, 0, 1407, 0, 1734, 2519, -2, -2,
	281, 1734, 1024, 0, 0, 2349, 2283, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 397, 400,
	402, 403, 404, 0, 1326, 0, 410, 451, 1195, 2766,
	0, 0, 478, 473, 0, 475, 0, 0, 0, 1246,
	2766, 1244, 2318, 0, 1269, 0, 1225, 2766, 2316, 0,
	0, 0, 1335, 2358, 1344, 1348, 1507, 0, 490, 0,
	1525, 1527, 0, 0, 1755, 0, 1757, 1697, 1617, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	1063, 287, 0, 1733, 0, 0, 317, 1734, 281, 2638,
	1048, 329, 329, 1734, 680, 1734, 682, 0, 0, 847,
	848, 0, 329, 329, 329, 854, 855, 857, 858, -2,
	-2, -2, -2, 860, 861, 952, 0, 0, 0, 951,
	871, 0, 873, 876, 880, 0, 1018, 2647, 2663, 2719,
	1031, 952, 2434, 952, 2434, 952, 2434, 952, 952, 896,
	940, 948, 907, 914, 0, 909, 913, 916, 919, 0,
	921, 929, 0, -2, 0, 932, 0, 934, 0, 936,
	952, 953, 956, 963, 966, 971, 972, 973, 974, 2329,
	975, 976, 977, -2, 981, 982, 0, 993, 998, 999,
	995, 0, 0, 0, 0, 0, 0, 1009, 1010, 0,
	0, 1017, 0, 840, 1264, 0, 1464, 1647, 1573, 660,
	1564, 1646, 1565, 1572, 1575, 0, 0, 1577, 0, 1579,
	0, 1642, 1643, 1650, 1651, 0, 1661, 1662, 1654, 0,
	-2, 0, 0, 1657, 1658, 1583, 0, 1600, 1601, 1602,
	1631, 1634, 1363, 0, 2899, 1896, 1770, 1897, 1898, 2302,
	0, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, -2, -2, -2, -2, -2, -2, -2, -2, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	-2, -2, -2, 1938, 1939, 1940, -2, 2201, 2203, 0,
	2266, 0, -2, 0, -2, -2, -2, -2, 1959, 0,
	1961, 1966, 1968, 1970, 0, 0, 0, 0, 2265, 1980,
	2249, 2250, 0, 0, 2157, 2158, 2159, 1965, 0, 1984,
	2264, 2261, 0, 0, 2195, 0, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 0,
	2213, 1630, 2045, 0, 0, 0, 0, 2052, 2037, 2211,
	0, 2210, 0, 0, 0, 2221, 0, 2256, 2252, 0,
	2300, 1891, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 0,
	2297, 2335, 2341, 2131, 0, 0, 0, 2082, 2083, 2084,
	2085, 2086, 0, 2088, 2089, 0, 2091, 2092, 0, 2094,
	2095, 0, 2097, 2098, 2099, 2100, 2101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 0, 0, 2103, 0,
	2224, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2105, 0, 2107, 2215, 2235, 0, 0, 1985, 0, 0,
	0, 0, 2155, 0, 2110, 2215, 2243, 0, 0, 0,
	0, 0, 2215, 0, 2248, 0, 2117, 0, 2119, 1609,
	0, 0, 1765, 0, 0, 0, 2270, 1765, 1765, 0,
	1673, 0, 0, 1741, 1742, 1743, 1744, 0, 0, 1745,
	0, 1735, 1739, 1736, 1737, 1731, 1694, 0, 0, 2304,
	1731, 1700, 1730, 0, 1225, 1720, 1731, 1731, 0, -2,
	1704, 1721, 0, 0, 596, 598, 600, 604, 606, 0,
	0, 1630, -2, 0, -2, 331, 1224, 0, 0, 0,
	0, 0, 0, 615, 617, 0, 0, 538, 0, 0,
	631, 0, 609, 0, 612, 0, 1766, 1769, 0, 0,
	1780, 1786, 1787, 0, -2, 0, 0, 1876, 0, 0,
	0, 0, 0, 643, 0, 646, 0, 0, 0, 433,
	548, 210, 520, 0, 210, 210, 529, 0, 0, 210,
	540, 210, 2325, 210, 2323, 231, 545, 1556, 243, 0,
	696, 0, 1473, 1482, 0, 733, 0, 735, 0, 2291,
	2295, 2292, 2296, 0, 724, 0, 0, 0, 0, 1423,
	0, 0, 1370, 0, 0, 168, 2766, 0, 212, 0,
	0, 1188, 2310, 0, 1178, 0, 0, 2456, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 132, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 1249, 1251, 1258, 1260,
	0, 1254, 2298, 0, 0, 1255, 0, 1257, 1259, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	1281, 0, 0, 1282, 1283, 1495, 1496, 0, 1518, 1519,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 2277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1274, 0, 1322, 1320,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 0, 0, 0, 0, -2, 1276,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 320, 2276, 2286, 0, 1057, 1058, 356, 359,
	362, 365, 249, 0, 0, 395, 406, 0, 0, 1107,
	1082, 0, 0, 460, 329, 0, 0, 474, 478, 2327,
	1067, 1242, 1245, 0, 1225, 2766, 1292, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 2766, 2305, 2357, 2358,
	1509, 1519, 0, 1765, 0, 1542, 1528, 0, 0, 0,
	1542, 1546, 1547, 1549, 1550, 0, 0, 1756, 1762, 556,
	608, 1617, 1617, 329, 327, 2588, 325, 322, 324, 0,
	0, 1531, 1533, 0, 0, 0, 275, 0, 284, 1734,
	282, 0, 287, 0, 0, 0, 472, 679, 684, 842,
	0, 329, 850, 851, 852, 898, 942, 950, 997, 862,
	864, 865, 866, 0, 0, 0, 1032, 1028, 1029, 1030,
	882, 952, 885, 952, 888, 952, 891, 893, 911, 917,
	930, 923, 931, 0, 0, 0, 944, 961, 0, 980,
	0, 0, 0, 0, 0, 0, 0, 1003, 1004, 1005,
	1007, 1012, 1011, 1016, 841, 1753, 1568, 1569, 1571, 0,
	1580, 0, 0, 1656, -2, -2, 1655, 1659, 1660, -2,
	-2, -2, -2, 1576, 0, 1585, 1582, 0, 1641, 1361,
	1362, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1981, 0, -2, 1960, 1963, 1967, 1969, 1971, 0, 0,
	0, 0, 0, 0, 2204, 0, 2206, 1982, 2259, 2262,
	2197, 0, 2153, 0, 0, 1629, 1630, 1630, 0, 2051,
	0, 2212, 0, 2219, 2220, 0, 2044, 0, 2253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 0,
	0, 0, 0, 2087, 2090, 2093, 2096, 0, 0, 0,
	0, 2076, 0, 0, 0, 2080, 1846, 1832, 0, 1874,
	1872, 1873, 1867, 1874, 1871, 1824, 0, 1823, 0, 2102,
	0, 2104, 2106, 0, 0, 2108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 1989, 1990, 2010, 2109, 2241, 2242, 0, 0, 0,
	0, 0, 0, 2115, 0, 2247, 2116, 2118, 1617, 0,
	1610, 0, 1675, 1664, 1764, 0, 2268, 1734, 1677, 1679,
	2269, 2307, 1664, 1664, 0, 2216, 0, 0, 1725, 0,
	0, 0, 1727, 1698, 0, 0, 1692, 0, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1699, 1225, 1729, 1701, 1705,
	2335, 0, 1731, 0, 1716, 0, 1718, 1751, 0, 1710,
	1713, 0, 0, 2350, 1765, 0, 369, 377, 378, 370,
	371, 372, 373, 0, 1410, 0, 0, 0, 0, 0,
	2218, 0, 1771, 0, 1777, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 0, 1554, 428, 519, 210, 524,
	527, 2274, 210, 533, 536, 542, 239, 0, 692, -2,
	731, 732, 734, 0, 730, 165, 1424, 0, 0, 0,
	1366, 0, 1090, 0, 0, 1368, 1372, 1378, 1381, 0,
	170, 2766, 182, 0, 2766, 0, 1151, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 2766, 210, 2766, 210,
	186, 188, 191, 0, 196, 193, 0, 1139, 0, 0,
	1142, 118, 1424, 0, 0, 121, 125, 137, 0, 0,
	0, 147, 0, 0, 0, 1383, 1387, 1395, 0, 0,
	0, 1252, 1253, 1256, 1262, 84, 0, 0, 0, 1391,
	1393, 1399, 96, 99, 2766, 2319, 101, 2766, 0, 1365,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 123,
	127, 138, 0, 1401, 120, 0, 225, 0, 0, 215,
	210, 2766, 0, 217, 0, 218, 219, 233, 0, 0,
	0, 1070, 1071, 1321, 0, 1267, 1268, 0, 1279, 1273,
	0, 0, 0, 0, 0, 1403, 1404, 0, 0, 0,
	1422, 1419, 1734, 245, 0, 1734, 253, 0, 2282, 0,
	267, 392, 0, 0, 0, 0, 1106, 1206, 1108, 1110,
	1111, 1112, 212, 0, 2358, 1178, 2508, 2358, 0, 0,
	1077, 0, 0, 0, 466, 462, 0, 471, 477, 476,
	482, -2, 0, 0, 0, 0, -2, 0, 0, 1337,
	1331, 1332, 0, 0, 0, 0, 2766, 1511, 1519, 0,
	1615, 1630, 489, 1520, 1542, 0, 0, 0, 1530, 1526,
	1523, 1765, 0, 0, 0, 0, 0, 1758, 1761, 559,
	560, 306, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 285, 0, 288, 0, 0, 0,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 287,
	318, 277, 1734, 0, 0, 681, 0, 0, 849, 0,
	872, 875, 884, 886, 889, 933, 935, 952, 962, 987,
	2306, 988, 1129, 0, 1129, 0, 0, 1008, 1578, 0,
	1653, 1584, 1635, 1636, 0, 1363, 0, 1899, 1944, 0,
	0, -2, 0, 0, 1948, 0, 0, 0, -2, 0,
	0, 0, 2205, 2207, 0, 2261, 2196, 2046, 0, 0,
	0, 2050, 2034, 2035, 0, 2156, 2222, 2251, 2255, 0,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 0, 2301, 2336,
	2340, 2129, 2130, 2134, 2315, 0, 0, 0, 2059, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 1869, 0,
	0, 2223, 2234, 2236, 1986, 1987, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, -2, -2, -2, 2004,
	2005, 2006, -2, -2, -2, 2011, 0, 0, 0, 2237,
	2239, 2240, 2244, 2245, 0, 2112, 2113, 2114, 2246, 0,
	1617, 1611, 1672, 0, 1763, 1676, 0, 1672, 1672, 1624,
	1723, 0, 0, 1747, 0, 1695, 0, 1696, 0, 0,
	1728, 0, 1703, 1706, 1707, 1717, 0, 1709, 0, 1712,
	0, 2046, -2, 330, 332, 334, 0, 337, 338, 0,
	0, 0, 624, 0, 1410, 1410, 0, 626, 610, 0,
	0, 1773, 0, 0, 1849, 1853, 1877, 637, 639, 0,
	0, 2719, 2663, 0, 636, 521, 530, 241, 0, 1732,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 1187, 0, 1149, 0, 0, 1177, 0, 0,
	1193, 172, 173, 174, 0, 0, 0, 0, 184, 0,
	0, 180, 0, 190, 195, 1136, 0, 0, 0, 0,
	1371, 0, 0, 0, 144, 145, 146, 0, 151, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1501, 1502, 0, 1492, 141, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 1360, 235, 0, 0,
	0, 0, 0, 1266, 1324, 1325, 1275, 1384, 1388, 1396,
	0, 0, 0, 0, 0, 651, 1421, 0, 253, 251,
	0, 254, 0, 257, 258, 0, 0, 253, 247, 0,
	0, 0, 1225, 407, 1080, 1194, 0, 0, 1196, 1113,
	1117, 0, 2358, 2358, 0, 2312, 0, 1078, 0, 0,
	1195, 458, 0, 465, 0, 479, 0, 0, 1246, 0,
	0, 1270, 1295, 1225, 0, 1336, 1338, 0, 1346, 0,
	0, 0, 1513, 1519, 0, 1506, 1507, 1649, 1521, 1540,
	-2, 0, 0, 1630, 1548, 1545, 1551, 1552, 0, 326,
	0, 321, 323, 0, 309, 0, 1532, 1534, 0, 1051,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	287, 1734, 313, 0, 843, 867, 943, 989, 1128, 0,
	0, 991, 0, 0, 1652, 1639, 1640, 1637, 1363, 1946,
	1950, 0, 0, 0, 1952, -2, 0, 1974, -2, -2,
	2208, 2260, 2025, 1630, 2047, 2049, 2036, 2254, 1894, 0,
	2136, 2133, 0, 2120, 0, 2071, 2072, 0, 0, 2075,
	2077, 2078, 2079, 1833, 1826, 1825, 2233, 0, 0, 0,
	0, 2111, 1612, 0, 2125, 0, 0, 1680, 2125, 2125,
	1724, 0, 1726, 1693, 1681, 0, 1690, 0, 2336, 1719,
	1711, 0, 0, 335, 0, 339, 340, 374, 0, 627,
	628, 0, 0, 1767, 1772, 0, 1778, 1848, 0, 0,
	0, 0, 0, 242, 166, 167, 1091, 1088, 1089, 1375,
	1379, 1376, 0, 169, 0, 0, 1150, 0, 1153, 0,
	0, 0, 0, 1160, 1178, 0, 0, 0, 0, 0,
	0, 1180, 0, 1179, 0, 0, 1210, 0, 1351, 1358,
	0, -2, 0, 0, 0, 176, 201, 0, 0, 0,
	0, 204, 1425, 178, 0, 0, 210, 210, 0, 0,
	1367, 1369, 1382, 0, 0, 0, 0, 154, 0, 0,
	1385, 1389, 1397, 1392, 1394, 1400, 0, 102, 0, 1503,
	0, 140, 0, 0, 0, 1402, 223, 224, 0, 210,
	0, 210, 216, 210, 1360, 0, 0, 0, 0, 0,
	0, 0, 1405, 1406, 244, 0, 0, 0, 0, 0,
	246, 319, 253, 394, 0, 1138, 0, 1206, 1198, 1199,
	1200, 0, 1109, 1205, 1207, 0, 0, 1114, 0, 0,
	0, 0, 1094, 1079, 0, 1107, 1082, 0, 463, 480,
	0, 483, 0, 486, 1068, 1243, 1287, 1225, 1290, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 1515,
	1519, 0, 1508, 1509, 1542, 1648, 0, 0, 0, 1529,
	1649, 0, 328, 329, 0, 329, 289, 0, 290, 291,
	292, 299, 300, 301, 278, 279, 683, 685, 0, 0,
	691, 1127, 0, 0, 0, 0, 1638, 1954, -2, -2,
	1975, 0, 2337, 2339, 1630, 0, 2122, 1632, 0, 0,
	-2, 0, 0, 0, 1613, 1596, 0, 1671, 1663, 1665,
	1667, 2650, 2429, 2765, 1597, 1598, 1746, 0, 0, 1714,
	336, 1409, 629, 0, 0, 1774, 0, 634, 0, 0,
	0, 0, 0, 1377, 171, 0, 0, 1154, 1155, 2311,
	1157, 0, 1159, 1161, 1162, 1163, 0, 1167, 0, 2360,
	0, 1172, 1175, 1176, 0, 0, 1189, 1211, 0, 1220,
	0, 1353, 1363, 1357, 0, 1355, 1223, 0, 175, 203,
	177, 205, 200, 0, 1360, 0, 179, 189, 0, 0,
	122, 0, 0, 2423, 157, 155, 153, 100, 1364, 143,
	0, 124, 0, 225, 234, 1359, 236, 220, 210, 0,
	1386, 1390, 1398, 0, 1413, 1414, 1415, 1416, 0, 0,
	0, 0, 255, 0, 256, 259, 260, 0, 0, 1082,
	1137, 1081, 1197, 0, 1208, 1209, 0, 0, 0, 0,
	0, 0, 1084, 0, 1083, 0, 0, 464, 467, 0,
	470, 0, 0, 0, 0, 0, 1294, 0, 1339, 1337,
	0, 1345, 0, 0, 0, 1491, 0, 0, 1510, 1511,
	487, 1535, 0, 0, 1542, 1553, 308, 0, 311, 286,
	0, 687, 0, 689, 0, 990, 992, 0, 0, 2048,
	2140, 0, 0, 2073, 2074, -2, 0, 2014, 2124, 2126,
	0, 0, 0, 0, 0, 1682, 1691, 1410, 1768, 641,
	638, 640, 0, 1373, 0, 1380, 212, 1152, 1156, 0,
	0, 0, 1168, 1229, 0, 0, 1246, 1246, 1181, 0,
	0, 1214, 1215, 1134, 0, 1216, 1217, 1218, 1352, 1641,
	1358, 1191, 0, 0, 202, 207, 0, 0, 0, 0,
	0, 0, 142, 0, 214, 237, 1360, 0, 1417, 1418,
	0, 0, 252, 271, 0, 1288, 1084, 0, 1115, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1116, 1223,
	0, 0, 1186, 1092, 0, 1095, 0, 1080, 0, 468,
	469, 484, 0, 485, 0, 0, 1295, 0, 0, 1346,
	0, 0, 1498, 1490, 1519, 1512, 1513, 1765, 0, 1543,
	0, 686, 0, 0, 1000, 1001, 0, 0, 0, 0,
	2135, 1633, 2015, 0, 0, 1666, 1668, 1669, 1670, 630,
	0, 1374, 183, 0, 1164, 1166, 1234, 0, 0, 0,
	0, 0, 1182, 1212, 1213, 1210, 1133, 0, 1356, 1354,
	1222, 1225, 181, 0, 1223, 0, 1143, 0, 0, 1146,
	0, 0, 158, 2423, 156, 0, 210, 1410, 210, 0,
	274, 0, 265, 263, 264, 1076, 0, 1202, 1204, 1220,
	1223, 1134, 0, 1096, 1138, 1094, 481, 1289, 1293, 1291,
	1329, 1223, 0, 1220, 0, 1505, 1519, 1499, 1500, 0,
	1515, 0, 0, 329, 688, 690, 2132, 2152, 2141, -2,
	2722, 2430, 0, 2152, 2152, 2127, 2128, 0, 0, 0,
	1169, 1230, 1231, 0, 1226, 1227, 1228, 2359, 1170, 1171,
	1173, 1174, 1765, 0, 0, 1229, 206, 187, 1140, 0,
	0, 1141, 0, 0, 161, 0, 163, 238, 1408, 1411,
	0, 261, 0, 0, 1073, 1075, 1201, 0, 1134, 1220,
	1082, 0, 0, 0, 1082, 1084, 1220, 0, 1134, 0,
	1494, 1504, 0, 1514, 1491, 0, 1538, 0, 310, 2137,
	0, 0, 2143, 2144, 2145, 2146, 2147, 2138, 2139, 642,
	1158, 0, 1232, 0, 1233, 0, 0, 0, 1190, 1219,
	0, 1234, 1144, 0, 1147, 0, 159, 0, 0, 269,
	270, 1203, 1082, 1134, 1765, 0, 1085, 0, 1087, 1084,
	1093, 1134, 0, 1082, 0, 1517, 1493, 1497, 2320, 1498,
	1536, 0, 0, 0, 2149, 2150, 0, 0, 0, 1235,
	0, 1238, 1239, 0, 1236, 0, 1210, 0, 0, 210,
	0, 1765, 1082, 1185, 1086, 1076, 1082, 1223, 1765, 1220,
	1487, 1519, 1505, 0, 1765, 2148, 2151, 2142, 1165, 1237,
	1240, 1241, 1221, 1192, 0, 0, 1412, 272, 0, 1183,
	1765, 1074, 1765, 1220, 1342, 1134, 0, 1494, 1765, 1539,
	1131, 0, 0, 1184, 1340, 1134, 1082, 1516, 1488, 1537,
	1145, 1130, 0, 273, 1082, 1765, 0, 1765, 1343, 0,
	1341, 1131, 1148,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 595, 3, 601, 596, 3,
	607, 608, 599, 597, 612, 598, 609, 600, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 3,
	587, 589, 588, 592, 611, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 605, 3, 606, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 594, 614, 590,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 591,
	57930, 593, 57931, 603, 57932, 604, 57933, 610, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1511
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1658
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1694
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1705
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1806
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1838
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1862
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1871
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1886
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1892
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1900
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1936
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1959
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1980
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2042
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2062
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2070
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2081
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2091
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2101
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2110
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2121
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2127
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2153
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2158
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2230
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2240
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2249
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2293
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2306
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2312
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2333
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2363
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = nil
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = nil
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = true
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = false
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = nil
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2552
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2556
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2559
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2643
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 244:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2893
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2902
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = nil
		}
	case 275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2991
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3036
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3189
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3198
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3209
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3214
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = nil
		}
	case 330:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3322
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3518
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3549
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3568
		{
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "CREATE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create access method")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplemented(sqllex, "create cast")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			return unimplemented(sqllex, "create publication")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3605
		{
			return unimplemented(sqllex, "create rule")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			return unimplemented(sqllex, "create server")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3614
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3617
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3618
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3621
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3622
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3632
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3633
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3636
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			return unimplemented(sqllex, "drop server")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3655
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3769
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3804
		{

			sqlVAL.union.val = nil
		}
	case 479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3851
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "DELETE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DROP")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3923
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3925
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3943
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4015
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4098
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4117
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4183
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4207
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4215
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "DELETE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "INSERT")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "DELETE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "INSERT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4296
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4329
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4420
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4436
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "GRANT")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4532
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "RESET")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "RESET")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "USE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4619
		{
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "USE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4792
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			return unimplemented(sqllex, "set from current")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4872
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4893
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = tree.Low
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = tree.Normal
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = tree.High
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "SHOW")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5073
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5109
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.str = "client_encoding"
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.str = "timezone"
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5131
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5159
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5222
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5231
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5384
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5416
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5441
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = true
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = true
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = false
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5563
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5607
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5612
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5614
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5618
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = true
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = false
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = true
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = false
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5702
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5731
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5742
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5764
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5794
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5799
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5804
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5809
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5840
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5843
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5865
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5883
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5891
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5912
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5917
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5922
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5935
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5958
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6039
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6301
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6313
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6354
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6505
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6520
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6548
		{

			sqlVAL.union.val = nil
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.str = ""
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = nil
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6587
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6591
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6617
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6630
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6644
		{
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6645
		{
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6646
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6701
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6738
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6741
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6744
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.str = ""
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: tree.DefaultVal{},
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6994
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7039
		{

			sqlVAL.union.val = true
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = false
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7049
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7056
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7152
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7163
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7190
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7270
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7275
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: tree.DefaultVal{},
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7354
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7439
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7448
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7456
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7480
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7492
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7499
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7504
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7517
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7548
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7582
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.str = ""
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = true
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7616
		{

			sqlVAL.union.val = true
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = false
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7631
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7645
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7657
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7669
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7679
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7689
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7693
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = true
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = true
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = nil
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7828
		{
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7856
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7858
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7860
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7864
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7899
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7916
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7934
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7950
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7966
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = false
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = true
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = false
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = true
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = false
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8024
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8030
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8044
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.str = ""
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.str = ""
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8103
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8109
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8334
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8340
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8352
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8358
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8372
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8378
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8437
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = true
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = false
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.Types
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8497
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8526
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8529
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8530
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8597
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8618
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8642
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8696
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8713
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8760
		{
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8854
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.str = ""
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{

		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8914
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.str = ""
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.str = ""
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.str = ""
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.str = ""
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8969
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8995
		{
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9024
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9046
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9240
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9255
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9434
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9435
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9497
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9541
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = true
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = false
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9611
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = nil
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9625
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = true
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = false
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = false
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = true
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9654
		{
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9655
		{
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9659
		{
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9712
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9717
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9743
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9776
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9872
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9902
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9904
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9919
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9941
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9988
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10019
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10061
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10071
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10106
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10117
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10147
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10180
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10182
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = nil
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = true
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = false
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.str = tree.AstFull
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.str = tree.AstRight
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.str = tree.AstInner
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.str = tree.AstHash
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.str = ""
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10392
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10404
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10414
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = true
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = false
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = true
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = false
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10463
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10476
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10484
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10485
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10503
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10513
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10533
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10595
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = types.Geography
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10644
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10652
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10686
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = nil
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = types.Int2
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = types.Int
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = types.Float4
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = types.Float
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10729
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10737
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10745
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = types.Bool
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = types.Float
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10778
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10784
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10806
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = types.String
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = true
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = false
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = types.Date
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10855
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10863
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10877
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10886
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10894
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10911
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = true
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = false
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = false
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = types.Interval
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10935
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = nil
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11064
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11124
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11273
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11468
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11490
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11598
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11606
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11707
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11733
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11757
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11791
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11802
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11803
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11827
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11893
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12018
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12023
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12032
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12041
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12059
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12064
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12069
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12074
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12093
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12094
		{
			return unimplemented(sqllex, "treat")
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12120
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12126
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12167
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.str = ""
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12256
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12269
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12337
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12366
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12442
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12656
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12773
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12782
		{
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12783
		{
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12797
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12822
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12855
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12863
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12907
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12936
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12952
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12961
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12972
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12981
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12989
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13006
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13225
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13238
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13245
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13270
		{
			sqlVAL.str = ""
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
