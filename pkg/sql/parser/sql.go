// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:693
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12062

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1369,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	233, 208,
	488, 208,
	-2, 0,
	-1, 82,
	221, 1162,
	235, 1162,
	251, 351,
	376, 351,
	386, 944,
	418, 351,
	430, 944,
	472, 944,
	499, 351,
	525, 944,
	-2, 0,
	-1, 88,
	251, 355,
	-2, 0,
	-1, 89,
	129, 1369,
	228, 1369,
	510, 1369,
	511, 1369,
	-2, 0,
	-1, 105,
	146, 1340,
	164, 1340,
	177, 1340,
	231, 1340,
	264, 1340,
	328, 1340,
	338, 1340,
	505, 1340,
	-2, 1311,
	-1, 141,
	154, 819,
	250, 819,
	379, 788,
	435, 788,
	491, 819,
	493, 788,
	-2, 0,
	-1, 143,
	4, 1371,
	21, 1371,
	22, 1371,
	23, 1371,
	24, 1371,
	25, 1371,
	26, 1371,
	27, 1371,
	29, 1371,
	30, 1371,
	36, 1371,
	41, 1371,
	42, 1371,
	44, 1371,
	45, 1371,
	46, 1371,
	47, 1371,
	48, 1371,
	49, 1371,
	50, 1371,
	52, 1371,
	53, 1371,
	54, 1371,
	55, 1371,
	57, 1371,
	58, 1371,
	59, 1371,
	60, 1371,
	61, 1371,
	62, 1371,
	63, 1371,
	67, 1371,
	68, 1371,
	69, 1371,
	70, 1371,
	72, 1371,
	73, 1371,
	74, 1371,
	78, 1371,
	79, 1371,
	80, 1371,
	81, 1371,
	82, 1371,
	83, 1371,
	84, 1371,
	87, 1371,
	88, 1371,
	89, 1371,
	90, 1371,
	91, 1371,
	93, 1371,
	95, 1371,
	96, 1371,
	97, 1371,
	98, 1371,
	99, 1371,
	100, 1371,
	102, 1371,
	103, 1371,
	104, 1371,
	106, 1371,
	107, 1371,
	115, 1371,
	116, 1371,
	117, 1371,
	118, 1371,
	120, 1371,
	121, 1371,
	122, 1371,
	124, 1371,
	125, 1371,
	126, 1371,
	128, 1371,
	129, 1371,
	131, 1371,
	132, 1371,
	133, 1371,
	136, 1371,
	137, 1371,
	138, 1371,
	140, 1371,
	141, 1371,
	143, 1371,
	144, 1371,
	145, 1371,
	147, 1371,
	148, 1371,
	149, 1371,
	150, 1371,
	151, 1371,
	152, 1371,
	153, 1371,
	154, 1371,
	155, 1371,
	156, 1371,
	157, 1371,
	158, 1371,
	159, 1371,
	160, 1371,
	161, 1371,
	163, 1371,
	169, 1371,
	170, 1371,
	171, 1371,
	172, 1371,
	176, 1371,
	178, 1371,
	182, 1371,
	183, 1371,
	184, 1371,
	185, 1371,
	186, 1371,
	187, 1371,
	188, 1371,
	189, 1371,
	190, 1371,
	191, 1371,
	192, 1371,
	193, 1371,
	195, 1371,
	196, 1371,
	198, 1371,
	199, 1371,
	201, 1371,
	202, 1371,
	203, 1371,
	204, 1371,
	205, 1371,
	206, 1371,
	207, 1371,
	208, 1371,
	209, 1371,
	211, 1371,
	212, 1371,
	214, 1371,
	215, 1371,
	216, 1371,
	217, 1371,
	221, 1371,
	222, 1371,
	223, 1371,
	224, 1371,
	225, 1371,
	228, 1371,
	229, 1371,
	230, 1371,
	232, 1371,
	234, 1371,
	235, 1371,
	237, 1371,
	239, 1371,
	240, 1371,
	241, 1371,
	243, 1371,
	247, 1371,
	248, 1371,
	249, 1371,
	250, 1371,
	251, 1371,
	252, 1371,
	254, 1371,
	255, 1371,
	256, 1371,
	258, 1371,
	259, 1371,
	261, 1371,
	262, 1371,
	265, 1371,
	269, 1371,
	270, 1371,
	273, 1371,
	274, 1371,
	275, 1371,
	276, 1371,
	278, 1371,
	279, 1371,
	280, 1371,
	281, 1371,
	282, 1371,
	283, 1371,
	284, 1371,
	285, 1371,
	286, 1371,
	287, 1371,
	288, 1371,
	289, 1371,
	290, 1371,
	291, 1371,
	292, 1371,
	293, 1371,
	294, 1371,
	295, 1371,
	296, 1371,
	297, 1371,
	298, 1371,
	299, 1371,
	301, 1371,
	303, 1371,
	304, 1371,
	305, 1371,
	306, 1371,
	307, 1371,
	308, 1371,
	309, 1371,
	310, 1371,
	311, 1371,
	312, 1371,
	313, 1371,
	314, 1371,
	316, 1371,
	318, 1371,
	320, 1371,
	321, 1371,
	323, 1371,
	324, 1371,
	325, 1371,
	326, 1371,
	327, 1371,
	330, 1371,
	333, 1371,
	334, 1371,
	335, 1371,
	336, 1371,
	339, 1371,
	340, 1371,
	341, 1371,
	343, 1371,
	345, 1371,
	346, 1371,
	347, 1371,
	348, 1371,
	349, 1371,
	350, 1371,
	351, 1371,
	352, 1371,
	353, 1371,
	354, 1371,
	355, 1371,
	356, 1371,
	358, 1371,
	359, 1371,
	360, 1371,
	361, 1371,
	362, 1371,
	363, 1371,
	364, 1371,
	365, 1371,
	366, 1371,
	367, 1371,
	368, 1371,
	369, 1371,
	370, 1371,
	371, 1371,
	372, 1371,
	374, 1371,
	375, 1371,
	377, 1371,
	378, 1371,
	379, 1371,
	380, 1371,
	381, 1371,
	382, 1371,
	383, 1371,
	384, 1371,
	385, 1371,
	386, 1371,
	387, 1371,
	388, 1371,
	390, 1371,
	396, 1371,
	398, 1371,
	399, 1371,
	400, 1371,
	401, 1371,
	402, 1371,
	403, 1371,
	404, 1371,
	405, 1371,
	407, 1371,
	408, 1371,
	409, 1371,
	411, 1371,
	412, 1371,
	413, 1371,
	414, 1371,
	415, 1371,
	416, 1371,
	418, 1371,
	419, 1371,
	420, 1371,
	421, 1371,
	422, 1371,
	423, 1371,
	424, 1371,
	425, 1371,
	426, 1371,
	427, 1371,
	428, 1371,
	430, 1371,
	431, 1371,
	432, 1371,
	433, 1371,
	434, 1371,
	435, 1371,
	437, 1371,
	438, 1371,
	439, 1371,
	440, 1371,
	441, 1371,
	442, 1371,
	444, 1371,
	445, 1371,
	446, 1371,
	447, 1371,
	448, 1371,
	449, 1371,
	450, 1371,
	452, 1371,
	454, 1371,
	455, 1371,
	456, 1371,
	457, 1371,
	458, 1371,
	459, 1371,
	460, 1371,
	461, 1371,
	462, 1371,
	463, 1371,
	464, 1371,
	465, 1371,
	466, 1371,
	468, 1371,
	469, 1371,
	471, 1371,
	473, 1371,
	474, 1371,
	475, 1371,
	476, 1371,
	477, 1371,
	478, 1371,
	479, 1371,
	480, 1371,
	481, 1371,
	483, 1371,
	484, 1371,
	485, 1371,
	486, 1371,
	487, 1371,
	489, 1371,
	491, 1371,
	492, 1371,
	493, 1371,
	494, 1371,
	495, 1371,
	496, 1371,
	498, 1371,
	499, 1371,
	500, 1371,
	501, 1371,
	503, 1371,
	504, 1371,
	507, 1371,
	508, 1371,
	509, 1371,
	510, 1371,
	511, 1371,
	512, 1371,
	513, 1371,
	515, 1371,
	518, 1371,
	519, 1371,
	520, 1371,
	521, 1371,
	522, 1371,
	523, 1371,
	525, 1371,
	526, 1371,
	527, 1371,
	528, 1371,
	533, 1371,
	534, 1371,
	535, 1371,
	536, 1371,
	537, 1371,
	538, 1371,
	-2, 0,
	-1, 144,
	1, 1240,
	127, 1240,
	239, 1240,
	317, 1240,
	374, 1240,
	383, 1240,
	542, 1240,
	566, 1240,
	-2, 0,
	-1, 146,
	1, 1240,
	566, 1240,
	-2, 0,
	-1, 147,
	1, 1240,
	566, 1240,
	-2, 0,
	-1, 148,
	1, 1240,
	488, 1240,
	566, 1240,
	-2, 0,
	-1, 177,
	146, 1339,
	164, 1339,
	177, 1339,
	231, 1339,
	264, 1339,
	328, 1339,
	338, 1339,
	505, 1339,
	-2, 1314,
	-1, 215,
	4, 1378,
	5, 1378,
	6, 1378,
	7, 1378,
	8, 1378,
	9, 1378,
	10, 1378,
	21, 1378,
	22, 1378,
	23, 1378,
	24, 1378,
	25, 1378,
	26, 1378,
	27, 1378,
	29, 1378,
	30, 1378,
	36, 1378,
	37, 1378,
	41, 1378,
	42, 1378,
	43, 1378,
	44, 1378,
	45, 1378,
	46, 1378,
	47, 1378,
	48, 1378,
	49, 1378,
	50, 1378,
	52, 1378,
	53, 1378,
	54, 1378,
	55, 1378,
	57, 1378,
	58, 1378,
	59, 1378,
	60, 1378,
	61, 1378,
	62, 1378,
	63, 1378,
	64, 1378,
	65, 1378,
	66, 1378,
	67, 1378,
	68, 1378,
	69, 1378,
	70, 1378,
	72, 1378,
	73, 1378,
	74, 1378,
	76, 1378,
	78, 1378,
	79, 1378,
	80, 1378,
	81, 1378,
	82, 1378,
	83, 1378,
	84, 1378,
	87, 1378,
	88, 1378,
	89, 1378,
	90, 1378,
	91, 1378,
	93, 1378,
	95, 1378,
	96, 1378,
	97, 1378,
	98, 1378,
	99, 1378,
	100, 1378,
	102, 1378,
	103, 1378,
	104, 1378,
	105, 1378,
	106, 1378,
	107, 1378,
	108, 1378,
	109, 1378,
	110, 1378,
	111, 1378,
	112, 1378,
	113, 1378,
	114, 1378,
	115, 1378,
	116, 1378,
	117, 1378,
	118, 1378,
	119, 1378,
	120, 1378,
	121, 1378,
	122, 1378,
	123, 1378,
	124, 1378,
	125, 1378,
	126, 1378,
	128, 1378,
	129, 1378,
	131, 1378,
	132, 1378,
	133, 1378,
	136, 1378,
	137, 1378,
	138, 1378,
	140, 1378,
	141, 1378,
	143, 1378,
	144, 1378,
	145, 1378,
	147, 1378,
	148, 1378,
	149, 1378,
	150, 1378,
	151, 1378,
	152, 1378,
	153, 1378,
	154, 1378,
	155, 1378,
	156, 1378,
	157, 1378,
	158, 1378,
	159, 1378,
	160, 1378,
	161, 1378,
	162, 1378,
	163, 1378,
	169, 1378,
	170, 1378,
	171, 1378,
	172, 1378,
	176, 1378,
	178, 1378,
	181, 1378,
	182, 1378,
	183, 1378,
	184, 1378,
	185, 1378,
	186, 1378,
	187, 1378,
	188, 1378,
	189, 1378,
	190, 1378,
	191, 1378,
	192, 1378,
	193, 1378,
	195, 1378,
	196, 1378,
	198, 1378,
	199, 1378,
	201, 1378,
	202, 1378,
	203, 1378,
	204, 1378,
	205, 1378,
	206, 1378,
	207, 1378,
	208, 1378,
	209, 1378,
	210, 1378,
	211, 1378,
	212, 1378,
	214, 1378,
	215, 1378,
	216, 1378,
	217, 1378,
	221, 1378,
	222, 1378,
	223, 1378,
	224, 1378,
	225, 1378,
	227, 1378,
	228, 1378,
	229, 1378,
	230, 1378,
	232, 1378,
	234, 1378,
	235, 1378,
	236, 1378,
	237, 1378,
	238, 1378,
	239, 1378,
	240, 1378,
	241, 1378,
	242, 1378,
	243, 1378,
	247, 1378,
	248, 1378,
	249, 1378,
	250, 1378,
	251, 1378,
	252, 1378,
	254, 1378,
	255, 1378,
	256, 1378,
	258, 1378,
	259, 1378,
	260, 1378,
	261, 1378,
	262, 1378,
	263, 1378,
	265, 1378,
	269, 1378,
	270, 1378,
	271, 1378,
	272, 1378,
	273, 1378,
	274, 1378,
	275, 1378,
	276, 1378,
	278, 1378,
	279, 1378,
	280, 1378,
	281, 1378,
	282, 1378,
	283, 1378,
	284, 1378,
	285, 1378,
	286, 1378,
	287, 1378,
	288, 1378,
	289, 1378,
	290, 1378,
	291, 1378,
	292, 1378,
	293, 1378,
	294, 1378,
	295, 1378,
	296, 1378,
	297, 1378,
	298, 1378,
	299, 1378,
	301, 1378,
	302, 1378,
	303, 1378,
	304, 1378,
	305, 1378,
	306, 1378,
	307, 1378,
	308, 1378,
	309, 1378,
	310, 1378,
	311, 1378,
	312, 1378,
	313, 1378,
	314, 1378,
	315, 1378,
	316, 1378,
	317, 1378,
	318, 1378,
	319, 1378,
	320, 1378,
	321, 1378,
	322, 1378,
	323, 1378,
	324, 1378,
	325, 1378,
	326, 1378,
	327, 1378,
	330, 1378,
	334, 1378,
	335, 1378,
	336, 1378,
	339, 1378,
	340, 1378,
	341, 1378,
	342, 1378,
	343, 1378,
	344, 1378,
	345, 1378,
	346, 1378,
	347, 1378,
	348, 1378,
	349, 1378,
	350, 1378,
	351, 1378,
	352, 1378,
	353, 1378,
	354, 1378,
	355, 1378,
	356, 1378,
	358, 1378,
	359, 1378,
	360, 1378,
	361, 1378,
	362, 1378,
	363, 1378,
	364, 1378,
	365, 1378,
	366, 1378,
	367, 1378,
	368, 1378,
	369, 1378,
	370, 1378,
	371, 1378,
	372, 1378,
	374, 1378,
	375, 1378,
	377, 1378,
	378, 1378,
	379, 1378,
	380, 1378,
	381, 1378,
	382, 1378,
	383, 1378,
	384, 1378,
	385, 1378,
	386, 1378,
	387, 1378,
	388, 1378,
	390, 1378,
	396, 1378,
	398, 1378,
	399, 1378,
	400, 1378,
	401, 1378,
	402, 1378,
	403, 1378,
	404, 1378,
	405, 1378,
	407, 1378,
	408, 1378,
	409, 1378,
	410, 1378,
	411, 1378,
	412, 1378,
	413, 1378,
	414, 1378,
	415, 1378,
	416, 1378,
	418, 1378,
	419, 1378,
	420, 1378,
	421, 1378,
	422, 1378,
	423, 1378,
	424, 1378,
	425, 1378,
	426, 1378,
	427, 1378,
	428, 1378,
	430, 1378,
	431, 1378,
	432, 1378,
	433, 1378,
	434, 1378,
	435, 1378,
	436, 1378,
	437, 1378,
	438, 1378,
	439, 1378,
	440, 1378,
	441, 1378,
	442, 1378,
	443, 1378,
	444, 1378,
	445, 1378,
	446, 1378,
	447, 1378,
	448, 1378,
	449, 1378,
	450, 1378,
	452, 1378,
	454, 1378,
	455, 1378,
	456, 1378,
	457, 1378,
	458, 1378,
	459, 1378,
	460, 1378,
	461, 1378,
	462, 1378,
	463, 1378,
	464, 1378,
	465, 1378,
	466, 1378,
	468, 1378,
	469, 1378,
	470, 1378,
	471, 1378,
	473, 1378,
	474, 1378,
	475, 1378,
	476, 1378,
	477, 1378,
	478, 1378,
	479, 1378,
	480, 1378,
	481, 1378,
	483, 1378,
	484, 1378,
	485, 1378,
	486, 1378,
	487, 1378,
	489, 1378,
	491, 1378,
	492, 1378,
	493, 1378,
	494, 1378,
	495, 1378,
	496, 1378,
	497, 1378,
	498, 1378,
	499, 1378,
	500, 1378,
	501, 1378,
	503, 1378,
	504, 1378,
	506, 1378,
	507, 1378,
	508, 1378,
	509, 1378,
	510, 1378,
	511, 1378,
	512, 1378,
	513, 1378,
	514, 1378,
	515, 1378,
	518, 1378,
	519, 1378,
	520, 1378,
	521, 1378,
	522, 1378,
	523, 1378,
	525, 1378,
	526, 1378,
	527, 1378,
	528, 1378,
	533, 1378,
	534, 1378,
	535, 1378,
	536, 1378,
	537, 1378,
	538, 1378,
	539, 1378,
	547, 1378,
	554, 1378,
	555, 1378,
	556, 1378,
	563, 1378,
	567, 1378,
	-2, 0,
	-1, 677,
	180, 2126,
	488, 2126,
	546, 2126,
	565, 2126,
	-2, 0,
	-1, 678,
	180, 2225,
	488, 2225,
	546, 2225,
	565, 2225,
	-2, 0,
	-1, 679,
	180, 2113,
	488, 2113,
	546, 2113,
	565, 2113,
	-2, 0,
	-1, 681,
	180, 2350,
	488, 2350,
	546, 2350,
	565, 2350,
	-2, 0,
	-1, 683,
	180, 2386,
	488, 2386,
	546, 2386,
	565, 2386,
	-2, 0,
	-1, 690,
	180, 2251,
	488, 2251,
	546, 2251,
	565, 2251,
	-2, 629,
	-1, 722,
	565, 2063,
	568, 2063,
	-2, 877,
	-1, 723,
	565, 2065,
	568, 2065,
	-2, 878,
	-1, 724,
	565, 2064,
	568, 2064,
	-2, 879,
	-1, 725,
	568, 1997,
	-2, 880,
	-1, 748,
	177, 222,
	-2, 0,
	-1, 771,
	43, 2067,
	-2, 0,
	-1, 772,
	525, 1139,
	-2, 945,
	-1, 788,
	4, 1506,
	21, 1506,
	22, 1506,
	23, 1506,
	24, 1506,
	25, 1506,
	26, 1506,
	27, 1506,
	29, 1506,
	30, 1506,
	36, 1506,
	41, 1506,
	42, 1506,
	44, 1506,
	45, 1506,
	46, 1506,
	47, 1506,
	48, 1506,
	49, 1506,
	50, 1506,
	52, 1506,
	53, 1506,
	54, 1506,
	55, 1506,
	57, 1506,
	58, 1506,
	59, 1506,
	60, 1506,
	61, 1506,
	62, 1506,
	63, 1506,
	67, 1506,
	68, 1506,
	69, 1506,
	70, 1506,
	72, 1506,
	73, 1506,
	74, 1506,
	78, 1506,
	79, 1506,
	80, 1506,
	81, 1506,
	82, 1506,
	83, 1506,
	84, 1506,
	87, 1506,
	88, 1506,
	89, 1506,
	90, 1506,
	91, 1506,
	93, 1506,
	95, 1506,
	96, 1506,
	97, 1506,
	98, 1506,
	99, 1506,
	100, 1506,
	102, 1506,
	103, 1506,
	104, 1506,
	106, 1506,
	107, 1506,
	115, 1506,
	116, 1506,
	117, 1506,
	118, 1506,
	120, 1506,
	121, 1506,
	122, 1506,
	124, 1506,
	125, 1506,
	126, 1506,
	128, 1506,
	129, 1506,
	131, 1506,
	132, 1506,
	133, 1506,
	136, 1506,
	137, 1506,
	138, 1506,
	140, 1506,
	141, 1506,
	143, 1506,
	144, 1506,
	145, 1506,
	147, 1506,
	148, 1506,
	149, 1506,
	150, 1506,
	151, 1506,
	152, 1506,
	153, 1506,
	154, 1506,
	155, 1506,
	156, 1506,
	157, 1506,
	158, 1506,
	159, 1506,
	160, 1506,
	161, 1506,
	163, 1506,
	169, 1506,
	170, 1506,
	171, 1506,
	172, 1506,
	176, 1506,
	178, 1506,
	182, 1506,
	183, 1506,
	184, 1506,
	185, 1506,
	186, 1506,
	187, 1506,
	188, 1506,
	189, 1506,
	190, 1506,
	191, 1506,
	192, 1506,
	193, 1506,
	195, 1506,
	196, 1506,
	198, 1506,
	199, 1506,
	201, 1506,
	202, 1506,
	203, 1506,
	204, 1506,
	205, 1506,
	206, 1506,
	207, 1506,
	208, 1506,
	209, 1506,
	211, 1506,
	212, 1506,
	214, 1506,
	215, 1506,
	216, 1506,
	217, 1506,
	221, 1506,
	222, 1506,
	223, 1506,
	224, 1506,
	225, 1506,
	228, 1506,
	229, 1506,
	230, 1506,
	232, 1506,
	234, 1506,
	235, 1506,
	237, 1506,
	239, 1506,
	240, 1506,
	241, 1506,
	243, 1506,
	247, 1506,
	248, 1506,
	249, 1506,
	250, 1506,
	251, 1506,
	252, 1506,
	254, 1506,
	255, 1506,
	256, 1506,
	258, 1506,
	259, 1506,
	261, 1506,
	262, 1506,
	265, 1506,
	269, 1506,
	270, 1506,
	273, 1506,
	274, 1506,
	275, 1506,
	276, 1506,
	278, 1506,
	279, 1506,
	280, 1506,
	281, 1506,
	282, 1506,
	283, 1506,
	284, 1506,
	285, 1506,
	286, 1506,
	287, 1506,
	288, 1506,
	289, 1506,
	290, 1506,
	291, 1506,
	292, 1506,
	293, 1506,
	294, 1506,
	295, 1506,
	296, 1506,
	297, 1506,
	298, 1506,
	299, 1506,
	301, 1506,
	303, 1506,
	304, 1506,
	305, 1506,
	306, 1506,
	307, 1506,
	308, 1506,
	309, 1506,
	310, 1506,
	311, 1506,
	312, 1506,
	313, 1506,
	314, 1506,
	316, 1506,
	318, 1506,
	320, 1506,
	321, 1506,
	323, 1506,
	324, 1506,
	325, 1506,
	326, 1506,
	327, 1506,
	330, 1506,
	334, 1506,
	335, 1506,
	336, 1506,
	339, 1506,
	340, 1506,
	341, 1506,
	343, 1506,
	345, 1506,
	346, 1506,
	347, 1506,
	348, 1506,
	349, 1506,
	350, 1506,
	351, 1506,
	352, 1506,
	353, 1506,
	354, 1506,
	355, 1506,
	356, 1506,
	358, 1506,
	359, 1506,
	360, 1506,
	361, 1506,
	362, 1506,
	363, 1506,
	364, 1506,
	365, 1506,
	366, 1506,
	367, 1506,
	368, 1506,
	369, 1506,
	370, 1506,
	371, 1506,
	372, 1506,
	374, 1506,
	375, 1506,
	377, 1506,
	378, 1506,
	379, 1506,
	380, 1506,
	381, 1506,
	382, 1506,
	383, 1506,
	384, 1506,
	385, 1506,
	386, 1506,
	387, 1506,
	388, 1506,
	390, 1506,
	396, 1506,
	398, 1506,
	399, 1506,
	400, 1506,
	401, 1506,
	402, 1506,
	403, 1506,
	404, 1506,
	405, 1506,
	407, 1506,
	408, 1506,
	409, 1506,
	411, 1506,
	412, 1506,
	413, 1506,
	414, 1506,
	415, 1506,
	416, 1506,
	418, 1506,
	419, 1506,
	420, 1506,
	421, 1506,
	422, 1506,
	423, 1506,
	424, 1506,
	425, 1506,
	426, 1506,
	427, 1506,
	428, 1506,
	430, 1506,
	431, 1506,
	432, 1506,
	433, 1506,
	434, 1506,
	435, 1506,
	437, 1506,
	438, 1506,
	439, 1506,
	440, 1506,
	441, 1506,
	442, 1506,
	444, 1506,
	445, 1506,
	446, 1506,
	447, 1506,
	448, 1506,
	449, 1506,
	450, 1506,
	452, 1506,
	454, 1506,
	455, 1506,
	456, 1506,
	457, 1506,
	458, 1506,
	459, 1506,
	460, 1506,
	461, 1506,
	462, 1506,
	463, 1506,
	464, 1506,
	465, 1506,
	466, 1506,
	468, 1506,
	469, 1506,
	471, 1506,
	473, 1506,
	474, 1506,
	475, 1506,
	476, 1506,
	477, 1506,
	478, 1506,
	479, 1506,
	480, 1506,
	481, 1506,
	483, 1506,
	484, 1506,
	485, 1506,
	486, 1506,
	487, 1506,
	489, 1506,
	491, 1506,
	492, 1506,
	493, 1506,
	494, 1506,
	495, 1506,
	496, 1506,
	498, 1506,
	499, 1506,
	500, 1506,
	501, 1506,
	503, 1506,
	504, 1506,
	507, 1506,
	508, 1506,
	509, 1506,
	510, 1506,
	511, 1506,
	512, 1506,
	513, 1506,
	515, 1506,
	518, 1506,
	519, 1506,
	520, 1506,
	521, 1506,
	522, 1506,
	523, 1506,
	525, 1506,
	526, 1506,
	527, 1506,
	528, 1506,
	533, 1506,
	534, 1506,
	535, 1506,
	536, 1506,
	537, 1506,
	538, 1506,
	-2, 0,
	-1, 813,
	4, 1160,
	21, 1160,
	22, 1160,
	23, 1160,
	24, 1160,
	25, 1160,
	26, 1160,
	27, 1160,
	29, 1160,
	30, 1160,
	36, 1160,
	41, 1160,
	42, 1160,
	44, 1160,
	45, 1160,
	46, 1160,
	47, 1160,
	48, 1160,
	49, 1160,
	50, 1160,
	52, 1160,
	53, 1160,
	54, 1160,
	55, 1160,
	57, 1160,
	58, 1160,
	59, 1160,
	60, 1160,
	61, 1160,
	62, 1160,
	63, 1160,
	67, 1160,
	68, 1160,
	69, 1160,
	70, 1160,
	72, 1160,
	73, 1160,
	74, 1160,
	78, 1160,
	79, 1160,
	80, 1160,
	81, 1160,
	82, 1160,
	83, 1160,
	84, 1160,
	87, 1160,
	88, 1160,
	89, 1160,
	90, 1160,
	91, 1160,
	93, 1160,
	95, 1160,
	96, 1160,
	97, 1160,
	98, 1160,
	99, 1160,
	100, 1160,
	102, 1160,
	103, 1160,
	104, 1160,
	106, 1160,
	107, 1160,
	115, 1160,
	116, 1160,
	117, 1160,
	118, 1160,
	120, 1160,
	121, 1160,
	122, 1160,
	124, 1160,
	125, 1160,
	126, 1160,
	128, 1160,
	129, 1160,
	131, 1160,
	132, 1160,
	133, 1160,
	136, 1160,
	137, 1160,
	138, 1160,
	140, 1160,
	141, 1160,
	143, 1160,
	144, 1160,
	145, 1160,
	147, 1160,
	148, 1160,
	149, 1160,
	150, 1160,
	151, 1160,
	152, 1160,
	153, 1160,
	154, 1160,
	155, 1160,
	156, 1160,
	157, 1160,
	158, 1160,
	159, 1160,
	160, 1160,
	161, 1160,
	163, 1160,
	169, 1160,
	170, 1160,
	171, 1160,
	172, 1160,
	176, 1160,
	178, 1160,
	182, 1160,
	183, 1160,
	184, 1160,
	185, 1160,
	186, 1160,
	187, 1160,
	188, 1160,
	189, 1160,
	190, 1160,
	191, 1160,
	192, 1160,
	193, 1160,
	195, 1160,
	196, 1160,
	198, 1160,
	199, 1160,
	201, 1160,
	202, 1160,
	203, 1160,
	204, 1160,
	205, 1160,
	206, 1160,
	207, 1160,
	208, 1160,
	209, 1160,
	211, 1160,
	212, 1160,
	214, 1160,
	215, 1160,
	216, 1160,
	217, 1160,
	221, 1160,
	222, 1160,
	223, 1160,
	224, 1160,
	225, 1160,
	228, 1160,
	229, 1160,
	230, 1160,
	232, 1160,
	234, 1160,
	235, 1160,
	237, 1160,
	239, 1160,
	240, 1160,
	241, 1160,
	243, 1160,
	247, 1160,
	248, 1160,
	249, 1160,
	250, 1160,
	251, 1160,
	252, 1160,
	254, 1160,
	255, 1160,
	256, 1160,
	258, 1160,
	259, 1160,
	261, 1160,
	262, 1160,
	265, 1160,
	269, 1160,
	270, 1160,
	273, 1160,
	274, 1160,
	275, 1160,
	276, 1160,
	278, 1160,
	279, 1160,
	280, 1160,
	281, 1160,
	282, 1160,
	283, 1160,
	284, 1160,
	285, 1160,
	286, 1160,
	287, 1160,
	288, 1160,
	289, 1160,
	290, 1160,
	291, 1160,
	292, 1160,
	293, 1160,
	294, 1160,
	295, 1160,
	296, 1160,
	297, 1160,
	298, 1160,
	299, 1160,
	301, 1160,
	303, 1160,
	304, 1160,
	305, 1160,
	306, 1160,
	307, 1160,
	308, 1160,
	309, 1160,
	310, 1160,
	311, 1160,
	312, 1160,
	313, 1160,
	314, 1160,
	316, 1160,
	318, 1160,
	320, 1160,
	321, 1160,
	323, 1160,
	324, 1160,
	325, 1160,
	326, 1160,
	327, 1160,
	330, 1160,
	334, 1160,
	335, 1160,
	336, 1160,
	339, 1160,
	340, 1160,
	341, 1160,
	343, 1160,
	345, 1160,
	346, 1160,
	347, 1160,
	348, 1160,
	349, 1160,
	350, 1160,
	351, 1160,
	352, 1160,
	353, 1160,
	354, 1160,
	355, 1160,
	356, 1160,
	358, 1160,
	359, 1160,
	360, 1160,
	361, 1160,
	362, 1160,
	363, 1160,
	364, 1160,
	365, 1160,
	366, 1160,
	367, 1160,
	368, 1160,
	369, 1160,
	370, 1160,
	371, 1160,
	372, 1160,
	374, 1160,
	375, 1160,
	377, 1160,
	378, 1160,
	379, 1160,
	380, 1160,
	381, 1160,
	382, 1160,
	383, 1160,
	384, 1160,
	385, 1160,
	386, 1160,
	387, 1160,
	388, 1160,
	390, 1160,
	396, 1160,
	398, 1160,
	399, 1160,
	400, 1160,
	401, 1160,
	402, 1160,
	403, 1160,
	404, 1160,
	405, 1160,
	407, 1160,
	408, 1160,
	409, 1160,
	411, 1160,
	412, 1160,
	413, 1160,
	414, 1160,
	415, 1160,
	416, 1160,
	418, 1160,
	419, 1160,
	420, 1160,
	421, 1160,
	422, 1160,
	423, 1160,
	424, 1160,
	425, 1160,
	426, 1160,
	427, 1160,
	428, 1160,
	430, 1160,
	431, 1160,
	432, 1160,
	433, 1160,
	434, 1160,
	435, 1160,
	437, 1160,
	438, 1160,
	439, 1160,
	440, 1160,
	441, 1160,
	442, 1160,
	444, 1160,
	445, 1160,
	446, 1160,
	447, 1160,
	448, 1160,
	449, 1160,
	450, 1160,
	452, 1160,
	454, 1160,
	455, 1160,
	456, 1160,
	457, 1160,
	458, 1160,
	459, 1160,
	460, 1160,
	461, 1160,
	462, 1160,
	463, 1160,
	464, 1160,
	465, 1160,
	466, 1160,
	468, 1160,
	469, 1160,
	471, 1160,
	473, 1160,
	474, 1160,
	475, 1160,
	476, 1160,
	477, 1160,
	478, 1160,
	479, 1160,
	480, 1160,
	481, 1160,
	483, 1160,
	484, 1160,
	485, 1160,
	486, 1160,
	487, 1160,
	489, 1160,
	491, 1160,
	492, 1160,
	493, 1160,
	494, 1160,
	495, 1160,
	496, 1160,
	498, 1160,
	499, 1160,
	500, 1160,
	501, 1160,
	503, 1160,
	504, 1160,
	507, 1160,
	508, 1160,
	509, 1160,
	510, 1160,
	511, 1160,
	512, 1160,
	513, 1160,
	515, 1160,
	518, 1160,
	519, 1160,
	520, 1160,
	521, 1160,
	522, 1160,
	523, 1160,
	525, 1160,
	526, 1160,
	527, 1160,
	528, 1160,
	533, 1160,
	534, 1160,
	535, 1160,
	536, 1160,
	537, 1160,
	538, 1160,
	-2, 0,
	-1, 894,
	379, 789,
	435, 789,
	493, 789,
	-2, 0,
	-1, 895,
	379, 788,
	435, 788,
	493, 788,
	-2, 730,
	-1, 899,
	1, 833,
	562, 833,
	564, 833,
	566, 833,
	-2, 0,
	-1, 900,
	1, 765,
	562, 765,
	564, 765,
	566, 765,
	-2, 0,
	-1, 901,
	1, 767,
	562, 767,
	564, 767,
	566, 767,
	-2, 0,
	-1, 902,
	1, 876,
	177, 876,
	562, 876,
	564, 876,
	566, 876,
	-2, 0,
	-1, 910,
	1, 792,
	562, 792,
	564, 792,
	566, 792,
	-2, 0,
	-1, 916,
	1, 833,
	562, 833,
	564, 833,
	566, 833,
	-2, 0,
	-1, 917,
	1, 835,
	562, 835,
	564, 835,
	566, 835,
	-2, 0,
	-1, 918,
	1, 838,
	562, 838,
	564, 838,
	566, 838,
	-2, 0,
	-1, 924,
	1, 855,
	562, 855,
	564, 855,
	566, 855,
	-2, 0,
	-1, 925,
	1, 857,
	562, 857,
	564, 857,
	566, 857,
	-2, 0,
	-1, 974,
	164, 1382,
	177, 1382,
	264, 1382,
	328, 1382,
	-2, 1318,
	-1, 989,
	164, 1381,
	177, 1381,
	264, 1381,
	328, 1381,
	-2, 1315,
	-1, 1015,
	565, 2062,
	-2, 637,
	-1, 1043,
	5, 2054,
	563, 2052,
	-2, 2043,
	-1, 1051,
	5, 2075,
	563, 2072,
	-2, 2063,
	-1, 1052,
	5, 2076,
	563, 2073,
	-2, 2064,
	-1, 1060,
	565, 2060,
	-2, 2042,
	-1, 1061,
	563, 2468,
	-2, 2061,
	-1, 1084,
	563, 2467,
	-2, 2077,
	-1, 1085,
	5, 1581,
	-2, 2438,
	-1, 1086,
	5, 1582,
	-2, 2439,
	-1, 1087,
	5, 1583,
	-2, 2453,
	-1, 1088,
	5, 1584,
	-2, 2417,
	-1, 1089,
	5, 1585,
	-2, 2451,
	-1, 1090,
	5, 1593,
	-2, 2430,
	-1, 1091,
	5, 1580,
	-2, 2426,
	-1, 1092,
	5, 1580,
	-2, 2425,
	-1, 1093,
	5, 1580,
	-2, 2444,
	-1, 1094,
	5, 1591,
	-2, 2419,
	-1, 1095,
	5, 1596,
	-2, 2418,
	-1, 1096,
	5, 1598,
	-2, 2463,
	-1, 1099,
	5, 1620,
	-2, 2456,
	-1, 1100,
	5, 1612,
	-2, 2457,
	-1, 1101,
	5, 1620,
	-2, 2458,
	-1, 1102,
	5, 1616,
	-2, 2459,
	-1, 1103,
	5, 1566,
	-2, 2431,
	-1, 1104,
	5, 1567,
	-2, 2432,
	-1, 1105,
	5, 1568,
	-2, 2420,
	-1, 1133,
	5, 1603,
	-2, 2464,
	-1, 1134,
	5, 1604,
	-2, 2454,
	-1, 1135,
	5, 1605,
	526, 1605,
	-2, 2421,
	-1, 1136,
	5, 1606,
	526, 1606,
	-2, 2422,
	-1, 1173,
	563, 2072,
	-2, 2063,
	-1, 1174,
	563, 2073,
	-2, 2064,
	-1, 1207,
	180, 2386,
	488, 2386,
	546, 2386,
	565, 2386,
	-2, 0,
	-1, 1210,
	1, 615,
	566, 615,
	-2, 1248,
	-1, 1339,
	398, 2038,
	437, 2038,
	556, 2038,
	-2, 2035,
	-1, 1351,
	567, 2038,
	-2, 2039,
	-1, 1358,
	1, 1136,
	562, 1136,
	564, 1136,
	566, 1136,
	-2, 1367,
	-1, 1414,
	386, 944,
	525, 944,
	-2, 350,
	-1, 1434,
	43, 2066,
	-2, 2036,
	-1, 1439,
	1, 1136,
	562, 1136,
	564, 1136,
	566, 1136,
	-2, 1367,
	-1, 1446,
	4, 1160,
	21, 1160,
	22, 1160,
	23, 1160,
	24, 1160,
	25, 1160,
	26, 1160,
	27, 1160,
	29, 1160,
	30, 1160,
	36, 1160,
	41, 1160,
	42, 1160,
	44, 1160,
	45, 1160,
	46, 1160,
	47, 1160,
	48, 1160,
	49, 1160,
	50, 1160,
	52, 1160,
	53, 1160,
	54, 1160,
	55, 1160,
	57, 1160,
	58, 1160,
	59, 1160,
	60, 1160,
	61, 1160,
	62, 1160,
	63, 1160,
	67, 1160,
	68, 1160,
	69, 1160,
	70, 1160,
	72, 1160,
	73, 1160,
	74, 1160,
	78, 1160,
	79, 1160,
	80, 1160,
	81, 1160,
	82, 1160,
	83, 1160,
	84, 1160,
	87, 1160,
	88, 1160,
	89, 1160,
	90, 1160,
	91, 1160,
	93, 1160,
	95, 1160,
	96, 1160,
	97, 1160,
	98, 1160,
	99, 1160,
	100, 1160,
	102, 1160,
	103, 1160,
	104, 1160,
	106, 1160,
	107, 1160,
	115, 1160,
	116, 1160,
	117, 1160,
	118, 1160,
	120, 1160,
	121, 1160,
	122, 1160,
	124, 1160,
	125, 1160,
	126, 1160,
	128, 1160,
	129, 1160,
	131, 1160,
	132, 1160,
	133, 1160,
	136, 1160,
	137, 1160,
	138, 1160,
	140, 1160,
	141, 1160,
	143, 1160,
	144, 1160,
	145, 1160,
	147, 1160,
	148, 1160,
	149, 1160,
	150, 1160,
	151, 1160,
	152, 1160,
	153, 1160,
	154, 1160,
	155, 1160,
	156, 1160,
	157, 1160,
	158, 1160,
	159, 1160,
	160, 1160,
	161, 1160,
	169, 1160,
	170, 1160,
	171, 1160,
	172, 1160,
	176, 1160,
	178, 1160,
	182, 1160,
	183, 1160,
	184, 1160,
	185, 1160,
	186, 1160,
	187, 1160,
	188, 1160,
	189, 1160,
	190, 1160,
	191, 1160,
	192, 1160,
	193, 1160,
	195, 1160,
	196, 1160,
	198, 1160,
	199, 1160,
	201, 1160,
	202, 1160,
	203, 1160,
	204, 1160,
	205, 1160,
	206, 1160,
	207, 1160,
	208, 1160,
	209, 1160,
	211, 1160,
	212, 1160,
	214, 1160,
	215, 1160,
	216, 1160,
	217, 1160,
	222, 1160,
	223, 1160,
	224, 1160,
	225, 1160,
	228, 1160,
	229, 1160,
	230, 1160,
	232, 1160,
	234, 1160,
	235, 1160,
	237, 1160,
	239, 1160,
	240, 1160,
	241, 1160,
	243, 1160,
	247, 1160,
	248, 1160,
	249, 1160,
	250, 1160,
	251, 1160,
	252, 1160,
	254, 1160,
	255, 1160,
	256, 1160,
	258, 1160,
	259, 1160,
	261, 1160,
	262, 1160,
	265, 1160,
	269, 1160,
	270, 1160,
	273, 1160,
	274, 1160,
	275, 1160,
	276, 1160,
	278, 1160,
	279, 1160,
	280, 1160,
	281, 1160,
	282, 1160,
	283, 1160,
	284, 1160,
	285, 1160,
	286, 1160,
	287, 1160,
	288, 1160,
	289, 1160,
	290, 1160,
	291, 1160,
	292, 1160,
	293, 1160,
	294, 1160,
	295, 1160,
	296, 1160,
	297, 1160,
	298, 1160,
	299, 1160,
	301, 1160,
	303, 1160,
	304, 1160,
	305, 1160,
	306, 1160,
	307, 1160,
	308, 1160,
	309, 1160,
	310, 1160,
	311, 1160,
	312, 1160,
	313, 1160,
	314, 1160,
	316, 1160,
	320, 1160,
	321, 1160,
	323, 1160,
	324, 1160,
	325, 1160,
	326, 1160,
	327, 1160,
	330, 1160,
	332, 1160,
	334, 1160,
	335, 1160,
	336, 1160,
	339, 1160,
	340, 1160,
	341, 1160,
	343, 1160,
	345, 1160,
	346, 1160,
	347, 1160,
	348, 1160,
	349, 1160,
	350, 1160,
	351, 1160,
	352, 1160,
	353, 1160,
	354, 1160,
	355, 1160,
	356, 1160,
	358, 1160,
	359, 1160,
	360, 1160,
	361, 1160,
	362, 1160,
	363, 1160,
	364, 1160,
	365, 1160,
	366, 1160,
	367, 1160,
	368, 1160,
	369, 1160,
	370, 1160,
	371, 1160,
	372, 1160,
	374, 1160,
	375, 1160,
	377, 1160,
	378, 1160,
	379, 1160,
	380, 1160,
	381, 1160,
	382, 1160,
	383, 1160,
	384, 1160,
	385, 1160,
	386, 1160,
	387, 1160,
	388, 1160,
	390, 1160,
	396, 1160,
	398, 1160,
	399, 1160,
	400, 1160,
	401, 1160,
	402, 1160,
	403, 1160,
	404, 1160,
	405, 1160,
	407, 1160,
	408, 1160,
	409, 1160,
	411, 1160,
	412, 1160,
	413, 1160,
	414, 1160,
	415, 1160,
	416, 1160,
	418, 1160,
	419, 1160,
	420, 1160,
	421, 1160,
	422, 1160,
	423, 1160,
	424, 1160,
	425, 1160,
	426, 1160,
	427, 1160,
	428, 1160,
	430, 1160,
	431, 1160,
	432, 1160,
	433, 1160,
	434, 1160,
	435, 1160,
	437, 1160,
	438, 1160,
	439, 1160,
	440, 1160,
	441, 1160,
	442, 1160,
	444, 1160,
	445, 1160,
	446, 1160,
	447, 1160,
	448, 1160,
	449, 1160,
	450, 1160,
	452, 1160,
	454, 1160,
	455, 1160,
	456, 1160,
	457, 1160,
	458, 1160,
	459, 1160,
	460, 1160,
	461, 1160,
	462, 1160,
	463, 1160,
	464, 1160,
	465, 1160,
	466, 1160,
	468, 1160,
	469, 1160,
	471, 1160,
	473, 1160,
	474, 1160,
	475, 1160,
	476, 1160,
	477, 1160,
	478, 1160,
	479, 1160,
	480, 1160,
	481, 1160,
	483, 1160,
	484, 1160,
	485, 1160,
	486, 1160,
	487, 1160,
	489, 1160,
	491, 1160,
	492, 1160,
	493, 1160,
	494, 1160,
	495, 1160,
	496, 1160,
	498, 1160,
	499, 1160,
	500, 1160,
	501, 1160,
	503, 1160,
	504, 1160,
	507, 1160,
	508, 1160,
	509, 1160,
	510, 1160,
	511, 1160,
	512, 1160,
	513, 1160,
	515, 1160,
	518, 1160,
	519, 1160,
	520, 1160,
	521, 1160,
	522, 1160,
	523, 1160,
	525, 1160,
	526, 1160,
	527, 1160,
	528, 1160,
	533, 1160,
	534, 1160,
	535, 1160,
	536, 1160,
	537, 1160,
	538, 1160,
	-2, 0,
	-1, 1520,
	1, 488,
	562, 488,
	564, 488,
	566, 488,
	-2, 1338,
	-1, 1523,
	4, 2462,
	11, 2462,
	12, 2462,
	14, 2462,
	15, 2462,
	16, 2462,
	17, 2462,
	18, 2462,
	19, 2462,
	21, 2462,
	22, 2462,
	23, 2462,
	24, 2462,
	25, 2462,
	26, 2462,
	27, 2462,
	29, 2462,
	30, 2462,
	33, 2462,
	34, 2462,
	36, 2462,
	38, 2462,
	41, 2462,
	42, 2462,
	44, 2462,
	45, 2462,
	46, 2462,
	47, 2462,
	48, 2462,
	49, 2462,
	50, 2462,
	52, 2462,
	53, 2462,
	54, 2462,
	55, 2462,
	57, 2462,
	58, 2462,
	59, 2462,
	60, 2462,
	61, 2462,
	62, 2462,
	63, 2462,
	67, 2462,
	68, 2462,
	69, 2462,
	70, 2462,
	72, 2462,
	73, 2462,
	74, 2462,
	75, 2462,
	78, 2462,
	79, 2462,
	80, 2462,
	81, 2462,
	82, 2462,
	83, 2462,
	84, 2462,
	85, 2462,
	87, 2462,
	88, 2462,
	89, 2462,
	90, 2462,
	91, 2462,
	93, 2462,
	94, 2462,
	95, 2462,
	96, 2462,
	97, 2462,
	98, 2462,
	99, 2462,
	100, 2462,
	102, 2462,
	103, 2462,
	104, 2462,
	105, 2462,
	106, 2462,
	107, 2462,
	115, 2462,
	116, 2462,
	117, 2462,
	118, 2462,
	120, 2462,
	121, 2462,
	122, 2462,
	124, 2462,
	125, 2462,
	126, 2462,
	128, 2462,
	129, 2462,
	131, 2462,
	132, 2462,
	133, 2462,
	136, 2462,
	137, 2462,
	138, 2462,
	140, 2462,
	141, 2462,
	143, 2462,
	144, 2462,
	145, 2462,
	147, 2462,
	148, 2462,
	149, 2462,
	150, 2462,
	151, 2462,
	152, 2462,
	153, 2462,
	154, 2462,
	155, 2462,
	156, 2462,
	157, 2462,
	158, 2462,
	159, 2462,
	160, 2462,
	161, 2462,
	165, 2462,
	166, 2462,
	167, 2462,
	168, 2462,
	169, 2462,
	170, 2462,
	171, 2462,
	172, 2462,
	175, 2462,
	176, 2462,
	178, 2462,
	181, 2462,
	182, 2462,
	183, 2462,
	184, 2462,
	185, 2462,
	186, 2462,
	187, 2462,
	188, 2462,
	189, 2462,
	190, 2462,
	191, 2462,
	192, 2462,
	193, 2462,
	195, 2462,
	196, 2462,
	198, 2462,
	199, 2462,
	201, 2462,
	202, 2462,
	203, 2462,
	204, 2462,
	205, 2462,
	206, 2462,
	207, 2462,
	208, 2462,
	209, 2462,
	210, 2462,
	211, 2462,
	212, 2462,
	213, 2462,
	214, 2462,
	215, 2462,
	216, 2462,
	217, 2462,
	219, 2462,
	220, 2462,
	222, 2462,
	223, 2462,
	224, 2462,
	225, 2462,
	227, 2462,
	228, 2462,
	229, 2462,
	230, 2462,
	232, 2462,
	234, 2462,
	235, 2462,
	236, 2462,
	237, 2462,
	238, 2462,
	239, 2462,
	240, 2462,
	241, 2462,
	242, 2462,
	243, 2462,
	245, 2462,
	246, 2462,
	247, 2462,
	248, 2462,
	249, 2462,
	250, 2462,
	251, 2462,
	252, 2462,
	254, 2462,
	255, 2462,
	256, 2462,
	258, 2462,
	259, 2462,
	260, 2462,
	261, 2462,
	262, 2462,
	263, 2462,
	265, 2462,
	269, 2462,
	270, 2462,
	273, 2462,
	274, 2462,
	275, 2462,
	276, 2462,
	277, 2462,
	278, 2462,
	279, 2462,
	280, 2462,
	281, 2462,
	282, 2462,
	283, 2462,
	284, 2462,
	285, 2462,
	286, 2462,
	287, 2462,
	288, 2462,
	289, 2462,
	290, 2462,
	291, 2462,
	292, 2462,
	293, 2462,
	294, 2462,
	295, 2462,
	296, 2462,
	297, 2462,
	298, 2462,
	299, 2462,
	301, 2462,
	302, 2462,
	303, 2462,
	304, 2462,
	305, 2462,
	306, 2462,
	307, 2462,
	308, 2462,
	309, 2462,
	310, 2462,
	311, 2462,
	312, 2462,
	313, 2462,
	314, 2462,
	316, 2462,
	319, 2462,
	320, 2462,
	321, 2462,
	323, 2462,
	324, 2462,
	325, 2462,
	326, 2462,
	327, 2462,
	330, 2462,
	334, 2462,
	335, 2462,
	336, 2462,
	337, 2462,
	339, 2462,
	340, 2462,
	341, 2462,
	343, 2462,
	345, 2462,
	346, 2462,
	347, 2462,
	348, 2462,
	349, 2462,
	350, 2462,
	351, 2462,
	352, 2462,
	353, 2462,
	354, 2462,
	355, 2462,
	356, 2462,
	358, 2462,
	359, 2462,
	360, 2462,
	361, 2462,
	362, 2462,
	363, 2462,
	364, 2462,
	365, 2462,
	366, 2462,
	367, 2462,
	368, 2462,
	369, 2462,
	370, 2462,
	371, 2462,
	372, 2462,
	374, 2462,
	375, 2462,
	377, 2462,
	378, 2462,
	379, 2462,
	380, 2462,
	381, 2462,
	382, 2462,
	383, 2462,
	384, 2462,
	385, 2462,
	386, 2462,
	387, 2462,
	388, 2462,
	390, 2462,
	396, 2462,
	397, 2462,
	398, 2462,
	399, 2462,
	400, 2462,
	401, 2462,
	402, 2462,
	403, 2462,
	404, 2462,
	405, 2462,
	407, 2462,
	408, 2462,
	409, 2462,
	410, 2462,
	411, 2462,
	412, 2462,
	413, 2462,
	414, 2462,
	415, 2462,
	416, 2462,
	417, 2462,
	418, 2462,
	419, 2462,
	420, 2462,
	421, 2462,
	422, 2462,
	423, 2462,
	424, 2462,
	425, 2462,
	426, 2462,
	427, 2462,
	428, 2462,
	430, 2462,
	431, 2462,
	432, 2462,
	433, 2462,
	434, 2462,
	435, 2462,
	437, 2462,
	438, 2462,
	439, 2462,
	440, 2462,
	441, 2462,
	442, 2462,
	443, 2462,
	444, 2462,
	445, 2462,
	446, 2462,
	447, 2462,
	448, 2462,
	449, 2462,
	450, 2462,
	452, 2462,
	454, 2462,
	455, 2462,
	456, 2462,
	457, 2462,
	458, 2462,
	459, 2462,
	460, 2462,
	461, 2462,
	462, 2462,
	463, 2462,
	464, 2462,
	465, 2462,
	466, 2462,
	468, 2462,
	469, 2462,
	471, 2462,
	473, 2462,
	474, 2462,
	475, 2462,
	476, 2462,
	477, 2462,
	478, 2462,
	479, 2462,
	480, 2462,
	481, 2462,
	483, 2462,
	484, 2462,
	485, 2462,
	486, 2462,
	487, 2462,
	489, 2462,
	491, 2462,
	492, 2462,
	493, 2462,
	494, 2462,
	495, 2462,
	496, 2462,
	498, 2462,
	499, 2462,
	500, 2462,
	501, 2462,
	503, 2462,
	504, 2462,
	507, 2462,
	508, 2462,
	509, 2462,
	510, 2462,
	511, 2462,
	512, 2462,
	513, 2462,
	515, 2462,
	518, 2462,
	519, 2462,
	520, 2462,
	521, 2462,
	522, 2462,
	523, 2462,
	525, 2462,
	526, 2462,
	527, 2462,
	528, 2462,
	533, 2462,
	534, 2462,
	535, 2462,
	536, 2462,
	537, 2462,
	538, 2462,
	539, 2462,
	541, 2462,
	544, 2462,
	545, 2462,
	546, 2462,
	547, 2462,
	548, 2462,
	549, 2462,
	551, 2462,
	552, 2462,
	553, 2462,
	554, 2462,
	555, 2462,
	556, 2462,
	557, 2462,
	558, 2462,
	559, 2462,
	561, 2462,
	564, 2462,
	565, 2462,
	567, 2462,
	568, 2462,
	-2, 0,
	-1, 1528,
	180, 2350,
	488, 2350,
	546, 2350,
	565, 2350,
	-2, 0,
	-1, 1577,
	379, 789,
	435, 789,
	493, 789,
	-2, 0,
	-1, 1603,
	1, 784,
	562, 784,
	564, 784,
	566, 784,
	-2, 0,
	-1, 1604,
	1, 820,
	562, 820,
	564, 820,
	566, 820,
	-2, 0,
	-1, 1605,
	1, 828,
	562, 828,
	564, 828,
	566, 828,
	-2, 0,
	-1, 1606,
	1, 791,
	562, 791,
	564, 791,
	566, 791,
	-2, 0,
	-1, 1608,
	1, 795,
	562, 795,
	564, 795,
	566, 795,
	-2, 0,
	-1, 1614,
	1, 802,
	562, 802,
	564, 802,
	566, 802,
	-2, 0,
	-1, 1642,
	1, 2408,
	562, 2408,
	564, 2408,
	565, 2408,
	566, 2408,
	-2, 853,
	-1, 1643,
	1, 2347,
	562, 2347,
	564, 2347,
	565, 2347,
	566, 2347,
	-2, 854,
	-1, 1658,
	1, 1243,
	566, 1243,
	-2, 1248,
	-1, 1661,
	164, 1381,
	177, 1381,
	264, 1381,
	328, 1381,
	-2, 1319,
	-1, 1755,
	146, 1340,
	164, 1340,
	177, 1340,
	231, 1340,
	264, 1340,
	328, 1340,
	338, 1340,
	505, 1340,
	-2, 1781,
	-1, 1815,
	564, 1931,
	-2, 0,
	-1, 1850,
	146, 1340,
	164, 1340,
	177, 1340,
	231, 1340,
	264, 1340,
	328, 1340,
	338, 1340,
	505, 1340,
	-2, 1468,
	-1, 1899,
	563, 1608,
	-2, 1596,
	-1, 1942,
	1, 617,
	566, 617,
	-2, 1248,
	-1, 2056,
	213, 223,
	-2, 2071,
	-1, 2057,
	213, 224,
	-2, 266,
	-1, 2185,
	1, 786,
	562, 786,
	564, 786,
	566, 786,
	-2, 0,
	-1, 2186,
	1, 822,
	562, 822,
	564, 822,
	566, 822,
	-2, 0,
	-1, 2187,
	1, 830,
	562, 830,
	564, 830,
	566, 830,
	-2, 0,
	-1, 2220,
	1, 804,
	562, 804,
	564, 804,
	566, 804,
	-2, 0,
	-1, 2266,
	415, 1408,
	416, 1408,
	-2, 1641,
	-1, 2297,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1661,
	-1, 2298,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1662,
	-1, 2299,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1663,
	-1, 2300,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1664,
	-1, 2301,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1665,
	-1, 2302,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1666,
	-1, 2303,
	94, 0,
	245, 0,
	246, 0,
	548, 0,
	549, 0,
	-2, 1667,
	-1, 2304,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1668,
	-1, 2316,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1680,
	-1, 2317,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1681,
	-1, 2318,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1682,
	-1, 2321,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1687,
	-1, 2327,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1691,
	-1, 2329,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1699,
	-1, 2330,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1700,
	-1, 2331,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1701,
	-1, 2332,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1702,
	-1, 2468,
	5, 2075,
	180, 1942,
	563, 2072,
	-2, 2063,
	-1, 2469,
	180, 1943,
	-2, 2413,
	-1, 2470,
	180, 1944,
	-2, 2250,
	-1, 2471,
	180, 1945,
	-2, 2142,
	-1, 2472,
	180, 1946,
	-2, 2192,
	-1, 2473,
	180, 1947,
	-2, 2235,
	-1, 2474,
	180, 1948,
	-2, 2345,
	-1, 2475,
	180, 1949,
	-2, 1764,
	-1, 2544,
	1, 1469,
	2, 1469,
	105, 1469,
	146, 1469,
	164, 1469,
	177, 1469,
	181, 1469,
	197, 1469,
	200, 1469,
	227, 1469,
	231, 1469,
	242, 1469,
	260, 1469,
	264, 1469,
	302, 1469,
	328, 1469,
	332, 1469,
	338, 1469,
	406, 1469,
	410, 1469,
	505, 1469,
	516, 1469,
	530, 1469,
	531, 1469,
	532, 1469,
	542, 1469,
	562, 1469,
	564, 1469,
	566, 1469,
	568, 1469,
	-2, 1468,
	-1, 2557,
	563, 2044,
	-2, 2058,
	-1, 2559,
	52, 1367,
	131, 1367,
	-2, 282,
	-1, 2584,
	563, 1607,
	-2, 1597,
	-1, 2725,
	1, 1136,
	562, 1136,
	564, 1136,
	566, 1136,
	-2, 1367,
	-1, 2901,
	333, 1411,
	-2, 2452,
	-1, 2902,
	333, 1412,
	-2, 2331,
	-1, 2906,
	415, 2008,
	416, 2008,
	-2, 1762,
	-1, 2907,
	415, 2012,
	416, 2012,
	-2, 1763,
	-1, 2908,
	415, 2009,
	416, 2009,
	-2, 1762,
	-1, 2909,
	415, 2013,
	416, 2013,
	-2, 1763,
	-1, 2922,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1689,
	-1, 2923,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1693,
	-1, 2929,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1695,
	-1, 3159,
	1, 614,
	562, 614,
	564, 614,
	566, 614,
	-2, 1248,
	-1, 3292,
	1, 1136,
	562, 1136,
	564, 1136,
	566, 1136,
	-2, 1367,
	-1, 3402,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1697,
	-1, 3409,
	236, 0,
	238, 0,
	319, 0,
	-2, 1716,
	-1, 3476,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1745,
	-1, 3477,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1746,
	-1, 3478,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1747,
	-1, 3482,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1751,
	-1, 3483,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1752,
	-1, 3484,
	14, 0,
	15, 0,
	16, 0,
	544, 0,
	545, 0,
	546, 0,
	-2, 1753,
	-1, 3530,
	563, 2045,
	-2, 2059,
	-1, 3567,
	565, 2060,
	-2, 1170,
	-1, 3670,
	565, 2569,
	-2, 1295,
	-1, 3728,
	236, 0,
	238, 0,
	319, 0,
	-2, 1717,
	-1, 3731,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1720,
	-1, 3732,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1722,
	-1, 3948,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1721,
	-1, 3949,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 1723,
	-1, 3960,
	236, 0,
	-2, 1754,
	-1, 4118,
	236, 0,
	-2, 1755,
	-1, 4278,
	49, 0,
	210, 0,
	263, 0,
	443, 0,
	539, 0,
	547, 0,
	-2, 2416,
}

const sqlPrivate = 57344

const sqlLast = 115085

var sqlAct = [...]int{

	250, 2787, 3277, 3997, 2817, 3080, 3276, 4164, 4146, 4288,
	4252, 4390, 4168, 4277, 3711, 4000, 2622, 4236, 2053, 4218,
	4051, 4233, 4289, 4339, 4290, 4071, 4122, 3441, 1177, 3985,
	4044, 2663, 3905, 3304, 3900, 3872, 4276, 3969, 1511, 4060,
	3854, 3937, 2276, 3886, 2163, 3662, 3604, 2139, 3309, 3798,
	3815, 4085, 3394, 2344, 1507, 990, 3910, 1886, 3272, 3302,
	1670, 2284, 3622, 2688, 3624, 3564, 1997, 3638, 1243, 2826,
	2776, 2915, 724, 2500, 999, 1543, 3563, 3359, 2277, 2154,
	2758, 3357, 688, 1856, 3177, 3965, 3533, 2748, 3095, 3123,
	3103, 2839, 3063, 1378, 2828, 3086, 3710, 724, 1361, 2773,
	1934, 2836, 998, 168, 3767, 2825, 2007, 1585, 827, 1043,
	2819, 3262, 1825, 3084, 2048, 1336, 2624, 2771, 2047, 2788,
	2537, 3501, 2281, 2099, 4123, 2899, 1166, 2536, 3062, 1801,
	4, 2357, 2386, 1344, 1542, 719, 1763, 2702, 2137, 2835,
	1487, 1432, 4165, 2026, 104, 244, 1157, 2759, 2033, 1054,
	1047, 1226, 2388, 2042, 1978, 1050, 243, 2662, 2497, 1887,
	1981, 1658, 1826, 3130, 2518, 2377, 1968, 2265, 2341, 2248,
	1521, 2246, 3274, 2569, 2539, 2161, 1498, 1842, 1437, 2829,
	2781, 1052, 2613, 725, 2087, 653, 1355, 2568, 726, 1212,
	1796, 2380, 168, 1049, 1160, 2526, 1835, 2508, 1139, 1363,
	2464, 2430, 38, 2358, 1748, 1671, 1672, 670, 2247, 2249,
	721, 1845, 1614, 1341, 2086, 682, 772, 730, 1174, 177,
	821, 1461, 1373, 639, 1156, 2111, 1996, 661, 733, 1519,
	178, 800, 2270, 1028, 656, 43, 42, 40, 31, 664,
	29, 1137, 730, 27, 1677, 2950, 1162, 1384, 888, 1657,
	908, 2946, 3515, 733, 3516, 2128, 4457, 2128, 1377, 3082,
	2517, 2128, 1685, 1686, 2128, 1718, 1719, 1720, 1728, 1729,
	1730, 2128, 4447, 4434, 4433, 4424, 3338, 2517, 2517, 2061,
	994, 1097, 4407, 4405, 1721, 1716, 3814, 3814, 1221, 4319,
	4312, 4310, 1688, 4320, 2517, 2517, 1221, 3318, 4307, 4304,
	1734, 4299, 4308, 4305, 4274, 2061, 4273, 842, 2061, 3319,
	2061, 4272, 4267, 1154, 2162, 2147, 2147, 4266, 1685, 1686,
	3153, 2147, 3505, 3138, 995, 4261, 1687, 1172, 4259, 3814,
	3152, 994, 3814, 4231, 1685, 1686, 1707, 3814, 3338, 2914,
	4208, 1716, 1685, 1686, 2575, 1704, 4201, 4200, 1688, 4195,
	2517, 2517, 4194, 3814, 2959, 2517, 3814, 1716, 3035, 3036,
	2960, 3053, 3054, 3055, 1688, 1716, 4188, 4160, 2594, 2510,
	2061, 3864, 1688, 1169, 4120, 4102, 2571, 4099, 2575, 3699,
	3726, 2061, 1687, 4096, 1140, 1140, 4053, 3814, 975, 4018,
	4054, 4017, 4009, 2061, 4209, 2061, 2061, 4008, 1687, 974,
	1551, 3814, 4124, 2061, 3976, 3950, 1687, 89, 2061, 2575,
	3929, 1168, 2061, 1188, 2147, 4115, 1710, 1711, 1712, 1713,
	1143, 4103, 1144, 3918, 989, 984, 1693, 3338, 1195, 3849,
	3837, 3813, 3050, 2517, 2517, 3814, 2147, 1685, 1686, 3505,
	1718, 1719, 1720, 1728, 1729, 1730, 3730, 3678, 2593, 3672,
	2575, 3354, 1141, 3354, 3636, 2509, 3899, 3864, 3637, 1721,
	1716, 1725, 3525, 3838, 1735, 3523, 3526, 1688, 3508, 3524,
	1715, 1717, 2517, 3425, 3421, 1734, 3353, 2061, 2517, 3345,
	3354, 3079, 1693, 3346, 3074, 2517, 3073, 1731, 2517, 1732,
	2517, 2061, 3699, 1189, 215, 1045, 1702, 1703, 1693, 3346,
	3026, 1687, 3035, 3036, 3027, 3000, 1693, 2679, 2992, 3001,
	2517, 1707, 2993, 2990, 1723, 2612, 1947, 2517, 1685, 1686,
	1704, 2961, 3041, 2001, 2127, 2517, 1715, 1717, 1708, 2842,
	2815, 2143, 2754, 2147, 2150, 3035, 3036, 217, 2060, 2696,
	2814, 1716, 1715, 1717, 2150, 2597, 2610, 1821, 1688, 2517,
	1715, 1717, 2574, 2566, 2560, 1372, 2575, 2517, 2061, 2383,
	2516, 2949, 2149, 2553, 2517, 2552, 2150, 3595, 3397, 3375,
	1733, 1843, 2036, 2551, 1587, 1386, 3320, 2550, 2549, 1145,
	1685, 1686, 1687, 3056, 1708, 1142, 216, 983, 1722, 982,
	981, 1710, 1711, 1712, 1713, 3321, 2129, 209, 2129, 980,
	1708, 1693, 2129, 1716, 979, 2129, 210, 2879, 1708, 978,
	1688, 977, 2129, 215, 973, 972, 971, 970, 969, 1685,
	1686, 968, 967, 966, 3051, 965, 964, 963, 179, 962,
	961, 3995, 960, 959, 958, 957, 1725, 939, 886, 1735,
	885, 884, 883, 2384, 1687, 1715, 1717, 882, 1714, 1688,
	881, 880, 879, 878, 1707, 877, 217, 876, 875, 874,
	873, 872, 1731, 871, 1732, 870, 3041, 869, 1709, 868,
	867, 1702, 1703, 866, 1607, 865, 864, 863, 862, 215,
	861, 860, 1693, 1687, 859, 858, 857, 1052, 856, 1723,
	855, 1052, 141, 845, 1726, 2126, 1026, 3318, 844, 3041,
	840, 839, 833, 1708, 832, 216, 3783, 1246, 1189, 790,
	789, 1246, 747, 746, 745, 1366, 2767, 744, 2061, 736,
	735, 734, 217, 2385, 1709, 2382, 1715, 1717, 1216, 703,
	694, 693, 692, 676, 1710, 1711, 1712, 1713, 238, 1052,
	1709, 1052, 237, 1052, 1693, 1733, 236, 179, 1709, 1366,
	3912, 235, 234, 233, 232, 1377, 231, 2509, 3742, 1347,
	2804, 1225, 2127, 1722, 3052, 1230, 2061, 1352, 3051, 2143,
	230, 216, 229, 228, 1366, 1537, 2241, 227, 226, 225,
	224, 223, 209, 1693, 1708, 222, 221, 220, 1715, 1717,
	1724, 210, 219, 218, 3543, 1699, 1700, 1706, 1727, 1705,
	1701, 3051, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694,
	1695, 3519, 1376, 179, 3355, 4221, 1189, 3126, 1366, 1052,
	2972, 2955, 1398, 1714, 1366, 2735, 2579, 215, 1366, 2558,
	1443, 1445, 2543, 1846, 3077, 2413, 1052, 1976, 1052, 1869,
	1774, 1380, 1366, 1709, 1232, 1210, 1708, 2157, 1052, 1386,
	1052, 2399, 1239, 2397, 1333, 1338, 1684, 4295, 1698, 1696,
	1697, 1689, 1690, 1691, 1692, 1694, 1695, 2387, 1765, 1726,
	217, 1435, 3078, 730, 1176, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 4275, 733, 1689, 1690, 1691, 1692, 1694,
	1695, 3047, 3048, 3049, 1366, 3035, 3036, 1205, 3046, 3044,
	3045, 3037, 3038, 3039, 3040, 3042, 3043, 4175, 3052, 4127,
	1508, 1375, 1052, 4112, 1170, 1052, 1374, 4106, 4104, 216,
	1385, 3035, 3036, 2684, 1709, 3964, 2156, 168, 168, 3919,
	209, 3898, 3790, 1804, 3765, 3764, 3758, 3757, 1804, 210,
	1803, 3052, 1383, 3756, 1390, 1803, 1396, 3914, 3035, 3036,
	1386, 3749, 1492, 1495, 2769, 1524, 1526, 3748, 1430, 1392,
	1556, 179, 1807, 1772, 3746, 1724, 1714, 1802, 995, 2784,
	1699, 1700, 1706, 1727, 1705, 1701, 2381, 1698, 1696, 1697,
	1689, 1690, 1691, 1692, 1694, 1695, 1709, 3741, 1216, 1504,
	3752, 1216, 1448, 3738, 3751, 3050, 3737, 3035, 3036, 3635,
	3547, 3593, 2588, 3641, 3546, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 3545, 1464, 1766, 3529, 1764, 3349, 3496, 3495,
	3494, 3417, 1517, 1522, 1623, 3413, 1397, 3121, 1501, 1555,
	1662, 3070, 3061, 3034, 1767, 1765, 1052, 3031, 3030, 1535,
	3028, 1540, 1052, 3044, 3045, 3037, 3038, 3039, 3040, 3042,
	3043, 1549, 2999, 1554, 2998, 2102, 2997, 2994, 2991, 3041,
	1697, 1689, 1690, 1691, 1692, 1694, 1695, 2971, 1685, 1686,
	2954, 1718, 1719, 1720, 1728, 1729, 1730, 3045, 3037, 3038,
	3039, 3040, 3042, 3043, 1536, 3041, 2947, 1656, 2068, 2816,
	2544, 1716, 2370, 1684, 215, 1386, 1550, 2066, 1688, 1683,
	4451, 215, 4399, 1153, 4398, 1541, 1734, 4369, 3642, 4329,
	4327, 1178, 3041, 1608, 3443, 1685, 1686, 1754, 3075, 4167,
	1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 4156,
	4153, 4152, 1687, 4151, 4143, 4136, 2768, 217, 1561, 4126,
	4125, 4100, 1707, 4084, 217, 1688, 1578, 1052, 1052, 1052,
	4083, 1704, 2347, 1052, 4069, 4066, 4014, 3991, 1610, 3962,
	1174, 3041, 1174, 1391, 1691, 1692, 1694, 1695, 3945, 1823,
	3944, 4396, 3926, 3925, 3889, 3865, 3782, 1246, 3913, 1687,
	995, 3763, 3700, 2353, 3694, 1052, 216, 3051, 724, 3691,
	3583, 3582, 3994, 216, 1904, 724, 1659, 209, 1366, 1667,
	1666, 1609, 215, 3569, 209, 1052, 210, 3568, 3511, 1366,
	3499, 3408, 1752, 210, 3051, 3356, 3339, 3295, 975, 3234,
	1661, 3207, 1710, 1711, 1712, 1713, 1832, 1052, 179, 974,
	1877, 1806, 1693, 1246, 1663, 179, 3642, 1680, 1681, 3180,
	3179, 3146, 2976, 2975, 2970, 217, 2938, 2747, 3144, 215,
	1810, 1809, 1216, 3035, 3036, 1808, 1965, 1853, 1879, 1805,
	1829, 1830, 1797, 3051, 1795, 2586, 168, 1725, 2585, 1172,
	1735, 1172, 1872, 2555, 2548, 215, 1715, 1717, 1940, 1693,
	2515, 2395, 1883, 1798, 1799, 1939, 1685, 1686, 1868, 1930,
	1824, 1876, 217, 1819, 216, 1818, 1935, 1817, 1816, 1815,
	1814, 1974, 1702, 1703, 1813, 209, 995, 1945, 1812, 2158,
	4128, 3118, 1811, 1140, 210, 1169, 1688, 1169, 217, 1792,
	1723, 1791, 1790, 1789, 1788, 1787, 1786, 3052, 1785, 1784,
	1783, 1782, 1875, 730, 1708, 1844, 179, 1781, 1780, 1779,
	730, 216, 1778, 1898, 733, 1767, 1753, 215, 1751, 1746,
	1687, 733, 209, 1168, 3052, 1168, 1851, 1204, 1193, 3180,
	1184, 210, 3892, 2648, 3786, 3734, 1860, 216, 3542, 1942,
	3522, 1366, 1366, 3514, 1854, 2958, 1938, 2546, 209, 1467,
	1822, 1246, 1989, 179, 3980, 3788, 215, 210, 3541, 2577,
	217, 3035, 3036, 1873, 1967, 1518, 1766, 2412, 1880, 1863,
	1862, 1861, 1859, 3052, 1858, 1927, 1848, 1857, 2022, 2783,
	1462, 2025, 3324, 2398, 2030, 2396, 3142, 3041, 1749, 1967,
	3840, 1864, 1229, 4389, 1884, 1967, 3305, 4154, 1227, 217,
	4061, 4056, 4055, 3917, 997, 1221, 1846, 3867, 3866, 216,
	3039, 3040, 3042, 3043, 3839, 3785, 2054, 2058, 3703, 3210,
	209, 3702, 4107, 4105, 1714, 3701, 215, 1970, 1960, 210,
	3517, 3046, 3044, 3045, 3037, 3038, 3039, 3040, 3042, 3043,
	2667, 3341, 3340, 3395, 1709, 1901, 3645, 1586, 216, 1654,
	1228, 179, 1577, 1221, 2006, 2996, 1221, 2995, 2920, 209,
	2034, 3037, 3038, 3039, 3040, 3042, 3043, 1804, 210, 217,
	1726, 1776, 1787, 2650, 1803, 1224, 3581, 955, 3279, 1943,
	3278, 1787, 4271, 2155, 4052, 4315, 2051, 4300, 730, 2177,
	179, 1773, 4287, 3263, 2840, 1587, 1366, 2049, 1366, 733,
	1366, 1953, 215, 3601, 215, 3600, 3586, 3046, 3044, 3045,
	3037, 3038, 3039, 3040, 3042, 3043, 1366, 1366, 216, 3966,
	956, 3372, 2092, 3157, 3082, 1624, 1375, 1366, 2097, 209,
	3445, 1374, 2378, 2108, 2964, 2584, 4296, 1820, 210, 1366,
	1800, 1366, 1366, 1366, 2029, 217, 3270, 217, 2096, 1491,
	2103, 1442, 4309, 1369, 2164, 1199, 2693, 4306, 3314, 3558,
	179, 4147, 2690, 724, 2001, 2059, 1724, 3901, 4230, 4133,
	3183, 1699, 1700, 1706, 1727, 1705, 1701, 1466, 1698, 1696,
	1697, 1689, 1690, 1691, 1692, 1694, 1695, 4356, 4355, 3256,
	3389, 4035, 3576, 2105, 216, 2823, 216, 2780, 3828, 4380,
	4297, 2078, 2131, 1565, 1222, 209, 1408, 209, 2116, 2598,
	785, 2160, 2118, 3161, 210, 4446, 210, 2079, 953, 2176,
	4028, 1959, 1958, 951, 1416, 1967, 1969, 2181, 1689, 1690,
	1691, 1692, 1694, 1695, 1152, 4020, 179, 2383, 179, 949,
	995, 947, 995, 1222, 1052, 2226, 1052, 2110, 3862, 935,
	1464, 2165, 2113, 1052, 2113, 2114, 1904, 1904, 1246, 1892,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1522, 1052, 1522, 1052, 1052,
	1052, 1052, 2258, 1622, 1954, 1417, 1229, 944, 730, 786,
	2224, 1467, 1211, 3610, 1205, 3609, 1218, 2245, 3603, 733,
	1052, 2384, 3599, 1052, 1052, 2151, 1370, 2152, 1621, 3597,
	3614, 1052, 3555, 3163, 2001, 1052, 3554, 1052, 1052, 3259,
	1962, 3137, 2168, 2169, 2969, 1246, 2626, 2968, 2967, 2966,
	2924, 1052, 1052, 1052, 1052, 1218, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1228, 3810, 3037, 3038, 3039, 3040,
	3042, 3043, 3143, 2202, 1229, 2700, 2699, 2695, 1563, 1544,
	1003, 2426, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 4381, 215, 3613, 1223, 1052, 2359, 2360, 3806, 2220,
	2256, 2385, 3209, 2382, 1695, 1898, 1898, 1174, 2155, 2686,
	2359, 2375, 2269, 2185, 1246, 2282, 2283, 2678, 993, 2677,
	2676, 2675, 3561, 1174, 1620, 2654, 1170, 2641, 1170, 2567,
	2328, 215, 1228, 1223, 1660, 217, 2421, 1222, 2242, 1052,
	1246, 2244, 2243, 2425, 2286, 2250, 2257, 2777, 3373, 1964,
	3807, 1219, 2077, 1477, 2629, 2467, 2467, 2481, 2254, 2359,
	1220, 1558, 2501, 2503, 2239, 2616, 995, 975, 2507, 2186,
	975, 975, 3943, 2374, 217, 995, 2652, 2531, 2273, 995,
	2614, 2274, 2275, 2578, 216, 2616, 2605, 1963, 2671, 1454,
	1219, 1453, 1412, 941, 1603, 209, 1998, 4384, 2173, 1220,
	2614, 1425, 2523, 992, 210, 1452, 2640, 1451, 1181, 3043,
	2664, 2665, 2556, 2235, 2343, 2256, 1172, 1579, 1853, 2882,
	2423, 2343, 2355, 216, 2378, 2424, 179, 2187, 2427, 1994,
	2428, 2429, 1172, 4002, 209, 2664, 2665, 1901, 1901, 1466,
	2372, 2664, 2665, 210, 3841, 2387, 2570, 1246, 1179, 1218,
	1604, 2559, 2545, 2238, 1999, 2000, 2230, 1633, 168, 1575,
	2897, 1216, 1169, 2190, 3620, 179, 1140, 995, 4355, 1665,
	2522, 4408, 2193, 2254, 1637, 3224, 1559, 1587, 1169, 1904,
	2184, 1371, 2463, 2476, 1995, 1653, 2572, 4385, 3824, 2492,
	2505, 788, 787, 2591, 2255, 1203, 1992, 2513, 2514, 2483,
	1168, 2639, 2692, 3619, 2524, 2528, 2529, 1246, 1605, 2115,
	994, 2387, 651, 2580, 3223, 2912, 1168, 1851, 1806, 1221,
	3217, 1366, 2618, 2885, 2530, 704, 2535, 1223, 2008, 2541,
	2542, 1864, 2595, 3572, 2691, 3160, 1052, 1052, 646, 1052,
	2689, 3380, 3379, 2032, 3802, 2876, 2727, 4004, 2628, 3803,
	2012, 2252, 1182, 2687, 2381, 1587, 853, 2237, 1221, 3216,
	3861, 2596, 1366, 2253, 2587, 1619, 2031, 930, 1438, 701,
	3598, 3434, 2351, 3596, 1798, 1799, 2194, 4293, 3585, 2349,
	3258, 2601, 3228, 2656, 1219, 2726, 2590, 2592, 1562, 2694,
	930, 988, 1616, 1220, 4372, 4387, 4366, 2603, 2765, 2027,
	3805, 2674, 2791, 2653, 2672, 2009, 2599, 2617, 945, 2255,
	2643, 4371, 1436, 945, 988, 846, 3808, 1564, 1366, 1366,
	2020, 1366, 2655, 3942, 1999, 2000, 2004, 2651, 1898, 945,
	2604, 946, 2621, 1366, 2225, 2673, 2631, 2634, 2657, 2911,
	709, 2666, 2668, 2669, 2670, 783, 2837, 782, 1366, 2751,
	2602, 1892, 1892, 2884, 2028, 1834, 834, 2811, 2133, 2019,
	1935, 2135, 2757, 2565, 2234, 2003, 4411, 2140, 2807, 2647,
	2142, 1971, 1972, 699, 2145, 4344, 730, 991, 2253, 2339,
	931, 2627, 3822, 2881, 4393, 2065, 2064, 733, 1052, 3716,
	2761, 3311, 2904, 2905, 3715, 1414, 2001, 945, 2046, 2223,
	2730, 3312, 2683, 931, 2732, 2023, 2013, 2337, 2841, 1476,
	2809, 1634, 2861, 4148, 1375, 2387, 4162, 2845, 2846, 2733,
	717, 4205, 168, 1438, 3195, 3627, 3162, 2745, 2852, 2853,
	2854, 1838, 1052, 3804, 3625, 2822, 1631, 2736, 1052, 1052,
	2739, 2798, 2741, 2755, 711, 2801, 4294, 2802, 1411, 2045,
	2812, 4437, 1221, 2887, 2775, 2889, 820, 1191, 2128, 3881,
	1901, 2863, 2793, 2864, 2865, 2786, 4343, 2794, 1793, 2858,
	3811, 2014, 2015, 4386, 2883, 3311, 3584, 1841, 2325, 1992,
	3194, 2867, 2616, 2869, 2782, 2871, 1992, 2782, 2808, 3140,
	3712, 2813, 1836, 1052, 1052, 2010, 2615, 2632, 4003, 1052,
	3367, 2824, 715, 1180, 986, 2880, 930, 3955, 2236, 3360,
	1839, 2843, 1052, 1052, 4365, 2847, 3939, 2848, 1052, 1052,
	1522, 2240, 4250, 3198, 1052, 2806, 3237, 2192, 2935, 3823,
	988, 1560, 3573, 1052, 1052, 1052, 2011, 4241, 669, 1052,
	4292, 2926, 3628, 3847, 2333, 2866, 1635, 3431, 2342, 1052,
	2927, 3627, 1837, 847, 848, 2369, 2933, 1745, 2892, 2974,
	3625, 2903, 2334, 942, 932, 2037, 1052, 2335, 2527, 647,
	2044, 2340, 3200, 4412, 706, 987, 700, 2860, 2540, 4094,
	994, 3447, 3097, 2913, 2894, 2893, 2948, 932, 2868, 2873,
	2870, 4400, 2872, 3891, 835, 836, 1574, 1576, 2269, 2898,
	3367, 2189, 3362, 4203, 710, 3706, 1664, 2952, 2953, 3360,
	737, 4322, 2956, 1632, 3538, 854, 1196, 3361, 2183, 931,
	4323, 702, 2890, 1591, 698, 3717, 4391, 3432, 3391, 3623,
	1636, 4086, 1202, 2957, 716, 3199, 2895, 4169, 4204, 2323,
	4291, 648, 2326, 4354, 4087, 3938, 2016, 713, 4352, 4184,
	4068, 3660, 3298, 708, 2021, 2085, 1052, 1052, 1052, 4342,
	1840, 1831, 995, 1011, 2925, 1052, 1052, 1052, 3628, 3882,
	1052, 1194, 1187, 638, 1892, 4088, 3640, 1675, 1838, 2043,
	1052, 1174, 1246, 3761, 3485, 649, 1052, 650, 1052, 3089,
	3090, 3713, 2322, 2930, 1358, 705, 1174, 2350, 2272, 933,
	2002, 3626, 3362, 1170, 3358, 2024, 1955, 3131, 4011, 4010,
	4077, 3989, 2963, 4132, 1246, 1952, 2931, 3361, 2017, 1170,
	2936, 3661, 933, 712, 1841, 4392, 1174, 3607, 1401, 1246,
	4417, 3557, 3299, 3291, 4090, 849, 850, 718, 3111, 2525,
	3175, 3430, 2336, 3072, 3171, 2766, 1904, 934, 707, 2760,
	1246, 2749, 2338, 1439, 242, 2109, 4089, 1839, 4394, 3091,
	2098, 3827, 2090, 2071, 1366, 1366, 3096, 1052, 3826, 1674,
	934, 2387, 1468, 4091, 4170, 1405, 837, 838, 2633, 3500,
	3940, 1052, 3125, 4219, 675, 2262, 3101, 3551, 3392, 1950,
	1172, 3099, 4438, 1904, 4185, 2231, 1948, 1514, 3663, 2129,
	3167, 3168, 3120, 932, 1674, 1172, 2746, 1530, 3906, 1479,
	4050, 1052, 1366, 1216, 3363, 3364, 3365, 3366, 3184, 4048,
	3990, 3188, 3718, 3067, 3068, 3069, 3186, 3626, 3100, 1951,
	3182, 3136, 1674, 3109, 3181, 1172, 1169, 2918, 3117, 3112,
	3113, 3158, 3083, 2896, 3129, 1669, 3105, 1366, 738, 739,
	1606, 1169, 3124, 3150, 4321, 3164, 2174, 1246, 3513, 3098,
	3172, 1745, 1935, 1935, 3154, 3155, 1366, 3486, 2658, 1673,
	3212, 1366, 2324, 1569, 1168, 3762, 3487, 3240, 3094, 3093,
	3243, 1169, 1834, 3110, 3248, 3250, 2564, 3185, 2040, 1168,
	3190, 2932, 2563, 3192, 1366, 1898, 3133, 3134, 3135, 2562,
	1366, 2934, 1366, 3719, 1673, 3141, 1246, 1840, 3147, 3148,
	1935, 3149, 3197, 724, 3363, 3364, 3365, 3366, 2263, 1168,
	3235, 2561, 3632, 2753, 1366, 1989, 3115, 992, 3116, 4416,
	3159, 3998, 1673, 1675, 3275, 1366, 985, 3106, 933, 2038,
	1446, 1876, 1898, 3165, 1460, 1935, 4139, 3227, 3215, 2519,
	1458, 1174, 3176, 1592, 1447, 3307, 1989, 852, 1838, 4045,
	3290, 3226, 3825, 4171, 1935, 3873, 3245, 2637, 3201, 1935,
	2837, 3252, 3208, 3350, 3170, 3261, 3552, 3264, 2039, 2837,
	2107, 3266, 3219, 3923, 4362, 3104, 934, 741, 740, 4166,
	3222, 2844, 2034, 1366, 1366, 3220, 1675, 2799, 3230, 3221,
	2034, 3236, 3284, 2803, 1841, 3316, 2731, 2729, 4092, 3253,
	3214, 1568, 4227, 4093, 3257, 1366, 3108, 3204, 3205, 1836,
	3246, 3206, 3330, 2521, 3132, 4216, 1435, 1901, 2520, 4222,
	3999, 3225, 3987, 3238, 2659, 2660, 2656, 1839, 3768, 4140,
	3502, 2394, 742, 743, 4245, 3260, 4364, 4311, 3268, 1651,
	3922, 3244, 1246, 3231, 3232, 1246, 3251, 3233, 730, 4155,
	1172, 674, 3229, 3300, 3308, 1649, 3337, 3961, 3288, 733,
	3760, 1628, 1626, 1602, 1901, 3988, 1600, 1598, 1596, 1837,
	3631, 1594, 1584, 1582, 1456, 1052, 3064, 168, 168, 3407,
	3370, 1052, 1052, 3313, 3151, 1052, 1052, 1052, 995, 1052,
	3029, 3374, 3322, 3386, 3352, 3368, 1169, 2937, 1052, 1904,
	2750, 3327, 4223, 3287, 3331, 3335, 3336, 1052, 2685, 3348,
	1052, 3107, 4141, 3385, 2649, 2589, 1246, 1871, 2393, 1867,
	3315, 1652, 1546, 2222, 3065, 1052, 3388, 3387, 1669, 2878,
	2877, 2850, 2251, 1246, 1168, 2233, 3376, 1615, 3377, 3369,
	3378, 2197, 2070, 1904, 1904, 1052, 1052, 1931, 1052, 1052,
	1052, 1777, 3306, 3393, 1557, 1429, 3410, 4286, 3848, 3836,
	943, 4215, 3904, 3853, 3795, 1459, 3659, 3419, 3420, 3651,
	3612, 1457, 3579, 3577, 3556, 3382, 3294, 1840, 851, 3289,
	3280, 2805, 2800, 2778, 3390, 2764, 3427, 2756, 2743, 2728,
	1052, 2148, 2146, 3459, 1052, 2144, 1904, 1904, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 1052, 1052, 1650, 1052, 3460,
	1678, 3303, 2141, 2136, 3239, 1052, 1052, 1904, 2134, 2130,
	1982, 1892, 1052, 1648, 2121, 1983, 2069, 2067, 3415, 1627,
	1625, 1601, 2050, 1052, 1599, 1597, 1595, 2035, 1898, 1593,
	1583, 1581, 1455, 2018, 1174, 1174, 3383, 3426, 1052, 3442,
	3433, 3435, 3436, 2005, 1993, 3449, 4340, 3247, 4332, 1149,
	1878, 2916, 2044, 4356, 3535, 1956, 4255, 3928, 1892, 3921,
	3920, 3860, 1060, 3437, 3457, 3791, 2838, 1246, 3458, 1975,
	1410, 4079, 1898, 1898, 3531, 1150, 2616, 2616, 2221, 3518,
	2638, 4072, 2282, 3450, 3671, 3497, 3456, 948, 950, 952,
	714, 2614, 2635, 2001, 2188, 3489, 1646, 1647, 3464, 2106,
	1500, 3462, 2217, 2216, 1052, 4254, 1679, 246, 246, 246,
	1499, 641, 642, 2195, 657, 641, 657, 667, 168, 673,
	1052, 1174, 3829, 691, 1984, 1898, 1898, 3855, 697, 3509,
	3510, 1580, 3490, 3534, 246, 2282, 3465, 1685, 1686, 1685,
	1686, 1988, 2917, 1172, 1172, 4114, 3498, 1170, 1052, 1052,
	3769, 3506, 3507, 831, 3747, 2661, 1898, 2642, 1682, 246,
	1901, 2043, 1170, 1197, 4358, 4350, 3493, 1688, 652, 239,
	3606, 3536, 3537, 773, 4316, 1052, 3520, 2742, 2219, 817,
	3648, 1151, 2091, 1500, 3521, 3548, 3549, 3550, 1208, 1169,
	1169, 3605, 1170, 2690, 1500, 2698, 2697, 1366, 2682, 2646,
	3504, 1687, 2680, 1687, 1901, 1901, 2644, 4210, 3996, 1985,
	1990, 2681, 2645, 4179, 4176, 635, 1904, 4138, 3592, 3594,
	4064, 3587, 663, 4043, 3650, 3639, 3528, 1168, 1168, 3293,
	1172, 2785, 3591, 1339, 3560, 3608, 1351, 1354, 2506, 3544,
	1941, 1885, 4388, 3139, 4415, 1366, 4247, 3565, 3602, 3035,
	3036, 4248, 1052, 1685, 1686, 2608, 2609, 1901, 1901, 4247,
	1174, 1052, 4178, 3673, 4248, 1377, 3646, 2606, 2607, 2656,
	3739, 4368, 641, 641, 2389, 2791, 1169, 3664, 3540, 2153,
	246, 1366, 1366, 1366, 3682, 2608, 1567, 2606, 1901, 2422,
	1630, 1986, 1566, 1629, 4065, 1514, 2166, 1366, 4029, 3668,
	1354, 1354, 3856, 3667, 3852, 3851, 2167, 3647, 3735, 3657,
	3539, 2837, 3438, 3241, 1168, 1771, 1246, 3630, 2175, 1770,
	2178, 2179, 2180, 3618, 4402, 4373, 4214, 4213, 4212, 4129,
	4046, 4024, 3981, 1991, 3633, 3698, 3978, 1992, 1246, 3884,
	1354, 1052, 1052, 3665, 3787, 3649, 3697, 1052, 1052, 1904,
	3677, 3652, 1052, 1052, 3634, 1052, 3575, 3570, 3654, 1052,
	3325, 3666, 3297, 3686, 3669, 1898, 3296, 3191, 3025, 1172,
	1052, 2534, 3024, 3675, 1892, 3176, 3023, 3621, 3674, 3022,
	3629, 3021, 3020, 3019, 3166, 3617, 1052, 3018, 3017, 3681,
	3693, 3016, 3689, 3687, 3688, 3015, 3696, 3014, 3013, 3012,
	3011, 3721, 3695, 3010, 3009, 3008, 3729, 3692, 3720, 3007,
	3006, 3005, 3004, 3003, 3002, 1169, 2875, 1170, 1892, 1892,
	2857, 2856, 2855, 3714, 2796, 2770, 2266, 2744, 3733, 3709,
	2636, 2582, 2581, 2354, 3326, 2218, 3653, 3328, 3329, 2215,
	2214, 2213, 3332, 2212, 3333, 3334, 1174, 2211, 2124, 2123,
	2122, 2120, 2104, 1168, 1174, 2080, 2076, 2075, 1246, 2074,
	1246, 2073, 2072, 1645, 1644, 1589, 1588, 1174, 1486, 1757,
	1485, 1892, 1892, 1762, 1484, 1483, 1482, 1481, 1480, 1478,
	1473, 1472, 1471, 1470, 1246, 3704, 1469, 1424, 1423, 1422,
	1421, 1420, 1419, 1418, 1413, 3759, 1409, 1901, 1898, 1407,
	1406, 1237, 1892, 1236, 1235, 1987, 1234, 1052, 1233, 1174,
	1201, 3792, 3793, 3705, 1200, 1132, 1946, 954, 940, 4001,
	3809, 3777, 1639, 87, 1415, 760, 81, 2041, 3574, 913,
	4244, 1399, 4161, 768, 3830, 4229, 1246, 3193, 2701, 3773,
	2196, 3770, 168, 1590, 1246, 3774, 3776, 2198, 3780, 3775,
	3119, 3771, 3772, 2547, 4202, 1172, 3781, 3743, 3819, 3784,
	2973, 4121, 3954, 1172, 2392, 2484, 3794, 3857, 1775, 3858,
	3766, 3076, 1366, 1366, 83, 1036, 1172, 1082, 3880, 3879,
	3796, 3559, 2827, 3877, 3876, 3820, 1889, 1891, 1002, 1366,
	1249, 1957, 1932, 3124, 3874, 1042, 1973, 1966, 2583, 2466,
	1246, 1169, 3871, 3821, 3831, 1366, 1059, 3850, 3859, 1169,
	3869, 1056, 1893, 1895, 1058, 1057, 3832, 3833, 1172, 1894,
	1794, 1055, 1169, 3897, 1888, 3656, 3655, 2752, 2789, 3323,
	1901, 1465, 1174, 1463, 915, 3565, 1961, 3907, 2348, 1168,
	2376, 2962, 1366, 1366, 1366, 1768, 1017, 1168, 3870, 1038,
	2373, 1192, 1027, 1246, 1016, 3846, 3102, 3081, 3310, 3527,
	1168, 3844, 2261, 3902, 1169, 1052, 1052, 1052, 3911, 3916,
	3894, 3890, 3875, 3863, 777, 3032, 2379, 3909, 1183, 2489,
	2482, 3868, 2478, 1246, 3156, 2779, 1655, 1935, 1052, 3893,
	3968, 1052, 1052, 1747, 2790, 1231, 1020, 2346, 1759, 2942,
	2271, 1052, 1168, 3908, 1904, 3317, 1185, 1351, 3924, 1052,
	1052, 1892, 3835, 3122, 2576, 3896, 4251, 3930, 3933, 3446,
	2084, 3941, 3931, 3843, 1246, 3845, 1366, 1148, 3927, 1147,
	1170, 1170, 3951, 3946, 1190, 1198, 3935, 1146, 4235, 4232,
	1246, 1172, 3690, 3273, 691, 1949, 2600, 1737, 1052, 3281,
	1032, 1350, 3087, 3351, 1426, 1174, 696, 3816, 3565, 1044,
	1736, 3963, 2722, 2721, 4135, 1217, 3957, 1052, 246, 1904,
	246, 246, 1342, 1215, 246, 246, 1357, 1052, 1214, 1213,
	1052, 3174, 3883, 4436, 3571, 214, 2910, 1169, 1676, 1052,
	246, 1668, 1379, 3895, 211, 213, 1246, 3974, 3975, 212,
	2725, 3984, 3977, 3885, 3532, 3982, 3128, 1366, 1366, 4314,
	3589, 3265, 22, 1403, 21, 3915, 20, 1170, 108, 41,
	4005, 19, 3983, 123, 3578, 1168, 3580, 140, 4006, 139,
	116, 138, 1428, 137, 1434, 136, 135, 4058, 246, 246,
	4034, 1342, 142, 134, 1892, 1246, 3275, 133, 1366, 4025,
	128, 4049, 132, 1898, 4023, 131, 130, 4031, 129, 127,
	1475, 4021, 126, 125, 1172, 4063, 1174, 1174, 4039, 4038,
	124, 122, 246, 121, 246, 246, 4062, 1342, 246, 1379,
	4073, 3565, 4047, 4041, 3611, 1052, 1052, 120, 4057, 691,
	119, 246, 246, 118, 117, 115, 114, 2810, 1514, 4076,
	113, 112, 1052, 1904, 111, 110, 109, 687, 4070, 4075,
	1169, 4081, 684, 4080, 831, 4095, 59, 3911, 1898, 58,
	107, 106, 4042, 18, 39, 14, 4037, 2851, 4013, 63,
	64, 4109, 1052, 17, 13, 1052, 34, 86, 98, 4082,
	97, 35, 4097, 4098, 95, 94, 4074, 4078, 1168, 4101,
	4113, 33, 16, 15, 92, 1174, 1170, 4131, 4110, 4111,
	4119, 2095, 91, 3679, 32, 30, 11, 3680, 9, 8,
	36, 4142, 1855, 4130, 1982, 1172, 1172, 12, 5, 1983,
	173, 172, 175, 171, 174, 1901, 246, 85, 4036, 170,
	169, 84, 3565, 3565, 4149, 28, 1052, 1052, 4145, 4144,
	10, 4026, 165, 246, 4059, 3644, 78, 1174, 167, 166,
	1174, 164, 2900, 163, 1366, 162, 4157, 79, 76, 161,
	80, 1169, 1169, 1351, 1366, 1366, 160, 77, 159, 26,
	4159, 4150, 6, 62, 7, 3936, 3371, 101, 4172, 4177,
	102, 1366, 37, 74, 4062, 4193, 73, 72, 25, 61,
	1901, 24, 1898, 202, 201, 1052, 1052, 200, 199, 1168,
	1168, 4187, 4191, 4192, 1172, 1052, 198, 197, 192, 4190,
	4173, 4174, 191, 196, 194, 193, 195, 190, 1244, 4196,
	205, 3565, 1345, 4181, 204, 4197, 4183, 206, 1984, 203,
	4224, 208, 2484, 2484, 1052, 1052, 189, 1052, 4207, 187,
	183, 182, 4211, 186, 4189, 1988, 4234, 4237, 188, 185,
	1169, 4249, 4186, 184, 181, 207, 1172, 4226, 157, 1172,
	158, 4246, 69, 156, 4253, 155, 154, 153, 4206, 152,
	151, 150, 68, 3565, 4265, 23, 3565, 2, 4270, 4198,
	4243, 4199, 1170, 4269, 1052, 1052, 1052, 1, 1168, 4268,
	1170, 4256, 0, 0, 0, 0, 0, 4260, 0, 4263,
	4264, 0, 1169, 1170, 0, 1169, 0, 4238, 4298, 4239,
	4242, 1052, 0, 1985, 1990, 0, 4284, 4225, 4285, 2352,
	4303, 4282, 4283, 0, 1901, 0, 4163, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 4301, 0, 1892,
	1168, 641, 4317, 1168, 0, 1170, 0, 4180, 4326, 0,
	0, 0, 0, 0, 0, 0, 4337, 4328, 4325, 1052,
	0, 0, 246, 0, 246, 4336, 0, 4324, 246, 1982,
	4331, 0, 4341, 0, 1983, 4330, 2484, 2484, 2484, 4335,
	0, 1379, 1342, 246, 4357, 246, 4347, 4348, 2488, 0,
	246, 1379, 657, 4353, 4351, 1986, 4349, 246, 1379, 0,
	4234, 4359, 0, 4237, 1892, 691, 4363, 4361, 1174, 0,
	1174, 4370, 4374, 0, 4360, 4367, 0, 4253, 4375, 0,
	0, 0, 4376, 4382, 0, 0, 4333, 4334, 0, 0,
	0, 0, 4338, 0, 0, 0, 0, 1991, 0, 4378,
	0, 1992, 0, 0, 0, 0, 0, 4383, 4395, 4397,
	0, 2939, 2940, 0, 0, 0, 0, 0, 0, 4257,
	0, 4403, 4258, 0, 0, 4409, 4406, 0, 1170, 1052,
	1052, 4410, 0, 0, 0, 0, 0, 1052, 0, 1052,
	1052, 4419, 4413, 1984, 4377, 4422, 4379, 4404, 3202, 4428,
	4430, 0, 4426, 4432, 4427, 4431, 4425, 0, 0, 0,
	1988, 0, 0, 4429, 0, 2791, 0, 0, 4435, 4439,
	0, 0, 0, 0, 4441, 0, 4443, 1172, 4444, 1172,
	0, 4445, 0, 4440, 0, 4448, 0, 3203, 0, 0,
	4450, 0, 1052, 4453, 3565, 4455, 3565, 4452, 1892, 4456,
	4442, 4458, 0, 4401, 0, 4459, 1354, 0, 0, 0,
	0, 4449, 4420, 4421, 0, 0, 0, 0, 0, 0,
	0, 3810, 0, 1169, 0, 1169, 0, 0, 1985, 1990,
	0, 0, 246, 0, 0, 246, 0, 0, 3035, 3036,
	0, 3053, 3054, 3055, 0, 0, 0, 0, 0, 0,
	0, 1170, 0, 1354, 3806, 3058, 3059, 3060, 3799, 0,
	3725, 1168, 0, 1168, 0, 4454, 4015, 4016, 0, 1987,
	0, 0, 0, 3254, 0, 3797, 0, 0, 0, 0,
	0, 0, 0, 0, 3801, 0, 0, 0, 246, 0,
	4030, 0, 246, 4032, 4033, 0, 0, 0, 0, 246,
	0, 0, 0, 3285, 0, 246, 3807, 0, 0, 0,
	1986, 0, 3050, 0, 3292, 0, 0, 0, 0, 0,
	246, 0, 246, 0, 0, 0, 641, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2125, 1339, 0, 0, 3800, 0, 1870, 0,
	0, 0, 1991, 0, 246, 0, 1992, 0, 0, 0,
	1351, 246, 1170, 1170, 0, 0, 0, 0, 0, 0,
	0, 0, 3343, 3344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 691, 0, 0, 0, 831, 0, 0, 0, 0,
	0, 0, 3041, 1979, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 1342, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 691, 0, 0,
	0, 0, 1980, 0, 246, 0, 0, 0, 0, 0,
	0, 1170, 0, 0, 0, 246, 246, 0, 246, 0,
	246, 0, 246, 3056, 246, 0, 0, 0, 1354, 1354,
	4158, 0, 0, 0, 0, 0, 2484, 2484, 0, 0,
	0, 0, 0, 0, 0, 2227, 0, 0, 2228, 248,
	2229, 0, 0, 0, 0, 2488, 0, 0, 0, 0,
	3802, 0, 246, 1170, 3051, 3803, 1170, 0, 0, 0,
	0, 0, 822, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 673, 1987, 0, 1354, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 70,
	0, 825, 824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 71, 3805, 0, 0, 0,
	1351, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 3808, 0, 0, 2488, 2488, 3035, 3036, 0,
	3053, 3054, 3055, 0, 0, 0, 0, 0, 2484, 2484,
	2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484,
	2484, 2484, 2484, 2484, 2484, 2484, 2484, 0, 2484, 0,
	0, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3035, 3036, 0, 3053, 3054, 3055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3052, 3412, 0, 0, 88, 0,
	0, 3050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 89, 100, 0,
	1015, 0, 0, 0, 0, 1685, 1686, 0, 0, 4313,
	0, 1728, 1729, 1730, 641, 0, 0, 0, 0, 3804,
	0, 0, 0, 0, 0, 3403, 3404, 3050, 1716, 246,
	0, 0, 0, 0, 0, 1688, 0, 0, 641, 0,
	0, 0, 0, 1734, 0, 246, 0, 641, 0, 2488,
	2488, 2488, 90, 0, 0, 0, 3811, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1687,
	0, 3041, 0, 0, 246, 1379, 0, 0, 0, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 1170, 0, 1170, 0, 0, 0,
	0, 3047, 3048, 3049, 0, 0, 0, 0, 3046, 3044,
	3045, 3037, 3038, 3039, 3040, 3042, 3043, 3041, 0, 0,
	0, 246, 1379, 0, 657, 0, 0, 0, 0, 0,
	0, 246, 3056, 0, 0, 0, 3615, 3466, 3467, 3468,
	3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478,
	3479, 3480, 3481, 3482, 3483, 3484, 0, 3488, 0, 1710,
	1711, 1712, 1713, 0, 0, 0, 0, 0, 0, 1693,
	0, 0, 0, 3051, 0, 2625, 0, 0, 3056, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 2285,
	0, 0, 0, 0, 93, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 1725, 0, 0, 1735, 0, 0,
	0, 246, 0, 1715, 1717, 0, 0, 0, 0, 3051,
	3683, 3684, 3685, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 1702,
	1703, 0, 176, 96, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 246, 2734, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 1708, 0, 0, 0, 0, 2390, 826, 1379, 0,
	0, 246, 141, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 2774, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 2625, 0,
	641, 0, 217, 3052, 2795, 0, 0, 0, 0, 0,
	246, 0, 0, 246, 0, 0, 0, 246, 0, 246,
	2095, 0, 0, 0, 1342, 0, 246, 246, 143, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 2820, 831,
	0, 2625, 2625, 180, 0, 0, 0, 0, 0, 3052,
	0, 216, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 2557, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 246, 1342, 246, 0, 0,
	1379, 1714, 1379, 1379, 246, 0, 0, 1342, 0, 1342,
	0, 1342, 0, 823, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 246, 246,
	246, 1342, 246, 0, 246, 0, 0, 1726, 0, 0,
	3047, 3048, 3049, 0, 0, 0, 0, 3046, 3044, 3045,
	3037, 3038, 3039, 3040, 3042, 3043, 0, 0, 0, 1351,
	1351, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 2611, 0,
	0, 0, 0, 0, 0, 0, 3047, 3048, 3049, 2488,
	2488, 1685, 1686, 3046, 3044, 3045, 3037, 3038, 3039, 3040,
	3042, 3043, 0, 0, 0, 0, 1015, 0, 0, 0,
	1015, 1514, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 1330, 2717, 0, 0,
	1330, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	1351, 1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690,
	1691, 1692, 1694, 1695, 0, 1687, 1685, 1686, 0, 0,
	2709, 2707, 1379, 0, 0, 1707, 0, 2711, 2713, 2703,
	0, 0, 0, 0, 1704, 0, 0, 0, 0, 1716,
	0, 3932, 0, 3934, 0, 0, 1688, 0, 3035, 3036,
	0, 3053, 3054, 3055, 0, 0, 0, 0, 0, 0,
	0, 2488, 2488, 2488, 2488, 2488, 2488, 2488, 2488, 2488,
	2488, 2488, 2488, 2488, 2488, 2488, 2488, 2488, 2488, 2488,
	1687, 2488, 0, 0, 0, 3724, 0, 0, 0, 0,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 2484, 0, 0, 0, 1710, 1711, 1712, 1713, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	0, 0, 3050, 0, 0, 3979, 0, 0, 0, 0,
	0, 3035, 3036, 0, 3053, 3054, 3055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2484, 0,
	3406, 0, 0, 3411, 0, 0, 0, 0, 0, 1715,
	1717, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	1710, 1711, 1712, 1713, 0, 0, 0, 0, 246, 0,
	1693, 0, 0, 641, 0, 1702, 1703, 0, 641, 0,
	0, 641, 0, 0, 641, 641, 0, 0, 0, 2705,
	641, 0, 0, 0, 0, 3050, 4040, 0, 246, 0,
	2719, 0, 3041, 0, 0, 0, 0, 1708, 0, 0,
	1379, 0, 0, 0, 1715, 1717, 0, 0, 0, 0,
	0, 2718, 2710, 2708, 2712, 2714, 2704, 2706, 2720, 0,
	0, 0, 1379, 0, 0, 2716, 0, 0, 0, 70,
	1702, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 2625, 2625, 246, 0,
	1357, 0, 0, 2625, 0, 0, 3178, 0, 2723, 0,
	0, 75, 1708, 0, 2625, 3178, 0, 2625, 3178, 0,
	0, 3178, 0, 0, 0, 3041, 0, 0, 0, 0,
	0, 0, 2484, 0, 246, 246, 1357, 246, 0, 0,
	1685, 1686, 0, 0, 3051, 0, 0, 0, 0, 0,
	3960, 82, 0, 0, 0, 0, 0, 1357, 246, 0,
	0, 1342, 0, 1716, 0, 0, 0, 1714, 0, 0,
	1688, 0, 0, 2625, 0, 3242, 2625, 1357, 0, 0,
	2625, 2625, 1357, 0, 0, 1354, 3056, 1709, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 3992, 0, 0,
	0, 0, 103, 0, 1687, 0, 0, 89, 100, 0,
	0, 246, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 1833, 0, 1704, 0, 246, 3269, 3051, 0, 3271,
	2625, 0, 1714, 246, 2095, 0, 0, 246, 0, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 1514, 1514, 0, 0, 0, 2774, 0,
	0, 1342, 90, 246, 0, 0, 2625, 0, 641, 0,
	1514, 0, 0, 2724, 3401, 2625, 0, 0, 0, 0,
	0, 0, 2715, 246, 3052, 0, 1330, 246, 246, 0,
	0, 0, 0, 0, 1710, 1711, 1712, 1713, 0, 0,
	0, 0, 0, 3088, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 2774, 0, 0, 2774, 1705, 1701,
	0, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695,
	0, 0, 0, 0, 0, 3114, 1015, 0, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 1715, 1717,
	3127, 4118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3381, 0, 0, 1342, 246, 3052, 246, 0,
	0, 3145, 0, 0, 1702, 1703, 0, 0, 0, 0,
	0, 0, 0, 1705, 1701, 0, 1698, 1696, 1697, 1689,
	1690, 1691, 1692, 1694, 1695, 0, 0, 0, 0, 0,
	0, 246, 1001, 0, 93, 0, 1708, 0, 0, 0,
	0, 3047, 3048, 3049, 0, 0, 0, 0, 3046, 3044,
	3045, 3037, 3038, 3039, 3040, 3042, 3043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 96, 0, 99, 0, 3444, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 71, 0, 0, 0, 0, 826, 0, 0,
	1330, 0, 141, 0, 3047, 3048, 3049, 0, 75, 0,
	0, 3046, 3044, 3045, 3037, 3038, 3039, 3040, 3042, 3043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 1714, 3127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	0, 0, 0, 0, 2095, 0, 1709, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1354, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 88, 246, 246, 0, 0,
	1037, 105, 209, 0, 0, 0, 0, 0, 0, 103,
	0, 210, 0, 0, 89, 100, 0, 0, 641, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 2488, 0, 0, 0, 0, 0,
	1379, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1379, 1379, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2488, 0, 3567, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 1345, 0, 0, 1244, 1705, 1701, 0,
	1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 0,
	0, 0, 691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 1686, 0, 1718, 1719,
	1720, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 1721, 1716, 0,
	0, 0, 0, 0, 0, 1688, 0, 0, 0, 0,
	0, 1357, 246, 1734, 0, 0, 0, 3423, 0, 976,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	996, 0, 0, 246, 3439, 0, 0, 0, 0, 1687,
	0, 2573, 246, 0, 0, 0, 0, 246, 0, 1707,
	0, 246, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 93, 0, 0, 0, 0, 0, 1330, 1158, 0,
	0, 2625, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 1686, 0, 0, 2488, 0, 0, 0, 0,
	0, 2820, 2820, 0, 0, 0, 0, 831, 831, 2625,
	0, 0, 2774, 2774, 1716, 0, 831, 2625, 0, 176,
	96, 1688, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 1710,
	1711, 1712, 1713, 0, 0, 0, 215, 0, 0, 1693,
	0, 0, 0, 0, 826, 1687, 0, 0, 0, 141,
	0, 0, 0, 0, 1330, 1707, 0, 0, 1351, 0,
	0, 0, 0, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 1735, 1001, 217,
	0, 0, 1001, 1715, 1717, 0, 0, 0, 3530, 3035,
	3036, 0, 3053, 3054, 3055, 0, 3744, 0, 0, 0,
	1731, 0, 1732, 0, 0, 143, 0, 0, 0, 1702,
	1703, 0, 0, 0, 0, 3400, 0, 0, 0, 1084,
	180, 0, 0, 1330, 0, 0, 0, 1723, 216, 0,
	1381, 0, 1387, 0, 1393, 1710, 1711, 1712, 1713, 209,
	0, 1708, 0, 0, 0, 1693, 0, 0, 210, 1330,
	1354, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 3050, 1379, 0, 246, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 1733, 0, 0, 0, 0, 0, 1715,
	1717, 0, 0, 0, 0, 0, 1685, 1686, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 2625, 2625, 2625,
	1515, 0, 0, 0, 0, 1702, 1703, 0, 3817, 1716,
	3817, 3567, 1379, 0, 0, 0, 1688, 1533, 0, 1538,
	2625, 0, 3178, 0, 0, 1379, 1379, 246, 1357, 1547,
	0, 1552, 0, 0, 0, 0, 0, 1708, 0, 1357,
	246, 1357, 246, 3041, 0, 0, 1330, 0, 0, 0,
	1687, 1714, 0, 2625, 0, 2625, 246, 0, 0, 0,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	2625, 3057, 0, 0, 0, 3887, 0, 0, 0, 0,
	0, 0, 0, 1611, 246, 0, 1617, 1726, 0, 0,
	0, 0, 0, 246, 3056, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2928, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 3567, 0, 0, 1379, 0, 0,
	1710, 1711, 1712, 1713, 0, 3051, 0, 0, 0, 0,
	1693, 0, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1724, 1715, 1717, 0, 0, 1699, 1700,
	1706, 1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690,
	1691, 1692, 1694, 1695, 0, 0, 0, 1756, 2986, 0,
	1702, 1703, 2987, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2625, 0,
	3178, 0, 0, 3986, 0, 0, 0, 0, 0, 0,
	0, 246, 1708, 0, 0, 0, 0, 3567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3779, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 691, 105, 0, 105, 3052, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 3789, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 246, 0, 0, 1705, 1701,
	0, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695,
	0, 0, 0, 0, 3986, 0, 0, 0, 1827, 1827,
	1827, 0, 2625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 0, 0, 0,
	105, 0, 0, 0, 996, 105, 105, 0, 3567, 3567,
	0, 0, 1714, 0, 0, 0, 0, 105, 0, 105,
	0, 0, 0, 0, 0, 246, 246, 0, 0, 105,
	0, 105, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1001, 3444,
	0, 0, 3047, 3048, 3049, 0, 0, 0, 0, 3046,
	3044, 3045, 3037, 3038, 3039, 3040, 3042, 3043, 0, 0,
	3986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3817, 105, 0, 0, 0, 0, 0, 3567, 0, 0,
	0, 0, 0, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3952, 0, 0, 3887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3567,
	0, 246, 3567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3178, 1705, 1701, 0, 1698, 1696, 1697, 1689,
	1690, 1691, 1692, 1694, 1695, 3952, 0, 0, 0, 976,
	0, 0, 0, 0, 0, 70, 0, 0, 1379, 0,
	1379, 2285, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 75, 0, 4220,
	1761, 1330, 0, 0, 0, 0, 1379, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2285, 0, 0,
	2625, 0, 0, 1330, 0, 0, 1175, 82, 0, 0,
	1175, 0, 0, 0, 1175, 0, 0, 246, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 3444, 0, 88, 0, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 1015, 0, 103, 0,
	0, 0, 0, 89, 100, 0, 0, 0, 0, 0,
	1015, 0, 0, 1175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	1847, 0, 1850, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 90, 3986,
	0, 0, 0, 1175, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 2625, 0, 0, 0, 0, 0, 0,
	3567, 0, 3567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 0, 1718, 1719, 1720,
	1728, 1729, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 1330, 1721, 1716, 0, 0,
	0, 0, 1379, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2820, 0, 0, 0, 0, 1687, 0,
	0, 2625, 0, 0, 0, 2260, 0, 2264, 1707, 0,
	0, 0, 0, 0, 2278, 0, 2820, 1704, 0, 0,
	93, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 0, 2327, 0, 2329,
	2330, 2331, 2332, 0, 0, 0, 0, 0, 176, 96,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2356, 0, 0, 0, 0, 0, 0, 1710, 1711,
	1712, 1713, 1756, 0, 0, 215, 2371, 0, 1693, 0,
	0, 1330, 0, 826, 1330, 0, 0, 0, 141, 0,
	0, 0, 2401, 2404, 2407, 2410, 0, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 1735, 0, 217, 0,
	0, 0, 1715, 1717, 0, 2480, 0, 2491, 2493, 2498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 1732, 0, 0, 143, 0, 0, 0, 1702, 1703,
	0, 0, 0, 0, 0, 1330, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 1723, 216, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 209, 0,
	1708, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 996, 0, 996, 1175,
	0, 1175, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 1175, 0, 0,
	1722, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 1685, 1686, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 1716, 976, 0,
	0, 976, 976, 0, 1688, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2737, 2738, 0,
	2740, 0, 0, 0, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 241, 241, 637, 0, 0, 2345, 1704, 0, 0,
	1175, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 996, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 1699, 1700, 1706,
	1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 0, 0, 2367, 0, 0,
	0, 2368, 0, 0, 0, 0, 0, 0, 1710, 1711,
	1712, 1713, 0, 0, 0, 0, 0, 0, 1693, 1685,
	1686, 0, 1718, 1719, 1720, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 1721, 1716, 0, 0, 0, 0, 0, 0, 1688,
	0, 0, 0, 1850, 0, 0, 0, 1734, 0, 2874,
	0, 0, 1715, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 105, 0, 1702, 1703,
	0, 0, 0, 1707, 0, 1175, 0, 1175, 0, 1175,
	0, 0, 1704, 0, 0, 1330, 0, 0, 0, 1738,
	1739, 0, 0, 0, 0, 1175, 1175, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 1175, 1330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	1175, 1175, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2922, 2923, 0, 0, 0, 0,
	2929, 0, 0, 1710, 1711, 1712, 1713, 0, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 2943,
	2944, 0, 0, 0, 0, 2371, 0, 105, 0, 0,
	0, 0, 0, 0, 2951, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1048, 1725, 0,
	2965, 1735, 0, 0, 0, 0, 0, 1715, 1717, 0,
	105, 0, 0, 0, 0, 0, 0, 2977, 0, 0,
	1714, 0, 0, 0, 1731, 0, 1732, 1330, 0, 1330,
	0, 0, 0, 1702, 1703, 1905, 1905, 1175, 0, 0,
	1709, 0, 245, 245, 245, 105, 0, 0, 105, 0,
	105, 1723, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 731, 105, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 1330, 0, 1733, 0, 0,
	0, 0, 75, 1330, 0, 0, 2498, 2498, 2498, 0,
	0, 0, 0, 0, 1175, 1722, 0, 0, 0, 0,
	105, 1827, 0, 0, 0, 0, 0, 0, 0, 3092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 1714, 1175, 0, 0, 88,
	0, 0, 0, 1175, 0, 0, 0, 105, 0, 0,
	0, 0, 1175, 103, 0, 1709, 0, 0, 89, 100,
	0, 0, 0, 0, 0, 1171, 0, 0, 1001, 1175,
	0, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 1001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3196, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 1688, 0, 0, 2345, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 1724, 1755, 0,
	0, 0, 1699, 1700, 1706, 1727, 1705, 1701, 1687, 1698,
	1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 1707, 1015,
	0, 0, 0, 0, 0, 0, 3750, 1704, 1905, 0,
	0, 0, 0, 0, 0, 1330, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 93, 0, 0, 2921, 0,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 1711,
	1712, 1713, 0, 0, 0, 0, 0, 0, 1693, 0,
	0, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 96, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 0, 1718, 1719, 1720,
	1728, 1729, 1730, 0, 0, 0, 1490, 0, 1490, 1490,
	215, 0, 1715, 1717, 0, 0, 1721, 1716, 826, 0,
	0, 1158, 0, 141, 1688, 1531, 1532, 1175, 1175, 0,
	1175, 0, 1734, 0, 0, 0, 1158, 0, 1702, 1703,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 1175, 1687, 0,
	0, 0, 0, 0, 0, 0, 2278, 0, 1707, 0,
	1708, 0, 3398, 3399, 0, 0, 3402, 1704, 0, 143,
	3405, 0, 0, 0, 0, 0, 0, 0, 0, 3409,
	0, 0, 0, 0, 180, 1015, 1015, 0, 3416, 0,
	0, 3092, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 3428, 0, 0, 0,
	1638, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3451, 3452, 0, 3453,
	3454, 3455, 0, 0, 1525, 0, 0, 0, 1710, 1711,
	1712, 1713, 0, 0, 0, 105, 105, 0, 1693, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3461, 0, 0, 0, 3463, 0, 0, 0, 0,
	1714, 105, 105, 1725, 1015, 105, 1735, 0, 0, 0,
	0, 0, 1715, 1717, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 3491, 3492, 0, 1731,
	0, 1732, 0, 0, 0, 0, 0, 0, 1702, 1703,
	0, 0, 0, 245, 3503, 245, 245, 0, 0, 245,
	245, 0, 0, 0, 0, 0, 1723, 0, 0, 3512,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 996, 0, 0, 0, 0, 0,
	0, 0, 1733, 245, 245, 2459, 2460, 2461, 2462, 2455,
	2456, 2457, 2458, 0, 0, 3553, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 105, 105, 0, 0, 0,
	0, 3562, 0, 0, 0, 0, 0, 245, 0, 245,
	245, 1705, 1701, 245, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 0, 245, 245, 0, 0,
	3588, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 1349,
	1714, 0, 0, 0, 0, 2435, 2436, 2437, 2438, 0,
	1175, 1175, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 1175, 0, 2447, 2448, 2449,
	2450, 2443, 2444, 2445, 2446, 2451, 2452, 2453, 2454, 0,
	0, 0, 0, 1175, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 1905, 0, 0, 0, 1175,
	0, 0, 0, 1827, 0, 0, 0, 0, 245, 0,
	0, 0, 3676, 1175, 1175, 0, 0, 0, 0, 0,
	2431, 2432, 2433, 2434, 2439, 2440, 2441, 2442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 1724, 0, 0, 0, 0, 1699, 1700, 1706,
	1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 3414, 3722, 3723, 0, 0, 1175, 0, 3727, 3728,
	0, 0, 0, 3731, 3732, 0, 1175, 0, 0, 0,
	3736, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	1175, 3740, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3745, 0, 0,
	0, 0, 0, 1175, 1158, 1158, 0, 0, 0, 1175,
	0, 1175, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 2082, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 0, 2101,
	0, 0, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2112, 0, 2112, 0, 0, 0,
	1175, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 1490, 1171,
	0, 0, 0, 245, 0, 1349, 0, 0, 0, 0,
	0, 0, 1175, 1175, 0, 0, 0, 0, 245, 1849,
	245, 0, 0, 0, 0, 731, 0, 0, 3818, 0,
	0, 0, 731, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 2171, 0, 0,
	0, 1175, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2203, 0, 2205, 0, 2207, 0, 2209, 0, 2210, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 808, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 1175, 2232, 0, 0, 0,
	0, 0, 791, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1905, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3947, 3948, 3949, 0,
	0, 105, 0, 0, 0, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 794, 245, 0, 2278,
	731, 0, 3958, 3959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1905, 795, 0, 0,
	3967, 3970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 1905, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 796, 245, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	245, 0, 0, 1175, 1175, 0, 0, 0, 4012, 797,
	0, 0, 0, 0, 0, 245, 0, 245, 4019, 0,
	0, 1001, 0, 245, 0, 0, 0, 0, 0, 798,
	4027, 0, 799, 0, 0, 0, 1175, 0, 0, 0,
	105, 0, 0, 0, 0, 0, 1158, 717, 0, 245,
	0, 0, 0, 0, 1158, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 2554, 0, 0, 0, 1061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 247, 247, 247, 0, 0, 0, 0, 0,
	731, 245, 0, 245, 0, 245, 0, 245, 0, 245,
	0, 0, 0, 0, 0, 2101, 1175, 0, 0, 247,
	0, 0, 0, 4134, 0, 0, 4137, 0, 0, 0,
	105, 0, 0, 0, 0, 1905, 0, 0, 0, 0,
	0, 105, 0, 0, 247, 0, 0, 245, 801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 0, 802, 1175,
	0, 0, 0, 0, 0, 0, 0, 1001, 1001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 1175, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 1349, 0, 0, 0, 1175, 0, 803, 0,
	0, 0, 818, 819, 816, 0, 0, 0, 0, 0,
	811, 0, 0, 804, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2278, 0, 0,
	0, 0, 0, 0, 0, 0, 3970, 1175, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 1905, 0,
	0, 805, 812, 2101, 0, 0, 0, 0, 0, 0,
	0, 806, 0, 0, 0, 0, 1001, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 0, 0, 0, 0,
	815, 0, 0, 0, 2797, 0, 0, 1490, 0, 0,
	0, 1490, 0, 1490, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4281, 4281, 4281, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	2849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 4302, 0, 0, 1175, 0, 0, 0, 2859,
	0, 2862, 0, 1175, 245, 0, 0, 1175, 0, 1175,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 2345, 0,
	4281, 2886, 1349, 2888, 1349, 0, 2891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 1490,
	0, 0, 0, 0, 0, 1175, 0, 2919, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 1175, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 1175,
	4281, 4414, 0, 0, 1175, 0, 245, 0, 4418, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 1175, 1175, 1175, 0, 0, 0, 0, 731, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 1175, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 245, 0,
	0, 0, 245, 1175, 245, 1175, 0, 0, 0, 0,
	0, 245, 245, 0, 0, 0, 0, 0, 0, 1175,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	105, 0, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 1905, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 245, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 245, 245, 245, 0, 245, 0, 245,
	0, 0, 0, 247, 1250, 247, 247, 0, 1250, 247,
	247, 0, 1250, 0, 1175, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 1175, 1175, 0, 245, 0,
	0, 0, 3169, 0, 0, 0, 1250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 1905, 247, 247, 0, 0, 0, 3211, 3213,
	0, 2101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 247,
	247, 0, 0, 247, 887, 1250, 930, 0, 0, 0,
	0, 1250, 0, 0, 1175, 1250, 247, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1250,
	895, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 909, 893, 892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 3282, 0, 1175,
	0, 3286, 0, 1175, 0, 894, 0, 0, 0, 0,
	897, 1250, 0, 1175, 1175, 938, 0, 0, 0, 0,
	0, 0, 0, 0, 906, 907, 0, 0, 0, 0,
	1175, 0, 0, 923, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 1490, 0, 931,
	899, 1349, 1349, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 900, 3347, 0, 0,
	0, 0, 0, 0, 0, 929, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 902, 0, 0,
	3384, 0, 1349, 1849, 0, 891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3396, 0, 0, 251, 0,
	0, 0, 911, 910, 0, 0, 0, 0, 0, 0,
	905, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 935, 0, 0, 1685, 1686, 0, 1718, 1719,
	1720, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 1716, 245,
	245, 0, 245, 932, 0, 1688, 0, 0, 0, 1849,
	723, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 1175, 0, 1175,
	0, 0, 0, 0, 0, 723, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 0, 0, 247, 898, 0, 0, 937, 1704, 0,
	0, 0, 0, 0, 1250, 0, 0, 0, 247, 247,
	247, 0, 0, 0, 0, 247, 245, 0, 0, 896,
	0, 0, 247, 927, 928, 1250, 0, 0, 0, 0,
	731, 0, 0, 0, 0, 0, 1250, 0, 245, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 925, 0, 0, 0, 0, 0,
	1250, 936, 921, 0, 914, 912, 0, 917, 1171, 1710,
	1711, 1712, 1713, 918, 0, 0, 889, 0, 933, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 245, 245, 0, 0, 0, 0, 0, 890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	919, 0, 0, 0, 1725, 916, 0, 1735, 245, 0,
	0, 0, 0, 1715, 1717, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	1731, 0, 1732, 901, 0, 0, 0, 0, 0, 1702,
	1703, 0, 0, 0, 0, 0, 0, 924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	0, 245, 0, 245, 0, 0, 0, 0, 0, 0,
	926, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 1250, 1250,
	247, 0, 0, 0, 0, 0, 245, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 2101, 0, 0, 0,
	0, 0, 0, 1733, 0, 0, 0, 2101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3643, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2101, 0, 247, 0, 3658, 0, 247, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 247, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 1709, 0, 0, 0, 0, 247, 0, 0, 0,
	3707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 1250, 0, 1250, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 1250, 0, 0, 0, 0, 0,
	0, 1171, 1171, 0, 1250, 247, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 1250, 0, 1250, 1250,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 247, 0, 247, 0, 247, 0, 247, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 1699, 1700,
	1706, 1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690,
	1691, 1692, 1694, 1695, 0, 0, 0, 247, 1849, 0,
	0, 1053, 2989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3834, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 2101, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 245, 0, 0, 1247, 245, 0, 0, 1247,
	0, 0, 0, 1367, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 0, 0, 0, 0, 1171, 2101, 0,
	0, 0, 0, 0, 0, 0, 0, 3903, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 749, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 0, 247, 0, 1367, 1250, 0, 0,
	0, 0, 1367, 0, 0, 0, 1367, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 0, 753, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 754, 0, 0, 247, 0, 755, 0,
	0, 0, 0, 0, 0, 3993, 247, 0, 0, 0,
	0, 0, 1367, 0, 0, 0, 0, 0, 778, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 776, 0, 0,
	0, 1171, 0, 0, 1250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 2101,
	750, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	757, 0, 0, 758, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 780, 0, 1849, 0, 717, 0,
	0, 0, 0, 247, 1250, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 245, 0, 245, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4108,
	1349, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 1250,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 779, 0, 0, 0, 0, 0, 0, 0, 245,
	774, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 247, 0,
	0, 0, 247, 0, 247, 0, 0, 0, 0, 0,
	0, 247, 247, 0, 0, 1250, 1250, 0, 1250, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 0, 0, 0, 0, 0, 0, 0, 759, 0,
	0, 247, 0, 0, 0, 1250, 0, 0, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 247, 0, 0, 4182, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 247, 247, 247, 247, 723, 247, 0, 247,
	0, 0, 716, 723, 0, 0, 1367, 0, 0, 0,
	0, 0, 0, 748, 0, 771, 0, 1367, 0, 0,
	0, 0, 0, 0, 763, 0, 245, 0, 0, 0,
	247, 0, 1849, 0, 0, 4228, 0, 0, 247, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 764, 0, 0, 765, 783, 0, 782, 0,
	0, 4262, 766, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 767, 0, 0, 0,
	0, 775, 0, 0, 0, 0, 0, 784, 0, 781,
	0, 0, 0, 0, 0, 718, 0, 0, 1248, 0,
	0, 0, 1248, 0, 0, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4318, 0, 0,
	0, 0, 0, 1849, 1849, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 1367,
	1367, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 1368,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 1250,
	1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 245, 1849, 0, 1721,
	1716, 0, 0, 0, 0, 1368, 0, 1688, 0, 0,
	0, 1250, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 1367, 0, 1367, 1250, 1367, 0,
	0, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 1250, 1250, 0, 1367, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 245, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 1367, 0, 1367,
	1367, 1367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1250,
	0, 723, 245, 0, 0, 0, 0, 0, 0, 247,
	247, 0, 247, 0, 0, 0, 0, 0, 0, 247,
	0, 1710, 1711, 1712, 1713, 0, 0, 0, 0, 0,
	0, 1693, 0, 247, 1250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 245, 1735,
	0, 0, 0, 0, 0, 1715, 1717, 0, 0, 0,
	0, 1250, 0, 0, 0, 0, 247, 1250, 0, 1250,
	0, 0, 1731, 1250, 1732, 0, 1247, 0, 0, 0,
	247, 1702, 1703, 0, 0, 0, 0, 0, 247, 0,
	0, 1250, 247, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 247, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 1248, 0,
	1250, 1250, 0, 1247, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 0, 1368,
	0, 0, 1250, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 1250,
	0, 247, 1250, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 247, 0, 1247, 0,
	1685, 1686, 0, 1718, 1719, 1720, 1728, 1729, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 1721, 1716, 0, 0, 0, 0, 0, 0,
	1688, 0, 0, 1250, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	1699, 1700, 1706, 1727, 1705, 1701, 0, 1698, 1696, 1697,
	1689, 1690, 1691, 1692, 1694, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 2988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 1711, 1712, 1713, 0, 0,
	0, 0, 0, 0, 1693, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 1735, 0, 1250, 0, 0, 0, 1715, 1717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 1731, 0, 1732, 0, 0,
	0, 0, 0, 0, 1702, 1703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 0, 1368,
	0, 1368, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 1368, 1368, 0,
	0, 0, 0, 0, 0, 0, 1367, 1367, 1368, 1367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 1367, 1368, 1368, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1367, 0, 1733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 247, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 1250, 0, 0, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 1250,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 1250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 1250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 1699, 1700, 1706, 1727, 1705, 1701, 0,
	1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 2985, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 1250, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 1250, 0, 247, 0, 247, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 1250,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 1367, 0, 0, 1250, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 1250, 247, 0,
	0, 0, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 1368, 0, 0, 0, 0, 0, 0, 1250,
	1250, 1250, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 1247, 0, 0, 0, 0,
	1250, 0, 0, 0, 1367, 0, 0, 0, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 0, 0, 0, 0, 0, 1367, 0,
	1367, 1250, 0, 1250, 1247, 0, 0, 0, 0, 1368,
	1368, 723, 1368, 0, 0, 0, 0, 1250, 0, 0,
	0, 0, 1367, 0, 1368, 0, 247, 0, 0, 0,
	0, 0, 0, 1367, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 1250, 1250, 0, 0, 0, 0,
	0, 1367, 1367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1367, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 0, 0, 1250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	247, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 1686, 0, 1718, 1719, 1720, 1728, 1729, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 1716, 0, 0, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 1687, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1710, 1711, 1712, 1713, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 1248, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 1735, 0, 0, 0, 0, 0, 1715,
	1717, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 1248, 1731, 0, 1732, 0,
	0, 0, 0, 0, 0, 1702, 1703, 0, 0, 0,
	1248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 1368, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 0, 0,
	0, 0, 1368, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 1367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 1709, 0, 0,
	0, 1368, 0, 1368, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	1367, 1367, 0, 1726, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 1724,
	0, 0, 0, 0, 1699, 1700, 1706, 1727, 1705, 1701,
	0, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 2984, 0,
	0, 0, 0, 1248, 0, 0, 1248, 0, 0, 0,
	0, 0, 1685, 1686, 0, 1718, 1719, 1720, 1728, 1729,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 1716, 0, 0, 0, 0,
	0, 0, 1688, 0, 0, 0, 1247, 0, 1247, 0,
	1734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 1687, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 0, 0,
	0, 0, 0, 0, 1248, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 1685, 1686, 0, 1718, 1719,
	1720, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 1716, 0,
	1367, 1367, 0, 0, 0, 1688, 1710, 1711, 1712, 1713,
	0, 0, 0, 1734, 0, 0, 1693, 1367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 1367, 0, 0, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 1725, 0, 0, 1735, 0, 0, 0, 1704, 0,
	1715, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 1367, 1367, 0, 0, 0, 0, 1731, 0, 1732,
	0, 1247, 0, 0, 0, 0, 1702, 1703, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	1711, 1712, 1713, 0, 0, 0, 0, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 1367, 0, 0, 0, 0, 0,
	1733, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 0, 1725, 0, 0, 1735, 1722, 0,
	0, 0, 0, 1715, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 1732, 0, 0, 0, 0, 0, 0, 1702,
	1703, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 1247, 0, 0, 1723, 0, 0,
	0, 0, 0, 0, 0, 1367, 1367, 0, 1714, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 1685, 1686,
	0, 1718, 1719, 1720, 1728, 1729, 1730, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 1368, 0, 0, 0,
	1721, 1716, 0, 1247, 0, 0, 1367, 0, 1688, 0,
	0, 0, 0, 1733, 1726, 0, 1734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1368, 1368, 1368, 0, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 1709, 0, 0, 0, 1699, 1700, 1706, 1727, 1705,
	1701, 0, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694,
	1695, 0, 1710, 1711, 1712, 1713, 0, 1726, 0, 2983,
	0, 0, 1693, 0, 0, 0, 1685, 1686, 0, 1718,
	1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 1716,
	0, 0, 1367, 0, 0, 0, 1688, 1725, 0, 0,
	1735, 0, 1367, 1367, 1734, 0, 1715, 1717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	0, 0, 0, 1731, 0, 1732, 0, 0, 0, 1248,
	1687, 1248, 1702, 1703, 0, 0, 0, 0, 0, 0,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	1723, 0, 0, 1724, 0, 1248, 0, 0, 1699, 1700,
	1706, 1727, 1705, 1701, 1708, 1698, 1696, 1697, 1689, 1690,
	1691, 1692, 1694, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 2368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 1248, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	1710, 1711, 1712, 1713, 1722, 0, 0, 0, 0, 0,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1368, 0, 0, 0, 0, 1725, 0, 0, 1735, 0,
	0, 1248, 0, 0, 1715, 1717, 1368, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 0,
	0, 1731, 0, 1732, 0, 0, 0, 0, 0, 0,
	1702, 1703, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 1368, 1368, 1368, 0, 0, 1723, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	1726, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 1248, 0, 1368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 1699, 1700, 1706, 1727, 1705, 1701, 0, 1698, 1696,
	1697, 1689, 1690, 1691, 1692, 1694, 1695, 0, 0, 0,
	0, 4217, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 1368, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 1699,
	1700, 1706, 1727, 1705, 1701, 0, 1698, 1696, 1697, 1689,
	1690, 1691, 1692, 1694, 1695, 0, 0, 0, 0, 4117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 1368, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 1251, 262, 263, 1252,
	1253, 1254, 1368, 1255, 583, 1256, 1257, 1258, 1259, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 1260, 588, 273, 274, 275, 276,
	277, 278, 1261, 1262, 0, 279, 589, 590, 591, 1263,
	280, 281, 592, 1264, 1331, 1265, 282, 283, 284, 285,
	286, 287, 288, 0, 1266, 290, 291, 292, 289, 293,
	1267, 294, 0, 295, 296, 297, 298, 299, 300, 1268,
	301, 302, 303, 1116, 304, 305, 1269, 1270, 1272, 1271,
	1273, 1274, 1275, 306, 307, 308, 309, 0, 310, 593,
	594, 1276, 314, 311, 312, 1277, 315, 313, 1278, 316,
	317, 318, 1279, 1280, 319, 320, 321, 1281, 322, 323,
	1282, 324, 325, 326, 1283, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	1284, 252, 1285, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 1286, 344, 1287, 1288, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 1289, 355, 601, 1290, 602, 356, 1291, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 1119, 362,
	363, 1292, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1293, 1118, 371, 606, 607, 1294,
	608, 1295, 373, 374, 1120, 609, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1296, 385, 387, 386, 1297, 388, 610, 1123, 389,
	390, 1124, 1298, 391, 0, 0, 0, 392, 393, 1299,
	1300, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 1301, 254, 1127, 434, 435,
	1302, 611, 436, 612, 438, 439, 1303, 0, 440, 0,
	1304, 1305, 442, 443, 444, 1306, 1307, 445, 446, 613,
	1128, 447, 1129, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1308, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 1309, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 1310, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 1311, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 1312, 515, 516,
	514, 517, 518, 519, 1313, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 1314, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 1315, 542, 543, 0, 541,
	1316, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	1317, 552, 624, 625, 626, 627, 1318, 561, 1319, 553,
	554, 555, 628, 556, 629, 1320, 557, 558, 559, 560,
	0, 562, 563, 1321, 1322, 564, 565, 566, 568, 569,
	567, 570, 1323, 571, 1324, 0, 572, 573, 574, 630,
	631, 632, 1325, 576, 575, 577, 633, 1326, 1327, 1328,
	1329, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 2532,
	0, 0, 0, 0, 0, 0, 0, 2533, 255, 257,
	256, 258, 259, 260, 261, 1251, 262, 263, 1252, 1253,
	1254, 0, 1255, 583, 1256, 1257, 1258, 1259, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 1260, 588, 273, 274, 275, 276, 277,
	278, 1261, 1262, 0, 279, 589, 590, 591, 1263, 280,
	281, 592, 1264, 1331, 1265, 282, 283, 284, 285, 286,
	287, 288, 0, 1266, 290, 291, 292, 289, 293, 1267,
	294, 0, 295, 296, 297, 298, 299, 300, 1268, 301,
	302, 303, 1116, 304, 305, 1269, 1270, 1272, 1271, 1273,
	1274, 1275, 306, 307, 308, 309, 0, 310, 593, 594,
	1276, 314, 311, 312, 1277, 315, 313, 1278, 316, 317,
	318, 1279, 1280, 319, 320, 321, 1281, 322, 323, 1282,
	324, 325, 326, 1283, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 1284,
	252, 1285, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 1286, 344, 1287, 1288, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 1289, 355, 601, 1290, 602, 356, 1291, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 1119, 362, 363,
	1292, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 1293, 1118, 371, 606, 607, 1294, 608,
	1295, 373, 374, 1120, 609, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	1296, 385, 387, 386, 1297, 388, 610, 1123, 389, 390,
	1124, 1298, 391, 0, 0, 0, 392, 393, 1299, 1300,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1301, 254, 1127, 434, 435, 1302,
	611, 436, 612, 438, 439, 1303, 0, 440, 0, 1304,
	1305, 442, 443, 444, 1306, 1307, 445, 446, 613, 1128,
	447, 1129, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 1308, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	1309, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 1310, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 1311, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 1312, 515, 516, 514,
	517, 518, 519, 1313, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	1314, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 1315, 542, 543, 0, 541, 1316,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 1317,
	552, 624, 625, 626, 627, 1318, 561, 1319, 553, 554,
	555, 628, 556, 629, 1320, 557, 558, 559, 560, 0,
	562, 563, 1321, 1322, 564, 565, 566, 568, 569, 567,
	570, 1323, 571, 1324, 0, 572, 573, 574, 630, 631,
	632, 1325, 576, 575, 577, 633, 1326, 1327, 1328, 1329,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 3422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3424, 255, 257, 256, 258, 259,
	260, 261, 1251, 262, 263, 1252, 1253, 1254, 0, 1255,
	583, 1256, 1257, 1258, 1259, 264, 265, 1115, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	1260, 588, 273, 274, 275, 276, 277, 278, 1261, 1262,
	0, 279, 589, 590, 591, 1263, 280, 281, 592, 1264,
	1331, 1265, 282, 283, 284, 285, 286, 287, 288, 0,
	1266, 290, 291, 292, 289, 293, 1267, 294, 0, 295,
	296, 297, 298, 299, 300, 1268, 301, 302, 303, 1116,
	304, 305, 1269, 1270, 1272, 1271, 1273, 1274, 1275, 306,
	307, 308, 309, 0, 310, 593, 594, 1276, 314, 311,
	312, 1277, 315, 313, 1278, 316, 317, 318, 1279, 1280,
	319, 320, 321, 1281, 322, 323, 1282, 324, 325, 326,
	1283, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 1284, 252, 1285, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 1286, 344, 1287, 1288, 1117, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 1289, 355,
	601, 1290, 602, 356, 1291, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 1119, 362, 363, 1292, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	1293, 1118, 371, 606, 607, 1294, 608, 1295, 373, 374,
	1120, 609, 1121, 375, 376, 377, 1122, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 1296, 385, 387,
	386, 1297, 388, 610, 1123, 389, 390, 1124, 1298, 391,
	0, 0, 0, 392, 393, 1299, 1300, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1125, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1126,
	424, 1301, 254, 1127, 434, 435, 1302, 611, 436, 612,
	438, 439, 1303, 0, 440, 0, 1304, 1305, 442, 443,
	444, 1306, 1307, 445, 446, 613, 1128, 447, 1129, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 1308, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 1309, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 1310, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	1311, 492, 493, 494, 1130, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 1312, 515, 516, 514, 517, 518, 519,
	1313, 520, 521, 504, 505, 522, 523, 1131, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 1314, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 1315, 542, 543, 0, 541, 1316, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 1317, 552, 624, 625,
	626, 627, 1318, 561, 1319, 553, 554, 555, 628, 556,
	629, 1320, 557, 558, 559, 560, 0, 562, 563, 1321,
	1322, 564, 565, 566, 568, 569, 567, 570, 1323, 571,
	1324, 0, 572, 573, 574, 630, 631, 632, 1325, 576,
	575, 577, 633, 1326, 1327, 1328, 1329, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3778, 255, 257, 256, 258,
	259, 260, 261, 1251, 262, 263, 1252, 1253, 1254, 0,
	1255, 583, 1256, 1257, 1258, 1259, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 1260, 588, 273, 274, 275, 276, 277, 278, 1261,
	1262, 0, 279, 589, 590, 591, 1263, 280, 281, 592,
	1264, 1331, 1265, 282, 283, 284, 285, 286, 287, 288,
	0, 1266, 290, 291, 292, 289, 293, 1267, 294, 0,
	295, 296, 297, 298, 299, 300, 1268, 301, 302, 303,
	1116, 304, 305, 1269, 1270, 1272, 1271, 1273, 1274, 1275,
	306, 307, 308, 309, 0, 310, 593, 594, 1276, 314,
	311, 312, 1277, 315, 313, 1278, 316, 317, 318, 1279,
	1280, 319, 320, 321, 1281, 322, 323, 1282, 324, 325,
	326, 1283, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 1284, 252, 1285,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 1286, 344, 1287, 1288, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 1289,
	355, 601, 1290, 602, 356, 1291, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 1292, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 1293, 1118, 371, 606, 607, 1294, 608, 1295, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 1296, 385,
	387, 386, 1297, 388, 610, 1123, 389, 390, 1124, 1298,
	391, 0, 0, 0, 392, 393, 1299, 1300, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1301, 254, 1127, 434, 435, 1302, 611, 436,
	612, 438, 439, 1303, 0, 440, 0, 1304, 1305, 442,
	443, 444, 1306, 1307, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 1308, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 1309, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 1310, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 1311, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 1312, 515, 516, 514, 517, 518,
	519, 1313, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 1314, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 1315, 542, 543, 0, 541, 1316, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 1317, 552, 624,
	625, 626, 627, 1318, 561, 1319, 553, 554, 555, 628,
	556, 629, 1320, 557, 558, 559, 560, 0, 562, 563,
	1321, 1322, 564, 565, 566, 568, 569, 567, 570, 1323,
	571, 1324, 0, 572, 573, 574, 630, 631, 632, 1325,
	576, 575, 577, 633, 1326, 1327, 1328, 1329, 578, 579,
	634, 580, 581, 582, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3953, 255, 257, 256, 258, 259, 260, 261, 1251,
	262, 263, 1252, 1253, 1254, 0, 1255, 583, 1256, 1257,
	1258, 1259, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 1260, 588, 273,
	274, 275, 276, 277, 278, 1261, 1262, 0, 279, 589,
	590, 591, 1263, 280, 281, 592, 1264, 1331, 1265, 282,
	283, 284, 285, 286, 287, 288, 0, 1266, 290, 291,
	292, 289, 293, 1267, 294, 0, 295, 296, 297, 298,
	299, 300, 1268, 301, 302, 303, 1116, 304, 305, 1269,
	1270, 1272, 1271, 1273, 1274, 1275, 306, 307, 308, 309,
	0, 310, 593, 594, 1276, 314, 311, 312, 1277, 315,
	313, 1278, 316, 317, 318, 1279, 1280, 319, 320, 321,
	1281, 322, 323, 1282, 324, 325, 326, 1283, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 1284, 252, 1285, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 1286, 344,
	1287, 1288, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 1289, 355, 601, 1290, 602,
	356, 1291, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 1292, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 1293, 1118, 371,
	606, 607, 1294, 608, 1295, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 1296, 385, 387, 386, 1297, 388,
	610, 1123, 389, 390, 1124, 1298, 391, 0, 0, 0,
	392, 393, 1299, 1300, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1301, 254,
	1127, 434, 435, 1302, 611, 436, 612, 438, 439, 1303,
	0, 440, 0, 1304, 1305, 442, 443, 444, 1306, 1307,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 1308, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 1309, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	1310, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 1311, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	1312, 515, 516, 514, 517, 518, 519, 1313, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 1314, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 1315, 542,
	543, 0, 541, 1316, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 1317, 552, 624, 625, 626, 627, 1318,
	561, 1319, 553, 554, 555, 628, 556, 629, 1320, 557,
	558, 559, 560, 0, 562, 563, 1321, 1322, 564, 565,
	566, 568, 569, 567, 570, 1323, 571, 1324, 0, 572,
	573, 574, 630, 631, 632, 1325, 576, 575, 577, 633,
	1326, 1327, 1328, 1329, 578, 579, 634, 580, 581, 582,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3842, 255, 257,
	256, 258, 259, 260, 261, 1251, 262, 263, 1252, 1253,
	1254, 0, 1255, 583, 1256, 1257, 1258, 1259, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 1260, 588, 273, 274, 275, 276, 277,
	278, 1261, 1262, 0, 279, 589, 590, 591, 1263, 280,
	281, 592, 1264, 1331, 1265, 282, 283, 284, 285, 286,
	287, 288, 0, 1266, 290, 291, 292, 289, 293, 1267,
	294, 0, 295, 296, 297, 298, 299, 300, 1268, 301,
	302, 303, 1116, 304, 305, 1269, 1270, 1272, 1271, 1273,
	1274, 1275, 306, 307, 308, 309, 0, 310, 593, 594,
	1276, 314, 311, 312, 1277, 315, 313, 1278, 316, 317,
	318, 1279, 1280, 319, 320, 321, 1281, 322, 323, 1282,
	324, 325, 326, 1283, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 1284,
	252, 1285, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 1286, 344, 1287, 1288, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 1289, 355, 601, 1290, 602, 356, 1291, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 1119, 362, 363,
	1292, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 1293, 1118, 371, 606, 607, 1294, 608,
	1295, 373, 374, 1120, 609, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	1296, 385, 387, 386, 1297, 388, 610, 1123, 389, 390,
	1124, 1298, 391, 0, 0, 0, 392, 393, 1299, 1300,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1301, 254, 1127, 434, 435, 1302,
	611, 436, 612, 438, 439, 1303, 0, 440, 0, 1304,
	1305, 442, 443, 444, 1306, 1307, 445, 446, 613, 1128,
	447, 1129, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 1308, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	1309, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 1310, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 1311, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 1312, 515, 516, 514,
	517, 518, 519, 1313, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	1314, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 1315, 542, 543, 0, 541, 1316,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 1317,
	552, 624, 625, 626, 627, 1318, 561, 1319, 553, 554,
	555, 628, 556, 629, 1320, 557, 558, 559, 560, 0,
	562, 563, 1321, 1322, 564, 565, 566, 568, 569, 567,
	570, 1323, 571, 1324, 0, 572, 573, 574, 630, 631,
	632, 1325, 576, 575, 577, 633, 1326, 1327, 1328, 1329,
	578, 579, 634, 580, 581, 582, 0, 1245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3708, 255, 257, 256, 258, 259, 260,
	261, 1251, 262, 263, 1252, 1253, 1254, 0, 1255, 583,
	1256, 1257, 1258, 1259, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 1260,
	588, 273, 274, 275, 276, 277, 278, 1261, 1262, 0,
	279, 589, 590, 591, 1263, 280, 281, 592, 1264, 1331,
	1265, 282, 283, 284, 285, 286, 287, 288, 0, 1266,
	290, 291, 292, 289, 293, 1267, 294, 0, 295, 296,
	297, 298, 299, 300, 1268, 301, 302, 303, 1116, 304,
	305, 1269, 1270, 1272, 1271, 1273, 1274, 1275, 306, 307,
	308, 309, 0, 310, 593, 594, 1276, 314, 311, 312,
	1277, 315, 313, 1278, 316, 317, 318, 1279, 1280, 319,
	320, 321, 1281, 322, 323, 1282, 324, 325, 326, 1283,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 1284, 252, 1285, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	1286, 344, 1287, 1288, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 1289, 355, 601,
	1290, 602, 356, 1291, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 1292, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 1293,
	1118, 371, 606, 607, 1294, 608, 1295, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1296, 385, 387, 386,
	1297, 388, 610, 1123, 389, 390, 1124, 1298, 391, 0,
	0, 0, 392, 393, 1299, 1300, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1301, 254, 1127, 434, 435, 1302, 611, 436, 612, 438,
	439, 1303, 0, 440, 0, 1304, 1305, 442, 443, 444,
	1306, 1307, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	1308, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 1309, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 1310, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 1311,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 1312, 515, 516, 514, 517, 518, 519, 1313,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 1314, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	1315, 542, 543, 0, 541, 1316, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 1317, 552, 624, 625, 626,
	627, 1318, 561, 1319, 553, 554, 555, 628, 556, 629,
	1320, 557, 558, 559, 560, 0, 562, 563, 1321, 1322,
	564, 565, 566, 568, 569, 567, 570, 1323, 571, 1324,
	0, 572, 573, 574, 630, 631, 632, 1325, 576, 575,
	577, 633, 1326, 1327, 1328, 1329, 578, 579, 634, 580,
	581, 582, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3440,
	255, 257, 256, 258, 259, 260, 261, 1251, 262, 263,
	1252, 1253, 1254, 0, 1255, 583, 1256, 1257, 1258, 1259,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 1260, 588, 273, 274, 275,
	276, 277, 278, 1261, 1262, 0, 279, 589, 590, 591,
	1263, 280, 281, 592, 1264, 1331, 1265, 282, 283, 284,
	285, 286, 287, 288, 0, 1266, 290, 291, 292, 289,
	293, 1267, 294, 0, 295, 296, 297, 298, 299, 300,
	1268, 301, 302, 303, 1116, 304, 305, 1269, 1270, 1272,
	1271, 1273, 1274, 1275, 306, 307, 308, 309, 0, 310,
	593, 594, 1276, 314, 311, 312, 1277, 315, 313, 1278,
	316, 317, 318, 1279, 1280, 319, 320, 321, 1281, 322,
	323, 1282, 324, 325, 326, 1283, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 1284, 252, 1285, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 1286, 344, 1287, 1288,
	1117, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 1289, 355, 601, 1290, 602, 356, 1291,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 1119,
	362, 363, 1292, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 1293, 1118, 371, 606, 607,
	1294, 608, 1295, 373, 374, 1120, 609, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 1296, 385, 387, 386, 1297, 388, 610, 1123,
	389, 390, 1124, 1298, 391, 0, 0, 0, 392, 393,
	1299, 1300, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1301, 254, 1127, 434,
	435, 1302, 611, 436, 612, 438, 439, 1303, 0, 440,
	0, 1304, 1305, 442, 443, 444, 1306, 1307, 445, 446,
	613, 1128, 447, 1129, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 1308, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 1309, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 1310, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 1311, 492, 493, 494, 1130,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 1312, 515,
	516, 514, 517, 518, 519, 1313, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 1314, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 1315, 542, 543, 0,
	541, 1316, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 1317, 552, 624, 625, 626, 627, 1318, 561, 1319,
	553, 554, 555, 628, 556, 629, 1320, 557, 558, 559,
	560, 0, 562, 563, 1321, 1322, 564, 565, 566, 568,
	569, 567, 570, 1323, 571, 1324, 0, 572, 573, 574,
	630, 631, 632, 1325, 576, 575, 577, 633, 1326, 1327,
	1328, 1329, 578, 579, 634, 580, 581, 582, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3267, 255, 257, 256, 258,
	259, 260, 261, 1251, 262, 263, 1252, 1253, 1254, 0,
	1255, 583, 1256, 1257, 1258, 1259, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 1260, 588, 273, 274, 275, 276, 277, 278, 1261,
	1262, 0, 279, 589, 590, 591, 1263, 280, 281, 592,
	1264, 1331, 1265, 282, 283, 284, 285, 286, 287, 288,
	0, 1266, 290, 291, 292, 289, 293, 1267, 294, 0,
	295, 296, 297, 298, 299, 300, 1268, 301, 302, 303,
	1116, 304, 305, 1269, 1270, 1272, 1271, 1273, 1274, 1275,
	306, 307, 308, 309, 0, 310, 593, 594, 1276, 314,
	311, 312, 1277, 315, 313, 1278, 316, 317, 318, 1279,
	1280, 319, 320, 321, 1281, 322, 323, 1282, 324, 325,
	326, 1283, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 1284, 252, 1285,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 1286, 344, 1287, 1288, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 1289,
	355, 601, 1290, 602, 356, 1291, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 1292, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 1293, 1118, 371, 606, 607, 1294, 608, 1295, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 1296, 385,
	387, 386, 1297, 388, 610, 1123, 389, 390, 1124, 1298,
	391, 0, 0, 0, 392, 393, 1299, 1300, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1301, 254, 1127, 434, 435, 1302, 611, 436,
	612, 438, 439, 1303, 0, 440, 0, 1304, 1305, 442,
	443, 444, 1306, 1307, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 1308, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 1309, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 1310, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 1311, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 1312, 515, 516, 514, 517, 518,
	519, 1313, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 1314, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 1315, 542, 543, 0, 541, 1316, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 1317, 552, 624,
	625, 626, 627, 1318, 561, 1319, 553, 554, 555, 628,
	556, 629, 1320, 557, 558, 559, 560, 0, 562, 563,
	1321, 1322, 564, 565, 566, 568, 569, 567, 570, 1323,
	571, 1324, 0, 572, 573, 574, 630, 631, 632, 1325,
	576, 575, 577, 633, 1326, 1327, 1328, 1329, 578, 579,
	634, 580, 581, 582, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2391, 255, 257, 256, 258, 259, 260, 261, 1251,
	262, 263, 1252, 1253, 1254, 0, 1255, 583, 1256, 1257,
	1258, 1259, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 1260, 588, 273,
	274, 275, 276, 277, 278, 1261, 1262, 0, 279, 589,
	590, 591, 1263, 280, 281, 592, 1264, 1331, 1265, 282,
	283, 284, 285, 286, 287, 288, 0, 1266, 290, 291,
	292, 289, 293, 1267, 294, 0, 295, 296, 297, 298,
	299, 300, 1268, 301, 302, 303, 1116, 304, 305, 1269,
	1270, 1272, 1271, 1273, 1274, 1275, 306, 307, 308, 309,
	0, 310, 593, 594, 1276, 314, 311, 312, 1277, 315,
	313, 1278, 316, 317, 318, 1279, 1280, 319, 320, 321,
	1281, 322, 323, 1282, 324, 325, 326, 1283, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 1284, 252, 1285, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 1286, 344,
	1287, 1288, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 1289, 355, 601, 1290, 602,
	356, 1291, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 1292, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 1293, 1118, 371,
	606, 607, 1294, 608, 1295, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 1296, 385, 387, 386, 1297, 388,
	610, 1123, 389, 390, 1124, 1298, 391, 0, 0, 0,
	392, 393, 1299, 1300, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1301, 254,
	1127, 434, 435, 1302, 611, 436, 612, 438, 439, 1303,
	0, 440, 0, 1304, 1305, 442, 443, 444, 1306, 1307,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 1308, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 1309, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	1310, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 1311, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	1312, 515, 516, 514, 517, 518, 519, 1313, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 1314, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 1315, 542,
	543, 0, 541, 1316, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 1317, 552, 624, 625, 626, 627, 1318,
	561, 1319, 553, 554, 555, 628, 556, 629, 1320, 557,
	558, 559, 560, 0, 562, 563, 1321, 1322, 564, 565,
	566, 568, 569, 567, 570, 1323, 571, 1324, 0, 572,
	573, 574, 630, 631, 632, 1325, 576, 575, 577, 633,
	1326, 1327, 1328, 1329, 578, 579, 634, 580, 581, 582,
	1343, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 0, 255,
	257, 256, 258, 259, 260, 261, 1251, 262, 263, 1252,
	1253, 1254, 0, 1255, 583, 1256, 1257, 1258, 1259, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 1260, 588, 273, 274, 275, 276,
	277, 278, 1261, 1262, 0, 279, 589, 590, 591, 1263,
	280, 281, 592, 1264, 1331, 1265, 282, 283, 284, 285,
	286, 287, 288, 0, 1266, 290, 291, 292, 289, 293,
	1267, 294, 0, 295, 296, 297, 298, 299, 300, 1268,
	301, 302, 303, 1116, 304, 305, 1269, 1270, 1272, 1271,
	1273, 1274, 1275, 306, 307, 308, 309, 0, 310, 593,
	594, 1276, 314, 311, 312, 1277, 315, 313, 1278, 316,
	317, 318, 1279, 1280, 319, 320, 321, 1281, 322, 323,
	1282, 324, 325, 326, 1283, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	1284, 252, 1285, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 1286, 344, 1287, 1288, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 1289, 355, 601, 1290, 602, 356, 1291, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 1119, 362,
	363, 1292, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1293, 1118, 371, 606, 607, 1294,
	608, 1295, 373, 374, 1120, 609, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1296, 385, 387, 386, 1297, 388, 610, 1123, 389,
	390, 1124, 1298, 391, 0, 0, 0, 392, 393, 1299,
	1300, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 1301, 254, 1127, 434, 435,
	1302, 611, 436, 612, 438, 439, 1303, 0, 440, 0,
	1304, 1305, 442, 443, 444, 1306, 1307, 445, 446, 613,
	1128, 447, 1129, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1308, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 1309, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 1310, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 1311, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 1312, 515, 516,
	514, 517, 518, 519, 1313, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 1314, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 1315, 542, 543, 0, 541,
	1316, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	1317, 552, 624, 625, 626, 627, 1318, 561, 1319, 553,
	554, 555, 628, 556, 629, 1320, 557, 558, 559, 560,
	0, 562, 563, 1321, 1322, 564, 565, 566, 568, 569,
	567, 570, 1323, 571, 1324, 0, 572, 573, 574, 630,
	631, 632, 1325, 576, 575, 577, 633, 1326, 1327, 1328,
	1329, 578, 579, 634, 580, 581, 582, 1242, 0, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 1251, 262, 263, 1252, 1253, 1254, 0,
	1255, 583, 1256, 1257, 1258, 1259, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 1260, 588, 273, 274, 275, 276, 277, 278, 1261,
	1262, 0, 279, 589, 590, 591, 1263, 280, 281, 592,
	1264, 1331, 1265, 282, 283, 284, 285, 286, 287, 288,
	0, 1266, 290, 291, 292, 289, 293, 1267, 294, 0,
	295, 296, 297, 298, 299, 300, 1268, 301, 302, 303,
	1116, 304, 305, 1269, 1270, 1272, 1271, 1273, 1274, 1275,
	306, 307, 308, 309, 0, 310, 593, 594, 1276, 314,
	311, 312, 1277, 315, 313, 1278, 316, 317, 318, 1279,
	1280, 319, 320, 321, 1281, 322, 323, 1282, 324, 325,
	326, 1283, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 1284, 252, 1285,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 1286, 344, 1287, 1288, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 1289,
	355, 601, 1290, 602, 356, 1291, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 1119, 362, 363, 1292, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 1293, 1118, 371, 606, 607, 1294, 608, 1295, 373,
	374, 1120, 609, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 1296, 385,
	387, 386, 1297, 388, 610, 1123, 389, 390, 1124, 1298,
	391, 0, 0, 0, 392, 393, 1299, 1300, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1301, 254, 1127, 434, 435, 1302, 611, 436,
	612, 438, 439, 1303, 0, 440, 0, 1304, 1305, 442,
	443, 444, 1306, 1307, 445, 446, 613, 1128, 447, 1129,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 1308, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 1309, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 1310, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 1311, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 1312, 515, 516, 514, 517, 518,
	519, 1313, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 1314, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 1315, 542, 543, 0, 541, 1316, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 1317, 552, 624,
	625, 626, 627, 1318, 561, 1319, 553, 554, 555, 628,
	556, 629, 1320, 557, 558, 559, 560, 0, 562, 563,
	1321, 1322, 564, 565, 566, 568, 569, 567, 570, 1323,
	571, 1324, 0, 572, 573, 574, 630, 631, 632, 1325,
	576, 575, 577, 633, 1326, 1327, 1328, 1329, 578, 579,
	634, 580, 581, 582, 1245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 1251, 262,
	263, 1252, 1253, 1254, 0, 1255, 583, 1256, 1257, 1258,
	1259, 264, 265, 1115, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 1260, 588, 273, 274,
	275, 276, 277, 278, 1261, 1262, 0, 279, 589, 590,
	591, 1263, 280, 281, 592, 1264, 1331, 1265, 282, 283,
	284, 285, 286, 287, 288, 0, 1266, 290, 291, 292,
	289, 293, 1267, 294, 0, 295, 296, 297, 298, 299,
	300, 1268, 301, 302, 303, 1116, 304, 305, 1269, 1270,
	1272, 1271, 1273, 1274, 1275, 306, 307, 308, 309, 0,
	310, 593, 594, 1276, 314, 311, 312, 1277, 315, 313,
	1278, 316, 317, 318, 1279, 1280, 319, 320, 321, 1281,
	322, 323, 1282, 324, 325, 326, 1283, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 1284, 252, 1285, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 1286, 344, 1287,
	1288, 1117, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 1289, 355, 601, 1290, 602, 356,
	1291, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	1119, 362, 363, 1292, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 1293, 1118, 371, 606,
	607, 1294, 608, 1295, 373, 374, 1120, 609, 1121, 375,
	376, 377, 1122, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 1296, 385, 387, 386, 1297, 388, 610,
	1123, 389, 390, 1124, 1298, 391, 0, 0, 0, 392,
	393, 1299, 1300, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1125, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1126, 424, 1301, 254, 1127,
	434, 435, 1302, 611, 436, 612, 438, 439, 1303, 0,
	440, 0, 1304, 1305, 442, 443, 444, 1306, 1307, 445,
	446, 613, 1128, 447, 1129, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 1308, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 1309, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 1310,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 1311, 492, 493, 494,
	1130, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 1312,
	515, 516, 514, 517, 518, 519, 1313, 520, 521, 504,
	505, 522, 523, 1131, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 1314, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 1315, 542, 543,
	0, 541, 1316, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 1317, 552, 624, 625, 626, 627, 1318, 561,
	1319, 553, 554, 555, 628, 556, 629, 1320, 557, 558,
	559, 560, 0, 562, 563, 1321, 1322, 564, 565, 566,
	568, 569, 567, 570, 1323, 571, 1324, 0, 572, 573,
	574, 630, 631, 632, 1325, 576, 575, 577, 633, 1326,
	1327, 1328, 1329, 578, 579, 634, 580, 581, 582, 2366,
	0, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 2363, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 2364, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 2362, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 2365, 0, 0, 0, 0, 0, 0,
	1035, 2361, 0, 997, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	215, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 217, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 1523, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 209, 578, 579, 634, 580, 581, 582,
	1010, 0, 210, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1760, 1758, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 215, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 217, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 1523, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 209, 578, 579, 634, 580,
	581, 582, 1010, 0, 210, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1760, 2941, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 215, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 217, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 1523, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 209, 578, 579,
	634, 580, 581, 582, 1010, 0, 210, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 1760, 1758,
	0, 0, 1033, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 2494, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 2499, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 2495, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 2496, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 2411, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 2409, 0, 2408, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 2406,
	0, 2405, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	0, 0, 1035, 2403, 0, 2402, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 2400, 0, 1613,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 1612, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 1000, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 1014, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1035, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 4240, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 1014, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1035, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 2280, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 2279, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 1035, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 1014,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	1035, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 4022, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 1014, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 1035, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 3670,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1828, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 0, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 3418,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 1035, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 1828, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 0, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 2499, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1035, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 1758, 0, 2504,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 2502, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 2490, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 2479, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 2477, 1033, 2468, 2475, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 2471, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 2472, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 2473, 405, 2470,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 2474, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	2469, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 2465,
	1033, 2468, 2475, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 2471, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 2472, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 2473, 405, 2470, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 2474, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 2469, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	1035, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	1766, 0, 1035, 0, 0, 0, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 2259, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 1618,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 1553, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 1548, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 1539, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	0, 0, 1035, 0, 0, 1534, 1033, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 1516,
	1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 1040, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 1395, 1033, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1394, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 1389, 1033, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1388, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 1382, 1033, 1051, 1023, 1024, 1025, 1021, 1022, 1034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 1021,
	1022, 1034, 1035, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1035, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	4280, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 4279, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 1004, 1005, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1035, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 4278, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 4280, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 4279, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1010, 0, 0, 0, 0, 0,
	0, 0, 1006, 0, 0, 0, 0, 0, 0, 1004,
	1005, 1051, 1023, 1024, 1025, 1021, 1022, 1034, 1035, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1075, 1039, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 1088, 0, 271,
	1095, 272, 1094, 0, 1105, 273, 274, 275, 276, 277,
	278, 1041, 1074, 1008, 279, 1135, 1136, 591, 0, 280,
	281, 1081, 0, 1062, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 3972, 305, 1065, 1063, 1064, 1071, 1067,
	1066, 1070, 306, 307, 308, 309, 1098, 310, 1092, 1091,
	1012, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1018, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1106, 1107, 1030,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1090,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1103, 1104, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1113, 0, 3973, 356, 0, 357, 358,
	359, 360, 361, 1076, 1077, 1080, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1118, 371, 1085, 1086, 0, 1046,
	0, 373, 374, 1120, 1078, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1114, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 1069, 1068,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 1009, 254, 1127, 434, 435, 1031,
	1079, 436, 1093, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 1108, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 1109, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1089, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 3971, 1019, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 1072, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1087, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1134, 536,
	537, 538, 539, 1110, 0, 542, 543, 1007, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1099, 1100, 1101, 1102, 0, 561, 0, 553, 554,
	555, 1111, 556, 1112, 1029, 557, 558, 559, 560, 0,
	562, 563, 0, 1013, 564, 565, 566, 568, 569, 567,
	570, 1073, 571, 0, 0, 572, 573, 574, 630, 1096,
	1133, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1010, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 1004, 1005, 1051, 1023, 1024, 1025, 2908, 2909, 1034,
	1035, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1075, 1039, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 1088,
	0, 271, 1095, 272, 1094, 0, 1105, 273, 274, 275,
	276, 277, 278, 1041, 1074, 1008, 279, 1135, 1136, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098, 310,
	1092, 1091, 1012, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1083, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1018, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 1030, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1090, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 1103, 1104, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 1040, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 1085, 1086,
	0, 1046, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 1009, 254, 1127, 434,
	435, 1031, 1079, 436, 1093, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 1089, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 1019, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 1087,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	1134, 536, 537, 538, 539, 1110, 0, 542, 543, 1007,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 1099, 1100, 1101, 1102, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 1029, 557, 558, 559,
	560, 0, 562, 563, 0, 1013, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 1096, 1133, 0, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 1010, 0,
	0, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1004, 1005, 1051, 1023, 1024, 1025, 2906,
	2907, 1034, 1035, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 1039, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 1088, 0, 271, 1095, 272, 1094, 0, 1105, 273,
	274, 275, 276, 277, 278, 1041, 1074, 1008, 279, 1135,
	1136, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	1098, 310, 1092, 1091, 1012, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1083, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1018, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 1030, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1090, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 1103, 1104, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 1040,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	1085, 1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 1009, 254,
	1127, 434, 435, 1031, 1079, 436, 1093, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 1089, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 1019, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 1087, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 1134, 536, 537, 538, 539, 1110, 0, 542,
	543, 1007, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 1099, 1100, 1101, 1102, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 1029, 557,
	558, 559, 560, 0, 562, 563, 0, 1013, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 1096, 1133, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1010, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 1004, 1005, 1051, 1023, 1024,
	1025, 1021, 1022, 1034, 1035, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1075,
	1039, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 1088, 0, 271, 1095, 272, 1094, 0,
	1105, 273, 274, 275, 276, 277, 278, 1041, 1074, 1008,
	279, 1135, 1136, 591, 0, 280, 281, 1081, 0, 1062,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307,
	308, 309, 1098, 310, 1092, 1091, 1012, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1083, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1018, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1106, 1107, 1030, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1090, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 1103, 1104, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1113,
	0, 1040, 356, 0, 357, 358, 359, 360, 361, 1076,
	1077, 1080, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1118, 371, 1085, 1086, 0, 1046, 0, 373, 374, 1120,
	1078, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1114, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 1069, 1068, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	1009, 254, 1127, 434, 435, 1031, 1079, 436, 1093, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 1108, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 1109, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 1089, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 1019, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1072,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 1087, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 1134, 536, 537, 538, 539, 1110,
	0, 542, 543, 1007, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 1099, 1100, 1101,
	1102, 0, 561, 0, 553, 554, 555, 1111, 556, 1112,
	1029, 557, 558, 559, 560, 0, 562, 563, 0, 1013,
	564, 565, 566, 568, 569, 567, 570, 1073, 571, 0,
	0, 572, 573, 574, 630, 1096, 1133, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1010, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 0, 0, 0, 0, 2267, 2268, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 1035, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 0, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 0, 254, 1127, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 1051, 1023, 1024, 1025, 1021, 1022,
	1034, 0, 2487, 0, 0, 0, 0, 0, 0, 2485,
	2486, 255, 257, 256, 258, 259, 260, 261, 1035, 262,
	263, 0, 1033, 0, 0, 0, 1075, 1039, 0, 0,
	0, 264, 265, 1115, 266, 267, 268, 269, 270, 584,
	1088, 0, 271, 1095, 272, 1094, 0, 1105, 273, 274,
	275, 276, 277, 278, 1041, 1074, 0, 279, 1135, 1136,
	591, 0, 280, 281, 1081, 0, 1062, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1116, 304, 305, 1065, 1063,
	1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309, 1098,
	310, 1092, 1091, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1083, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1018,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1106, 1107, 1030, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1090, 0, 0, 0, 343, 0, 344, 0,
	0, 1117, 345, 346, 1103, 1104, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1113, 0, 1040, 356,
	0, 357, 358, 359, 360, 361, 1076, 1077, 1080, 437,
	1119, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 1118, 371, 1085,
	1086, 0, 1046, 0, 373, 374, 1120, 1078, 1121, 375,
	376, 377, 1122, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 1114,
	1123, 389, 390, 1124, 0, 391, 0, 0, 0, 392,
	393, 1069, 1068, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1125, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1126, 424, 0, 254, 1127,
	434, 435, 1031, 1079, 436, 1093, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 1128, 447, 1129, 1108, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 1109, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 1089, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	1130, 495, 496, 497, 498, 2901, 2902, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 1072, 520, 521, 504,
	505, 522, 523, 1131, 524, 525, 526, 527, 528, 529,
	1087, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 1134, 536, 537, 538, 539, 1110, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 1099, 1100, 1101, 1102, 0, 561,
	0, 553, 554, 555, 1111, 556, 1112, 1029, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 1073, 571, 0, 0, 572, 573,
	574, 630, 1096, 1133, 0, 576, 575, 577, 633, 0,
	0, 0, 0, 578, 579, 634, 580, 581, 582, 1051,
	1023, 1024, 1025, 1021, 1022, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 1972, 255, 257, 256, 258,
	259, 260, 261, 1035, 262, 263, 0, 1033, 0, 0,
	0, 1075, 1039, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 0, 1088, 0, 271, 1095, 272,
	1094, 0, 1105, 273, 274, 275, 276, 277, 278, 1041,
	1074, 1008, 279, 1135, 1136, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 4280, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 1098, 310, 1092, 1091, 1012, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1083, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1018, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 1030, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1090, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 1103,
	1104, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 1040, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 1085, 1086, 0, 1046, 0, 373,
	374, 0, 1078, 0, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 1009, 254, 0, 434, 435, 1031, 1079, 436,
	1093, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 1089,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	1019, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 1087, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 1134, 536, 537, 538,
	539, 1110, 0, 542, 543, 1007, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 1099,
	1100, 1101, 1102, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 1029, 557, 558, 559, 560, 0, 4279, 563,
	0, 1013, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 1096, 1133, 0,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 997, 0, 1173, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	0, 0, 1033, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1075, 0,
	0, 0, 0, 264, 265, 1115, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 1074, 0, 279,
	589, 590, 591, 0, 280, 281, 1081, 0, 1062, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1116, 304, 305,
	1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1106, 1107, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 1117, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1113, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1076, 1077,
	1080, 437, 1119, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1118,
	371, 606, 607, 0, 608, 0, 373, 374, 1120, 1078,
	1121, 375, 376, 377, 1122, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 1159, 385, 387, 386, 0,
	388, 1114, 1123, 389, 390, 1124, 0, 391, 0, 0,
	0, 392, 393, 1069, 1068, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1125, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1126, 424, 0,
	254, 1127, 434, 435, 0, 1079, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 1165, 442, 443, 444, 0,
	0, 445, 446, 613, 1128, 447, 1129, 1108, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	1109, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 1130, 495, 496, 497, 498, 620, 1167, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 215, 515, 516, 514, 517, 518, 519, 1072, 520,
	521, 504, 505, 522, 523, 1131, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 1110, 0,
	542, 543, 0, 541, 217, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 1111, 556, 1112, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 1073, 571, 0, 0,
	572, 573, 574, 1523, 631, 632, 0, 576, 575, 577,
	633, 0, 1173, 0, 209, 578, 579, 634, 580, 581,
	582, 0, 0, 210, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 1163, 1075, 1852, 0, 0, 0, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 1074, 0, 279, 589, 590, 591, 0,
	280, 281, 1081, 0, 1062, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1116, 304, 305, 1065, 1063, 1064, 1071,
	1067, 1066, 1070, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1106, 1107,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1113, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 1076, 1077, 1080, 437, 1119, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1118, 371, 606, 607, 0,
	608, 0, 373, 374, 1120, 1078, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1159, 385, 387, 386, 0, 388, 1114, 1123, 389,
	390, 1124, 0, 391, 0, 0, 0, 392, 393, 1069,
	1068, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 0, 254, 1127, 434, 435,
	0, 1079, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 1165, 442, 443, 444, 0, 0, 445, 446, 613,
	1128, 447, 1129, 1108, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 1109, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 1167, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 215, 515, 516,
	514, 517, 518, 519, 1072, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 1110, 0, 542, 543, 0, 541,
	217, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 1111, 556, 1112, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 1073, 571, 0, 0, 572, 573, 574, 1523,
	631, 632, 0, 576, 575, 577, 633, 0, 0, 0,
	209, 578, 579, 634, 580, 581, 582, 0, 0, 210,
	0, 0, 0, 3085, 0, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 1852, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1075, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 1074, 0, 279, 589,
	590, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 1159, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 254,
	1127, 434, 435, 0, 1079, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 1165, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 1167, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 1110, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	0, 1155, 0, 1173, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 1163, 0, 1161, 1075, 0, 0, 0, 0,
	264, 265, 1115, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 1074, 0, 279, 589, 590, 591,
	0, 280, 281, 1081, 0, 1062, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1116, 304, 305, 1065, 1063, 1064,
	1071, 1067, 1066, 1070, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1106,
	1107, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	1117, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1113, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 1076, 1077, 1080, 437, 1119,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1118, 371, 606, 607,
	0, 608, 0, 373, 374, 1120, 1078, 1121, 375, 376,
	377, 1122, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 1159, 385, 387, 386, 0, 388, 1114, 1123,
	389, 390, 1124, 0, 391, 0, 0, 0, 392, 393,
	1069, 1068, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1125, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1126, 424, 0, 254, 1127, 434,
	435, 0, 1079, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 1165, 442, 443, 444, 0, 0, 445, 446,
	613, 1128, 447, 1129, 1108, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 1109, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 1130,
	495, 496, 497, 498, 620, 1167, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 1072, 520, 521, 504, 505,
	522, 523, 1131, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 1110, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 1111, 556, 1112, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 1073, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 0, 1173,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	1163, 1075, 1161, 0, 0, 0, 264, 265, 1115, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	1074, 0, 279, 589, 590, 591, 0, 280, 281, 1081,
	0, 1062, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066, 1070,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1106, 1107, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 1117, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1113, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 1076, 1077, 1080, 437, 1119, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1118, 371, 606, 607, 0, 608, 0, 373,
	374, 1120, 1078, 1121, 375, 376, 377, 1122, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 1159, 385,
	387, 386, 0, 388, 1114, 1123, 389, 390, 1124, 0,
	391, 0, 0, 0, 392, 393, 1069, 1068, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1125, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1126, 424, 0, 254, 1127, 434, 435, 0, 1079, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 1165, 442,
	443, 444, 0, 0, 445, 446, 613, 1128, 447, 1129,
	1108, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 1109, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 1130, 495, 496, 497, 498,
	620, 1167, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 1072, 520, 521, 504, 505, 522, 523, 1131, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 1110, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 1111,
	556, 1112, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 1073,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 0, 1173, 0, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 1163, 1075, 1161, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 1074, 0, 279, 589,
	590, 591, 0, 280, 281, 1081, 0, 1062, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 1065,
	1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1106, 1107, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1113, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 1076, 1077, 1080,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 1078, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1114, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 1069, 1068, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 254,
	1127, 434, 435, 0, 1079, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 1108, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 1109,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 1072, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 1110, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 1111, 556, 1112, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 1073, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	1173, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1075, 0, 3566, 0, 0, 264, 265, 1115,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 1074, 0, 279, 589, 590, 591, 0, 280, 281,
	1081, 0, 1062, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1116, 304, 305, 1065, 1063, 1064, 1071, 1067, 1066,
	1070, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1106, 1107, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 1117, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1113, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 1076, 1077, 1080, 437, 1119, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1118, 371, 606, 607, 0, 608, 0,
	373, 374, 1120, 1078, 1121, 375, 376, 377, 1122, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 1114, 1123, 389, 390, 1124,
	0, 391, 0, 0, 0, 392, 393, 1069, 1068, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1125, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1126, 424, 0, 254, 1127, 434, 435, 0, 1079,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 1128, 447,
	1129, 1108, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 1109, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 1130, 495, 496, 497,
	498, 620, 1167, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 1072, 520, 521, 504, 505, 522, 523, 1131,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 1110, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	1111, 556, 1112, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	1073, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 0, 997, 0, 1365, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 1751,
	583, 0, 0, 0, 0, 264, 265, 1115, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	1331, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1116,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 1117, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 1119, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 1118, 371, 606, 607, 0, 608, 0, 373, 374,
	1120, 609, 1121, 375, 376, 377, 1122, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 1123, 389, 390, 1124, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1125, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1126,
	424, 0, 0, 1127, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 1128, 447, 1129, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 1130, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 215, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 1131, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 217, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 1523, 631, 632, 0, 576,
	575, 577, 633, 0, 0, 0, 209, 578, 579, 634,
	580, 581, 582, 0, 0, 210, 0, 0, 0, 1520,
	0, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 1331, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1118, 371, 606, 607, 0, 608,
	0, 373, 374, 1120, 609, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 0, 0, 1127, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 215, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 217,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 1523, 631,
	632, 0, 576, 575, 577, 633, 0, 0, 0, 209,
	578, 579, 634, 580, 581, 582, 1365, 1364, 210, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	179, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 1115, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 1331, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1116, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 1117, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 1119, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 1118,
	371, 606, 607, 0, 608, 0, 373, 374, 1120, 609,
	1121, 375, 376, 377, 1122, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 1123, 389, 390, 1124, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1125, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1126, 424, 0,
	0, 1127, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 1128, 447, 1129, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 1130, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 1131, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 1365, 1364, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 1545, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 1331, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1118, 371, 606, 607, 0, 608,
	0, 373, 374, 1120, 609, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 0, 0, 1127, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1365, 2056, 0, 0,
	0, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	3342, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 1115, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 1331, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1116, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 1117, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 1119, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 1118,
	371, 606, 607, 0, 608, 0, 373, 374, 1120, 609,
	1121, 375, 376, 377, 1122, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 2055, 387, 386, 0,
	388, 610, 1123, 389, 390, 1124, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1125, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1126, 424, 0,
	0, 1127, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 1128, 447, 1129, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 1130, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 1131, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 0, 0, 0, 0, 578, 579, 634, 580, 581,
	582, 1365, 1364, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 1545, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 1331, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1118, 371, 606, 607, 0, 608,
	0, 373, 374, 1120, 609, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 0, 0, 1127, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 1173, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1075, 0,
	1529, 0, 0, 264, 265, 1115, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 1074, 0, 279,
	589, 590, 591, 0, 280, 281, 1081, 0, 1062, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1116, 304, 305,
	1065, 1063, 1064, 1071, 1067, 1066, 1070, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1106, 1107, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 1117, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1113, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1076, 1077,
	1080, 437, 1119, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1118,
	371, 606, 607, 0, 608, 0, 373, 374, 1120, 1078,
	1121, 375, 376, 377, 1122, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1114, 1123, 389, 390, 1124, 0, 391, 0, 0,
	0, 392, 393, 1069, 1068, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1125, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1126, 424, 0,
	254, 1127, 434, 435, 0, 1079, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 1128, 447, 1129, 1108, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	1109, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 1130, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 1072, 520,
	521, 504, 505, 522, 523, 1131, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 1110, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 1111, 556, 1112, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 1073, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 997, 0, 249, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 215, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 217, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	1523, 631, 632, 0, 576, 575, 577, 633, 249, 0,
	0, 209, 578, 579, 634, 580, 581, 582, 0, 0,
	210, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 179, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 249, 2821, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 1866, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 249, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 4423, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 0, 249,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	3283, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 0, 249, 0, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 1466, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 249, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 2792, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 249, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 3443, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	0, 843, 0, 722, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 2159, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 729, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 841,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 727, 544, 545, 546, 547, 548, 728, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 0, 720,
	0, 722, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 732, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 729, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 727,
	544, 545, 546, 547, 548, 728, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 1903, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 0, 1909, 0, 271,
	1899, 272, 1915, 0, 1922, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 1925, 1926, 0, 0, 280,
	281, 0, 0, 1331, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 1098, 310, 1913, 1912,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1083, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 1911,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 1920, 1921, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 0, 0, 0, 356, 0, 357, 358,
	359, 360, 361, 0, 0, 0, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1118, 371, 1906, 1907, 0, 1902,
	0, 373, 374, 1120, 0, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 0, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 0, 0, 1127, 434, 435, 0,
	0, 436, 1914, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 0, 1128,
	447, 1129, 0, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 1896, 460, 461,
	462, 1897, 463, 464, 465, 0, 466, 0, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 1910, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 0, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 1908, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 1924, 536,
	537, 538, 539, 0, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 1916, 1917, 1918, 1919, 0, 561, 0, 553, 554,
	555, 0, 556, 0, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 0, 1900,
	1923, 0, 576, 575, 577, 722, 0, 0, 0, 0,
	578, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1890, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 729, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 727, 544, 545, 546, 547, 548, 728,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	722, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 732, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 729, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 2199, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	2200, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 727, 544,
	545, 546, 547, 548, 728, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 2201, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 1933, 0, 1365, 1364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 1331,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 0, 0, 0, 0, 0, 0, 1936, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1118, 371, 606, 607, 0, 608, 0, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 0, 1127, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1937,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 722, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	729, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 1929, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 727, 544, 545, 546, 547,
	548, 728, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 1928, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 722, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 732,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 729, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 254, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 1882, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	727, 544, 545, 546, 547, 548, 728, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 1881, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 1365, 1364, 0,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 732, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 1331,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 0, 0, 0, 0, 0, 0, 1936, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1118, 371, 606, 607, 0, 608, 0, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 0, 1127, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 1937,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1365, 1364, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 1331, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1116, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 1119, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 1118, 371, 606, 607, 0,
	608, 0, 373, 374, 1120, 609, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 1123, 389,
	390, 1124, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 0, 0, 1127, 434, 435,
	3616, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	1128, 447, 1129, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 0, 0, 0,
	0, 578, 579, 634, 580, 581, 582, 1365, 1364, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 1331,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1118, 371, 606, 607, 0, 608, 0, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 0, 1127, 434, 435, 3255, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 249, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 1573, 0, 1365, 1364, 0, 0, 0, 0,
	1362, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 1115, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 1331, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1116, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 252, 0, 0, 0, 0, 0, 1572,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 1117, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	1119, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 1118, 371, 606,
	607, 0, 608, 0, 373, 374, 1120, 609, 1121, 375,
	376, 377, 1122, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	1123, 389, 390, 1124, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1125, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1126, 424, 0, 0, 1127,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 1128, 447, 1129, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 1571, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	1130, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 1570, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 1131, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 0,
	0, 0, 0, 578, 579, 634, 580, 581, 582, 1513,
	0, 1365, 1364, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	1115, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 1331, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1116, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 1117, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 1512, 604, 605, 437, 1119, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1118, 371, 606, 607, 0, 608,
	0, 373, 374, 1120, 609, 1121, 375, 376, 377, 1122,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 1123, 389, 390,
	1124, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1125,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1126, 424, 0, 0, 1127, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 1128,
	447, 1129, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 1130, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	1131, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 0, 0, 0, 0,
	578, 579, 634, 580, 581, 582, 1441, 0, 1365, 1364,
	0, 0, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 1115, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	1331, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1116,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 1117, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	1440, 604, 605, 437, 1119, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 1118, 371, 606, 607, 0, 608, 0, 373, 374,
	1120, 609, 1121, 375, 376, 377, 1122, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 1123, 389, 390, 1124, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1125, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1126,
	424, 0, 0, 1127, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 1128, 447, 1129, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 1130, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 1131, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 1400, 0, 1365, 1364, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 1115, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 1331, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1116, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 1117, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 603, 604, 605,
	437, 1119, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1118, 371,
	606, 607, 0, 608, 0, 373, 374, 1120, 609, 1121,
	375, 376, 377, 1122, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 1123, 389, 390, 1124, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1125, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1126, 424, 0, 0,
	1127, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 1128, 447, 1129, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 1130, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 1131, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	0, 0, 0, 0, 578, 579, 634, 580, 581, 582,
	1360, 0, 1365, 1364, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 1331, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1116, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 1359, 604, 605, 437, 1119, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 1118, 371, 606, 607, 0,
	608, 0, 373, 374, 1120, 609, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 1123, 389,
	390, 1124, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 0, 0, 1127, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	1128, 447, 1129, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 0, 0, 0,
	0, 578, 579, 634, 580, 581, 582, 1365, 1364, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 1331,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1118, 371, 606, 607, 0, 608, 0, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 0, 1127, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 1365, 1364, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 1115, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 1331, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1116, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 1944, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 1117,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 1119, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 1118, 371, 606, 607, 0,
	608, 0, 373, 374, 1120, 609, 1121, 375, 376, 377,
	1122, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 1123, 389,
	390, 1124, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1125, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1126, 424, 0, 0, 1127, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	1128, 447, 1129, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 1130, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 1131, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 1365, 1364, 0,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 1331,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1118, 371, 606, 607, 0, 608, 0, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 0, 1127, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 1365, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 1115, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 1331,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1116, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 1117, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 1119, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1118, 371, 606, 607, 0, 608, 0, 373, 374, 1120,
	609, 1121, 375, 376, 377, 1122, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 1123, 389, 390, 1124, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1125, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1126, 424,
	0, 0, 1127, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 1128, 447, 1129, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 1130, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 1131, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 249, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 2626, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 2623, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	2630, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 2834, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 2629, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 2831, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 2833, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 2830, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 2628, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 2832,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 249, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 2626, 280, 281, 592, 0, 0,
	2620, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 2623, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	2630, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 2629, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 2619,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 2628, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 2627,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 1640, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	1643, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 1641, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 1642, 575, 577, 633, 1335,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 1337, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	1165, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 1332, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	1334, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 1165, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 1238, 0, 249, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 1240, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 1165, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	666, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 665, 260, 261, 655, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 658,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 659, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 660, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 654, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 655, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 658, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 659,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 660, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 249,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 1165, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 249,
	576, 575, 577, 633, 0, 0, 0, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	3218, 424, 0, 254, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 2763, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 2762, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 2172, 0, 249, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 249, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 2088, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 2094, 0,
	249, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 2093, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 2081, 0, 249, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 2083,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 249, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 2052,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 1165, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 1506, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 1505, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 1497,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 1496, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 1494, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	1493, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 1489, 0, 249, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 1488, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	1444, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 254, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 1353, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 603, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 1346, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 1348, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 636, 0, 249, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 240, 0,
	249, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 658, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	659, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 660, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 2208, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 2206, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 2204, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 2138, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 2132, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	249, 576, 575, 577, 633, 0, 0, 0, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 2100, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 830, 0, 249, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 829, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 828, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 249, 576, 575,
	577, 633, 0, 0, 0, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 2834, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 3878, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 689, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 1208, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	1206, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 690, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 0, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 686, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 1209, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 685, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 689,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	1208, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 1206, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 690, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 686, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 1209, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 685, 625, 626, 627, 0, 561, 0, 553, 1207,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 645, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 644, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 643, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 249, 2821, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 249, 3888,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 3590, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 2538, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 249, 2821, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 2818, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 249, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 2182, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 2170, 0,
	249, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 281,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 620, 499, 0, 500, 501, 507, 508, 502, 503,
	509, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	518, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	624, 625, 626, 627, 0, 561, 0, 553, 554, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 689, 0, 249, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 679, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 690, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 507, 508, 502, 503, 686, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 1528, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 685, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 1510, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 1509, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 0, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 1503,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 1502, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 1450, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	1449, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 1433, 0, 249, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 583, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	584, 585, 0, 271, 586, 272, 587, 0, 588, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 589,
	590, 591, 0, 280, 281, 592, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 593, 594, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	595, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 598, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 599, 600, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 601, 0, 602,
	356, 0, 357, 358, 359, 360, 361, 1431, 604, 605,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	606, 607, 0, 608, 0, 373, 374, 0, 609, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	610, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 611, 436, 612, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 613, 0, 447, 0, 614, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 615, 460, 461, 462, 616, 463, 464, 465, 617,
	466, 618, 467, 468, 0, 469, 470, 0, 471, 472,
	473, 474, 475, 476, 477, 619, 478, 480, 479, 481,
	0, 482, 0, 0, 0, 0, 0, 483, 0, 485,
	486, 487, 484, 488, 489, 490, 491, 0, 492, 493,
	494, 0, 495, 496, 497, 498, 620, 499, 0, 500,
	501, 507, 508, 502, 503, 509, 510, 511, 512, 513,
	0, 515, 516, 514, 517, 518, 519, 0, 520, 521,
	504, 505, 522, 523, 0, 524, 525, 526, 527, 528,
	529, 621, 0, 530, 0, 531, 532, 533, 534, 506,
	535, 540, 622, 536, 537, 538, 539, 623, 0, 542,
	543, 0, 541, 0, 544, 545, 546, 547, 548, 549,
	550, 334, 551, 0, 552, 624, 625, 626, 627, 0,
	561, 0, 553, 554, 555, 628, 556, 629, 0, 557,
	558, 559, 560, 0, 562, 563, 0, 0, 564, 565,
	566, 568, 569, 567, 570, 0, 571, 0, 0, 572,
	573, 574, 630, 631, 632, 0, 576, 575, 577, 633,
	1427, 0, 249, 0, 578, 579, 634, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 584, 585, 0,
	271, 586, 272, 587, 0, 588, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 589, 590, 591, 0,
	280, 281, 592, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 593,
	594, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 595, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	598, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 599, 600, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 601, 0, 602, 356, 0, 357,
	358, 359, 360, 361, 603, 604, 605, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 606, 607, 0,
	608, 0, 373, 374, 0, 609, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 610, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 611, 436, 612, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 613,
	0, 447, 0, 614, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 615, 460,
	461, 462, 616, 463, 464, 465, 617, 466, 618, 467,
	468, 0, 469, 470, 0, 471, 472, 473, 474, 475,
	476, 477, 619, 478, 480, 479, 481, 0, 482, 0,
	0, 0, 0, 0, 483, 0, 485, 486, 487, 484,
	488, 489, 490, 491, 0, 492, 493, 494, 0, 495,
	496, 497, 498, 620, 499, 0, 500, 501, 507, 508,
	502, 503, 509, 510, 511, 512, 513, 0, 515, 516,
	514, 517, 518, 519, 0, 520, 521, 504, 505, 522,
	523, 0, 524, 525, 526, 527, 528, 529, 621, 0,
	530, 0, 531, 532, 533, 534, 506, 535, 540, 622,
	536, 537, 538, 539, 623, 0, 542, 543, 0, 541,
	0, 544, 545, 546, 547, 548, 549, 550, 334, 551,
	0, 552, 624, 625, 626, 627, 0, 561, 0, 553,
	554, 555, 628, 556, 629, 0, 557, 558, 559, 560,
	0, 562, 563, 0, 0, 564, 565, 566, 568, 569,
	567, 570, 0, 571, 0, 0, 572, 573, 574, 630,
	631, 632, 0, 576, 575, 577, 633, 1404, 0, 249,
	0, 578, 579, 634, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 584, 585, 0, 271, 586, 272,
	587, 0, 588, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 589, 590, 591, 0, 280, 281, 592,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 593, 594, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 595, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 598, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 599,
	600, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 601, 0, 602, 356, 0, 357, 358, 359, 360,
	361, 1402, 604, 605, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 606, 607, 0, 608, 0, 373,
	374, 0, 609, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 610, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 611, 436,
	612, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 613, 0, 447, 0,
	614, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 615, 460, 461, 462, 616,
	463, 464, 465, 617, 466, 618, 467, 468, 0, 469,
	470, 0, 471, 472, 473, 474, 475, 476, 477, 619,
	478, 480, 479, 481, 0, 482, 0, 0, 0, 0,
	0, 483, 0, 485, 486, 487, 484, 488, 489, 490,
	491, 0, 492, 493, 494, 0, 495, 496, 497, 498,
	620, 499, 0, 500, 501, 507, 508, 502, 503, 509,
	510, 511, 512, 513, 0, 515, 516, 514, 517, 518,
	519, 0, 520, 521, 504, 505, 522, 523, 0, 524,
	525, 526, 527, 528, 529, 621, 0, 530, 0, 531,
	532, 533, 534, 506, 535, 540, 622, 536, 537, 538,
	539, 623, 0, 542, 543, 0, 541, 0, 544, 545,
	546, 547, 548, 549, 550, 334, 551, 0, 552, 624,
	625, 626, 627, 0, 561, 0, 553, 554, 555, 628,
	556, 629, 0, 557, 558, 559, 560, 0, 562, 563,
	0, 0, 564, 565, 566, 568, 569, 567, 570, 0,
	571, 0, 0, 572, 573, 574, 630, 631, 632, 0,
	576, 575, 577, 633, 1356, 0, 249, 0, 578, 579,
	634, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 584, 585, 0, 271, 586, 272, 587, 0, 588,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	589, 590, 591, 0, 280, 281, 592, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 593, 594, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 595, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 598, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 599, 600, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 601, 0,
	602, 356, 0, 357, 358, 359, 360, 361, 603, 604,
	605, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 606, 607, 0, 608, 0, 373, 374, 0, 609,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 610, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 611, 436, 612, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 613, 0, 447, 0, 614, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 615, 460, 461, 462, 616, 463, 464, 465,
	617, 466, 618, 467, 468, 0, 469, 470, 0, 471,
	472, 473, 474, 475, 476, 477, 619, 478, 480, 479,
	481, 0, 482, 0, 0, 0, 0, 0, 483, 0,
	485, 486, 487, 484, 488, 489, 490, 491, 0, 492,
	493, 494, 0, 495, 496, 497, 498, 620, 499, 0,
	500, 501, 507, 508, 502, 503, 509, 510, 511, 512,
	513, 0, 515, 516, 514, 517, 518, 519, 0, 520,
	521, 504, 505, 522, 523, 0, 524, 525, 526, 527,
	528, 529, 621, 0, 530, 0, 531, 532, 533, 534,
	506, 535, 540, 622, 536, 537, 538, 539, 623, 0,
	542, 543, 0, 541, 0, 544, 545, 546, 547, 548,
	549, 550, 334, 551, 0, 552, 624, 625, 626, 627,
	0, 561, 0, 553, 554, 555, 628, 556, 629, 0,
	557, 558, 559, 560, 0, 562, 563, 0, 0, 564,
	565, 566, 568, 569, 567, 570, 0, 571, 0, 0,
	572, 573, 574, 630, 631, 632, 0, 576, 575, 577,
	633, 1340, 0, 249, 0, 578, 579, 634, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 249, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 1186, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 249, 576, 575, 577, 633, 0, 0,
	0, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 695, 262, 263,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 584, 585,
	0, 271, 586, 272, 587, 0, 588, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 589, 590, 591,
	0, 280, 281, 592, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	593, 594, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 595, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 596,
	597, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 598, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 599, 600, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 601, 0, 602, 356, 0,
	357, 358, 359, 360, 361, 603, 604, 605, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 606, 607,
	0, 608, 0, 373, 374, 0, 609, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 610, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 611, 436, 612, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	613, 0, 447, 0, 614, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 615,
	460, 461, 462, 616, 463, 464, 465, 617, 466, 618,
	467, 468, 0, 469, 470, 0, 471, 472, 473, 474,
	475, 476, 477, 619, 478, 480, 479, 481, 0, 482,
	0, 0, 0, 0, 0, 483, 0, 485, 486, 487,
	484, 488, 489, 490, 491, 0, 492, 493, 494, 0,
	495, 496, 497, 498, 620, 499, 0, 500, 501, 507,
	508, 502, 503, 509, 510, 511, 512, 513, 0, 515,
	516, 514, 517, 518, 519, 0, 520, 521, 504, 505,
	522, 523, 0, 524, 525, 526, 527, 528, 529, 621,
	0, 530, 0, 531, 532, 533, 534, 506, 535, 540,
	622, 536, 537, 538, 539, 623, 0, 542, 543, 0,
	541, 0, 544, 545, 546, 547, 548, 549, 550, 334,
	551, 0, 552, 624, 625, 626, 627, 0, 561, 0,
	553, 554, 555, 628, 556, 629, 0, 557, 558, 559,
	560, 0, 562, 563, 0, 0, 564, 565, 566, 568,
	569, 567, 570, 0, 571, 0, 0, 572, 573, 574,
	630, 631, 632, 0, 576, 575, 577, 633, 689, 0,
	249, 0, 578, 579, 634, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 584, 585, 0, 271, 586,
	272, 587, 0, 588, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 589, 590, 591, 0, 280, 679,
	592, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 677,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 593, 594, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 595, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 598, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	599, 600, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 601, 0, 602, 356, 0, 357, 358, 359,
	360, 361, 603, 604, 605, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 606, 607, 0, 608, 0,
	373, 374, 0, 609, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 610, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 678, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 690, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 611,
	436, 612, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 613, 0, 447,
	0, 614, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 615, 460, 461, 462,
	616, 463, 464, 465, 617, 466, 618, 467, 468, 0,
	469, 470, 0, 471, 472, 473, 474, 475, 476, 477,
	619, 478, 480, 479, 481, 0, 482, 0, 0, 0,
	0, 0, 483, 0, 485, 486, 487, 484, 488, 489,
	490, 491, 0, 492, 493, 494, 0, 495, 496, 497,
	498, 680, 499, 0, 500, 501, 507, 508, 502, 503,
	686, 510, 511, 512, 513, 0, 515, 516, 514, 517,
	681, 519, 0, 520, 521, 504, 505, 522, 523, 0,
	524, 525, 526, 527, 528, 529, 621, 0, 530, 0,
	531, 532, 533, 534, 506, 535, 540, 622, 536, 537,
	538, 539, 623, 0, 542, 543, 0, 541, 0, 544,
	545, 546, 547, 548, 549, 550, 334, 551, 0, 552,
	685, 625, 626, 627, 0, 561, 0, 553, 683, 555,
	628, 556, 629, 0, 557, 558, 559, 560, 0, 562,
	563, 0, 0, 564, 565, 566, 568, 569, 567, 570,
	0, 571, 0, 0, 572, 573, 574, 630, 631, 632,
	0, 576, 575, 577, 633, 671, 0, 249, 0, 578,
	579, 634, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 583,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 584, 585, 0, 271, 586, 272, 587, 0,
	588, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 589, 590, 591, 0, 280, 281, 592, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 593, 594, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 595, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 596, 597, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 598, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 599, 600, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 601,
	0, 602, 356, 0, 357, 358, 359, 360, 361, 603,
	604, 605, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 606, 607, 0, 608, 0, 373, 374, 0,
	609, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 610, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 611, 436, 612, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 613, 0, 447, 0, 614, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 615, 460, 461, 462, 616, 463, 464,
	465, 617, 466, 618, 467, 468, 0, 469, 470, 0,
	471, 472, 473, 474, 475, 476, 477, 619, 478, 480,
	479, 481, 0, 482, 0, 0, 0, 0, 0, 483,
	0, 485, 486, 487, 484, 488, 489, 490, 491, 0,
	492, 493, 494, 0, 495, 496, 497, 498, 620, 499,
	0, 500, 501, 672, 508, 502, 503, 509, 510, 511,
	512, 513, 0, 515, 516, 514, 517, 518, 519, 0,
	520, 521, 504, 505, 522, 523, 0, 524, 525, 526,
	527, 528, 529, 621, 0, 530, 0, 531, 532, 533,
	534, 506, 535, 540, 622, 536, 537, 538, 539, 623,
	0, 542, 543, 0, 541, 0, 544, 545, 546, 547,
	548, 549, 550, 334, 551, 0, 552, 624, 625, 626,
	627, 0, 561, 0, 553, 554, 555, 628, 556, 629,
	0, 557, 558, 559, 560, 0, 562, 563, 0, 0,
	564, 565, 566, 568, 569, 567, 570, 0, 571, 0,
	0, 572, 573, 574, 630, 631, 632, 0, 576, 575,
	577, 633, 668, 0, 249, 0, 578, 579, 634, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 584,
	585, 0, 271, 586, 272, 587, 0, 588, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 589, 590,
	591, 0, 280, 281, 592, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 593, 594, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 595,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 598, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 599, 600, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 601, 0, 602, 356,
	0, 357, 358, 359, 360, 361, 603, 604, 605, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 0, 371, 606,
	607, 0, 608, 0, 373, 374, 0, 609, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 610,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 0, 0,
	434, 435, 0, 611, 436, 612, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 613, 0, 447, 0, 614, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	615, 460, 461, 462, 616, 463, 464, 465, 617, 466,
	618, 467, 468, 0, 469, 470, 0, 471, 472, 473,
	474, 475, 476, 477, 619, 478, 480, 479, 481, 0,
	482, 0, 0, 0, 0, 0, 483, 0, 485, 486,
	487, 484, 488, 489, 490, 491, 0, 492, 493, 494,
	0, 495, 496, 497, 498, 620, 499, 0, 500, 501,
	507, 508, 502, 503, 509, 510, 511, 512, 513, 0,
	515, 516, 514, 517, 518, 519, 0, 520, 521, 504,
	505, 522, 523, 0, 524, 525, 526, 527, 528, 529,
	621, 0, 530, 0, 531, 532, 533, 534, 506, 535,
	540, 622, 536, 537, 538, 539, 623, 0, 542, 543,
	0, 541, 0, 544, 545, 546, 547, 548, 549, 550,
	334, 551, 0, 552, 624, 625, 626, 627, 0, 561,
	0, 553, 554, 555, 628, 556, 629, 0, 557, 558,
	559, 560, 0, 562, 563, 0, 0, 564, 565, 566,
	568, 569, 567, 570, 0, 571, 0, 0, 572, 573,
	574, 630, 631, 632, 0, 576, 575, 577, 633, 662,
	0, 249, 0, 578, 579, 634, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 584, 585, 0, 271,
	586, 272, 587, 0, 588, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 589, 590, 591, 0, 280,
	281, 592, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 593, 594,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 595, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 598,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 599, 600, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 601, 0, 602, 356, 0, 357, 358,
	359, 360, 361, 603, 604, 605, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 606, 607, 0, 608,
	0, 373, 374, 0, 609, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 610, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	611, 436, 612, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 613, 0,
	447, 0, 614, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 615, 460, 461,
	462, 616, 463, 464, 465, 617, 466, 618, 467, 468,
	0, 469, 470, 0, 471, 472, 473, 474, 475, 476,
	477, 619, 478, 480, 479, 481, 0, 482, 0, 0,
	0, 0, 0, 483, 0, 485, 486, 487, 484, 488,
	489, 490, 491, 0, 492, 493, 494, 0, 495, 496,
	497, 498, 620, 499, 0, 500, 501, 507, 508, 502,
	503, 509, 510, 511, 512, 513, 0, 515, 516, 514,
	517, 518, 519, 0, 520, 521, 504, 505, 522, 523,
	0, 524, 525, 526, 527, 528, 529, 621, 0, 530,
	0, 531, 532, 533, 534, 506, 535, 540, 622, 536,
	537, 538, 539, 623, 0, 542, 543, 0, 541, 0,
	544, 545, 546, 547, 548, 549, 550, 334, 551, 0,
	552, 624, 625, 626, 627, 0, 561, 0, 553, 554,
	555, 628, 556, 629, 0, 557, 558, 559, 560, 0,
	562, 563, 0, 0, 564, 565, 566, 568, 569, 567,
	570, 0, 571, 0, 0, 572, 573, 574, 630, 631,
	632, 0, 576, 575, 577, 633, 640, 0, 249, 0,
	578, 579, 634, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	3301, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	3249, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	3189, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	3187, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	3173, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	2772, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 672, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 2117, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 0, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	1474, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 356, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 475, 476, 477, 619, 478,
	1138, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	499, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 249, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 584, 585, 0, 271, 586, 272, 587,
	0, 588, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 589, 590, 591, 0, 280, 281, 592, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 593, 594, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 595, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 598, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 599, 600,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	601, 0, 602, 0, 0, 357, 358, 359, 360, 361,
	603, 604, 605, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 606, 607, 0, 608, 0, 373, 374,
	0, 609, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 610, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 611, 436, 612,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 613, 0, 447, 0, 614,
	448, 449, 441, 450, 451, 0, 453, 454, 455, 456,
	457, 0, 458, 459, 615, 460, 461, 462, 616, 463,
	464, 465, 617, 466, 618, 467, 468, 0, 469, 470,
	0, 471, 472, 473, 474, 0, 476, 477, 619, 478,
	480, 479, 481, 0, 482, 0, 0, 0, 0, 0,
	483, 0, 485, 486, 487, 484, 488, 489, 490, 491,
	0, 492, 493, 494, 0, 495, 496, 497, 498, 620,
	0, 0, 500, 501, 507, 508, 502, 503, 509, 510,
	511, 512, 513, 0, 515, 516, 514, 517, 518, 519,
	0, 520, 521, 504, 505, 522, 523, 0, 524, 525,
	526, 527, 528, 529, 621, 0, 530, 0, 531, 532,
	533, 534, 506, 535, 540, 622, 536, 537, 538, 539,
	623, 0, 542, 543, 0, 541, 0, 544, 545, 546,
	547, 548, 549, 550, 334, 551, 0, 552, 624, 625,
	626, 627, 0, 561, 0, 553, 554, 555, 628, 556,
	629, 0, 557, 558, 559, 560, 0, 562, 563, 0,
	0, 564, 565, 566, 568, 569, 567, 570, 0, 571,
	0, 0, 572, 573, 574, 630, 631, 632, 0, 576,
	575, 577, 633, 0, 0, 0, 0, 578, 579, 634,
	580, 581, 582, 1685, 1686, 0, 1718, 1719, 1720, 1728,
	1729, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 1716, 0, 0, 0,
	0, 0, 0, 1688, 0, 0, 0, 0, 0, 0,
	0, 1734, 0, 1685, 1686, 0, 1718, 1719, 1720, 1728,
	1729, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 1716, 1687, 0, 0,
	0, 0, 0, 1688, 0, 0, 0, 1707, 0, 0,
	0, 1734, 0, 0, 0, 0, 1704, 0, 0, 0,
	0, 0, 1685, 1686, 0, 1718, 1719, 1720, 1728, 1729,
	1730, 0, 0, 0, 0, 0, 0, 1687, 0, 0,
	0, 0, 0, 0, 1721, 1716, 0, 1707, 0, 0,
	0, 0, 1688, 0, 0, 0, 1704, 0, 0, 0,
	1734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1687, 1710, 1711, 1712,
	1713, 0, 0, 0, 0, 0, 1707, 1693, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 1711, 1712,
	1713, 0, 1725, 0, 0, 1735, 0, 1693, 0, 0,
	0, 1715, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	1732, 0, 0, 0, 0, 0, 0, 1702, 1703, 0,
	0, 0, 1725, 0, 0, 1735, 1710, 1711, 1712, 1713,
	0, 1715, 1717, 0, 0, 1723, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 1708,
	1732, 0, 0, 0, 0, 0, 0, 1702, 1703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 1735, 1723, 0, 0, 0, 0,
	1715, 1717, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 1733, 0, 0, 0, 0, 0, 1731, 0, 1732,
	0, 0, 0, 0, 0, 0, 1702, 1703, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1733, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 1709,
	1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1716, 0, 0, 0, 0, 1726, 0, 1688, 1714, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 0, 1726, 0, 0, 0, 0, 0,
	1704, 1724, 0, 0, 0, 0, 1699, 1700, 1706, 1727,
	1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691, 1692,
	1694, 1695, 0, 0, 0, 0, 4116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 1699, 1700, 1706, 1727,
	1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691, 1692,
	1694, 1695, 0, 0, 0, 0, 4007, 0, 0, 0,
	0, 1710, 1711, 1712, 1713, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 0, 0, 0, 1699, 1700, 1706, 1727, 1705,
	1701, 0, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694,
	1695, 0, 0, 0, 0, 3956, 1725, 0, 0, 1735,
	0, 0, 0, 0, 0, 1715, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 1732, 0, 0, 0, 0, 0,
	0, 1702, 1703, 0, 0, 0, 0, 0, 1685, 1686,
	0, 1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 1716, 0, 1708, 0, 0, 0, 0, 1688, 0,
	0, 0, 0, 0, 0, 0, 1734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 1733, 0, 0, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 1710, 1711, 1712, 1713, 0, 0, 0, 0,
	0, 0, 1693, 1709, 0, 0, 0, 0, 0, 0,
	0, 1685, 1686, 0, 1718, 1719, 1720, 1728, 1729, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 1721, 1716, 0, 0, 1725, 0, 0,
	1735, 1688, 0, 0, 0, 0, 1715, 1717, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 1732, 0, 0, 0, 0,
	0, 0, 1702, 1703, 0, 1687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	1723, 0, 0, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	1699, 1700, 1706, 1727, 1705, 1701, 0, 1698, 1696, 1697,
	1689, 1690, 1691, 1692, 1694, 1695, 1733, 0, 0, 0,
	3812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 1710, 1711, 1712, 1713, 0,
	0, 0, 0, 0, 0, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 1686, 0, 1718, 1719, 1720, 1728,
	1729, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 1735, 0, 1721, 1716, 0, 0, 1715,
	1717, 0, 0, 1688, 1714, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 0, 1731, 0, 1732, 0,
	0, 0, 0, 0, 1709, 1702, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1687, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 1707, 0, 0,
	1726, 0, 0, 0, 0, 0, 1704, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 1711, 1712,
	1713, 0, 0, 0, 0, 0, 0, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 1699, 1700, 1706, 1727, 1705, 1701, 0, 1698, 1696,
	1697, 1689, 1690, 1691, 1692, 1694, 1695, 0, 0, 0,
	0, 3755, 1725, 0, 0, 1735, 0, 1714, 0, 0,
	0, 1715, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 1731, 0,
	1732, 0, 0, 0, 0, 0, 0, 1702, 1703, 0,
	0, 0, 0, 0, 1685, 1686, 0, 1718, 1719, 1720,
	1728, 1729, 1730, 1726, 0, 1723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 1716, 0, 1708,
	0, 0, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1687, 0,
	0, 1733, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 1699, 1700, 1706, 1727, 1705, 1701,
	0, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695,
	0, 0, 0, 0, 3754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 1711,
	1712, 1713, 0, 0, 0, 0, 0, 0, 1693, 1709,
	0, 0, 0, 0, 0, 0, 0, 1685, 1686, 0,
	1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 1721,
	1716, 0, 0, 1725, 0, 0, 1735, 1688, 0, 0,
	0, 0, 1715, 1717, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 1732, 0, 0, 0, 0, 0, 0, 1702, 1703,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 0, 0, 0, 1723, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 1699, 1700, 1706, 1727,
	1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691, 1692,
	1694, 1695, 1733, 0, 0, 0, 3753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 1710, 1711, 1712, 1713, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	1686, 0, 1718, 1719, 1720, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 1735,
	0, 1721, 1716, 0, 0, 1715, 1717, 0, 0, 1688,
	1714, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 0, 1731, 0, 1732, 0, 0, 0, 0, 0,
	1709, 1702, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 1723,
	0, 0, 0, 1707, 0, 0, 1726, 0, 0, 0,
	0, 0, 1704, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 1711, 1712, 1713, 0, 0, 0,
	0, 0, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 1699, 1700, 1706,
	1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 0, 0, 3448, 1725, 0,
	0, 1735, 0, 1714, 0, 0, 0, 1715, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 1731, 0, 1732, 0, 0, 0,
	0, 0, 0, 1702, 1703, 0, 0, 0, 0, 0,
	1685, 1686, 0, 1718, 1719, 1720, 1728, 1729, 1730, 1726,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 1716, 0, 1708, 0, 0, 0, 0,
	1688, 0, 0, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 1733, 0, 0,
	0, 0, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	1699, 1700, 1706, 1727, 1705, 1701, 0, 1698, 1696, 1697,
	1689, 1690, 1691, 1692, 1694, 1695, 0, 0, 0, 0,
	2981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 1711, 1712, 1713, 0, 0,
	0, 0, 0, 0, 1693, 1709, 0, 0, 0, 0,
	0, 0, 0, 1685, 1686, 0, 1718, 1719, 1720, 1728,
	1729, 1730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 1721, 1716, 0, 0, 1725,
	0, 0, 1735, 1688, 0, 0, 0, 0, 1715, 1717,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 1732, 0, 0,
	0, 0, 0, 0, 1702, 1703, 0, 1687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 1723, 0, 0, 0, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 0,
	0, 0, 1699, 1700, 1706, 1727, 1705, 1701, 0, 1698,
	1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 1733, 0,
	0, 0, 2980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 1710, 1711, 1712,
	1713, 0, 0, 0, 0, 0, 0, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 1686, 0, 1718, 1719,
	1720, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 1735, 0, 1721, 1716, 0,
	0, 1715, 1717, 0, 0, 1688, 1714, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 1731, 0,
	1732, 0, 0, 0, 0, 0, 1709, 1702, 1703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 1723, 0, 0, 0, 1707,
	0, 0, 1726, 0, 0, 0, 0, 0, 1704, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	1711, 1712, 1713, 0, 0, 0, 0, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 1699, 1700, 1706, 1727, 1705, 1701, 0,
	1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 0,
	0, 0, 0, 2979, 1725, 0, 0, 1735, 0, 1714,
	0, 0, 0, 1715, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	1731, 0, 1732, 0, 0, 0, 0, 0, 0, 1702,
	1703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 1723, 0, 1685,
	1686, 0, 1718, 1719, 1720, 1728, 1729, 1730, 149, 0,
	0, 1708, 0, 0, 0, 0, 70, 0, 45, 44,
	0, 1721, 1716, 0, 0, 0, 0, 0, 0, 1688,
	0, 0, 71, 0, 0, 144, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 1733, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 1687, 0, 0, 47, 0, 146, 0,
	0, 1722, 0, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 46, 0, 82, 0,
	0, 1724, 0, 0, 0, 0, 1699, 1700, 1706, 1727,
	1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691, 1692,
	1694, 1695, 49, 66, 0, 0, 2978, 0, 0, 0,
	50, 0, 0, 0, 0, 88, 0, 0, 0, 147,
	0, 1714, 0, 0, 0, 0, 0, 48, 0, 103,
	0, 0, 0, 0, 89, 100, 0, 0, 0, 0,
	0, 1709, 0, 1710, 1711, 1712, 1713, 0, 0, 0,
	0, 0, 0, 1693, 4346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 90,
	0, 1735, 0, 0, 0, 0, 0, 1715, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 1732, 0, 0, 0,
	0, 0, 0, 1702, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 1699, 1700,
	1706, 1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690,
	1691, 1692, 1694, 1695, 0, 0, 2945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4345, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 67, 0, 1714, 0, 0, 56, 176,
	96, 0, 99, 0, 0, 0, 53, 0, 0, 0,
	148, 0, 0, 0, 0, 1709, 0, 54, 0, 0,
	0, 0, 0, 0, 1685, 1686, 215, 1718, 1719, 1720,
	1728, 1729, 1730, 0, 60, 0, 0, 0, 0, 141,
	0, 1726, 0, 0, 0, 0, 1721, 1716, 0, 0,
	0, 0, 0, 145, 1688, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 1724, 210, 0,
	0, 0, 1699, 1700, 1706, 1727, 1705, 1701, 0, 1698,
	1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 0, 0,
	179, 0, 0, 3, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 1711,
	1712, 1713, 0, 0, 0, 0, 0, 0, 1693, 0,
	3065, 1685, 1686, 3064, 1718, 1719, 1720, 1728, 1729, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 1716, 0, 0, 0, 0, 2916,
	0, 1688, 0, 1725, 0, 0, 1735, 0, 0, 1734,
	0, 0, 1715, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 1732, 0, 0, 0, 1687, 0, 0, 1702, 1703,
	0, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	2512, 0, 0, 0, 1704, 0, 1723, 1685, 1686, 0,
	1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1716, 0, 0, 0, 2511, 0, 0, 1688, 0, 0,
	2917, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 1710, 1711, 1712, 1713, 0,
	1722, 1707, 0, 0, 0, 1693, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 1735, 0, 0, 0, 0, 0, 1715,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 1731, 0, 1732, 0,
	0, 0, 0, 0, 0, 1702, 1703, 0, 0, 0,
	1709, 1710, 1711, 1712, 1713, 0, 0, 0, 0, 0,
	0, 1693, 0, 1723, 1685, 1686, 0, 1718, 1719, 1720,
	1728, 1729, 1730, 0, 0, 0, 1726, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 1716, 0, 0,
	0, 0, 0, 0, 1688, 0, 1725, 0, 0, 1735,
	0, 0, 1734, 0, 0, 1715, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 0, 1731, 0, 1732, 0, 0, 0, 1687, 0,
	0, 1702, 1703, 0, 0, 0, 0, 1722, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 1699, 1700, 1706,
	1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 1710, 1711,
	1712, 1713, 0, 1722, 0, 0, 0, 0, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 1686, 0, 1718, 1719, 1720,
	1728, 1729, 1730, 1725, 0, 0, 1735, 0, 0, 0,
	0, 0, 1715, 1717, 0, 0, 1721, 1716, 0, 0,
	0, 0, 0, 1714, 1688, 0, 0, 0, 0, 1731,
	0, 1732, 1734, 0, 0, 0, 0, 0, 1702, 1703,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 1726,
	1708, 0, 0, 0, 0, 0, 0, 1704, 0, 1724,
	0, 0, 0, 0, 1699, 1700, 1706, 1727, 1705, 1701,
	0, 1698, 1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 1711,
	1712, 1713, 0, 0, 0, 0, 0, 0, 1693, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	1699, 1700, 1706, 1727, 1705, 1701, 0, 1698, 1696, 1697,
	1689, 1690, 1691, 1692, 1694, 1695, 0, 0, 0, 0,
	1714, 0, 0, 1725, 0, 0, 1735, 0, 0, 0,
	0, 0, 1715, 1717, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 1732, 0, 0, 0, 0, 0, 0, 1702, 1703,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 1685, 1686, 0,
	1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1716, 0, 0, 0, 0, 0, 0, 1688, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 1724, 0, 0, 0, 0, 1699, 1700, 1706,
	1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 1685, 1686, 0, 1718, 1719, 1720,
	1728, 1729, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 1716, 0, 0,
	1714, 3066, 0, 0, 1688, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	1709, 1710, 1711, 1712, 1713, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 0, 3071, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 1735,
	0, 0, 0, 0, 0, 1715, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 3429, 0, 0, 0, 0,
	0, 0, 1731, 0, 1732, 0, 0, 0, 0, 0,
	0, 1702, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 1710, 1711,
	1712, 1713, 0, 1708, 0, 0, 0, 0, 1693, 0,
	0, 0, 1724, 0, 0, 0, 0, 1699, 1700, 1706,
	1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 1733, 1735, 0, 0, 0,
	0, 0, 1715, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 0, 1731,
	0, 1732, 0, 0, 0, 0, 0, 0, 1702, 1703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1723, 1685, 1686, 0,
	1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1716, 0, 0, 1714, 0, 0, 0, 1688, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 1726,
	1722, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 1710, 1711, 1712, 1713, 0, 0, 0, 0, 0,
	0, 1693, 0, 0, 0, 1724, 0, 0, 0, 0,
	1699, 1700, 1706, 1727, 1705, 1701, 1726, 1698, 1696, 1697,
	1689, 1690, 1691, 1692, 1694, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 1735,
	0, 0, 0, 0, 0, 1715, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 1732, 0, 0, 0, 0, 0,
	0, 1702, 1703, 0, 0, 0, 0, 0, 1685, 1686,
	0, 1718, 1719, 1720, 1728, 1729, 1730, 0, 0, 1723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 1716, 0, 1708, 0, 2982, 0, 0, 1688, 0,
	0, 0, 1724, 0, 0, 0, 1734, 1699, 1700, 1706,
	1727, 1705, 1701, 0, 1698, 1696, 1697, 1689, 1690, 1691,
	1692, 1694, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 1733, 0, 0, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	1686, 0, 1718, 1719, 1720, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 1716, 1714, 0, 0, 0, 0, 0, 1688,
	0, 0, 1710, 1711, 1712, 1713, 0, 1734, 0, 0,
	0, 0, 1693, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 1707, 0, 0, 0, 1725, 0, 0,
	1735, 0, 1704, 0, 0, 0, 1715, 1717, 0, 0,
	0, 0, 0, 1685, 1686, 0, 1718, 1719, 1720, 1728,
	1729, 1730, 0, 1731, 0, 1732, 0, 0, 0, 0,
	0, 0, 1702, 1703, 0, 1721, 1716, 0, 0, 0,
	0, 0, 0, 1688, 0, 0, 0, 0, 0, 0,
	1723, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 1711, 1712, 1713, 1687, 0, 0,
	0, 0, 0, 1693, 0, 1724, 0, 1707, 0, 0,
	1699, 1700, 1706, 1727, 1705, 1701, 1704, 1698, 1696, 1697,
	1689, 1690, 1691, 1692, 1694, 1695, 1733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 1735, 0, 0, 1722, 0, 0, 1715, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 1732, 0, 0, 0,
	0, 0, 0, 1702, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 1711, 1712,
	1713, 1723, 0, 0, 0, 0, 0, 1693, 0, 0,
	0, 0, 0, 0, 1714, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 1735, 0, 0, 0, 0,
	0, 1715, 1717, 0, 0, 0, 0, 1733, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	1732, 0, 0, 0, 0, 1722, 0, 1702, 1703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 1685, 1686, 0, 1718,
	1719, 1720, 1728, 1729, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 1688, 0, 0, 0,
	0, 1733, 0, 0, 1734, 1709, 1724, 0, 0, 0,
	0, 1699, 1700, 1706, 1727, 1705, 1701, 0, 1698, 1696,
	1697, 1689, 1690, 1691, 1692, 1694, 1695, 0, 0, 0,
	1687, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1710, 1711, 1712, 1713, 0, 1726, 0, 1724, 0, 0,
	1693, 0, 1699, 1700, 1706, 1727, 1705, 1701, 0, 1698,
	1696, 1697, 1689, 1690, 1691, 1692, 1694, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 1735, 0,
	0, 0, 0, 0, 1715, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 1732, 0, 0, 0, 0, 0, 0,
	1702, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 0,
	0, 1724, 0, 0, 0, 0, 1699, 1700, 1706, 1727,
	1705, 1701, 1708, 1698, 1696, 1697, 1689, 1690, 1691, 1692,
	1694, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 1699,
	1700, 1706, 1727, 1705, 1701, 0, 1698, 1696, 1697, 1689,
	1690, 1691, 1692, 1694, 1695,
}
var sqlPact = [...]int{

	112157, -1000, -1000, -1000, -1000, 227, -1000, -1000, 226, 221,
	220, 219, 215, 214, 213, 212, 211, 207, -1000, -1000,
	-1000, -1000, -1000, -1000, 206, -1000, -1000, 204, -1000, 190,
	188, 187, -1000, -1000, 186, -1000, 185, -1000, -1000, -1000,
	-1000, 180, 176, 172, 84036, 83509, 84556, 2171, 102904, 90824,
	2040, 75105, 102377, 74578, 101850, 2022, 101323, 2612, 167, -1000,
	100796, 166, 165, 164, -1000, 100269, -1000, 1982, -1000, 163,
	2053, 60847, 155, 154, 153, 2438, 151, -1000, 148, 147,
	146, -1000, 11611, 1511, -1000, 144, 143, -1000, 9530, 4770,
	88723, 138, 136, 2184, 135, 134, 60319, 132, 127, 2143,
	2785, -1000, -1000, 2019, -1000, -1000, 124, 122, 120, 119,
	118, 115, 114, 112, 111, 110, 109, -1000, 107, 104,
	103, 101, 99, 97, 95, 94, -1000, 93, 92, 91,
	89, 87, 86, 85, 84, 81, 76, 75, 74, 72,
	-1000, 10592, 71, 1921, 1735, 1669, 1667, 1651, 1646, 1015,
	69, 68, 67, 66, 64, 63, 61, 60, 59, -1000,
	57, 56, 55, 52, 51, 50, 49, 48, 184, 45,
	43, 38, 33, 24, 23, 21, 2332, -1000, 1702, 1432,
	28091, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 108624,
	103424, 19, -146, 13, -1000, 3107, 1101, 50289, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 309, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 548, 1861, 797,
	-1000, -1000, -1000, 99749, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2170, -75, -1000, 1912, -1000, -1000, -1000, -1000,
	-1000, 795, -1000, 2169, 248, 2111, -1000, -1000, -1000, 3164,
	-1000, -1000, 103424, -1000, 1060, -1000, -1000, 3572, 3568, 2023,
	794, 90297, -1000, 1740, -1000, 967, 29747, -1000, 1248, -1000,
	29747, 279, -1000, -1000, -1000, -1000, -1000, -1000, 3566, 3564,
	3562, 3561, 3559, -1000, -1000, 74051, 21415, 73524, 72997, 99229,
	20878, 82982, 82455, 98702, 68798, 1058, -1000, -1000, -1000, 1523,
	-1000, -1000, -1000, -1000, -1000, -1000, -13, 66113, 3317, 103424,
	-1000, 276, -1000, -1000, -1000, -1000, -1000, -1000, 42659, 918,
	42095, 957, 41531, 820, -1000, -1000, -1000, -1000, 68261, -1000,
	98175, 2322, 3558, 3557, 1141, 3554, 3033, 1806, 3552, 1825,
	1236, 3551, 3550, 3549, 3548, 3547, 3546, 3545, 1459, 97648,
	2818, 97121, 1712, 67724, 1056, 81928, 84556, 2549, 96594, 1460,
	1444, -1000, -1000, -1000, -1000, 2912, 2778, 2772, 1408, -1000,
	-1000, 2319, 3544, 3541, 3540, 3539, 3538, 108104, 1767, 3537,
	2388, 3536, 3535, 3534, 3533, 3532, 3528, 3526, -1000, 81401,
	1054, 80874, 80347, 3168, 96067, 79820, 95540, 67187, 40967, 1393,
	-1000, -1000, -1000, 52937, 8291, 7196, 95013, 55077, 84556, 84556,
	-1000, -1000, -1000, -1000, -1000, 40403, 773, 39839, 1103, -1000,
	-1000, 53472, 2782, -1000, -1000, -1000, -1000, 39275, 398, 38711,
	1027, 103424, -1000, 2817, 1889, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2116,
	1631, 3344, 2628, 66650, 1987, 1409, 3118, 2911, 2910, 1475,
	3524, 3523, 2451, 2909, 2906, 2905, 2904, 2901, 1545, 2439,
	672, 27527, 2800, 1699, 38147, 1604, 1553, 2900, 2899, 3348,
	1886, 1985, 2002, 72470, 3522, 3521, 3069, 2893, 2877, 2781,
	-1000, -1000, -1000, -1000, 1477, -1000, -1000, -1000, -1000, -1000,
	75625, -1000, -1000, 1546, -1000, -1000, 1546, -1000, -1000, -1000,
	-1000, -1000, 1376, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1702, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2093, -1000, 1997, -1000, -1000,
	2498, 3032, 3032, 3032, 3159, 535, 529, -1000, 184, -1000,
	-1000, 114158, -1000, -1000, 43211, 43211, 43211, 43211, 43211, 43211,
	43211, 2043, -1000, 786, -1000, -1000, 857, -1000, 785, 649,
	-1000, -1000, -1000, -1000, -1000, -1000, 783, -1000, -1000, -1000,
	-1000, -1000, -1000, 3317, -1000, 24155, -1000, -1000, -1000, 453,
	782, 43211, -1000, -1000, 3374, 3370, 958, -1000, 275, 968,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2814, 779, 776, -1000, 775, 774, 768, 767,
	766, -1000, -1000, -1000, 765, 763, 762, 761, 760, 759,
	758, 756, -1000, 1928, -1000, -1000, -1000, -1000, -1000, -1000,
	701, 699, 699, 699, -1000, 1044, -1000, -1000, -1000, 404,
	696, 399, 692, 688, 687, -1000, 749, 745, 741, 737,
	736, 735, 734, 732, 730, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1041, -1000, -1000, -1000, -1000, -21, 103424, -1000,
	548, -21, -1000, -1000, 727, -1000, 31967, 31967, 31967, -1000,
	-1000, 2159, 43211, -1000, 2607, -1000, 4, 4, 895, 51866,
	-1000, 49218, 895, 250, 865, 56654, -1000, 2779, -1000, -1000,
	725, 274, -1000, -1000, -1000, -1000, 21950, 2777, 103424, 103424,
	84556, 84556, 84556, 2977, 43211, -1000, -1000, 63998, 103424, 85076,
	-1000, -1000, 3263, 61367, 63473, 103424, 2810, 62953, -1000, 3074,
	-1000, -1000, 103424, -1000, 43211, -1000, 3262, 1507, 69858, 3205,
	-52, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2364, 2343,
	1198, 2210, -1000, 2988, 1647, -1000, 29747, 3022, -1000, -1000,
	-1000, 272, 21950, -1000, -1000, -1000, -1000, -1000, -1000, 4265,
	2955, 1505, -1000, 2204, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1758, 2954, -1000, 2020, 2944, 1752, -1000,
	-1000, 2137, -1000, -1000, 3064, -1000, -1000, 1675, 2938, 5,
	-1000, -1000, 2371, -1000, -1000, 1881, -1000, -1000, 995, 2933,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 79293,
	54542, 53472, 66113, -30, -1000, -1000, -1000, -1000, -77, -1000,
	20341, 114158, -1000, -1000, -1000, -1000, 1793, 114158, 948, -1000,
	-1000, 2928, -1000, 114158, 939, -1000, -1000, 2927, -1000, 2805,
	-1000, -1000, 2276, -1000, -1000, 3520, -1000, -1000, 3519, -1000,
	3517, 3515, 3514, -1000, 1700, 1910, 3513, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 78773, 2153, -1000, -1000, 77719,
	-1000, 2275, 3199, -1000, -1000, -1000, 78246, 1053, -1000, 995,
	2273, -1000, 88196, 1017, -1000, 3510, 3157, 2589, 995, 2268,
	-1000, -1000, -1000, -1000, -1000, 1046, -1000, 58225, -1000, 58225,
	-1000, 1602, -1000, 107584, 4, 84556, 3317, -1000, 3509, -1000,
	-1000, -1000, -1000, -1000, 2925, 3508, 3507, 3506, -1000, 103424,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 194, 2920, -1000,
	-1000, 87676, 194, 2919, -1000, 194, 2914, -1000, 87156, -1000,
	-1000, 2225, 2913, -1000, 201, 2886, -1000, -1000, 198, 2883,
	-1000, -132, 2882, -1000, -1000, 114158, -1000, -1000, -1000, -2,
	-1000, -1000, -1000, 1101, -1000, 52394, -1000, 52394, 89770, 69333,
	981, 746, 59791, 114158, -1000, -1000, -1000, -1000, 114158, -1000,
	-1000, -1000, -254, -1000, -1000, 69333, 53472, 114158, -1000, -1000,
	-1000, -1000, 114158, -1000, -1000, -1000, 69333, 77719, -1000, 94486,
	77199, -1000, -1000, 1456, 2443, -1000, -1000, -1000, 69333, 1306,
	69333, 69333, 69333, -1000, 93959, -1000, -1000, 2008, 1464, 3066,
	1991, 84556, -1000, 1885, -1000, -1000, -1000, 3094, -1000, -1000,
	2804, -1000, 62416, 86636, -1000, 86116, -1000, 85596, -1000, 84556,
	-1000, 84556, -1000, 3505, 3501, 3499, 3498, -1000, 3497, 3079,
	-1000, 114158, 3078, -1000, 3493, 3193, 2800, 114158, -1000, 2961,
	1738, 1673, 103424, -1000, -1000, 103424, -1000, 103424, -1000, -1000,
	-1000, 1529, -1000, -1000, 2363, -1000, -1000, -1000, -1000, 84556,
	-1000, -1000, -1000, -1000, -1000, -1000, 2798, -1000, 1722, -1000,
	1866, -1000, 1422, -1000, -1000, 208, -1000, -1000, -52, -1000,
	107064, -1000, 2498, -1000, 103424, -1000, 2435, 2791, 2795, 1698,
	2179, 2470, -1000, 37583, 2444, 46523, 2202, 184, -1000, -1000,
	184, 184, 29195, -1000, -1000, 61367, 61367, 21950, 1390, 43211,
	43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211,
	43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211,
	43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211, 43211,
	43211, 43211, 43211, 43211, 2259, 43211, 1372, 43211, 43211, 43211,
	43211, 2075, -1000, -1000, 1911, 589, 2074, -1000, 3302, 3302,
	3302, 1104, 1104, 114525, 114525, 620, 3491, 857, -1000, 43211,
	-1000, 65, 43211, 22487, -1000, 529, 7453, 2347, -1000, 528,
	23051, -1000, -1000, -1000, 24155, 649, 37019, 43211, 1033, 114158,
	-1000, -1000, 1547, 3326, 19805, 2788, 2674, 718, 851, 849,
	26963, 26399, 25835, 25271, 833, 43211, 43211, 43211, 43211, 43211,
	43211, 43211, 43211, -1000, -1000, 3341, -1000, 3326, -1000, -1000,
	-1000, -1000, 3326, 1389, 1327, 3326, -1000, 3326, 3326, 8830,
	8830, 36467, 35903, 35339, 47075, 34775, 43211, 24707, 34211, 33647,
	-1000, 103424, -21, 3260, 43211, 189, -1000, 112826, -1000, 189,
	189, 717, -4, 114158, 2578, 2578, 50815, 2327, 2056, 2056,
	2056, -1000, 895, 15488, 895, 92914, 2069, 895, 895, 267,
	292, 526, 48692, 2607, 92914, 815, 711, 12, 11, 7,
	-1000, -1000, -1, -3, -1000, -1000, 84556, 710, 22487, 21950,
	264, 1522, -10, 2515, 2493, 2486, -1000, 2480, 1777, -11,
	1371, 84556, 103424, -156, -1000, 6077, -12, -1000, 1352, 261,
	3326, -1000, -1000, -1000, -1000, -1000, 3490, 3489, -1000, 1039,
	705, 702, 439, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 701, 699, 699, 699, -1000, 404, 696, 399, 692,
	688, 687, -1000, -1000, -1000, -1000, -1000, 2775, 84556, 103424,
	-77, 85076, -120, -1000, -1000, -1000, -1000, -1000, 84556, 934,
	-19, 1147, -52, -1000, -1000, -1000, 1546, -1000, 1728, -1000,
	-1000, -1000, -1000, -1000, -1000, 1447, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 958, -1000, -1000, -1000, -1000, -1000,
	-1000, 3319, 3307, -22, -1000, -1000, 21950, -1000, -53, 1838,
	1713, -1000, 71943, 2235, 3060, 3488, 2574, 3048, 1594, -1000,
	1479, 1369, 3158, 75625, 3225, 3231, 1105, -1000, 2774, -1000,
	-1000, 965, 1685, 1709, 1367, 75625, 2020, -1000, 61367, -1000,
	2583, 3156, 1417, 1411, 1417, 1417, 1386, -1000, 75625, 1707,
	1363, 1362, -1000, 1361, 1359, -1000, -61, 3221, 3230, 665,
	-1000, 2768, 1351, -1000, -1000, 84556, 21950, 1550, 1544, 1695,
	1319, -29, -1000, 3214, 3213, 1318, 1317, -1000, 5395, -1000,
	69333, 1678, 2880, 2624, 893, 2623, -1000, -1000, 893, -30,
	66113, 103424, 260, -1000, 65, 43211, 43211, 65, 43211, 65,
	3192, 2879, -1000, -1000, -1000, -1000, -1000, 3485, 1867, 2385,
	-1000, -1000, 684, 2264, 2760, 103424, 2520, -36, 84556, -1000,
	2878, 64523, 2020, 2262, -1000, -1000, 76672, -1000, 2876, 548,
	2258, -1000, 573, 3483, -1000, 106544, -1000, 3074, 1401, 2874,
	1111, 846, 3253, -1000, 846, 58751, -1000, 103424, -1000, 4,
	-1000, 103424, -1000, -1000, -1000, 3482, -1000, 84556, -1000, -1000,
	84556, 194, 2873, -1000, 84556, -1000, 84556, 192, 2872, -1000,
	-1000, 103424, -1000, 84556, 84556, -1000, 103424, 69333, 69333, 5690,
	70903, -24, -34, 525, -1000, 93439, 103424, 1109, 71423, 103424,
	3010, 992, 53472, -1000, -35, -254, 2608, 981, 981, 893,
	-1000, 893, -1000, 84556, 2794, -1000, -1000, 69333, 981, 981,
	981, -1000, -1000, -1000, -1000, 3480, 3479, 3478, -1000, -1000,
	-1000, 993, 84556, 103424, 84556, -1000, -1000, 103424, -1000, 103424,
	103424, 84556, -1000, 993, 103424, 993, 103424, 993, 103424, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 65, 43211, -1000, -1000,
	3474, 1641, -1000, 2793, -1000, 2792, -1000, 42, -1000, -1000,
	-1000, -1000, -1000, 1832, 84556, 84556, 84556, 84556, 103424, 84556,
	-1000, 75625, -1000, 2435, 2791, -1000, -1000, -1000, -1000, -1000,
	-1000, 1583, 2133, -1000, 2426, -1000, 1549, -1000, -1000, -1000,
	114158, 47610, -1000, -1000, 114158, 1807, -1000, 45971, 45419, -1000,
	-1000, 1724, 84556, 2526, -1000, 2526, -229, -1000, 112740, 2420,
	84556, -1000, -1000, -1000, -1000, -1000, 950, 608, 608, 1275,
	1275, 1275, 1275, 3186, 507, 331, 323, 4924, 4924, 569,
	569, 569, 569, 569, 4924, 307, 1104, 1104, 307, 307,
	307, 307, 307, 1104, 1104, 1104, 4924, 4924, 4924, 114525,
	114252, 8503, 43211, 43211, 1292, 1904, 589, 6655, 43211, 7863,
	7863, 7863, 7863, -1000, 2224, -1000, -1000, -1000, -1000, 2757,
	683, 47075, 47075, -1000, -1000, -1000, -1000, 23603, 43211, -1000,
	-1000, -1000, -1000, 33083, -1000, -1000, 111904, -320, 522, -213,
	-7, -1000, 43211, 43211, 43211, 506, -1000, 256, 43211, 103424,
	-1000, 14424, 813, -208, -1000, -43, 1425, -1000, 43211, -1000,
	-1000, 1291, -1000, 1290, 1289, 1286, -1000, 681, 503, -1000,
	255, -1000, 2046, 680, 679, 43211, -1000, -1000, -1000, -1000,
	-1000, 111722, -1000, -1000, 111549, -1000, -1000, 111308, -1000, -1000,
	111126, -1000, -1000, -1000, 114037, 14301, 13730, 12689, 6334, 12276,
	10854, -51, 494, -56, 493, 949, 947, 492, 490, 488,
	-59, -1000, 3472, 3471, 3470, -1000, 3469, 3468, 3467, -1000,
	3463, 3462, 3461, -1000, 3458, 3457, 3456, -1000, 3455, 3453,
	3449, -1000, 3446, 3445, 3441, -1000, 3440, 3439, 3437, -1000,
	3434, 3430, 3426, -64, 476, -1000, 2750, -213, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 474, -1000, 473, -1000,
	113796, -213, 469, 6548, -1000, 47075, 47075, 47075, -1000, 468,
	-1000, 112573, -1000, 113543, 32531, 32531, 32531, 467, 113436, 43211,
	-213, -78, -1000, -80, -1000, -1000, 555, -83, 1024, 31967,
	49761, 21950, -1000, 1024, 1024, 43211, -1000, 43211, 2467, -1000,
	-1000, -1000, 2466, 2080, 2578, 50815, -1000, -1000, -1000, -1000,
	92914, -1000, 3317, 2637, -1000, 92914, -1000, -1000, 103424, 548,
	-1000, 92914, 92914, 21950, 895, -1000, 895, 92914, 747, -1000,
	-1000, -1000, -1000, -1000, 463, 55602, -7, 252, 21950, 995,
	-1000, 2532, 2532, 2532, 2532, -1000, -1000, 103424, 1283, -37,
	-165, 3278, -1000, 1961, -1000, 61367, -1000, 855, 1240, 21950,
	-1000, -1000, -1000, 678, -1000, 3326, 3326, -1000, 3326, 103424,
	2744, 150, 140, 64523, 64523, 1021, 29747, -1000, 1546, -1000,
	-1000, 1561, -1000, 1873, -1000, 1279, -1000, -1000, -1000, -1000,
	29747, -1000, 3046, 103424, 103424, 84556, -1000, 103424, -1000, 2257,
	106024, 2253, 61367, 103424, -1000, -1000, 677, 676, 2417, 2413,
	1084, 103424, 103424, 2409, 105504, 104984, -1000, 3425, 103424, 1927,
	43211, 64523, 2084, 4010, 65, 65, -1000, -1000, 65, 658,
	1316, 84556, 84556, 103424, 84556, 1652, -1000, -1000, -1000, -1000,
	-1000, 76145, -1000, -1000, 3339, 3337, -1000, 1417, -1000, -1000,
	-1000, 1417, 2020, 1607, 103424, 84556, 64523, 1688, 103424, 1965,
	65, 65, -1000, -1000, 65, 656, 21950, 1958, -1000, 2858,
	103424, 3368, 103424, 103424, 103424, 64523, 3083, 104464, 103424, 103424,
	64523, 5395, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 65593, 1107, 995, 1686, 1281, 75625, 53472,
	991, 53472, 2594, -1000, -1000, 19269, -1000, 114158, 114158, -1000,
	114158, -1000, 61891, 103424, -1000, 1051, 103424, 71423, 976, 2871,
	57699, -77, 981, 69333, 84556, -36, 103424, -1000, -1000, 2020,
	2870, 548, 2246, -1000, 69333, 3251, 2867, 654, 3424, 3420,
	-1000, 2150, 2245, -1000, -1000, 103944, 2921, 880, 103424, 1024,
	50815, 1899, -1000, 56129, 1067, 103424, 1815, 129, -1000, -1000,
	-1000, 30, 103424, -1000, 856, 3418, -1000, -1000, 194, -1000,
	84556, 194, 194, -1000, 84556, 84556, 2225, -1000, 201, 198,
	-1000, -132, -1000, -1000, 5690, 5690, 981, -230, 653, -1000,
	926, 925, 54007, 69333, -85, -1000, -1000, -1000, -1000, -1000,
	84556, 103424, 796, 2582, 103424, -88, -1000, 249, 652, -1000,
	2198, -1000, -1000, 992, 53472, 2740, -1000, -1000, 1019, -1000,
	1406, 981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2, -77, -77, -77, -37, -1000, 993, -1000,
	993, -1000, 993, -1000, 114158, -1000, -1000, 1638, 1637, 103424,
	-1000, 21950, 103424, 84556, 21950, 84556, 2790, 2789, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1110, -1000, 1807, 2125,
	-1000, 649, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2345, -1000, -44, 29195, 933, -1000, -1000, 84556, 1,
	43211, 43211, 6440, 5769, 43211, 47075, 47075, -1000, 43211, 5475,
	-1000, -1000, -1000, -1000, -1000, 2739, 648, 43211, 61367, 5590,
	4872, -1000, 461, 8693, 307, -1000, 43211, -1000, 457, 31415,
	-1000, 112993, -58, -90, -1000, 16037, -213, -91, -1000, -1000,
	835, -1000, 2884, -1000, 43211, 113183, 2285, 2173, 1817, 1613,
	3326, 3367, 18733, -1000, 59271, 1030, 2073, 110953, -1000, -1000,
	-1000, -1000, 61367, 61367, 43211, 43211, -1000, 43211, 43211, 43211,
	-1000, -1000, -1000, 3326, 963, -1000, -1000, -1000, 963, -1000,
	-1000, 1417, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1417, -1000, 43211,
	-1000, -1000, 2736, 43211, -1000, 61367, 61367, 47075, 47075, 47075,
	47075, 47075, 47075, 47075, 47075, 47075, 47075, 47075, 47075, 47075,
	47075, 47075, 47075, 47075, 47075, 47075, 2380, 47075, 3298, 3298,
	3298, -1000, 2787, 2736, 43211, 43211, 61367, 456, 455, 454,
	-1000, 43211, -213, -1000, -1000, 5690, 647, -1000, 2330, -1000,
	2673, -1000, 43211, -1000, -246, -1000, 2607, -1000, -1000, 2673,
	2673, -96, 114158, 50815, 50815, -1000, 645, 43211, 2446, -1000,
	-1000, 811, -316, -1000, 914, -1000, -1000, -1000, -1000, -1000,
	548, -1000, -1000, -1000, 246, 92914, 92914, 808, -1000, -99,
	-1000, -1000, -102, -1000, 3248, 451, 21950, -1000, 1024, 3062,
	-1000, -1000, -1000, -1000, -1000, -1000, -77, 103424, 103424, 2109,
	3365, -1000, 3330, 827, 806, 229, 3326, 448, 440, 436,
	-77, 103424, 103424, 103424, -1000, -1000, -1000, 2501, -1000, -52,
	-1000, -1000, -1000, 43211, -1000, -1000, 3059, 1278, 1274, -1000,
	-1000, 2865, -1000, 2244, -1000, 1071, -1000, 1705, -1000, 43211,
	51341, 644, 640, 3415, 1925, 3414, 1106, 2864, 2225, 2863,
	2225, -1000, -1000, -1000, 970, -1000, 114158, -1000, 628, 627,
	-1000, -53, 1818, 1684, 1004, -1000, -1000, 43211, 43211, 92394,
	-1000, 434, 3064, 0, -1000, -1000, 1679, 1271, -1000, -1000,
	-1000, -1000, 2020, 1676, 1264, -1000, -1000, -1000, 1003, -1000,
	-1000, 1001, -1000, -1000, 43211, -1000, -61, 1260, 3204, 2240,
	84556, 1257, -1000, 1255, -1000, -1000, -1000, 3211, 2225, 2861,
	1323, -1000, -1000, -1000, -1000, -1000, 65058, -1000, 103424, 84556,
	1596, 893, -1000, 2123, 893, 991, 2730, -1000, 2519, -1000,
	84556, 3412, 435, -110, -69, 61367, 3247, -1000, 2176, 673,
	84556, 944, -1000, 3317, -1000, -1000, -1000, -1000, 3197, 84556,
	3246, 2860, 995, 65, 84556, 3364, -1000, -1000, 84556, 2857,
	2149, 2234, 2372, 880, 70383, -1000, 995, 2072, -129, -1000,
	1815, 30851, 3054, -115, -1000, -1000, -1000, 1024, 58751, 50815,
	43211, 3408, -117, -1000, -1000, -1000, -1000, 194, -1000, -1000,
	-1000, 192, -1000, -1000, -1000, -1000, -1000, -1000, 91349, 91349,
	69333, 69333, 69333, 981, 103424, 103424, 71423, -1000, 626, 103424,
	103424, 621, -1000, 103424, 103424, 3404, 69333, -76, 619, -1000,
	909, 905, 902, -1000, -1000, -1000, -1000, -1000, -1000, -254,
	65, -1000, 2099, 84556, -1000, 18197, -1000, -1000, -1000, -1000,
	-1000, 993, -1000, -1000, 1969, 2195, 1969, 1809, 1804, -1000,
	2122, -1000, -1000, -1000, -1000, 2481, 3072, 21950, 3188, 7863,
	43211, 43211, 5410, 4487, 347, 7863, 43211, 43211, 61367, 1057,
	-118, 43211, 43211, -1000, 43211, 803, 114158, 3363, 43211, 432,
	429, -1000, -1000, -1000, 3322, -1000, -1000, -1000, 114158, 43211,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 423, -1000, 193,
	-1000, -1000, -1000, 109144, -1000, 43211, 400, 3155, -1000, 393,
	387, 8028, 426, 110712, 110530, 110357, 379, -1000, -1000, 373,
	372, 114158, 2787, 114158, -1000, -1000, 884, 884, 1380, 1380,
	1380, 1380, 3298, 524, 937, 491, 910, 910, 910, 986,
	1242, 1242, 910, 910, 910, 2720, 2379, 618, 4826, -1000,
	-1000, 114158, 114158, 371, -1000, -1000, -1000, -213, 370, 5690,
	-1000, 2668, 3151, 114158, -1000, 50815, 2668, 2668, -1000, -1000,
	2080, 103424, 114158, 50815, -1000, 2637, -1000, 16584, -1000, 21950,
	-1000, -1000, -1000, -1000, 3317, -1000, 55602, -1000, 613, -1000,
	141, -1000, 3062, -1000, 899, -1000, -77, -77, -1000, -1000,
	802, 3402, 824, 21950, 368, -1000, -1000, -1000, -77, -77,
	-77, -1000, 3009, 114158, 103424, 103424, 103424, 2855, -1000, 4443,
	-1000, 1084, 110116, -133, -1000, 103424, 43211, 103424, 51341, 103424,
	-1000, -1000, 1895, 2475, 1128, -1000, 3104, 103424, -1000, 103424,
	-1000, -1000, 103424, 103424, 84556, 103424, 2843, -134, 114158, -105,
	-1000, 898, -1000, 1418, -1000, 17661, 103424, 84556, 103424, 84556,
	2024, 2842, -135, 21950, -1000, 3360, 3359, 2854, 3112, 3357,
	103424, -1000, 103424, 84556, 3005, -1000, -1000, -1000, -1000, 1666,
	1190, 991, -111, 612, -1000, 892, -1000, -1000, 891, 991,
	-1000, 69333, 53472, 548, -1000, 2572, -1000, 89243, 2126, 65,
	-1000, 3397, 91874, 611, -1000, 2087, -1000, 800, 64523, 2020,
	65, 84556, -1000, -1000, 548, 367, -112, -1000, 1081, 21950,
	84556, 2853, 2383, 880, 70383, -1000, 1401, 2470, -1000, -113,
	-1000, 615, 65, 2072, -1000, -129, 114158, -1000, 887, -1000,
	-1000, -1000, -141, -1000, -1000, 365, -1000, 3004, 3003, -1000,
	2665, 51341, 610, 609, 103424, 3001, -1000, -1000, -154, 2298,
	2298, 69333, 53472, 69333, 992, -1000, 2254, -1000, -1000, -1000,
	-1000, -1000, 21950, 1681, -1000, 607, 605, -1000, -1000, -1000,
	-1000, 3072, 7863, 7863, 43211, 43211, 43211, 7863, 1057, -159,
	-1000, 7863, 7863, -213, -1000, -1000, 112993, -1000, -1000, -1000,
	114158, -1000, 17125, 1986, -1000, 109761, -1000, 29195, -1000, -1000,
	43211, 43211, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47075, 2717, 596, 61367, -1000, -1000, 361, 1018, 43211, 44867,
	2607, 1018, 1018, -1000, -160, -1000, -1000, -1000, 3317, 141,
	-1000, -1000, 3394, 21950, -1000, 69333, 823, -1000, 3390, -1000,
	-1000, -1000, -1000, -1000, -1000, 103424, -1000, 103424, -1000, 21950,
	103424, 2699, 2219, -1000, -1000, 2403, 594, 47075, 84556, 629,
	-1000, 3238, 2634, 1863, 51341, -1000, 3072, -1000, 109712, -1000,
	-167, -172, 2217, -1000, -1000, 2216, 43211, -1000, 61367, 593,
	2225, 2225, -173, -175, -1000, -1000, 43211, 1177, 103424, 30299,
	-1000, 3389, 3064, -1000, -1000, -1000, -1000, 103424, 43211, 1162,
	-1000, -1000, -1000, 3353, 2225, 21950, -1000, 2225, 2225, 3112,
	1121, 103424, 84556, -1000, 2249, 2249, 69333, 53472, -1000, -132,
	991, 3245, 2564, 3388, -1000, -1000, -1000, -1000, 2402, -1000,
	-1000, 103424, 2393, 982, -1000, -178, -1000, 886, 885, 71423,
	976, 941, -1000, -1000, -1000, -1000, 548, 3242, -1000, 3349,
	592, 103424, 2148, 591, 21950, 3050, 880, 70383, -1000, 2921,
	1815, -1000, 2222, 103424, 3039, -1000, 2470, 589, -1000, 981,
	587, 580, 2381, 2381, -181, 51341, 51341, -187, 578, 981,
	-1000, -189, -1000, -1000, -1000, -1000, -147, -1000, 890, 889,
	-1000, -1000, 84556, 84556, 43211, 43211, -1000, 7863, 7863, 7863,
	-1000, 349, -1000, -1000, 2072, 3146, -1000, -153, 109672, 14865,
	5507, 47075, 61367, -190, -1000, -1000, 103424, 114158, -166, -1000,
	114158, 577, 576, 471, -1000, -1000, -1000, 748, -1000, -1000,
	3387, -1000, -1000, 1757, -1000, -1000, -1000, 103424, 2226, -1000,
	1083, 43211, 4826, 572, 43211, -1000, 3239, -1000, 2550, 2741,
	2564, 571, -1000, -1000, -1000, -1000, 933, 103424, 1075, 1854,
	-1000, -1000, 114158, 3112, 51341, -1000, -1000, 570, 568, 114158,
	567, 881, 2709, -1000, -1000, -1000, -1000, 114158, 566, 3204,
	-1000, -1000, -1000, -1000, 2225, 84556, -1000, -1000, -1000, -197,
	-1000, -1000, 1859, 65, 1965, 2606, -1000, 2126, 556, -1000,
	-1000, 2135, 2488, -1000, 91874, 29747, 29747, 343, 3236, 941,
	-1000, 3313, -1000, 3235, 65, -1000, 51341, -1000, 84556, 51341,
	2147, -1000, 2360, 70383, -1000, 2372, -1000, -1000, -198, 103424,
	1815, -1000, -1000, 69333, 69333, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1075, -212, -215, -1000,
	69333, -1000, -1000, 2254, -1000, 103424, -1000, 103424, -1000, -1000,
	-217, -218, -1000, 2052, 43211, 29195, -1000, -1000, 5507, -224,
	-1000, -174, -1000, 3229, 44867, 3386, 3385, 3384, -1000, -1000,
	-1000, -1000, 2852, 2654, 14697, 2335, 103424, 251, -1000, 2731,
	-1000, -1000, 1965, 103424, -1000, -1000, 2564, 2641, 84556, 1082,
	-231, 1969, 1969, 43211, 28643, 2018, 43211, -1000, -1000, 3112,
	-1000, 2693, 3314, -1000, 976, -1000, 2003, 103424, -1000, 3084,
	-1000, 3000, -1000, -1000, -1000, 2572, 65, -1000, -1000, 65,
	-1000, -236, 1081, -239, 84556, 880, -1000, 2383, 1024, -1000,
	-1000, -247, -252, 1863, 1075, 980, -253, -1000, -258, -260,
	-1000, -1000, 319, 44315, 44315, 44315, -213, -229, -1000, 103424,
	551, -1000, -1000, -1000, -1000, 2834, 990, -1000, 2138, 1926,
	293, 1102, -1000, -1000, 2634, -263, -1000, 985, 548, -1000,
	43211, 1075, -265, -1000, 1066, -266, -1000, 1061, -273, -1000,
	2697, -1000, -274, 2225, 983, 3189, -1000, -1000, -1000, 2135,
	84556, -275, -1000, -1000, 2312, -1000, 2564, 982, -1000, 1075,
	547, 1863, 546, 1417, 3050, 2973, 981, 981, 2564, 1863,
	1024, 545, 981, -1000, -1000, -1000, 2959, -1000, 48145, 2120,
	1790, 112158, 2959, 2959, -1000, -1000, 103424, 3171, -1000, 2146,
	2141, 1488, -1000, -1000, -1000, -1000, -1000, -1000, 1024, -1000,
	3170, 2335, 114158, 2564, -1000, 1969, 2601, -1000, 1969, 2696,
	-1000, 1995, -1000, -1000, -1000, 1704, 3301, -1000, 544, -1000,
	103424, 1725, 1708, 3383, 1965, 2135, 1863, 51341, 2564, 51341,
	-1000, -1000, 1311, -1000, -1000, 1965, 2564, -1000, -1000, -1000,
	1820, 3269, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	877, -1000, 2984, -1000, 1108, 2151, 2151, -1000, 625, 2138,
	-1000, -1000, 541, -1000, 539, -1000, 2085, -1000, -1000, 103424,
	-1000, -1000, 3382, -1000, 976, -1000, 2564, -281, 1965, -282,
	-1000, 1564, 980, 1965, 1781, -1000, -1000, 2063, 43763, 43211,
	-1000, 3281, -1000, -1000, 2437, -1000, 43211, 2634, 43211, 43211,
	57179, -289, -1000, 2135, 1965, 1075, 980, 1863, 58751, 1024,
	980, -1000, -1000, -1000, 114158, -1000, -1000, -1000, 114158, -1000,
	-290, -291, -230, 91349, 2218, -1000, 980, 1863, 1024, 2564,
	-271, -1000, 1024, 1965, 1157, -292, -1000, -1000, -1000, 1024,
	2564, -1000, 1965, -1000, -1000, -1000, 537, -1000, -1000, 1965,
	980, 43211, 980, 1024, -308, 1024, -1000, 1965, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4207, 4197, 4195, 4192, 4191, 4190, 4189, 4187, 4186,
	4185, 4183, 4182, 4180, 4178, 4175, 4174, 4173, 4169, 4168,
	4163, 4161, 4160, 4159, 4156, 4151, 4149, 4147, 4144, 4140,
	4137, 4136, 4135, 4134, 4133, 4132, 4128, 4127, 4126, 4118,
	4117, 4114, 4113, 4111, 4109, 4108, 4107, 4106, 4103, 4102,
	4100, 4097, 4096, 4095, 41, 4094, 4093, 4092, 4089, 4088,
	4087, 4086, 4080, 4079, 4078, 4077, 4075, 4073, 4071, 4069,
	4068, 4066, 4065, 4064, 39, 4062, 243, 4060, 4055, 4051,
	4050, 4049, 4047, 4044, 4043, 4042, 4041, 4040, 4038, 240,
	4037, 130, 4032, 4030, 4029, 4028, 4026, 238, 4025, 4024,
	4022, 4014, 247, 4013, 4012, 4011, 4005, 4004, 4001, 4000,
	3998, 3997, 3996, 75, 134, 3994, 3993, 202, 3990, 3989,
	3985, 3984, 3983, 3981, 3980, 3979, 3976, 3972, 215, 3967,
	237, 3966, 3965, 3964, 3961, 3960, 3956, 3955, 3954, 3953,
	3950, 3947, 3933, 3931, 3930, 3923, 3922, 3919, 3918, 3916,
	3915, 3912, 3910, 3907, 3903, 3902, 3896, 3895, 3893, 3891,
	3890, 3889, 3887, 3883, 248, 163, 3881, 3879, 236, 235,
	3878, 3876, 3874, 3872, 3871, 110, 4, 79, 3870, 3869,
	111, 64, 62, 91, 77, 81, 3866, 86, 3864, 108,
	43, 3863, 6, 2, 144, 230, 6220, 219, 3859, 3855,
	3854, 209, 169, 3851, 206, 3848, 3846, 3845, 3844, 71,
	52, 160, 154, 148, 143, 695, 3843, 3841, 70, 59,
	45, 32, 25, 3839, 3838, 3833, 3825, 3122, 99, 3824,
	234, 207, 137, 3823, 3822, 3820, 696, 3819, 3817, 40,
	3816, 213, 63, 117, 16, 101, 3814, 124, 29, 3813,
	174, 84, 3812, 133, 68, 61, 8237, 7906, 3811, 115,
	54, 123, 2584, 156, 145, 173, 186, 141, 188, 183,
	150, 109, 3810, 225, 3809, 3229, 47, 138, 3807, 3806,
	3805, 58, 172, 87, 3803, 3802, 51, 12, 30, 7,
	142, 14, 96, 35, 21, 3799, 17, 3798, 3797, 3794,
	3789, 3787, 28, 139, 3780, 245, 3779, 55, 42, 76,
	3776, 93, 185, 3774, 197, 113, 3773, 3765, 222, 184,
	140, 3760, 73, 203, 3759, 3758, 3757, 3756, 3755, 112,
	1, 119, 3754, 3753, 121, 3750, 37, 208, 171, 3746,
	48, 3745, 3744, 147, 80, 106, 244, 107, 195, 88,
	196, 164, 200, 3742, 3740, 3739, 158, 3738, 3736, 191,
	132, 3735, 3734, 176, 250, 34, 60, 205, 56, 167,
	125, 3722, 180, 3719, 3718, 249, 161, 189, 8, 15,
	69, 105, 3717, 5, 204, 131, 177, 90, 3716, 5861,
	2029, 1810, 3714, 3712, 128, 92, 53, 104, 136, 233,
	57, 3711, 3710, 2493, 3709, 3706, 3705, 3701, 165, 3700,
	3698, 3696, 120, 127, 211, 3694, 78, 65, 50, 10,
	95, 224, 246, 89, 194, 146, 221, 3693, 3691, 3689,
	162, 3688, 44, 175, 3687, 170, 229, 3686, 3685, 159,
	3684, 122, 495, 46, 129, 3681, 190, 3680, 3679, 3675,
	3674, 3673, 3672, 3671, 281, 201, 3666, 3659, 3658, 31,
	166, 3657, 232, 152, 157, 83, 74, 3656, 82, 3431,
	3655, 149, 199, 98, 100, 3652, 3651, 1809, 38, 0,
	11421, 6589, 9777, 10828, 3650, 4749, 3648, 3647, 3646, 179,
	116, 3644, 3643, 3642, 94, 3641, 67, 3640, 3639, 49,
	3638, 19, 9, 11, 24, 22, 193, 155, 3637, 3635,
	126, 114, 102, 3634, 241, 198, 3631, 3628, 3624, 3622,
	85, 3621, 26, 3620, 27, 3617, 3614, 36, 13, 23,
	3613, 3610, 210, 3607, 187, 214, 3603, 135, 3600, 3228,
	118, 3598, 3597, 226, 66, 3595, 216, 3593, 3150, 3592,
	3591, 18, 3590, 3589, 212, 151, 182, 3588, 3587, 153,
	3586, 3585, 3584, 231, 3583, 3582, 20, 3580, 3, 3579,
	3578, 178, 3000, 3577, 3576, 33, 3575, 168,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 543, 543, 21, 35,
	22, 36, 15, 544, 544, 544, 544, 28, 23, 37,
	25, 25, 25, 25, 25, 178, 178, 178, 178, 20,
	20, 31, 31, 212, 212, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	542, 542, 214, 214, 213, 208, 208, 545, 545, 215,
	215, 215, 217, 217, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 443, 443, 443, 475, 475, 474, 474,
	474, 558, 558, 559, 559, 559, 559, 559, 116, 116,
	342, 342, 342, 43, 43, 43, 43, 43, 537, 537,
	180, 180, 180, 182, 182, 181, 181, 181, 181, 65,
	65, 550, 550, 551, 551, 549, 552, 552, 552, 179,
	179, 179, 112, 112, 112, 112, 113, 113, 114, 114,
	183, 183, 183, 185, 185, 184, 184, 184, 184, 184,
	184, 184, 184, 189, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 93, 93, 477, 477, 478, 478, 174,
	174, 175, 175, 175, 175, 176, 176, 177, 177, 177,
	57, 186, 186, 188, 188, 187, 187, 45, 45, 45,
	45, 45, 45, 45, 46, 46, 46, 46, 46, 47,
	47, 47, 47, 47, 47, 48, 48, 48, 48, 48,
	48, 55, 55, 55, 55, 165, 165, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 62, 62,
	62, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	561, 561, 562, 562, 563, 563, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 71, 71, 304, 304, 274, 274, 72,
	72, 72, 73, 73, 74, 74, 59, 59, 535, 535,
	319, 319, 434, 434, 76, 76, 341, 341, 77, 77,
	77, 77, 77, 77, 78, 78, 78, 78, 78, 78,
	78, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 86, 86, 86, 86, 86,
	87, 87, 87, 84, 84, 84, 81, 81, 81, 80,
	80, 80, 85, 85, 85, 534, 265, 265, 83, 83,
	83, 82, 82, 82, 320, 320, 88, 88, 88, 88,
	275, 89, 89, 89, 89, 89, 89, 89, 89, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 436, 436, 90, 90, 90, 401, 401, 94,
	94, 94, 357, 357, 95, 95, 95, 95, 95, 96,
	96, 96, 96, 96, 96, 115, 115, 115, 115, 115,
	115, 539, 539, 312, 312, 230, 230, 230, 230, 105,
	105, 105, 105, 106, 106, 106, 107, 107, 170, 170,
	122, 122, 122, 122, 122, 121, 121, 121, 121, 121,
	121, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 124, 124, 555,
	555, 126, 123, 123, 123, 125, 125, 125, 125, 127,
	128, 128, 128, 128, 128, 128, 128, 128, 129, 129,
	468, 468, 328, 328, 466, 466, 486, 486, 467, 467,
	279, 279, 279, 279, 279, 280, 280, 280, 476, 476,
	476, 476, 476, 476, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 171, 171,
	172, 173, 173, 173, 173, 173, 150, 150, 150, 164,
	164, 164, 164, 164, 164, 164, 153, 153, 153, 140,
	140, 131, 131, 131, 131, 131, 131, 131, 135, 135,
	135, 135, 135, 135, 135, 135, 132, 132, 142, 142,
	142, 142, 142, 136, 136, 137, 137, 160, 160, 139,
	139, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	133, 133, 133, 133, 144, 144, 144, 144, 364, 364,
	364, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 163, 163, 163, 163, 163, 163, 553, 553,
	554, 554, 157, 157, 157, 157, 157, 157, 415, 415,
	151, 151, 151, 151, 156, 156, 156, 156, 159, 159,
	159, 159, 347, 347, 148, 148, 148, 149, 149, 149,
	154, 154, 155, 152, 152, 158, 158, 158, 158, 134,
	134, 134, 565, 565, 565, 161, 161, 147, 147, 162,
	162, 162, 162, 162, 162, 162, 162, 146, 146, 146,
	145, 145, 145, 145, 138, 536, 536, 532, 532, 532,
	532, 532, 532, 532, 532, 533, 533, 533, 533, 538,
	538, 99, 99, 99, 99, 99, 108, 108, 108, 108,
	108, 100, 100, 100, 100, 100, 102, 102, 101, 101,
	101, 101, 66, 66, 66, 66, 66, 14, 14, 14,
	67, 67, 192, 192, 192, 293, 293, 193, 193, 287,
	287, 287, 287, 190, 190, 191, 191, 68, 68, 566,
	566, 566, 546, 546, 546, 547, 547, 547, 547, 547,
	547, 281, 281, 282, 282, 381, 381, 381, 381, 381,
	285, 285, 285, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 288, 288, 216, 216, 216, 291, 292, 292,
	289, 289, 290, 290, 290, 295, 295, 294, 297, 297,
	296, 380, 495, 495, 497, 497, 497, 497, 497, 497,
	497, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 567, 567, 493, 493, 493, 494, 489, 489,
	490, 490, 490, 490, 490, 283, 283, 284, 284, 284,
	284, 491, 492, 310, 310, 419, 496, 496, 498, 498,
	500, 568, 568, 568, 568, 568, 568, 569, 569, 569,
	379, 379, 378, 378, 302, 302, 501, 501, 501, 501,
	502, 502, 502, 502, 502, 505, 504, 503, 503, 503,
	503, 503, 70, 70, 70, 344, 344, 343, 343, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 167, 167, 233, 233, 64, 64,
	64, 12, 12, 12, 548, 548, 548, 69, 69, 69,
	69, 69, 69, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 541, 541, 540, 540, 234, 234, 571,
	571, 75, 75, 75, 75, 75, 75, 75, 437, 437,
	438, 438, 63, 63, 63, 63, 63, 365, 365, 363,
	363, 362, 362, 309, 309, 417, 417, 417, 418, 238,
	238, 239, 239, 209, 209, 209, 27, 26, 19, 19,
	24, 24, 39, 39, 39, 39, 42, 42, 38, 38,
	38, 38, 40, 40, 34, 34, 556, 556, 557, 557,
	104, 104, 109, 109, 109, 109, 109, 110, 110, 110,
	110, 111, 111, 111, 111, 120, 120, 166, 166, 166,
	166, 166, 166, 166, 44, 44, 44, 44, 56, 56,
	56, 56, 118, 573, 573, 573, 119, 119, 119, 572,
	572, 231, 231, 375, 375, 376, 376, 574, 574, 377,
	377, 377, 377, 377, 224, 223, 225, 225, 226, 226,
	61, 61, 61, 218, 218, 219, 219, 220, 220, 221,
	221, 222, 222, 575, 575, 97, 97, 97, 169, 169,
	273, 273, 273, 372, 372, 372, 303, 303, 245, 245,
	374, 374, 374, 374, 340, 340, 340, 168, 168, 317,
	317, 330, 330, 331, 331, 431, 431, 332, 103, 103,
	117, 117, 196, 196, 194, 194, 194, 194, 194, 194,
	194, 194, 201, 201, 202, 202, 203, 203, 204, 205,
	205, 205, 205, 321, 321, 206, 206, 206, 195, 195,
	195, 197, 197, 197, 197, 197, 197, 197, 200, 200,
	200, 200, 207, 207, 207, 199, 199, 512, 512, 512,
	514, 514, 516, 516, 515, 515, 511, 511, 513, 513,
	570, 570, 346, 346, 346, 300, 301, 298, 298, 299,
	299, 307, 307, 305, 306, 306, 308, 308, 416, 416,
	416, 210, 210, 210, 337, 337, 337, 337, 338, 338,
	368, 368, 366, 366, 366, 366, 367, 367, 369, 369,
	369, 370, 370, 371, 371, 334, 334, 335, 335, 336,
	336, 336, 336, 397, 397, 198, 198, 198, 314, 314,
	314, 315, 315, 387, 387, 387, 387, 387, 387, 388,
	388, 386, 386, 386, 386, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 421, 422, 422, 316, 316, 423,
	373, 373, 530, 530, 530, 531, 531, 414, 414, 424,
	424, 424, 424, 424, 424, 412, 412, 413, 413, 432,
	433, 433, 350, 350, 350, 350, 348, 348, 351, 351,
	351, 351, 349, 349, 425, 425, 425, 425, 339, 339,
	426, 426, 426, 426, 427, 428, 428, 429, 429, 382,
	383, 383, 439, 439, 439, 439, 441, 313, 313, 313,
	313, 313, 488, 487, 487, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 456, 456, 456, 456,
	456, 456, 456, 442, 442, 442, 442, 442, 446, 446,
	446, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 447, 447, 452, 452, 453, 453, 453, 448,
	449, 454, 454, 454, 454, 576, 576, 458, 458, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 444, 444,
	444, 451, 451, 451, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 358, 358, 360,
	360, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 391, 391,
	391, 391, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 506, 506, 506,
	506, 506, 506, 506, 506, 393, 393, 509, 509, 510,
	510, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	517, 517, 518, 518, 520, 520, 521, 521, 522, 523,
	523, 523, 524, 525, 525, 519, 519, 526, 526, 526,
	526, 527, 527, 528, 528, 528, 528, 528, 529, 529,
	529, 529, 529, 403, 403, 404, 404, 410, 410, 410,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 235, 235, 235, 235,
	235, 326, 326, 324, 324, 324, 327, 327, 325, 325,
	323, 323, 322, 322, 400, 400, 398, 398, 402, 402,
	352, 352, 457, 457, 457, 457, 457, 457, 457, 457,
	353, 353, 353, 361, 354, 354, 355, 355, 355, 355,
	355, 394, 395, 356, 356, 356, 396, 396, 405, 409,
	409, 408, 407, 407, 406, 406, 384, 384, 385, 385,
	333, 333, 577, 577, 329, 329, 430, 430, 430, 430,
	277, 277, 318, 318, 276, 276, 268, 268, 269, 269,
	269, 269, 311, 311, 411, 411, 459, 459, 460, 460,
	461, 461, 462, 462, 463, 464, 465, 399, 399, 255,
	254, 242, 243, 253, 252, 251, 241, 244, 248, 249,
	250, 246, 247, 261, 260, 259, 266, 267, 257, 258,
	435, 240, 270, 270, 271, 271, 271, 272, 272, 272,
	272, 236, 236, 237, 237, 262, 262, 263, 264, 264,
	256, 256, 256, 227, 227, 227, 228, 228, 229, 229,
	473, 473, 470, 470, 470, 471, 471, 471, 472, 472,
	472, 472, 469, 469, 469, 469, 469, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 480, 480, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 482, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 485, 485,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 12,
	3, 1, 0, 1, 1, 2, 3, 3, 0, 4,
	6, 0, 5, 6, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 2, 0, 1, 2, 3, 1, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 6, 3,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 3, 2, 4, 3, 3, 5, 3, 4, 3,
	5, 3, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 3, 4, 10, 10, 3,
	5, 5, 5, 3, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 1, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 9, 9, 3, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 1, 2, 8, 4, 2, 5, 5,
	5, 2, 1, 3, 11, 12, 8, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 2, 2, 4, 7,
	3, 4, 6, 3, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	9, 12, 3, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 566, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -115, -120, -103, -104, -116, -122, -166,
	-171, -172, -173, -3, -43, -45, -58, -76, -78, -89,
	-98, -97, -99, -105, -112, -108, -93, -49, -117, -121,
	-130, -167, -168, -169, 32, 31, 99, 79, 150, 125,
	133, 194, 371, 409, 420, 385, 401, 390, -125, -126,
	437, -44, -56, -119, -118, 72, 126, 396, -4, -12,
	29, 45, -46, -47, -48, 61, -64, -60, -71, -65,
	-62, -560, 101, -513, -79, -82, -111, -564, 138, 157,
	212, -100, -101, 354, -106, -107, 403, -109, -110, 405,
	158, -51, -50, 152, -194, -196, -123, -124, -170, -131,
	-132, -133, -134, -135, -136, -137, -160, -138, -139, -140,
	-141, -142, -143, -163, -144, -145, -146, -147, -152, -148,
	-149, -150, -151, -153, -154, -156, -157, -158, -159, -161,
	-162, 442, -155, 498, 48, 456, 81, 142, 413, 21,
	-5, -6, -7, -8, -9, -10, -11, -14, -13, -59,
	-61, -63, -66, -67, -68, -75, -69, -70, -512, -80,
	-81, -84, -86, -87, -83, -85, 402, -197, -195, 563,
	513, -16, -21, -22, -17, -18, -20, -23, -19, -24,
	-30, -35, -36, -32, -33, -31, -34, -37, -38, -39,
	-40, -41, -42, -26, -28, -29, -27, -15, -25, 532,
	541, -200, -198, -199, -207, 429, 521, 472, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, -275,
	2, -257, -262, -263, -264, -256, -227, -482, -485, 4,
	-479, -483, 163, 221, 318, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 52, 54, 58, 59, 60, 61, 62, 63, 67,
	72, 73, 78, 79, 80, 81, 82, 83, 84, 90,
	87, 88, 89, 91, 93, 95, 96, 97, 98, 99,
	100, 102, 103, 104, 106, 107, 115, 116, 117, 118,
	120, 125, 126, 129, 124, 128, 131, 132, 133, 136,
	137, 138, 140, 141, 143, 144, 145, 147, 148, 150,
	151, 152, 155, 153, 480, 154, 156, 157, 158, 159,
	169, 170, 171, 176, 178, 182, 183, 186, 187, 188,
	189, 190, 191, 192, 193, 195, 199, 201, 202, 203,
	204, 205, 211, 212, 214, 215, 216, 217, 222, 223,
	224, 228, 225, 234, 235, 239, 240, 241, 243, 247,
	248, 249, 250, 251, 252, 254, 256, 255, 258, 261,
	262, 265, 269, 270, 273, 274, 275, 276, 278, 279,
	282, 280, 283, 284, 281, 285, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 298, 286, 301,
	299, 303, 304, 305, 316, 314, 309, 310, 306, 311,
	307, 308, 312, 313, 320, 321, 324, 209, 326, 327,
	330, 348, 334, 335, 336, 339, 340, 343, 346, 347,
	349, 350, 351, 352, 353, 354, 355, 356, 358, 359,
	361, 362, 363, 365, 366, 367, 369, 371, 372, 374,
	375, 377, 378, 379, 380, 381, 382, 383, 385, 387,
	386, 388, 390, 396, 401, 398, 399, 400, 402, 403,
	404, 405, 407, 408, 409, 411, 412, 413, 414, 416,
	418, 419, 422, 423, 439, 440, 458, 420, 421, 424,
	425, 426, 427, 428, 432, 430, 431, 433, 434, 435,
	437, 438, 441, 442, 444, 445, 446, 447, 448, 449,
	452, 454, 455, 456, 457, 459, 462, 463, 464, 465,
	460, 471, 468, 469, 473, 474, 475, 476, 477, 478,
	479, 481, 483, 491, 492, 493, 495, 498, 499, 500,
	501, 489, 503, 504, 507, 508, 509, 512, 510, 511,
	513, 515, 518, 519, 520, 526, 525, 527, 533, 534,
	536, 537, 538, 36, 49, 50, 53, 55, 57, 68,
	69, 70, 74, 121, 122, 149, 160, 161, 172, 184,
	185, 196, 198, 206, 207, 208, 229, 230, 232, 237,
	259, 323, 325, 341, 345, 360, 364, 368, 370, 384,
	415, 450, 461, 466, 484, 485, 486, 487, 494, 496,
	521, 522, 523, 528, 535, -275, 2, -257, 332, -250,
	2, -227, -227, 371, 28, 2, 28, 359, 431, 475,
	477, 2, -539, -312, 2, 28, -230, -227, 101, 194,
	429, -250, 2, -539, -312, 25, 2, -227, 2, 346,
	-231, 2, 420, -227, 279, 2, 566, 93, 270, 73,
	415, 434, -128, 492, -127, 484, 424, -129, -468, 2,
	301, -227, 566, 566, 566, 28, -240, -227, 472, 221,
	424, 117, 469, 566, 2, 472, 351, 525, 430, 117,
	381, 221, 500, 424, -548, 279, 411, 197, 514, -537,
	2, -532, 4, -483, -479, -269, -268, 472, 478, 117,
	-264, -256, 556, -263, 566, 566, 566, 2, 240, 241,
	380, 379, 434, 435, 566, 566, 566, 566, 422, 2,
	159, 22, 27, 65, 92, 97, 123, 179, 182, 337,
	-561, 348, 378, 433, 471, 474, 481, 495, -547, 457,
	67, 424, -546, -548, 279, 500, 136, -362, 117, 270,
	193, 508, 477, 475, 506, 129, 228, 511, 510, 566,
	566, 22, 27, 65, 76, 97, 136, 159, 179, 182,
	-563, 348, 378, 418, 433, 471, 481, 495, 2, 525,
	279, 430, 472, 221, 117, 500, 424, -548, 422, 423,
	376, -91, 2, 563, 32, 31, 437, -189, 472, 233,
	2, -227, 566, 566, 2, 240, 241, 422, 423, 566,
	566, 180, -532, 2, 566, 566, 2, 240, 241, 422,
	423, 233, 2, 67, 426, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 2, -164, 434,
	457, 203, 46, 45, 73, 28, 377, 78, 352, 118,
	144, 501, 195, 221, 222, 248, 92, 93, -364, 44,
	241, 240, 423, -553, 422, -415, 473, 425, 431, 468,
	252, 420, 492, 101, 515, 412, 538, 381, 382, 153,
	4, 117, 301, 436, 484, 270, 419, 355, 83, 566,
	-570, 2, 472, -572, 2, 492, 492, 2, -572, 2,
	-572, 2, -572, 2, -573, 492, 535, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, -195, -197, -196, 566, 566, 566,
	566, 566, 566, 566, -164, 434, 2, 73, 28, -305,
	-307, 505, 231, 146, 338, -194, -196, 2, -512, -466,
	2, -389, -486, -391, 554, 555, 547, 470, 66, 317,
	539, -403, 123, 506, 332, -485, -392, -405, 149, 415,
	-327, 8, 9, 5, 6, 7, -236, -393, -399, 497,
	162, 322, -272, 567, 10, 563, -509, -196, -404, 37,
	198, 64, -470, -271, -237, -442, 232, -270, -256, -506,
	-507, 4, -479, -480, -471, -445, -453, -449, -450, -456,
	-227, -482, 76, 109, 110, 108, 113, 112, 272, 271,
	114, 111, 436, 514, 65, 36, 206, 207, 237, 323,
	208, 74, -508, 137, -481, 229, 230, 450, 50, 384,
	172, 122, 121, 325, 55, 53, 522, -454, 119, 484,
	485, 486, 487, 184, 185, 57, 160, 161, 345, 368,
	466, 494, 496, 196, 259, 43, 105, 181, 227, 210,
	236, 238, 242, 260, 263, 302, 315, 319, 342, 344,
	410, 443, -576, 523, 461, 68, 69, -514, 386, -515,
	-250, -514, 566, 566, 568, 566, -298, -300, -301, 2,
	28, 134, 563, 2, -420, 2, -421, -425, -196, 253,
	-424, 563, -422, 561, -257, 333, -510, 416, -506, -507,
	-236, -256, -271, 4, -479, -481, 565, -302, 563, 117,
	472, 77, 221, -357, 563, -227, 28, 332, 488, 568,
	-299, 375, -401, 563, 332, 180, 335, 59, -227, 525,
	2, 2, 439, 2, 563, -128, 70, 492, 43, 434,
	-376, 2, -377, -223, -224, -225, -432, -226, 239, 374,
	383, 542, 127, 317, 538, -466, -555, 180, 546, 488,
	-466, -328, 565, 2, 2, 2, 2, 2, 2, -425,
	206, -257, 2, -254, -469, 4, -479, -483, -480, -484,
	-482, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	56, 64, 65, 71, 75, 77, 86, 92, 101, 108,
	109, 111, 110, 112, 113, 114, 123, 127, 130, 134,
	135, 139, 142, 146, 162, 164, 177, 179, 180, 194,
	197, 200, 213, 226, 231, 233, 253, 257, 264, 271,
	272, 317, 322, 328, 332, 333, 337, 338, 357, 373,
	389, 406, 429, 436, 453, 467, 472, 482, 488, 490,
	497, 505, 506, 514, 516, 524, 529, 530, 531, 532,
	-485, 76, 2, -425, 206, 2, -259, 206, -425, -262,
	2, -241, -227, 2, -253, -469, 2, -276, 206, -257,
	-258, -262, -260, 2, -262, -266, 2, -227, -477, 206,
	2, -473, 10, -472, 5, 4, -479, -483, -480, 525,
	233, 488, 568, -318, -268, -269, -465, 8, -311, -227,
	565, -389, 2, -117, -102, 2, 177, -389, 206, 2,
	-117, 206, 2, -389, 206, 2, -117, 206, 2, -550,
	2, -477, 206, -227, 2, 283, 2, 2, 495, 2,
	97, 472, 116, 2, 400, -562, 418, 499, 2, 2,
	2, 2, 2, 2, 2, 472, -246, 2, -227, 177,
	-266, 206, -267, 2, -227, -228, 430, -571, 386, -477,
	206, 2, 525, -260, 2, -260, 221, 235, -241, 206,
	2, 477, 475, 477, 475, 180, 2, 233, 2, 233,
	2, -426, 2, -427, -421, -428, 561, 333, 283, 2,
	2, 2, 2, 2, 206, -227, 472, 116, 2, 251,
	2, 2, 2, 2, 2, 2, 2, -320, 206, 2,
	-257, 525, -320, 206, 2, -320, 206, 2, -363, 2,
	86, -241, 206, 2, -265, 206, 2, -260, -311, 206,
	2, -478, 206, 2, -477, -389, 2, -117, 2, -436,
	2, -435, -472, 521, -91, 563, -91, 563, 434, 563,
	-477, -257, -257, -389, 2, -117, -102, 2, -389, 2,
	-117, 2, -114, -113, -477, 563, 180, -389, 2, -117,
	-102, 2, -389, 2, -117, 2, -189, 177, 2, 117,
	472, -164, 2, 177, 516, 2, 8, 2, 213, -477,
	425, 382, 169, 2, 439, 2, 440, 73, -364, 538,
	73, 180, 2, 180, 2, -347, 2, 532, 2, 2,
	-536, 2, 332, 180, 2, 180, 2, 180, 2, 180,
	2, 180, 2, 379, 435, 493, 241, 2, -117, 529,
	-102, -389, 529, 2, -554, 177, 423, -389, 2, 491,
	250, 154, 180, -347, 2, 180, 2, 180, 2, 5,
	2, 380, 458, 2, 239, 374, 458, 2, -257, -565,
	2, 472, 525, 430, 2, 2, 87, 88, 180, 2,
	180, 2, 180, 538, 2, -339, -425, -375, -376, -375,
	488, -305, -307, -164, 439, 2, -201, -337, -203, 177,
	-366, -367, -204, 264, 164, 328, -205, -346, 28, 134,
	-346, -346, 59, 564, 564, 11, 12, 75, 41, 554,
	555, 556, 557, 175, 558, 559, 552, 553, 551, 544,
	545, 549, 245, 246, 94, 548, 546, 85, 277, 417,
	165, 166, 167, 168, 397, 219, 34, 220, 14, 15,
	16, 33, 337, 263, 539, 210, 443, 547, 17, 18,
	19, 236, 238, 319, 49, 213, -235, -278, -389, -389,
	-389, -389, -389, -389, -389, 344, 563, -333, -384, 561,
	-196, 563, 563, 563, -465, -196, -389, -403, 564, -325,
	563, -196, -403, -398, 563, 415, 561, 563, -406, -389,
	5, 5, 5, 563, 565, -517, 533, 177, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 370, -447, 563, -446, 563, -446, -446,
	526, -444, 563, 541, 534, 563, -444, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	526, 568, -514, -302, 563, -329, -430, -389, 556, -329,
	-329, 332, -322, -389, 105, -350, 242, 302, 181, 260,
	410, 227, -386, 567, -386, -414, 541, -196, -422, -256,
	-196, -424, 563, -420, -414, -92, -465, -76, -89, -97,
	-117, -130, -168, -169, 556, -257, 563, 180, 563, 565,
	-469, 180, -311, -241, -257, -270, -271, -276, 133, -322,
	-532, 500, 424, -311, -230, 38, -400, -439, -440, -488,
	567, -487, -442, -452, -448, -451, 360, 364, -471, 53,
	522, -454, 232, 4, -479, -481, 229, 230, 450, 50,
	384, 172, 122, 121, 325, 55, 484, 485, 486, 487,
	184, 185, 57, 523, 461, 68, 69, -532, 500, 424,
	-311, 177, -475, 2, -474, -473, 114, 436, -363, -468,
	-322, 38, -376, 2, 123, -473, -574, 568, 262, -280,
	276, 316, 202, 333, 536, 326, 127, -476, 5, 4,
	-399, -411, 123, 270, 232, -459, -461, 8, -460, 9,
	-462, 554, 555, -467, -466, 107, 565, -469, -212, 398,
	437, -211, 24, 29, 138, 223, 305, 519, 155, -290,
	224, 347, 351, 149, 454, 509, -543, -544, 421, 479,
	480, 89, 326, 437, 398, 149, -343, -345, 38, 115,
	305, 346, 60, 216, 281, 282, 456, 528, 149, 437,
	398, 347, -544, 98, 398, -544, -214, 454, 509, -543,
	-544, 421, 398, -213, -290, 149, 567, 24, 398, 437,
	347, -558, -559, 138, 29, 398, 347, -540, -511, 532,
	149, -425, 206, -551, -113, 254, 5, 10, -113, -318,
	568, 568, -469, 556, 423, 422, 149, 149, 149, 149,
	177, 317, 2, 2, 2, 2, 2, 182, -546, -563,
	2, 2, -257, 206, -304, 332, -535, -319, 472, -257,
	317, 43, -259, 206, 2, -262, 525, -540, 317, -261,
	206, -257, 38, 563, 2, -363, 2, 221, -511, 317,
	-426, -273, -257, -421, -273, 437, -250, 38, -386, -257,
	2, 149, 2, 2, 2, -227, -215, 568, 63, 404,
	149, -320, 206, -215, 149, -215, 149, -277, 206, -276,
	-215, 149, -215, 568, 149, -215, 149, 568, 149, 564,
	568, -436, -436, -477, -177, 532, 180, 101, 563, 563,
	-189, -433, 568, -432, -478, -114, -477, -477, -535, -241,
	2, -257, 2, 472, 243, -477, -177, 213, -477, -477,
	-477, -468, 28, 440, 2, 379, 435, 493, 88, 440,
	2, -257, 472, 117, 221, 79, -538, 177, -533, 411,
	424, 500, -532, -257, 117, -257, 117, -257, 117, -257,
	-257, 2, 2, 2, 2, 2, 84, 84, 2, 45,
	-554, 177, 2, 491, 2, 491, 2, -227, -227, -227,
	457, 262, -257, 177, 472, 221, 472, 221, 117, 472,
	-215, 568, -231, -201, -337, -468, -338, -337, -202, -201,
	-204, 177, 383, 510, 305, 441, 247, -367, -366, 28,
	-389, -371, 171, 304, -389, -369, -391, 554, 555, -460,
	-462, -321, 326, -195, -195, -195, -308, -416, -389, 373,
	221, -441, -439, -439, -255, -469, 484, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, 263, 210, 443, 49, 213, -389, 488, -389,
	-389, -389, -389, 299, 317, 322, 497, 162, 507, 134,
	326, -577, 467, 40, -396, -196, -326, 563, -410, 35,
	453, 28, -403, 563, 2, -384, -389, -385, -323, -322,
	-322, 564, 524, 28, 134, 556, 2, 564, 568, 38,
	564, -389, -323, -402, -398, -322, -409, -408, 529, -358,
	-359, 537, 286, 120, 204, 284, -360, 428, -463, 8,
	-469, 556, -518, 170, 197, 563, 564, 2, 564, 2,
	564, -389, 2, 564, -389, 2, 564, -389, 2, 564,
	-389, 2, 564, 2, -389, -389, -389, -389, -389, -389,
	-389, -322, 8, -463, -463, 484, 484, -463, -463, -463,
	-455, 360, 361, 362, 363, 265, 266, 267, 268, 364,
	365, 366, 367, 291, 292, 293, 294, 287, 288, 289,
	290, 295, 296, 297, 298, 189, 190, 191, 192, 185,
	186, 187, 188, -455, -352, 2, -457, -322, 4, 537,
	286, 120, 204, 284, 428, 5, -352, 2, -353, 2,
	-389, -322, -354, -390, -391, 554, 555, 547, -403, -355,
	2, -389, -323, -389, 56, 257, 490, -356, -389, 180,
	-322, -322, 2, -322, 2, -515, 38, -322, -314, 568,
	180, 38, 4, -314, -314, 563, 564, 568, -351, 201,
	280, 275, -351, -420, -350, 242, -348, 342, -348, -348,
	-414, -242, 561, 569, -469, -414, -413, -412, 38, -250,
	339, -414, -414, 565, 564, -413, 562, -530, 563, 566,
	566, 566, 566, 566, -257, 563, -322, -469, 565, 459,
	564, 236, 236, 236, 236, 416, 564, 488, -534, -265,
	-311, 532, -91, 334, 564, 568, -313, 37, 561, 565,
	-463, 2, 2, -458, 526, 563, 563, -359, 563, 180,
	-534, -311, -312, 568, 488, -261, -555, 564, 492, -377,
	-279, 383, 452, 399, 432, 469, 8, 9, 8, 9,
	568, -469, 568, -556, 92, 488, 77, 424, -380, 206,
	77, -489, -244, 92, -490, -227, 71, 506, 373, 179,
	147, -556, 92, 373, -556, 92, 2, 223, 92, 437,
	457, 488, 59, -425, 41, 41, 28, -117, 258, 180,
	538, 472, 221, 424, 488, -425, -345, -439, 115, 281,
	282, 59, -464, -459, 554, 555, -464, 59, -464, -464,
	-464, 532, -259, -425, 424, 488, 488, 488, 488, 568,
	41, 41, 28, -117, 258, 180, 488, -276, -242, 520,
	42, 520, 488, 42, 424, 488, 568, 42, 42, 488,
	488, -541, -232, 104, 311, 274, 312, 96, 308, 95,
	307, 102, 309, 103, 310, 527, 320, 62, 306, 285,
	313, -233, -234, 353, 518, -477, 437, 398, 149, 213,
	-433, 213, -433, -268, -227, 565, -117, -389, -389, -117,
	-389, -117, 45, 149, 2, -571, 251, 563, -283, 317,
	180, -311, -434, 233, 568, -319, 149, -474, -344, -343,
	317, -261, 206, 2, 149, -302, 317, 143, 563, 381,
	2, -243, 206, -228, -227, -363, -218, 476, 149, -341,
	516, -372, -117, 563, 123, 38, -372, -330, -331, -431,
	-332, -244, 563, -250, -386, -227, 2, -257, -320, -215,
	149, -320, -320, -215, 568, 149, -241, -260, -265, -311,
	-477, -478, -91, -435, 564, 564, 564, -176, 336, -175,
	-227, 5, -189, 516, -282, -381, -380, -493, -494, -489,
	263, 221, 506, 235, 163, -303, -245, -244, 116, -183,
	532, -113, 564, -433, 213, -177, -177, -433, -433, -257,
	177, -477, -177, -177, -177, 2, 2, 2, -347, -257,
	-241, -276, -257, -311, -311, -311, -265, -347, -241, -347,
	-241, -347, -241, -117, -389, 2, 434, 177, 177, 565,
	-347, 381, 117, 472, 351, 221, -257, -276, -257, -276,
	-241, -257, -425, -338, -202, 333, 247, 441, -369, -370,
	-391, 415, 416, -370, 415, 416, 8, 9, 8, 9,
	-206, 445, 321, -320, 568, -209, 39, 130, 247, -257,
	538, 145, -389, -389, 488, -577, 467, -396, 145, -389,
	299, 322, 497, 162, 507, 134, 326, 180, 563, -390,
	-390, 564, -324, -389, -389, 562, 571, 564, -307, 568,
	-305, -389, -322, -322, 564, 565, -322, -311, 562, 562,
	568, 564, -407, -408, 139, -389, 488, 488, 488, 488,
	563, 564, 565, -523, 343, 563, 563, -389, 564, 564,
	564, 564, 38, 568, 568, 568, 564, 568, 568, 568,
	564, 564, 564, 568, 564, 538, 538, 564, 564, 564,
	564, 568, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 564, 568, 564, 180,
	564, 564, -361, 357, 564, 11, 12, 554, 555, 556,
	557, 175, 558, 559, 552, 553, 551, 544, 545, 546,
	85, 277, 417, 14, 15, 16, 236, 213, -390, -390,
	-390, 564, -394, -395, 180, 177, 38, -356, -356, -356,
	564, 180, -322, 564, 564, 563, -516, 279, 317, 564,
	-383, -382, 530, -430, -315, 2, -420, -252, -469, -383,
	-383, -322, -389, 242, 242, -349, 516, 332, -351, -420,
	-413, -465, -388, -387, 178, 39, 130, 314, 209, -413,
	-250, -302, -413, -413, -469, -414, -414, -412, 564, -531,
	-465, 564, -316, -423, -510, -307, 565, -469, -186, -511,
	-165, 5, 322, -165, -165, -165, -311, 488, 488, 25,
	358, -439, 561, 562, 8, -469, 563, -463, -463, -463,
	-311, 180, 180, 180, -474, -474, -342, 532, -466, -376,
	504, 82, 383, 484, -466, -211, 398, -244, -244, -257,
	-266, 317, -380, 206, -217, 317, -439, -251, -227, 563,
	563, 247, 247, 516, -244, -251, 247, 206, -244, 206,
	-251, 2, -251, -542, 383, 327, -389, -474, 269, 381,
	318, -212, 398, 437, -117, -117, -117, 563, -555, 516,
	133, -257, -276, -257, -266, -261, 437, 398, 315, -270,
	-464, -464, -343, 437, 398, -266, -259, -474, 424, -241,
	-213, -117, -117, -117, 563, -242, -214, 398, 5, 206,
	-244, 5, -227, -244, -266, -474, -559, 24, -244, 206,
	-244, -266, -474, -232, -477, 322, 512, -540, 424, 488,
	-425, -113, -180, 532, -113, -174, 217, 556, -537, -227,
	525, -227, -281, -284, -282, -244, -192, -193, 534, 532,
	149, -274, -257, 561, -177, -477, -257, -266, -267, 149,
	-302, 317, -477, 38, 149, 563, 2, 2, 332, 317,
	-243, 206, -219, 140, -575, 546, -241, -383, -315, -340,
	-374, 406, 332, -303, 521, -250, -340, -317, 568, 180,
	546, 565, -303, -429, 556, 2, -215, -320, -215, -215,
	-276, -277, -215, -215, -215, -91, -91, -177, 568, 563,
	546, 546, 563, -477, -477, 564, 568, -257, -243, 221,
	221, -249, -228, 564, 568, 565, 563, -185, 336, -184,
	141, 249, 234, 446, 447, 448, 449, 132, -183, -114,
	180, -52, 532, 472, -177, 567, -347, -347, -347, 434,
	434, -227, -253, -241, -257, -254, -276, 177, 177, 510,
	-370, 333, 273, -416, -210, 540, -257, 567, -389, -389,
	145, 145, -389, -390, -390, -389, 145, 180, 563, -389,
	-400, 33, 33, 564, 568, -385, -389, 564, 524, -307,
	-307, 564, 556, -469, 567, 564, -398, 142, -389, 482,
	286, 204, 284, -360, 284, -360, -360, -463, 5, -469,
	556, -524, -247, 563, -227, 530, -306, 338, 564, -441,
	-439, -389, -389, -389, -389, -389, -463, -444, -444, -459,
	-459, -389, -394, -389, -441, -439, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, 134, 317, 326, -390, -395,
	-394, -389, -389, -439, 564, 564, 564, -322, -91, 563,
	279, -334, 197, -389, -433, 568, -334, -334, 564, -420,
	-420, 563, -389, 242, 562, 568, 570, 546, -302, 565,
	-412, -413, 562, 564, 568, 564, 568, -373, 38, 564,
	-469, -383, -188, -187, 131, 52, -311, -311, 335, 5,
	8, 561, 562, 565, -463, 564, 564, 564, -311, -311,
	-311, 116, 305, -389, 488, 488, 149, 317, 518, -495,
	-490, 147, -389, -309, -417, -510, 563, -227, 563, 563,
	2, -208, 138, 437, -557, 2, 516, 149, -215, 149,
	-215, 536, 563, 563, 488, 424, 532, -322, -389, -178,
	123, -468, -544, 567, -544, 567, 424, 488, 424, 488,
	532, 532, -322, 488, -443, 47, 26, 317, -260, 488,
	488, -215, 149, 500, 437, -477, 322, -266, -261, 437,
	398, -433, -182, 336, -181, 141, 408, 132, 249, -433,
	-180, 180, 233, -261, 2, 564, 564, 568, -496, 38,
	330, 330, 563, -257, -72, 532, -432, -465, 43, -259,
	38, 149, -540, -117, -261, -437, -438, 5, -257, 149,
	332, 317, -220, 256, -575, -473, -511, -307, -340, -329,
	318, 90, 564, -383, -331, -315, -389, 2, 564, -215,
	-215, -175, -176, -477, -477, -477, -177, -189, -189, -381,
	-285, 563, -243, -228, 563, -189, -245, 2, -478, 568,
	563, 546, 546, 546, -433, -117, 336, -257, 556, -347,
	-292, -291, 351, 326, -292, 415, 415, 333, 171, 252,
	-209, -242, -389, -389, 145, 33, 33, -389, -389, -400,
	564, -389, -389, -322, 562, 5, -389, 564, 564, 8,
	-389, 564, 565, -525, -227, -389, 564, 59, 564, 564,
	568, 568, 564, 564, 564, 564, 564, 564, 564, -395,
	180, 134, 326, 563, 564, 564, -91, -397, 200, 59,
	-420, -397, -397, -349, -311, -420, -387, -242, 561, -469,
	-465, -423, 563, 565, -187, 546, 562, 2, 561, -469,
	564, 116, -244, -244, -380, 149, -497, 92, -499, 75,
	163, 101, 317, 322, 506, 373, 71, 123, 389, -567,
	38, 543, 564, 564, 568, -418, -238, -227, -389, -418,
	-309, -311, 317, 464, 123, 317, 123, 116, 500, 78,
	-244, -251, -311, -311, -257, -266, 156, 564, 568, 546,
	2, 556, 556, -266, -261, -266, -259, 349, 156, 564,
	-242, 5, 5, 149, -239, 75, 5, -244, -244, -260,
	116, 424, 488, -180, 568, 563, 546, 546, -180, -478,
	-113, -302, -293, 223, -244, -494, -491, -492, 373, -498,
	-500, 163, 373, -117, 2, -191, -190, -227, 5, 563,
	-283, 336, 562, -474, -344, -117, -261, -302, 564, 568,
	-365, 516, -242, -257, 149, -221, 255, -575, -473, -218,
	-368, -366, 135, 563, 332, -117, -307, 546, 564, 564,
	116, 116, 215, 148, -309, 563, 563, -311, 116, 564,
	-184, -185, -477, -113, -477, -183, -53, -54, 221, 92,
	356, -254, 472, 221, 563, 563, -209, -389, -389, -389,
	564, -307, -469, 556, -519, 351, 564, -416, -389, -389,
	-390, 180, 563, -400, 564, -520, 531, -389, -335, -336,
	-389, 414, 106, 198, -520, -520, 564, -465, 2, -477,
	561, 2, -380, -251, -255, -248, -227, 163, 206, 322,
	247, 563, -390, -257, 563, 2, 30, -568, 127, 226,
	-379, -569, 100, 465, 214, -417, -209, 564, 564, 564,
	322, 322, -389, -439, 563, -215, -215, 564, 564, -389,
	488, -468, 99, -466, 2, -544, -241, -389, 488, 5,
	-215, -255, -215, -215, -239, 500, -266, -261, -181, -182,
	-477, -113, -180, 38, -288, 225, 2, -496, 247, -248,
	247, -566, 532, 564, 568, 546, 546, -281, -192, -73,
	-74, 489, -432, -302, 38, 5, 563, -227, 332, 563,
	-242, -222, 91, -575, -473, -219, -340, 318, -311, 92,
	-368, -396, -177, 563, 563, -286, 80, 93, 124, 205,
	183, 222, 457, 462, 28, -286, 564, -309, -309, 564,
	563, -177, 564, 568, 28, 563, 28, 563, -257, -276,
	-322, -322, 564, -307, 59, 568, 564, 564, -390, -400,
	564, -521, -522, -247, 568, 563, 563, 438, 562, 2,
	-499, -248, 317, 516, -389, -229, 563, -389, 38, 226,
	128, 211, -288, 563, -210, -418, -378, 516, 389, -239,
	-309, 563, 563, 563, 546, 180, 563, -443, -215, -260,
	564, -549, 387, -117, -289, -290, 213, 563, -287, 332,
	116, 305, -190, -466, -466, 564, 38, -74, 9, 38,
	-117, -309, -257, -309, 332, 264, -473, -220, 564, -251,
	-340, -478, -478, -378, 564, 564, -478, -54, -311, -311,
	564, 564, -526, 381, 416, 199, -322, -308, 564, 568,
	38, -336, 2, 2, 2, 149, 201, 564, -501, 278,
	-227, 564, 128, 211, -289, -311, -288, 201, -257, -545,
	516, 564, -295, -294, -291, -297, -296, -291, -322, -466,
	99, 349, -322, -239, -552, 181, -551, 5, 10, -192,
	349, -310, -419, -244, 81, 116, -293, -117, -117, 564,
	-365, 564, -257, -575, -221, -383, 564, 564, -379, -378,
	-193, 532, 564, 564, 564, 564, -527, -528, 49, 503,
	107, -389, -527, -527, -522, -524, 163, 532, -502, -505,
	-504, 332, 444, 181, 350, 564, 464, 528, -568, 564,
	532, -302, -389, -378, 564, 568, 521, 564, 568, 521,
	564, 180, 564, -215, -179, 532, 45, -287, -257, 564,
	568, 372, 129, 138, -288, -566, -378, 563, -379, 563,
	-459, -222, 135, -177, -177, -288, -379, -383, -177, -529,
	147, -528, 369, 176, 415, 369, 176, -529, -529, -248,
	54, -504, 332, -505, 332, 510, 129, -383, 54, -501,
	-288, -294, 213, -296, 180, 349, 422, -551, 30, 563,
	-419, 416, 416, 2, -289, -287, -379, -309, -288, -309,
	318, 510, -289, -288, 107, 197, 483, 305, 33, 546,
	-503, 305, 404, 63, 437, -503, 546, -502, 563, 563,
	336, -311, 2, -192, -288, 564, -289, 564, 437, -193,
	-289, 415, 340, -528, -389, 23, 322, 123, -389, -568,
	-322, -322, -176, 563, 564, -287, -289, -378, -193, -379,
	-330, -383, -193, 564, 564, -176, -216, 63, 404, -193,
	-379, -383, -288, -383, -383, -289, 488, 564, -383, -288,
	-289, 563, -289, -193, -322, -193, -383, 564, -383, -289,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 489, 490, 492, 493, 494, 496, 497,
	499, 501, 503, 504, 505, 507, 508, 510, 511, 512,
	513, 514, 516, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 582,
	0, 1217, 1219, 1221, 1223, 0, 720, 0, 34, 35,
	0, -2, 287, 289, 291, 0, 317, 319, 320, 322,
	324, 326, -2, 0, 424, 425, 427, 429, -2, -2,
	0, 891, 893, 0, 569, 571, 0, 896, 898, 0,
	0, 591, 592, 0, 1310, -2, 585, 587, 589, 654,
	656, 658, 660, 662, 664, 666, 668, 670, 671, 673,
	675, 677, 679, 681, 683, 685, 687, 688, 690, 692,
	694, 696, 698, 700, 702, 704, 706, 708, 710, 712,
	714, -2, 716, -2, -2, 0, -2, -2, -2, 1235,
	38, 40, 42, 44, 46, 48, 50, 52, 54, 375,
	376, 378, 380, 382, 384, 387, 389, 391, 1368, 431,
	433, 435, 437, 439, 441, 443, 0, -2, 1382, 0,
	0, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	85, 86, 87, 88, 89, 90, 91, 92, 68, 69,
	71, 72, 73, 77, 78, 79, 80, 83, 66, 0,
	0, 1341, 1343, 1345, 1347, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 491,
	495, 498, 500, 502, 506, 509, 515, 517, 519, 476,
	477, 480, 2038, 2055, 2056, 2057, 2060, 2061, 2062, 2063,
	2064, 2065, 2487, 2568, 2569, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 478, 479, 1055, 0, 543,
	541, 2030, 544, 2299, 546, 548, 418, 419, 420, 421,
	422, 423, 0, 562, 554, 1380, 563, 565, 566, 567,
	568, 538, 536, 0, 562, 2091, 560, 1215, 1216, 0,
	1200, 1201, 2339, 1242, 0, 199, 581, -2, -2, -2,
	2452, -2, 613, -2, 620, 2456, 2341, 625, 0, 627,
	-2, 630, 1218, 1220, 1222, 718, 719, 2041, 0, 0,
	0, 0, 0, 36, 37, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 1105, 1106, 0,
	207, 209, -2, -2, -2, -2, 0, 0, 2381, 2140,
	1998, 2057, 2001, 1996, 288, 290, 292, 293, 0, 0,
	0, 0, 0, 0, 318, 321, 323, 325, -2, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 950, 942, 943, 1161, 0, 0, 0, -2, 426,
	428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	354, 481, 482, 0, 1369, 1369, 0, 0, 0, 0,
	262, 253, 892, 894, 895, 0, 0, 0, 0, 570,
	572, 0, 0, 235, 897, 899, 900, 0, 0, 0,
	0, 0, 264, 0, 0, 586, 588, 590, 655, 657,
	659, 661, 663, 665, 667, 669, 672, 674, 676, 678,
	680, 682, 684, 686, 689, 691, 693, 695, 697, 699,
	701, 703, 705, 707, 709, 711, 713, 715, 726, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 810, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	729, 731, 732, 733, 0, 790, 808, 809, 818, 717,
	0, 1095, 1370, 1244, 1225, 1239, 1244, 1227, 1228, 1229,
	1230, 1231, 1236, 1238, 1232, 1233, 1234, 39, 41, 43,
	45, 47, 49, 51, 53, 55, 377, 379, 381, 383,
	385, 388, 390, 392, -2, 1339, 1340, 432, 434, 436,
	438, 440, 442, 444, 573, 0, 575, 0, 730, -2,
	0, 1374, 1374, 1374, 0, 0, 1340, 1338, 0, 578,
	579, 634, 635, 1641, 0, 0, 0, 0, 0, 0,
	0, 1895, 1727, 0, 636, -2, 1758, 1760, 2427, 2452,
	1894, 1762, 1763, 1764, 1765, 1766, 0, 1768, 1769, 1770,
	1771, 1772, 1773, 0, 1775, 0, 1780, 1781, 1782, 0,
	2434, 1975, 2051, -2, 0, 0, 2440, 2047, 0, 1861,
	1798, -2, -2, 2074, 2053, 1573, 1574, 1575, 1576, 1577,
	-2, -2, 2470, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 0, 2415, 2435, 2436, 2441, 2443,
	2437, 2424, 1823, 2152, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1600, 1609, -2,
	-2, -2, -2, -2, -2, -2, 2428, 2429, 2446, 2449,
	2455, 2460, 2461, 2433, 2442, 2469, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 1601, -2, -2, -2, -2, 1357, 2312, 1360,
	1055, 1358, 1342, 1344, 0, 1346, 0, 0, 0, 1351,
	1377, 1375, 0, 1426, 1355, 1356, 1444, 1444, 1468, 0,
	1449, 0, 1468, 1369, 1494, 0, 1455, 2331, 1799, 1800,
	0, 2057, 2052, -2, -2, 2467, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 545, 547, 0, 0, 0,
	561, 1379, 0, 0, 0, 0, 0, 0, 1241, 1160,
	583, 584, 0, 608, 0, 612, 2423, -2, 0, 2350,
	-2, 616, 1245, 1249, 1250, 1251, 1252, 1253, 0, 0,
	0, 0, 1258, 0, 0, 622, 0, 0, 609, 610,
	628, 631, 0, 721, 722, 723, 724, 725, 65, 0,
	2435, 1494, 67, 0, 2020, 2082, 2083, 2084, 2085, 2086,
	2468, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2470, 70, 0, 2435, 74, 0, 2435, 0, -2,
	81, 0, 2026, 84, 0, 2023, 93, 0, 2435, 0,
	1995, -2, 0, 182, 2034, 0, 919, 2036, -2, 2435,
	1103, 265, 266, 2070, 2071, 2078, 2079, 2080, 2081, 0,
	0, 0, 0, 882, 1992, 1997, 883, 2016, 884, 2002,
	0, 294, 295, 296, 297, 298, 0, 299, 2435, 301,
	302, 0, 304, 305, 2435, 307, 308, 0, 310, 0,
	220, 221, 2435, 329, 330, 0, 332, 333, 0, 335,
	0, 0, 0, 339, -2, 355, 0, 352, 342, 343,
	345, 346, 347, 348, 349, 0, 396, 394, 2031, 0,
	912, 2435, 0, 916, -2, 2037, 0, 0, 1140, -2,
	2435, 1100, 0, 1146, 1142, 0, -2, 0, 1367, 2435,
	1262, 946, 947, 948, 949, 1506, 415, 0, 1277, 0,
	1279, 0, 1298, 1500, 1444, 0, 0, 1505, 0, 357,
	358, 359, 360, 361, 2435, 0, 0, 0, 366, 0,
	368, 369, 370, 371, 372, 373, 374, 171, 2435, 449,
	474, 0, 171, 2435, 452, 171, 2435, 455, 0, 458,
	1159, 171, 2435, 461, 171, 2435, 464, 466, 171, 2435,
	470, 471, 2435, 473, 267, 1211, 1212, 1213, 1214, 0,
	-2, 532, 2040, -2, 484, 0, 485, 0, -2, 0,
	279, 0, 0, 901, 902, 903, 904, 905, 908, 909,
	910, 911, 1481, 238, 236, 0, 0, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 0, 0, 593, 0,
	0, 727, 728, 0, 0, 738, 739, 740, 0, 279,
	2342, 2308, 2172, 747, 0, 750, 753, -2, 0, 0,
	0, 0, 757, 0, 762, 763, 764, 0, 766, 768,
	890, 770, 0, 0, 772, 0, 776, 0, 779, 0,
	781, 0, 783, -2, -2, -2, -2, 794, -2, 0,
	797, 799, 0, 801, -2, 0, 810, 806, 807, 0,
	0, 0, 0, 826, 827, 0, 836, 0, 839, 840,
	841, 0, 843, 844, 0, 846, 847, 848, 849, 0,
	851, 852, -2, -2, 856, 858, 0, 865, 0, 869,
	0, 873, 0, 734, 735, 171, 1498, 1224, -2, 1226,
	0, -2, 0, 574, 0, 577, 1399, 1325, 1322, 0,
	1396, 1397, 1326, 0, 0, 0, 1333, 0, 1372, 1373,
	0, 0, 0, 1312, 1313, 0, 0, 0, 0, 1900,
	1901, 1902, 1903, 1904, 1905, 1908, 1909, 1906, 1907, 1910,
	1911, 0, 0, 0, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1913, 1914,
	1915, 0, 0, 1917, 0, 1919, 0, 0, 0, 0,
	0, 0, 1706, 1708, 1983, 0, 0, 1916, 1646, 1647,
	1648, 1649, 1650, 1685, 1686, 0, 0, 1759, 1980, 1979,
	1761, 0, 1931, 0, 1774, -2, 0, 1895, 1926, 0,
	0, 1783, 1784, 1785, 0, 0, 1931, 0, 0, 1974,
	1795, 1796, 1638, 0, 0, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1587, 1586, 0, 1588, 0, 1589, 1590,
	1597, 1610, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 1955, -2, 0, 0, 0, 0,
	1602, 0, 1359, 0, 0, 1430, 1984, 1988, 1989, 1430,
	1430, 0, 0, 1932, 1491, 1491, 0, 0, 1487, 1487,
	1487, 1485, 1468, 0, 1468, 1478, 0, 1468, 1468, 0,
	-2, 1449, 0, 0, 1478, 0, 1462, 520, 522, 524,
	526, 527, 528, 530, 1495, 1496, 0, 0, 0, 0,
	2058, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 2391, 2341, 550, 564, 1369, 0, 1934, 1521, 1525,
	0, 1527, 1528, 1529, 1530, 1531, 0, 0, 1522, -2,
	1598, 1600, 1621, 2075, 2076, 2077, 1581, 1582, 1583, 1584,
	1585, 1593, 1580, 1580, 1580, 1591, 1620, 1612, 1620, 1616,
	1566, 1567, 1568, 1603, 1604, 1605, 1606, 0, 2391, 2341,
	556, 0, 0, 1309, 186, 188, 189, 190, 0, 0,
	0, 0, -2, 618, 623, 624, 0, 1247, 0, 1254,
	645, 646, 647, 1256, 1257, 0, 1259, 621, 648, 649,
	650, 651, 652, 653, 0, 2004, 2005, 2006, 2007, 2010,
	2011, 0, 0, 619, 638, 626, 0, 632, 94, 1197,
	0, 133, 0, 1197, 1197, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 118, 129, 106,
	107, 0, 0, 0, 0, 0, 75, 1077, 0, 1080,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 0, 117, 0, 0, 112, 96, 0, 0, 0,
	119, 131, 0, 162, 164, 0, 0, 0, 0, 0,
	0, 181, 191, 0, 0, 0, 0, 1101, 0, 1366,
	0, 0, 2435, 0, 1481, 2217, -2, -2, 1481, 881,
	0, 0, 2058, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 334, 336, 337, 338, 0, 1139, 0,
	344, 386, 1026, 2435, 0, 0, 413, 408, 0, 410,
	0, 0, 1076, 2435, 1074, 2035, 0, 1098, 0, 1055,
	2435, 2033, 0, 0, 1147, 2067, 1156, 1160, 1264, 0,
	417, 0, 1280, 1282, 0, 0, 1501, 0, 1503, 1444,
	356, 0, 363, 364, 365, 0, 445, 0, 169, 170,
	0, 171, 2435, 450, 0, 453, 0, 171, 2435, 1990,
	459, 0, 462, 0, 0, 468, 0, 0, 0, 1369,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 242, 0, 1480, 0, 1481, 236, 279, 279, 1481,
	595, 1481, 597, 0, 0, 741, 742, 0, 279, 279,
	279, 748, 749, 751, 752, -2, -2, -2, 866, 754,
	755, 833, 0, 0, 0, 832, 769, 0, 875, 2327,
	2341, 2391, 888, 833, 2140, 833, 2140, 833, 2140, 780,
	782, 785, 821, 829, 793, 798, 0, 0, 803, 811,
	-2, 0, 813, 0, 815, 0, 817, 833, 834, 837,
	842, 845, 850, 0, 0, 0, 0, 0, 0, 0,
	1094, 0, 1237, 1399, 1325, 576, 1316, 1398, 1317, 1324,
	1327, 0, 0, 1329, 0, 1331, 0, 1394, 1395, 1402,
	1403, 0, 1413, 1414, 1406, 0, -2, 0, 0, 1409,
	1410, 1335, 0, 1352, 1353, 1354, 1383, 1386, 1175, 0,
	2568, 1642, 1516, 1643, 1644, 2019, 0, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, -2, -2, -2,
	-2, -2, -2, -2, -2, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, -2, -2, -2, 1683,
	1684, -2, 1918, 1920, 0, 1983, 0, -2, 0, -2,
	-2, -2, -2, 1703, 0, 1705, 1710, 1712, 1714, 0,
	0, 0, 0, 1982, 1724, 1966, 1967, 0, 0, 1897,
	1898, 1899, 1709, 0, 1728, 1981, 1978, 0, 0, 1930,
	1382, 1787, 0, 0, 0, 0, 1794, 1779, 1928, 0,
	1927, 0, 0, 0, 1938, 0, 1973, 1969, 0, 2017,
	1637, 1624, 1625, 1626, 1627, 1628, 1629, 1639, 0, 2014,
	2044, 2050, 1871, 0, 0, 0, 1824, 1825, 1826, 1827,
	1828, 0, 1830, 1831, 0, 1833, 1834, 0, 1836, 1837,
	0, 1839, 1840, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 1538, 0, 0, 0, 1542,
	0, 0, 0, 1546, 0, 0, 0, 1550, 0, 0,
	0, 1554, 0, 0, 0, 1558, 0, 0, 0, 1562,
	0, 0, 0, 0, 0, 1843, 0, 1941, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1845, 0, 1847,
	1932, 1952, 0, 0, 1729, 0, 0, 0, 1895, 0,
	1850, 1932, 1960, 0, 0, 0, 0, 0, 1932, 0,
	1965, 0, 1857, 0, 1859, 1361, 0, 0, 1511, 0,
	0, 0, 1987, 1511, 1511, 0, 1425, 0, 0, 1488,
	1489, 1490, 0, 0, 1491, 0, 1482, 1486, 1483, 1484,
	1478, 1441, 0, 0, 2021, 1478, 1447, 1477, 0, 1055,
	1467, 1478, 1478, 0, -2, 1451, 1468, 0, 0, 521,
	523, 525, 529, 531, 0, 0, 1382, -2, 0, -2,
	1054, 0, 0, 0, 0, 540, 542, 0, 0, 465,
	0, 0, 534, 0, 537, 0, 1512, 1515, 0, 0,
	1526, 1532, 1533, 0, -2, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 611, 0, 1246,
	1255, 0, 642, 0, 644, 0, 2008, 2012, 2009, 2013,
	0, 633, 0, 0, 0, 0, 1196, 0, 137, 2435,
	0, 173, 0, 0, 1019, 2027, 0, 0, 0, 0,
	2159, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 1079, 1081, 1088,
	1090, 0, 1084, 2015, 0, 0, 1085, 0, 1087, 1089,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 109, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 1133, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 0, 0, -2, 0, 0, 0, 0,
	212, 0, 270, 1993, 2003, 0, 906, 907, 300, 303,
	306, 309, 208, 0, 340, 0, 0, 952, 927, 0,
	0, 395, 279, 0, 0, 409, 2067, 914, 1072, 1075,
	0, 1055, 2435, 1112, 0, 0, 0, 0, 0, 0,
	1145, 0, 2435, 2022, 2066, 2067, 1266, 1274, 0, 1511,
	0, 1296, 1283, 0, 0, 0, 1296, 1300, 1301, 1303,
	1304, 0, 0, 1502, 1508, 0, 367, 475, 171, 447,
	0, 171, 171, 456, 0, 0, 171, 467, 171, 171,
	268, 472, 483, 533, 1369, 1369, 279, 277, 2276, 275,
	272, 274, 0, 0, 0, 953, 955, 956, 957, 958,
	0, 2067, 0, 2206, 2067, 0, 1286, 1288, 0, 232,
	0, 239, 237, 242, 0, 0, 407, 594, 599, 736,
	0, 279, 744, 745, 746, 787, 823, 831, 756, 758,
	759, 760, 0, 889, 885, 886, 887, 771, 833, 774,
	833, 777, 833, 796, 800, 805, 812, 0, 0, 0,
	825, 0, 0, 0, 0, 0, 0, 0, 870, 871,
	872, 874, 1499, 1320, 1321, 1323, 0, 1332, 0, 0,
	1408, -2, -2, 1407, 1411, 1412, -2, -2, -2, -2,
	1328, 0, 1337, 1334, 0, 1393, 1173, 1174, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1725, 0, -2,
	1704, 1707, 1711, 1713, 1715, 0, 0, 0, 0, 0,
	0, 1921, 0, 1923, 1726, 1976, 1979, 1893, 0, 0,
	1381, 1382, 1382, 0, 1793, 0, 1929, 0, 1936, 1937,
	0, 1786, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1829, 1832,
	1835, 1838, 0, 0, 0, 0, 1818, 0, 0, 0,
	1822, 1592, 1578, 0, 1620, 1618, 1619, 1613, 1620, 1617,
	1570, 0, 1535, 1536, 1537, 1539, 1540, 1541, 1543, 1544,
	1545, 1547, 1548, 1549, 1551, 1552, 1553, 1555, 1556, 1557,
	1559, 1560, 1561, 1563, 1564, 1565, 1569, 0, 1842, 0,
	1844, 1846, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 1733,
	1734, 1849, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1855, 0, 1964, 1856, 1858, 1369, 0, 1362, 0, 1427,
	1416, 1510, 0, 1985, 1481, 1429, 1431, 1986, 2024, 1416,
	1416, 0, 1933, 0, 0, 1472, 0, 0, 0, 1474,
	1445, 0, 0, 1439, 0, 1435, 1436, 1437, 1438, 1446,
	1055, 1476, 1448, 1452, 2044, 0, 1478, 0, 1463, 0,
	1465, 1497, 0, 1457, 1460, 0, 0, 2059, 1511, 0,
	311, 315, 316, 312, 313, 314, 549, 0, 0, 0,
	0, 1935, 0, 1517, 0, 1523, 0, 0, 0, 0,
	555, 0, 0, 0, 187, 1308, 198, 0, 607, -2,
	640, 641, 643, 0, 639, 134, 1197, 0, 0, 1178,
	1180, 0, 139, 2435, 148, 0, 993, 0, 2025, 0,
	0, 0, 0, 0, 1199, 0, 0, 2435, 171, 2435,
	171, 151, 153, 156, 0, 161, 158, 159, 0, 0,
	984, 95, 1197, 0, 98, 102, 110, 0, 0, 0,
	116, 0, 0, 0, 1182, 1188, 0, 0, 1082, 1083,
	1086, 1092, 76, 0, 0, 1186, 1192, 82, 0, 1177,
	163, 100, 104, 111, 0, 1194, 97, 0, 185, 0,
	0, 0, 177, 0, 178, 179, 192, 0, 171, 2435,
	0, 917, 918, 1134, 1096, 1097, 0, 1102, 0, 0,
	0, 1481, 204, 0, 1481, 212, 0, 1999, 0, 328,
	0, 0, 0, 0, 951, 1037, 0, 922, 0, 0,
	0, 401, 397, 0, 406, 412, 411, 913, 0, 0,
	0, 0, -2, 0, 0, 1149, 1143, 1144, 0, 0,
	0, 2435, 1268, 1274, 0, 1273, 1367, 1382, 416, 1275,
	1296, 0, 0, 0, 1285, 1281, 1278, 1511, 0, 0,
	0, 0, 0, 1504, 1507, 362, 446, 171, 451, 454,
	1991, 171, 460, 463, 469, 486, 487, 254, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 962, 0, 2067,
	2067, 0, 2029, 0, 0, 0, 0, 240, 0, 243,
	0, 0, 0, 248, 249, 250, 251, 252, 233, 1481,
	0, 596, 0, 0, 743, 0, 773, 775, 778, 814,
	816, 833, 859, 860, 979, 0, 979, 0, 0, 1330,
	0, 1405, 1336, 1387, 1388, 0, 1175, 0, 1645, 1688,
	0, 0, -2, 0, 0, 1692, 0, 0, 0, -2,
	0, 0, 0, 1922, 1924, 0, 1978, 1788, 0, 0,
	0, 1792, 1776, 1777, 0, 1896, 1939, 1968, 1972, 0,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 0, 2018, 2045,
	2049, 1869, 1870, 1874, 2032, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 1615, 0,
	0, 1940, 1951, 1953, 1730, 1731, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, -2, -2, -2, 1748,
	1749, 1750, -2, -2, -2, 0, 0, 0, 1954, 1956,
	1957, 1961, 1962, 0, 1852, 1853, 1854, 1963, 0, 1369,
	1363, 1424, 0, 1509, 1428, 0, 1424, 1424, 1376, 1470,
	0, 0, 1493, 0, 1442, 0, 1443, 0, 1475, 0,
	1450, 1453, 1454, 1464, 0, 1456, 0, 1459, 0, 1788,
	-2, 280, 281, 283, 0, 286, 552, 553, 551, 535,
	0, 0, 1519, 0, 0, 1595, 1599, 1623, 558, 559,
	557, 200, 0, 1479, 0, 0, 0, 0, 172, 991,
	1018, 0, 0, 0, 1163, 1170, 0, -2, 0, 0,
	1024, 141, 0, 0, 0, 149, 0, 0, 146, 0,
	155, 160, 0, 0, 0, 0, 0, 0, 113, 114,
	115, 0, 120, 0, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 1172, 0,
	0, 194, 0, 0, 0, 1137, 1138, 1183, 1189, 0,
	0, 212, 210, 0, 213, 0, 216, 217, 0, 212,
	206, 0, 0, 1055, 341, 925, 1025, 0, 1027, 0,
	923, 0, 0, 1026, 393, 0, 400, 0, 0, 1076,
	0, 0, 1099, 1110, 1055, 0, 1148, 1150, 1158, 0,
	0, 0, 1270, 1274, 0, 1263, 1264, 1401, 1276, 1294,
	-2, 0, 0, 1382, 1302, 1299, 1305, 1306, 0, 448,
	457, 276, 0, 271, 273, 0, 257, 0, 0, 954,
	959, 0, 0, 0, 0, 0, 1287, 1289, 0, 0,
	0, 0, 0, 0, 242, 263, 0, 737, 761, 824,
	861, 978, 0, 0, 863, 0, 0, 1404, 1391, 1392,
	1389, 1175, 1690, 1694, 0, 0, 0, 1696, -2, 0,
	1718, -2, -2, 1925, 1977, 1767, 1382, 1789, 1791, 1778,
	1971, 1640, 0, 1876, 1873, 0, 1860, 0, 1813, 1814,
	0, 0, 1817, 1819, 1820, 1821, 1579, 1572, 1571, 1950,
	0, 0, 0, 0, 1851, 1364, 0, 1865, 0, 0,
	1432, 1865, 1865, 1471, 0, 1473, 1440, 1433, 0, 2045,
	1466, 1458, 0, 0, 284, 0, 1513, 1518, 0, 1524,
	1594, 201, 135, 136, 138, 0, 992, 0, 995, 0,
	0, 0, 0, 1002, 1003, 0, 0, 0, 0, 0,
	1012, 0, 1041, 1051, 0, 1165, 1175, 1169, 0, 1167,
	0, 0, 0, 143, 166, 0, 0, 1198, 0, 0,
	171, 171, 0, 0, 1179, 1181, 0, 0, 0, 0,
	123, 0, 0, 1184, 1190, 1187, 1193, 0, 0, 0,
	1195, 183, 184, 0, 171, 0, 176, 171, 171, 1172,
	0, 0, 0, 203, 0, 0, 0, 0, 205, 269,
	212, 0, 973, 0, 1037, 1029, 1030, 1031, 0, 1036,
	1038, 0, 0, 939, 924, 0, 935, 0, 0, 952,
	927, 0, 398, 915, 1073, 1107, 1055, 0, 1141, 0,
	0, 0, 0, 0, 0, 1272, 1274, 0, 1265, 1266,
	1296, 1400, 0, 0, 0, 1284, 1401, 0, 278, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	244, 0, 245, 246, 247, 234, 598, 600, 0, 0,
	606, 977, 0, 0, 0, 0, 1390, 1698, -2, -2,
	1719, 0, 2046, 2048, 1382, 0, 1862, 1384, 0, 0,
	-2, 0, 0, 0, 1365, 1348, 0, 1423, 1415, 1417,
	1419, 2330, 2136, 2434, 1349, 1350, 1492, 0, 1461, 285,
	0, 1520, 140, 0, 996, 997, 2028, 999, 0, 1001,
	1004, 0, 1007, 2069, 0, 1011, 0, 1020, 1042, 0,
	973, 0, 1047, 1048, 1049, 1164, 1393, 1170, 1053, 0,
	142, 144, 165, 1172, 0, 145, 154, 0, 0, 99,
	0, 0, 2131, 126, 124, 122, 1176, 101, 0, 185,
	193, 1171, 180, 195, 171, 0, 1185, 1191, 214, 0,
	215, 218, 0, 0, 981, 0, 926, 1028, 0, 1039,
	1040, 929, 0, 928, 0, 0, 0, 0, 0, 399,
	402, 0, 405, 0, 0, 1151, 0, 1157, 0, 0,
	0, 1260, 0, 0, 1267, 1268, 414, 1290, 0, 0,
	1296, 1307, 256, 0, 0, 960, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 961, 1053, 0, 0, 1017,
	0, 261, 241, 0, 602, 0, 604, 0, 862, 864,
	0, 0, 1790, 1880, 0, 0, 1815, 1816, -2, 0,
	1756, 1864, 1866, 0, 0, 0, 0, 0, 1434, 1514,
	994, 998, 0, 0, 0, 1059, 0, 0, 1013, 0,
	1045, 1046, 981, 0, 1168, 1166, 973, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 175, 196, 1172,
	211, 228, 0, 1108, 927, 980, 0, 0, 937, 0,
	940, 0, 936, 933, 934, 925, 0, 403, 404, 0,
	1111, 0, 1158, 0, 0, 1274, 1269, 1270, 1511, 1293,
	1297, 0, 0, 1051, 1053, 927, 0, 601, 0, 0,
	867, 868, 0, 0, 0, 0, 1875, 1385, 1757, 0,
	0, 1418, 1420, 1421, 1422, 0, 0, 1006, 1064, 0,
	0, 0, 1043, 1044, 1041, 0, 1022, 0, 1055, 147,
	0, 1053, 0, 985, 0, 0, 988, 0, 0, 127,
	2131, 125, 0, 171, 231, 0, 225, 223, 224, 929,
	0, 0, 1033, 1035, 0, 941, 973, 939, 1109, 1053,
	0, 1051, 0, 0, 1272, 0, 279, 279, 973, 1051,
	1511, 0, 279, 603, 605, 1872, 1892, 1881, -2, 2394,
	2137, 0, 1892, 1892, 1867, 1868, 0, 0, 1008, 1060,
	1061, 0, 1056, 1057, 1058, 2068, 1009, 1010, 1511, 1050,
	0, 1059, 167, 973, 982, 0, 0, 983, 0, 0,
	130, 0, 132, 197, 219, 0, 0, 920, 0, 1032,
	0, 0, 0, 0, 981, 929, 1051, 0, 973, 0,
	1271, 1261, 0, 258, 259, 981, 973, 1016, 260, 1877,
	0, 0, 1883, 1884, 1885, 1886, 1887, 1878, 1879, 1000,
	0, 1062, 0, 1063, 0, 0, 0, 1021, 0, 1064,
	152, 986, 0, 989, 0, 128, 0, 226, 227, 0,
	1034, 930, 0, 932, 927, 938, 973, 0, 981, 0,
	1291, 0, 927, 981, 0, 1889, 1890, 0, 0, 0,
	1065, 0, 1068, 1069, 0, 1066, 0, 1041, 0, 0,
	0, 0, 931, 929, 981, 1053, 927, 1051, 0, 1511,
	927, 1888, 1891, 1882, 1005, 1067, 1070, 1071, 1052, 1023,
	0, 0, 229, 0, 976, 921, 927, 1051, 1511, 973,
	1511, 1014, 1511, 981, 0, 0, 972, 974, 975, 1511,
	973, 1154, 981, 1292, 1015, 987, 0, 230, 1152, 981,
	927, 0, 927, 1511, 0, 1511, 1155, 981, 1153, 990,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 552, 3, 558, 553, 3,
	563, 564, 556, 554, 568, 555, 565, 557, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 571, 3,
	544, 546, 545, 549, 567, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 561, 3, 562, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 569, 551, 570, 547,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 548, 57887, 550, 57888, 560, 57889, 566,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1241
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1260
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1267
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1285
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1287
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1370
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1383
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1400
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1404
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1408
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1426
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1430
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: tree.Name(sqlDollar[6].str)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1451
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1491
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1507
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1516
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1527
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1531
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1545
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1555
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1559
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1569
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1587
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1599
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1606
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1614
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1628
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1634
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1642
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1663
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1673
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1682
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1693
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1699
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1725
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1730
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1812
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1850
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1853
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1859
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1911
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: tree.Name(sqlDollar[3].str),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = nil
		}
	case 169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2072
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2076
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2079
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2139
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2147
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2202
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2222
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2230
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2278
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2368
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = nil
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2483
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2607
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2616
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2622
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2632
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2642
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2749
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2799
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2800
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2801
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2901
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2913
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2932
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2954
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			return helpWith(sqllex, "CREATE")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplemented(sqllex, "create access method")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "create cast")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "create operator")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "create publication")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplemented(sqllex, "create rule")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplemented(sqllex, "create server")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2993
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2996
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2997
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3000
		{
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3001
		{
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3009
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3012
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3013
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3015
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return unimplemented(sqllex, "drop server")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3035
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3103
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3114
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3142
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3177
		{

			sqlVAL.union.val = nil
		}
	case 414:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "DELETE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3205
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3230
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3231
		{
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3232
		{
			return helpWith(sqllex, "DROP")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3240
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.nameList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.nameList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3431
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3454
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3496
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3520
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3528
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "DELETE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "INSERT")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "DELETE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "INSERT")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3578
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3605
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3638
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "GRANT")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "RESET")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "RESET")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "USE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3856
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3857
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3858
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "USE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3978
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4063
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4075
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4080
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			return unimplemented(sqllex, "set from current")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4099
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = tree.Low
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = tree.Normal
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = tree.High
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4281
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4286
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.str = "client_encoding"
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.str = "timezone"
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4341
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4404
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4413
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4530
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4555
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = true
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = true
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = false
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4661
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4732
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = true
		}
	case 819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = false
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = true
		}
	case 833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = false
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4852
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4873
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4899
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4942
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4950
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4987
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5010
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5166
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "RESUME")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: tree.Name(sqlDollar[3].str),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   tree.Name(sqlDollar[3].str),
				AuthRole: sqlDollar[5].str,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5450
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5465
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5483
		{

			sqlVAL.union.val = nil
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.str = ""
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5499
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = nil
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5510
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5521
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5526
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5531
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 937:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5558
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5572
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5587
		{
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5588
		{
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5678
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5679
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5685
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5701
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5706
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.str = ""
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 990:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5895
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5920
		{
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6019
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6057
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6137
		{
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6139
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6142
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6298
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6331
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6356
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = true
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{

			sqlVAL.union.val = true
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = false
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6434
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6448
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6460
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6472
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6482
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6492
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = nil
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6602
		{
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6621
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6623
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6625
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6627
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6629
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6667
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6685
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6704
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6721
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6738
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = false
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = true
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = false
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = true
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = false
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6802
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6808
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6816
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.str = ""
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.str = ""
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6875
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6881
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6951
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6957
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6969
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6975
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6989
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6995
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7013
		{
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7016
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7017
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7084
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7105
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7154
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7204
		{
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7245
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.str = ""
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.str = ""
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.str = ""
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7376
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7390
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7450
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7499
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7526
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7530
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7568
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7600
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7620
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7747
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7764
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7799
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7800
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7862
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7906
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = true
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = false
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7976
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = nil
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7989
		{
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7990
		{
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = true
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = false
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = false
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = true
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8019
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8020
		{
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8023
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8024
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8065
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8086
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8091
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8153
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8208
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8281
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8296
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8318
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8370
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8409
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8419
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8454
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8465
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8495
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8528
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = nil
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = true
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = false
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.str = tree.AstFull
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.str = tree.AstRight
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.str = tree.AstInner
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8648
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.str = tree.AstHash
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.str = ""
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8710
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8715
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8733
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8745
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8755
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = true
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = false
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = true
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = false
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8804
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8817
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8825
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8826
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8844
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8846
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8854
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8874
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8956
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8960
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8961
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8962
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8964
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = types.Geography
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8985
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8993
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9027
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = nil
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = types.Int2
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = types.Int
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = types.Float4
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = types.Float
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = types.Bool
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = types.Float
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9119
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9125
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9147
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = types.String
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = true
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = false
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = types.Date
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9204
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9218
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9235
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9252
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = true
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = false
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = false
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = types.Interval
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9276
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9360
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = nil
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9405
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9717
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9783
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9999
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10004
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10030
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10039
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10054
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10084
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10095
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10096
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10120
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10186
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10352
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10372
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10382
		{
			return unimplemented(sqllex, "treat")
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.str = ""
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10557
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10625
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10654
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.Any
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = tree.Some
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = tree.All
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = tree.Div
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.LT
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = tree.GT
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = tree.LE
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.GE
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = tree.NE
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = tree.Like
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11015
		{
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11016
		{
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11096
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11169
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11194
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11234
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11414
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11427
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11434
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.str = ""
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
