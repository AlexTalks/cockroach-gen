// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14525

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1721,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 451,
	-2, 0,
	-1, 71,
	8, 900,
	29, 900,
	621, 900,
	622, 900,
	-2, 0,
	-1, 72,
	8, 900,
	29, 900,
	621, 900,
	622, 900,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 92,
	242, 1454,
	256, 1454,
	272, 447,
	410, 447,
	422, 1201,
	463, 447,
	477, 1201,
	527, 1201,
	555, 447,
	582, 1201,
	-2, 0,
	-1, 98,
	137, 1721,
	249, 1721,
	566, 1721,
	567, 1721,
	-2, 0,
	-1, 116,
	156, 1692,
	176, 1692,
	189, 1692,
	252, 1692,
	285, 1692,
	359, 1692,
	370, 1692,
	561, 1692,
	-2, 1663,
	-1, 158,
	164, 1032,
	271, 1032,
	413, 993,
	482, 993,
	526, 993,
	546, 1032,
	548, 993,
	-2, 0,
	-1, 163,
	4, 1723,
	21, 1723,
	22, 1723,
	23, 1723,
	24, 1723,
	25, 1723,
	26, 1723,
	27, 1723,
	28, 1723,
	30, 1723,
	31, 1723,
	37, 1723,
	41, 1723,
	43, 1723,
	44, 1723,
	46, 1723,
	47, 1723,
	48, 1723,
	49, 1723,
	50, 1723,
	51, 1723,
	52, 1723,
	53, 1723,
	54, 1723,
	56, 1723,
	57, 1723,
	58, 1723,
	59, 1723,
	61, 1723,
	62, 1723,
	63, 1723,
	64, 1723,
	65, 1723,
	66, 1723,
	67, 1723,
	71, 1723,
	72, 1723,
	73, 1723,
	74, 1723,
	76, 1723,
	77, 1723,
	78, 1723,
	82, 1723,
	83, 1723,
	84, 1723,
	85, 1723,
	86, 1723,
	87, 1723,
	88, 1723,
	89, 1723,
	92, 1723,
	93, 1723,
	94, 1723,
	95, 1723,
	96, 1723,
	98, 1723,
	100, 1723,
	101, 1723,
	102, 1723,
	103, 1723,
	104, 1723,
	105, 1723,
	107, 1723,
	108, 1723,
	109, 1723,
	111, 1723,
	112, 1723,
	113, 1723,
	121, 1723,
	122, 1723,
	123, 1723,
	124, 1723,
	125, 1723,
	127, 1723,
	128, 1723,
	129, 1723,
	130, 1723,
	132, 1723,
	133, 1723,
	134, 1723,
	136, 1723,
	137, 1723,
	138, 1723,
	140, 1723,
	141, 1723,
	142, 1723,
	145, 1723,
	146, 1723,
	147, 1723,
	149, 1723,
	150, 1723,
	151, 1723,
	153, 1723,
	154, 1723,
	155, 1723,
	157, 1723,
	158, 1723,
	159, 1723,
	160, 1723,
	161, 1723,
	162, 1723,
	163, 1723,
	164, 1723,
	165, 1723,
	166, 1723,
	167, 1723,
	168, 1723,
	169, 1723,
	170, 1723,
	171, 1723,
	172, 1723,
	173, 1723,
	175, 1723,
	181, 1723,
	182, 1723,
	183, 1723,
	184, 1723,
	188, 1723,
	190, 1723,
	191, 1723,
	192, 1723,
	194, 1723,
	195, 1723,
	198, 1723,
	199, 1723,
	200, 1723,
	201, 1723,
	202, 1723,
	203, 1723,
	204, 1723,
	205, 1723,
	206, 1723,
	207, 1723,
	208, 1723,
	209, 1723,
	210, 1723,
	211, 1723,
	213, 1723,
	214, 1723,
	216, 1723,
	217, 1723,
	219, 1723,
	220, 1723,
	221, 1723,
	222, 1723,
	223, 1723,
	224, 1723,
	225, 1723,
	226, 1723,
	227, 1723,
	228, 1723,
	229, 1723,
	231, 1723,
	232, 1723,
	234, 1723,
	235, 1723,
	236, 1723,
	237, 1723,
	238, 1723,
	242, 1723,
	243, 1723,
	244, 1723,
	245, 1723,
	248, 1723,
	249, 1723,
	250, 1723,
	251, 1723,
	253, 1723,
	255, 1723,
	256, 1723,
	258, 1723,
	260, 1723,
	261, 1723,
	262, 1723,
	264, 1723,
	268, 1723,
	269, 1723,
	270, 1723,
	271, 1723,
	272, 1723,
	273, 1723,
	275, 1723,
	276, 1723,
	277, 1723,
	279, 1723,
	280, 1723,
	282, 1723,
	283, 1723,
	286, 1723,
	287, 1723,
	288, 1723,
	289, 1723,
	290, 1723,
	291, 1723,
	292, 1723,
	295, 1723,
	296, 1723,
	297, 1723,
	298, 1723,
	300, 1723,
	301, 1723,
	302, 1723,
	303, 1723,
	304, 1723,
	305, 1723,
	306, 1723,
	307, 1723,
	308, 1723,
	309, 1723,
	310, 1723,
	311, 1723,
	312, 1723,
	313, 1723,
	314, 1723,
	315, 1723,
	316, 1723,
	317, 1723,
	318, 1723,
	319, 1723,
	320, 1723,
	321, 1723,
	322, 1723,
	324, 1723,
	326, 1723,
	327, 1723,
	328, 1723,
	329, 1723,
	330, 1723,
	331, 1723,
	332, 1723,
	333, 1723,
	334, 1723,
	335, 1723,
	336, 1723,
	337, 1723,
	338, 1723,
	339, 1723,
	340, 1723,
	341, 1723,
	342, 1723,
	344, 1723,
	345, 1723,
	347, 1723,
	349, 1723,
	350, 1723,
	351, 1723,
	352, 1723,
	354, 1723,
	355, 1723,
	356, 1723,
	357, 1723,
	358, 1723,
	361, 1723,
	363, 1723,
	365, 1723,
	366, 1723,
	367, 1723,
	368, 1723,
	371, 1723,
	372, 1723,
	373, 1723,
	375, 1723,
	377, 1723,
	378, 1723,
	379, 1723,
	380, 1723,
	381, 1723,
	382, 1723,
	383, 1723,
	384, 1723,
	385, 1723,
	386, 1723,
	387, 1723,
	388, 1723,
	389, 1723,
	391, 1723,
	392, 1723,
	393, 1723,
	394, 1723,
	395, 1723,
	396, 1723,
	397, 1723,
	398, 1723,
	399, 1723,
	400, 1723,
	401, 1723,
	402, 1723,
	403, 1723,
	404, 1723,
	405, 1723,
	407, 1723,
	408, 1723,
	409, 1723,
	411, 1723,
	412, 1723,
	413, 1723,
	414, 1723,
	415, 1723,
	416, 1723,
	417, 1723,
	418, 1723,
	419, 1723,
	420, 1723,
	421, 1723,
	422, 1723,
	423, 1723,
	424, 1723,
	426, 1723,
	428, 1723,
	429, 1723,
	430, 1723,
	436, 1723,
	437, 1723,
	438, 1723,
	440, 1723,
	441, 1723,
	442, 1723,
	443, 1723,
	444, 1723,
	445, 1723,
	446, 1723,
	447, 1723,
	448, 1723,
	449, 1723,
	451, 1723,
	452, 1723,
	453, 1723,
	455, 1723,
	456, 1723,
	457, 1723,
	458, 1723,
	459, 1723,
	460, 1723,
	461, 1723,
	463, 1723,
	464, 1723,
	465, 1723,
	466, 1723,
	467, 1723,
	468, 1723,
	469, 1723,
	470, 1723,
	471, 1723,
	472, 1723,
	473, 1723,
	474, 1723,
	475, 1723,
	477, 1723,
	478, 1723,
	479, 1723,
	480, 1723,
	481, 1723,
	482, 1723,
	484, 1723,
	485, 1723,
	486, 1723,
	487, 1723,
	488, 1723,
	489, 1723,
	491, 1723,
	492, 1723,
	493, 1723,
	494, 1723,
	495, 1723,
	496, 1723,
	497, 1723,
	498, 1723,
	500, 1723,
	502, 1723,
	503, 1723,
	504, 1723,
	505, 1723,
	506, 1723,
	507, 1723,
	508, 1723,
	509, 1723,
	510, 1723,
	511, 1723,
	512, 1723,
	513, 1723,
	514, 1723,
	515, 1723,
	516, 1723,
	517, 1723,
	518, 1723,
	519, 1723,
	520, 1723,
	522, 1723,
	523, 1723,
	525, 1723,
	526, 1723,
	528, 1723,
	529, 1723,
	530, 1723,
	531, 1723,
	532, 1723,
	533, 1723,
	535, 1723,
	536, 1723,
	538, 1723,
	539, 1723,
	540, 1723,
	541, 1723,
	542, 1723,
	544, 1723,
	546, 1723,
	547, 1723,
	548, 1723,
	549, 1723,
	550, 1723,
	551, 1723,
	552, 1723,
	554, 1723,
	555, 1723,
	556, 1723,
	557, 1723,
	559, 1723,
	560, 1723,
	563, 1723,
	564, 1723,
	565, 1723,
	566, 1723,
	567, 1723,
	568, 1723,
	569, 1723,
	570, 1723,
	572, 1723,
	575, 1723,
	576, 1723,
	577, 1723,
	578, 1723,
	579, 1723,
	580, 1723,
	582, 1723,
	583, 1723,
	584, 1723,
	585, 1723,
	586, 1723,
	587, 1723,
	588, 1723,
	589, 1723,
	594, 1723,
	595, 1723,
	596, 1723,
	597, 1723,
	598, 1723,
	599, 1723,
	-2, 0,
	-1, 164,
	1, 1571,
	135, 1571,
	260, 1571,
	346, 1571,
	408, 1571,
	418, 1571,
	603, 1571,
	634, 1571,
	-2, 0,
	-1, 166,
	1, 1571,
	634, 1571,
	-2, 0,
	-1, 167,
	1, 1571,
	634, 1571,
	-2, 0,
	-1, 168,
	1, 1571,
	543, 1571,
	634, 1571,
	-2, 0,
	-1, 200,
	156, 1691,
	176, 1691,
	189, 1691,
	252, 1691,
	285, 1691,
	359, 1691,
	370, 1691,
	561, 1691,
	-2, 1666,
	-1, 251,
	4, 1730,
	5, 1730,
	6, 1730,
	7, 1730,
	8, 1730,
	9, 1730,
	10, 1730,
	21, 1730,
	22, 1730,
	23, 1730,
	24, 1730,
	25, 1730,
	26, 1730,
	27, 1730,
	28, 1730,
	30, 1730,
	31, 1730,
	37, 1730,
	38, 1730,
	41, 1730,
	43, 1730,
	44, 1730,
	45, 1730,
	46, 1730,
	47, 1730,
	48, 1730,
	49, 1730,
	50, 1730,
	51, 1730,
	52, 1730,
	53, 1730,
	54, 1730,
	56, 1730,
	57, 1730,
	58, 1730,
	59, 1730,
	61, 1730,
	62, 1730,
	63, 1730,
	64, 1730,
	65, 1730,
	66, 1730,
	67, 1730,
	68, 1730,
	69, 1730,
	70, 1730,
	71, 1730,
	72, 1730,
	73, 1730,
	74, 1730,
	76, 1730,
	77, 1730,
	78, 1730,
	80, 1730,
	82, 1730,
	83, 1730,
	84, 1730,
	85, 1730,
	86, 1730,
	87, 1730,
	88, 1730,
	89, 1730,
	92, 1730,
	93, 1730,
	94, 1730,
	95, 1730,
	96, 1730,
	98, 1730,
	100, 1730,
	101, 1730,
	102, 1730,
	103, 1730,
	104, 1730,
	105, 1730,
	107, 1730,
	108, 1730,
	109, 1730,
	110, 1730,
	111, 1730,
	112, 1730,
	113, 1730,
	114, 1730,
	115, 1730,
	116, 1730,
	117, 1730,
	118, 1730,
	119, 1730,
	120, 1730,
	121, 1730,
	122, 1730,
	123, 1730,
	124, 1730,
	125, 1730,
	126, 1730,
	127, 1730,
	128, 1730,
	129, 1730,
	130, 1730,
	131, 1730,
	132, 1730,
	133, 1730,
	134, 1730,
	136, 1730,
	137, 1730,
	138, 1730,
	140, 1730,
	141, 1730,
	142, 1730,
	145, 1730,
	146, 1730,
	147, 1730,
	149, 1730,
	150, 1730,
	151, 1730,
	153, 1730,
	154, 1730,
	155, 1730,
	157, 1730,
	158, 1730,
	159, 1730,
	160, 1730,
	161, 1730,
	162, 1730,
	163, 1730,
	164, 1730,
	165, 1730,
	166, 1730,
	167, 1730,
	168, 1730,
	169, 1730,
	170, 1730,
	171, 1730,
	172, 1730,
	173, 1730,
	174, 1730,
	175, 1730,
	181, 1730,
	182, 1730,
	183, 1730,
	184, 1730,
	188, 1730,
	190, 1730,
	191, 1730,
	192, 1730,
	194, 1730,
	195, 1730,
	197, 1730,
	198, 1730,
	199, 1730,
	200, 1730,
	201, 1730,
	202, 1730,
	203, 1730,
	204, 1730,
	205, 1730,
	206, 1730,
	207, 1730,
	208, 1730,
	209, 1730,
	210, 1730,
	211, 1730,
	213, 1730,
	214, 1730,
	216, 1730,
	217, 1730,
	219, 1730,
	220, 1730,
	221, 1730,
	222, 1730,
	223, 1730,
	224, 1730,
	225, 1730,
	226, 1730,
	227, 1730,
	228, 1730,
	229, 1730,
	230, 1730,
	231, 1730,
	232, 1730,
	234, 1730,
	235, 1730,
	236, 1730,
	237, 1730,
	238, 1730,
	242, 1730,
	243, 1730,
	244, 1730,
	245, 1730,
	247, 1730,
	248, 1730,
	249, 1730,
	250, 1730,
	251, 1730,
	253, 1730,
	255, 1730,
	256, 1730,
	257, 1730,
	258, 1730,
	259, 1730,
	260, 1730,
	261, 1730,
	262, 1730,
	263, 1730,
	264, 1730,
	268, 1730,
	269, 1730,
	270, 1730,
	271, 1730,
	272, 1730,
	273, 1730,
	275, 1730,
	276, 1730,
	277, 1730,
	279, 1730,
	280, 1730,
	281, 1730,
	282, 1730,
	283, 1730,
	284, 1730,
	286, 1730,
	287, 1730,
	288, 1730,
	289, 1730,
	290, 1730,
	291, 1730,
	292, 1730,
	293, 1730,
	294, 1730,
	295, 1730,
	296, 1730,
	297, 1730,
	298, 1730,
	300, 1730,
	301, 1730,
	302, 1730,
	303, 1730,
	304, 1730,
	305, 1730,
	306, 1730,
	307, 1730,
	308, 1730,
	309, 1730,
	310, 1730,
	311, 1730,
	312, 1730,
	313, 1730,
	314, 1730,
	315, 1730,
	316, 1730,
	317, 1730,
	318, 1730,
	319, 1730,
	320, 1730,
	321, 1730,
	322, 1730,
	324, 1730,
	325, 1730,
	326, 1730,
	327, 1730,
	328, 1730,
	329, 1730,
	330, 1730,
	331, 1730,
	332, 1730,
	333, 1730,
	334, 1730,
	335, 1730,
	336, 1730,
	337, 1730,
	338, 1730,
	339, 1730,
	340, 1730,
	341, 1730,
	342, 1730,
	343, 1730,
	344, 1730,
	345, 1730,
	346, 1730,
	347, 1730,
	348, 1730,
	349, 1730,
	350, 1730,
	351, 1730,
	352, 1730,
	353, 1730,
	354, 1730,
	355, 1730,
	356, 1730,
	357, 1730,
	358, 1730,
	361, 1730,
	363, 1730,
	366, 1730,
	367, 1730,
	368, 1730,
	371, 1730,
	372, 1730,
	373, 1730,
	374, 1730,
	375, 1730,
	376, 1730,
	377, 1730,
	378, 1730,
	379, 1730,
	380, 1730,
	381, 1730,
	382, 1730,
	383, 1730,
	384, 1730,
	385, 1730,
	386, 1730,
	387, 1730,
	388, 1730,
	389, 1730,
	391, 1730,
	392, 1730,
	393, 1730,
	394, 1730,
	395, 1730,
	396, 1730,
	397, 1730,
	398, 1730,
	399, 1730,
	400, 1730,
	401, 1730,
	402, 1730,
	403, 1730,
	404, 1730,
	405, 1730,
	407, 1730,
	408, 1730,
	409, 1730,
	411, 1730,
	412, 1730,
	413, 1730,
	414, 1730,
	415, 1730,
	416, 1730,
	417, 1730,
	418, 1730,
	419, 1730,
	420, 1730,
	421, 1730,
	422, 1730,
	423, 1730,
	424, 1730,
	426, 1730,
	428, 1730,
	429, 1730,
	430, 1730,
	436, 1730,
	437, 1730,
	438, 1730,
	440, 1730,
	441, 1730,
	442, 1730,
	443, 1730,
	444, 1730,
	445, 1730,
	446, 1730,
	447, 1730,
	448, 1730,
	449, 1730,
	451, 1730,
	452, 1730,
	453, 1730,
	454, 1730,
	455, 1730,
	456, 1730,
	457, 1730,
	458, 1730,
	459, 1730,
	460, 1730,
	461, 1730,
	463, 1730,
	464, 1730,
	465, 1730,
	466, 1730,
	467, 1730,
	468, 1730,
	469, 1730,
	470, 1730,
	471, 1730,
	472, 1730,
	473, 1730,
	474, 1730,
	475, 1730,
	477, 1730,
	478, 1730,
	479, 1730,
	480, 1730,
	481, 1730,
	482, 1730,
	483, 1730,
	484, 1730,
	485, 1730,
	486, 1730,
	487, 1730,
	488, 1730,
	489, 1730,
	490, 1730,
	491, 1730,
	492, 1730,
	493, 1730,
	494, 1730,
	495, 1730,
	496, 1730,
	497, 1730,
	498, 1730,
	500, 1730,
	502, 1730,
	503, 1730,
	504, 1730,
	505, 1730,
	506, 1730,
	507, 1730,
	508, 1730,
	509, 1730,
	510, 1730,
	511, 1730,
	512, 1730,
	513, 1730,
	514, 1730,
	515, 1730,
	516, 1730,
	517, 1730,
	518, 1730,
	519, 1730,
	520, 1730,
	522, 1730,
	523, 1730,
	524, 1730,
	525, 1730,
	526, 1730,
	528, 1730,
	529, 1730,
	530, 1730,
	531, 1730,
	532, 1730,
	533, 1730,
	535, 1730,
	536, 1730,
	538, 1730,
	539, 1730,
	540, 1730,
	541, 1730,
	542, 1730,
	544, 1730,
	546, 1730,
	547, 1730,
	548, 1730,
	549, 1730,
	550, 1730,
	551, 1730,
	552, 1730,
	553, 1730,
	554, 1730,
	555, 1730,
	556, 1730,
	557, 1730,
	559, 1730,
	560, 1730,
	562, 1730,
	563, 1730,
	564, 1730,
	565, 1730,
	566, 1730,
	567, 1730,
	568, 1730,
	569, 1730,
	570, 1730,
	571, 1730,
	572, 1730,
	575, 1730,
	576, 1730,
	577, 1730,
	578, 1730,
	579, 1730,
	580, 1730,
	582, 1730,
	583, 1730,
	584, 1730,
	585, 1730,
	586, 1730,
	587, 1730,
	588, 1730,
	589, 1730,
	594, 1730,
	595, 1730,
	596, 1730,
	597, 1730,
	598, 1730,
	599, 1730,
	600, 1730,
	614, 1730,
	621, 1730,
	622, 1730,
	623, 1730,
	631, 1730,
	635, 1730,
	-2, 0,
	-1, 796,
	4, 1452,
	21, 1452,
	22, 1452,
	23, 1452,
	24, 1452,
	25, 1452,
	26, 1452,
	27, 1452,
	28, 1452,
	30, 1452,
	31, 1452,
	37, 1452,
	41, 1452,
	43, 1452,
	44, 1452,
	46, 1452,
	47, 1452,
	48, 1452,
	49, 1452,
	50, 1452,
	51, 1452,
	52, 1452,
	53, 1452,
	54, 1452,
	56, 1452,
	57, 1452,
	58, 1452,
	59, 1452,
	61, 1452,
	62, 1452,
	63, 1452,
	64, 1452,
	65, 1452,
	66, 1452,
	67, 1452,
	71, 1452,
	72, 1452,
	73, 1452,
	74, 1452,
	76, 1452,
	77, 1452,
	78, 1452,
	82, 1452,
	83, 1452,
	84, 1452,
	85, 1452,
	86, 1452,
	87, 1452,
	88, 1452,
	89, 1452,
	92, 1452,
	93, 1452,
	94, 1452,
	95, 1452,
	96, 1452,
	98, 1452,
	100, 1452,
	101, 1452,
	102, 1452,
	103, 1452,
	104, 1452,
	105, 1452,
	107, 1452,
	108, 1452,
	109, 1452,
	111, 1452,
	112, 1452,
	113, 1452,
	121, 1452,
	122, 1452,
	123, 1452,
	124, 1452,
	125, 1452,
	127, 1452,
	128, 1452,
	129, 1452,
	130, 1452,
	132, 1452,
	133, 1452,
	134, 1452,
	136, 1452,
	137, 1452,
	138, 1452,
	140, 1452,
	141, 1452,
	142, 1452,
	145, 1452,
	146, 1452,
	147, 1452,
	149, 1452,
	150, 1452,
	151, 1452,
	153, 1452,
	154, 1452,
	155, 1452,
	157, 1452,
	158, 1452,
	159, 1452,
	160, 1452,
	161, 1452,
	162, 1452,
	163, 1452,
	164, 1452,
	165, 1452,
	166, 1452,
	167, 1452,
	168, 1452,
	169, 1452,
	170, 1452,
	171, 1452,
	172, 1452,
	173, 1452,
	175, 1452,
	181, 1452,
	182, 1452,
	183, 1452,
	184, 1452,
	188, 1452,
	190, 1452,
	191, 1452,
	192, 1452,
	194, 1452,
	195, 1452,
	198, 1452,
	199, 1452,
	200, 1452,
	201, 1452,
	202, 1452,
	203, 1452,
	204, 1452,
	205, 1452,
	206, 1452,
	207, 1452,
	208, 1452,
	209, 1452,
	210, 1452,
	211, 1452,
	213, 1452,
	214, 1452,
	216, 1452,
	217, 1452,
	219, 1452,
	220, 1452,
	221, 1452,
	222, 1452,
	223, 1452,
	224, 1452,
	225, 1452,
	226, 1452,
	227, 1452,
	228, 1452,
	229, 1452,
	231, 1452,
	232, 1452,
	234, 1452,
	235, 1452,
	236, 1452,
	237, 1452,
	238, 1452,
	242, 1452,
	243, 1452,
	244, 1452,
	245, 1452,
	248, 1452,
	249, 1452,
	250, 1452,
	251, 1452,
	253, 1452,
	255, 1452,
	256, 1452,
	258, 1452,
	260, 1452,
	261, 1452,
	262, 1452,
	264, 1452,
	268, 1452,
	269, 1452,
	270, 1452,
	271, 1452,
	272, 1452,
	273, 1452,
	275, 1452,
	276, 1452,
	277, 1452,
	279, 1452,
	280, 1452,
	282, 1452,
	283, 1452,
	286, 1452,
	287, 1452,
	288, 1452,
	289, 1452,
	290, 1452,
	291, 1452,
	292, 1452,
	295, 1452,
	296, 1452,
	297, 1452,
	298, 1452,
	300, 1452,
	301, 1452,
	302, 1452,
	303, 1452,
	304, 1452,
	305, 1452,
	306, 1452,
	307, 1452,
	308, 1452,
	309, 1452,
	310, 1452,
	311, 1452,
	312, 1452,
	313, 1452,
	314, 1452,
	315, 1452,
	316, 1452,
	317, 1452,
	318, 1452,
	319, 1452,
	320, 1452,
	321, 1452,
	322, 1452,
	324, 1452,
	326, 1452,
	327, 1452,
	328, 1452,
	329, 1452,
	330, 1452,
	331, 1452,
	332, 1452,
	333, 1452,
	334, 1452,
	335, 1452,
	336, 1452,
	337, 1452,
	338, 1452,
	339, 1452,
	340, 1452,
	341, 1452,
	342, 1452,
	344, 1452,
	345, 1452,
	347, 1452,
	349, 1452,
	350, 1452,
	351, 1452,
	352, 1452,
	354, 1452,
	355, 1452,
	356, 1452,
	357, 1452,
	358, 1452,
	361, 1452,
	363, 1452,
	366, 1452,
	367, 1452,
	368, 1452,
	371, 1452,
	372, 1452,
	373, 1452,
	375, 1452,
	377, 1452,
	378, 1452,
	379, 1452,
	380, 1452,
	381, 1452,
	382, 1452,
	383, 1452,
	384, 1452,
	385, 1452,
	386, 1452,
	387, 1452,
	388, 1452,
	389, 1452,
	391, 1452,
	392, 1452,
	393, 1452,
	394, 1452,
	395, 1452,
	396, 1452,
	397, 1452,
	398, 1452,
	399, 1452,
	400, 1452,
	401, 1452,
	402, 1452,
	403, 1452,
	404, 1452,
	405, 1452,
	407, 1452,
	408, 1452,
	409, 1452,
	411, 1452,
	412, 1452,
	413, 1452,
	414, 1452,
	415, 1452,
	416, 1452,
	417, 1452,
	418, 1452,
	419, 1452,
	420, 1452,
	421, 1452,
	422, 1452,
	423, 1452,
	424, 1452,
	426, 1452,
	428, 1452,
	429, 1452,
	430, 1452,
	436, 1452,
	437, 1452,
	438, 1452,
	440, 1452,
	441, 1452,
	442, 1452,
	443, 1452,
	444, 1452,
	445, 1452,
	446, 1452,
	447, 1452,
	448, 1452,
	449, 1452,
	451, 1452,
	452, 1452,
	453, 1452,
	455, 1452,
	456, 1452,
	457, 1452,
	458, 1452,
	459, 1452,
	460, 1452,
	461, 1452,
	463, 1452,
	464, 1452,
	465, 1452,
	466, 1452,
	467, 1452,
	468, 1452,
	469, 1452,
	470, 1452,
	471, 1452,
	472, 1452,
	473, 1452,
	474, 1452,
	475, 1452,
	477, 1452,
	478, 1452,
	479, 1452,
	480, 1452,
	481, 1452,
	482, 1452,
	484, 1452,
	485, 1452,
	486, 1452,
	487, 1452,
	488, 1452,
	489, 1452,
	491, 1452,
	492, 1452,
	493, 1452,
	494, 1452,
	495, 1452,
	496, 1452,
	497, 1452,
	498, 1452,
	500, 1452,
	502, 1452,
	503, 1452,
	504, 1452,
	505, 1452,
	506, 1452,
	507, 1452,
	508, 1452,
	509, 1452,
	510, 1452,
	511, 1452,
	512, 1452,
	513, 1452,
	514, 1452,
	515, 1452,
	516, 1452,
	517, 1452,
	518, 1452,
	519, 1452,
	520, 1452,
	522, 1452,
	523, 1452,
	525, 1452,
	526, 1452,
	528, 1452,
	529, 1452,
	530, 1452,
	531, 1452,
	532, 1452,
	533, 1452,
	535, 1452,
	536, 1452,
	538, 1452,
	539, 1452,
	540, 1452,
	541, 1452,
	542, 1452,
	544, 1452,
	546, 1452,
	547, 1452,
	548, 1452,
	549, 1452,
	550, 1452,
	551, 1452,
	552, 1452,
	554, 1452,
	555, 1452,
	556, 1452,
	557, 1452,
	559, 1452,
	560, 1452,
	563, 1452,
	564, 1452,
	565, 1452,
	566, 1452,
	567, 1452,
	568, 1452,
	569, 1452,
	570, 1452,
	572, 1452,
	575, 1452,
	576, 1452,
	577, 1452,
	578, 1452,
	579, 1452,
	580, 1452,
	582, 1452,
	583, 1452,
	584, 1452,
	585, 1452,
	586, 1452,
	587, 1452,
	588, 1452,
	589, 1452,
	594, 1452,
	595, 1452,
	596, 1452,
	597, 1452,
	598, 1452,
	599, 1452,
	-2, 0,
	-1, 815,
	196, 2526,
	543, 2526,
	613, 2526,
	633, 2526,
	-2, 0,
	-1, 816,
	196, 2512,
	543, 2512,
	613, 2512,
	633, 2512,
	-2, 0,
	-1, 818,
	196, 2793,
	543, 2793,
	613, 2793,
	633, 2793,
	-2, 0,
	-1, 821,
	196, 2642,
	543, 2642,
	613, 2642,
	633, 2642,
	-2, 0,
	-1, 822,
	196, 2837,
	543, 2837,
	613, 2837,
	633, 2837,
	-2, 0,
	-1, 830,
	196, 2670,
	543, 2670,
	613, 2670,
	633, 2670,
	-2, 766,
	-1, 846,
	8, 899,
	29, 899,
	621, 899,
	622, 899,
	-2, 904,
	-1, 850,
	1, 2580,
	634, 2580,
	-2, 904,
	-1, 851,
	1, 2630,
	634, 2630,
	-2, 904,
	-1, 854,
	1, 2675,
	634, 2675,
	-2, 897,
	-1, 855,
	1, 2731,
	634, 2731,
	-2, 898,
	-1, 856,
	1, 2585,
	634, 2585,
	-2, 901,
	-1, 857,
	1, 2499,
	634, 2499,
	-2, 902,
	-1, 892,
	633, 2458,
	636, 2458,
	-2, 1118,
	-1, 893,
	633, 2460,
	636, 2460,
	-2, 1119,
	-1, 894,
	633, 2459,
	636, 2459,
	-2, 1120,
	-1, 895,
	636, 2384,
	-2, 1121,
	-1, 920,
	189, 287,
	-2, 0,
	-1, 943,
	45, 2431,
	-2, 0,
	-1, 944,
	582, 1430,
	-2, 1202,
	-1, 960,
	4, 1864,
	21, 1864,
	22, 1864,
	23, 1864,
	24, 1864,
	25, 1864,
	26, 1864,
	27, 1864,
	28, 1864,
	30, 1864,
	31, 1864,
	37, 1864,
	41, 1864,
	43, 1864,
	44, 1864,
	46, 1864,
	47, 1864,
	48, 1864,
	49, 1864,
	50, 1864,
	51, 1864,
	52, 1864,
	53, 1864,
	54, 1864,
	56, 1864,
	57, 1864,
	58, 1864,
	59, 1864,
	61, 1864,
	62, 1864,
	63, 1864,
	64, 1864,
	65, 1864,
	66, 1864,
	67, 1864,
	71, 1864,
	72, 1864,
	73, 1864,
	74, 1864,
	76, 1864,
	77, 1864,
	78, 1864,
	82, 1864,
	83, 1864,
	84, 1864,
	85, 1864,
	86, 1864,
	87, 1864,
	88, 1864,
	89, 1864,
	92, 1864,
	93, 1864,
	94, 1864,
	95, 1864,
	96, 1864,
	98, 1864,
	100, 1864,
	101, 1864,
	102, 1864,
	103, 1864,
	104, 1864,
	105, 1864,
	107, 1864,
	108, 1864,
	109, 1864,
	111, 1864,
	112, 1864,
	113, 1864,
	121, 1864,
	122, 1864,
	123, 1864,
	124, 1864,
	125, 1864,
	127, 1864,
	128, 1864,
	129, 1864,
	130, 1864,
	132, 1864,
	133, 1864,
	134, 1864,
	136, 1864,
	137, 1864,
	138, 1864,
	140, 1864,
	141, 1864,
	142, 1864,
	145, 1864,
	146, 1864,
	147, 1864,
	149, 1864,
	150, 1864,
	151, 1864,
	153, 1864,
	154, 1864,
	155, 1864,
	157, 1864,
	158, 1864,
	159, 1864,
	160, 1864,
	161, 1864,
	162, 1864,
	163, 1864,
	164, 1864,
	165, 1864,
	166, 1864,
	167, 1864,
	168, 1864,
	169, 1864,
	170, 1864,
	171, 1864,
	172, 1864,
	173, 1864,
	175, 1864,
	181, 1864,
	182, 1864,
	183, 1864,
	184, 1864,
	188, 1864,
	190, 1864,
	191, 1864,
	192, 1864,
	194, 1864,
	195, 1864,
	198, 1864,
	199, 1864,
	200, 1864,
	201, 1864,
	202, 1864,
	203, 1864,
	204, 1864,
	205, 1864,
	206, 1864,
	207, 1864,
	208, 1864,
	209, 1864,
	210, 1864,
	211, 1864,
	213, 1864,
	214, 1864,
	216, 1864,
	217, 1864,
	219, 1864,
	220, 1864,
	221, 1864,
	222, 1864,
	223, 1864,
	224, 1864,
	225, 1864,
	226, 1864,
	227, 1864,
	228, 1864,
	229, 1864,
	231, 1864,
	232, 1864,
	234, 1864,
	235, 1864,
	236, 1864,
	237, 1864,
	238, 1864,
	242, 1864,
	243, 1864,
	244, 1864,
	245, 1864,
	248, 1864,
	249, 1864,
	250, 1864,
	251, 1864,
	253, 1864,
	255, 1864,
	256, 1864,
	258, 1864,
	260, 1864,
	261, 1864,
	262, 1864,
	264, 1864,
	268, 1864,
	269, 1864,
	270, 1864,
	271, 1864,
	272, 1864,
	273, 1864,
	275, 1864,
	276, 1864,
	277, 1864,
	279, 1864,
	280, 1864,
	282, 1864,
	283, 1864,
	286, 1864,
	287, 1864,
	288, 1864,
	289, 1864,
	290, 1864,
	291, 1864,
	292, 1864,
	295, 1864,
	296, 1864,
	297, 1864,
	298, 1864,
	300, 1864,
	301, 1864,
	302, 1864,
	303, 1864,
	304, 1864,
	305, 1864,
	306, 1864,
	307, 1864,
	308, 1864,
	309, 1864,
	310, 1864,
	311, 1864,
	312, 1864,
	313, 1864,
	314, 1864,
	315, 1864,
	316, 1864,
	317, 1864,
	318, 1864,
	319, 1864,
	320, 1864,
	321, 1864,
	322, 1864,
	324, 1864,
	326, 1864,
	327, 1864,
	328, 1864,
	329, 1864,
	330, 1864,
	331, 1864,
	332, 1864,
	333, 1864,
	334, 1864,
	335, 1864,
	336, 1864,
	337, 1864,
	338, 1864,
	339, 1864,
	340, 1864,
	341, 1864,
	342, 1864,
	344, 1864,
	345, 1864,
	347, 1864,
	349, 1864,
	350, 1864,
	351, 1864,
	352, 1864,
	354, 1864,
	355, 1864,
	356, 1864,
	357, 1864,
	358, 1864,
	361, 1864,
	363, 1864,
	366, 1864,
	367, 1864,
	368, 1864,
	371, 1864,
	372, 1864,
	373, 1864,
	375, 1864,
	377, 1864,
	378, 1864,
	379, 1864,
	380, 1864,
	381, 1864,
	382, 1864,
	383, 1864,
	384, 1864,
	385, 1864,
	386, 1864,
	387, 1864,
	388, 1864,
	389, 1864,
	391, 1864,
	392, 1864,
	393, 1864,
	394, 1864,
	395, 1864,
	396, 1864,
	397, 1864,
	398, 1864,
	399, 1864,
	400, 1864,
	401, 1864,
	402, 1864,
	403, 1864,
	404, 1864,
	405, 1864,
	407, 1864,
	408, 1864,
	409, 1864,
	411, 1864,
	412, 1864,
	413, 1864,
	414, 1864,
	415, 1864,
	416, 1864,
	417, 1864,
	418, 1864,
	419, 1864,
	420, 1864,
	421, 1864,
	422, 1864,
	423, 1864,
	424, 1864,
	426, 1864,
	428, 1864,
	429, 1864,
	430, 1864,
	436, 1864,
	437, 1864,
	438, 1864,
	440, 1864,
	441, 1864,
	442, 1864,
	443, 1864,
	444, 1864,
	445, 1864,
	446, 1864,
	447, 1864,
	448, 1864,
	449, 1864,
	451, 1864,
	452, 1864,
	453, 1864,
	455, 1864,
	456, 1864,
	457, 1864,
	458, 1864,
	459, 1864,
	460, 1864,
	461, 1864,
	463, 1864,
	464, 1864,
	465, 1864,
	466, 1864,
	467, 1864,
	468, 1864,
	469, 1864,
	470, 1864,
	471, 1864,
	472, 1864,
	473, 1864,
	474, 1864,
	475, 1864,
	477, 1864,
	478, 1864,
	479, 1864,
	480, 1864,
	481, 1864,
	482, 1864,
	484, 1864,
	485, 1864,
	486, 1864,
	487, 1864,
	488, 1864,
	489, 1864,
	491, 1864,
	492, 1864,
	493, 1864,
	494, 1864,
	495, 1864,
	496, 1864,
	497, 1864,
	498, 1864,
	500, 1864,
	502, 1864,
	503, 1864,
	504, 1864,
	505, 1864,
	506, 1864,
	507, 1864,
	508, 1864,
	509, 1864,
	510, 1864,
	511, 1864,
	512, 1864,
	513, 1864,
	514, 1864,
	515, 1864,
	516, 1864,
	517, 1864,
	518, 1864,
	519, 1864,
	520, 1864,
	522, 1864,
	523, 1864,
	525, 1864,
	526, 1864,
	528, 1864,
	529, 1864,
	530, 1864,
	531, 1864,
	532, 1864,
	533, 1864,
	535, 1864,
	536, 1864,
	538, 1864,
	539, 1864,
	540, 1864,
	541, 1864,
	542, 1864,
	544, 1864,
	546, 1864,
	547, 1864,
	548, 1864,
	549, 1864,
	550, 1864,
	551, 1864,
	552, 1864,
	554, 1864,
	555, 1864,
	556, 1864,
	557, 1864,
	559, 1864,
	560, 1864,
	563, 1864,
	564, 1864,
	565, 1864,
	566, 1864,
	567, 1864,
	568, 1864,
	569, 1864,
	570, 1864,
	572, 1864,
	575, 1864,
	576, 1864,
	577, 1864,
	578, 1864,
	579, 1864,
	580, 1864,
	582, 1864,
	583, 1864,
	584, 1864,
	585, 1864,
	586, 1864,
	587, 1864,
	588, 1864,
	589, 1864,
	594, 1864,
	595, 1864,
	596, 1864,
	597, 1864,
	598, 1864,
	599, 1864,
	-2, 0,
	-1, 970,
	272, 451,
	-2, 0,
	-1, 1048,
	196, 941,
	-2, 0,
	-1, 1049,
	413, 994,
	482, 994,
	526, 994,
	548, 994,
	-2, 0,
	-1, 1050,
	413, 993,
	482, 993,
	526, 993,
	548, 993,
	-2, 917,
	-1, 1054,
	1, 1046,
	630, 1046,
	632, 1046,
	634, 1046,
	-2, 0,
	-1, 1056,
	1, 968,
	630, 968,
	632, 968,
	634, 968,
	-2, 0,
	-1, 1057,
	1, 972,
	630, 972,
	632, 972,
	634, 972,
	-2, 0,
	-1, 1058,
	1, 1117,
	189, 1117,
	630, 1117,
	632, 1117,
	634, 1117,
	-2, 0,
	-1, 1066,
	1, 999,
	630, 999,
	632, 999,
	634, 999,
	-2, 0,
	-1, 1073,
	1, 1046,
	630, 1046,
	632, 1046,
	634, 1046,
	-2, 0,
	-1, 1074,
	1, 1048,
	630, 1048,
	632, 1048,
	634, 1048,
	-2, 0,
	-1, 1075,
	1, 1051,
	630, 1051,
	632, 1051,
	634, 1051,
	-2, 0,
	-1, 1083,
	1, 1081,
	630, 1081,
	632, 1081,
	634, 1081,
	-2, 0,
	-1, 1084,
	1, 1083,
	630, 1083,
	632, 1083,
	634, 1083,
	-2, 0,
	-1, 1089,
	1, 1111,
	630, 1111,
	632, 1111,
	634, 1111,
	-2, 0,
	-1, 1143,
	176, 1734,
	189, 1734,
	285, 1734,
	359, 1734,
	-2, 1670,
	-1, 1159,
	176, 1733,
	189, 1733,
	285, 1733,
	359, 1733,
	-2, 1667,
	-1, 1186,
	633, 2457,
	-2, 774,
	-1, 1215,
	5, 2449,
	631, 2447,
	-2, 2438,
	-1, 1223,
	5, 2470,
	631, 2467,
	-2, 2458,
	-1, 1224,
	5, 2471,
	631, 2468,
	-2, 2459,
	-1, 1232,
	633, 2455,
	-2, 2437,
	-1, 1233,
	631, 2925,
	-2, 2456,
	-1, 1256,
	631, 2924,
	-2, 2472,
	-1, 1257,
	5, 1939,
	-2, 2895,
	-1, 1258,
	5, 1940,
	-2, 2896,
	-1, 1259,
	5, 1941,
	-2, 2910,
	-1, 1260,
	5, 1942,
	-2, 2874,
	-1, 1261,
	5, 1943,
	-2, 2908,
	-1, 1262,
	5, 1951,
	-2, 2887,
	-1, 1263,
	5, 1938,
	-2, 2883,
	-1, 1264,
	5, 1938,
	-2, 2882,
	-1, 1265,
	5, 1938,
	-2, 2901,
	-1, 1266,
	5, 1949,
	-2, 2876,
	-1, 1267,
	5, 1954,
	-2, 2875,
	-1, 1268,
	5, 1956,
	-2, 2920,
	-1, 1271,
	5, 1978,
	-2, 2913,
	-1, 1272,
	5, 1970,
	-2, 2914,
	-1, 1273,
	5, 1978,
	-2, 2915,
	-1, 1274,
	5, 1974,
	-2, 2916,
	-1, 1275,
	5, 1924,
	-2, 2888,
	-1, 1276,
	5, 1925,
	-2, 2889,
	-1, 1277,
	5, 1926,
	-2, 2877,
	-1, 1305,
	5, 1961,
	-2, 2921,
	-1, 1306,
	5, 1962,
	-2, 2911,
	-1, 1307,
	5, 1963,
	583, 1963,
	-2, 2878,
	-1, 1308,
	5, 1964,
	583, 1964,
	-2, 2879,
	-1, 1346,
	631, 2467,
	-2, 2458,
	-1, 1347,
	631, 2468,
	-2, 2459,
	-1, 1445,
	196, 2837,
	543, 2837,
	613, 2837,
	633, 2837,
	-2, 0,
	-1, 1450,
	1, 750,
	634, 750,
	-2, 1579,
	-1, 1597,
	379, 2432,
	440, 2432,
	484, 2432,
	623, 2432,
	-2, 2422,
	-1, 1603,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2833,
	-1, 1604,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2571,
	-1, 1605,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2754,
	-1, 1611,
	635, 2432,
	-2, 2434,
	-1, 1635,
	1, 1427,
	445, 1382,
	484, 1382,
	606, 1382,
	630, 1427,
	632, 1427,
	634, 1427,
	-2, 1719,
	-1, 1641,
	212, 1524,
	233, 1524,
	453, 1524,
	-2, 0,
	-1, 1690,
	422, 1201,
	582, 1201,
	-2, 446,
	-1, 1706,
	45, 2430,
	-2, 1164,
	-1, 1713,
	1, 1427,
	630, 1427,
	632, 1427,
	634, 1427,
	-2, 1719,
	-1, 1721,
	4, 1452,
	21, 1452,
	22, 1452,
	23, 1452,
	24, 1452,
	25, 1452,
	26, 1452,
	27, 1452,
	28, 1452,
	30, 1452,
	31, 1452,
	37, 1452,
	41, 1452,
	43, 1452,
	44, 1452,
	46, 1452,
	47, 1452,
	48, 1452,
	49, 1452,
	50, 1452,
	51, 1452,
	52, 1452,
	53, 1452,
	54, 1452,
	56, 1452,
	57, 1452,
	58, 1452,
	59, 1452,
	61, 1452,
	62, 1452,
	63, 1452,
	64, 1452,
	65, 1452,
	66, 1452,
	67, 1452,
	71, 1452,
	72, 1452,
	73, 1452,
	74, 1452,
	76, 1452,
	77, 1452,
	78, 1452,
	82, 1452,
	83, 1452,
	84, 1452,
	85, 1452,
	86, 1452,
	87, 1452,
	88, 1452,
	89, 1452,
	92, 1452,
	93, 1452,
	94, 1452,
	95, 1452,
	96, 1452,
	98, 1452,
	100, 1452,
	101, 1452,
	102, 1452,
	103, 1452,
	104, 1452,
	105, 1452,
	107, 1452,
	108, 1452,
	109, 1452,
	111, 1452,
	112, 1452,
	113, 1452,
	121, 1452,
	122, 1452,
	123, 1452,
	124, 1452,
	125, 1452,
	127, 1452,
	128, 1452,
	129, 1452,
	130, 1452,
	132, 1452,
	133, 1452,
	134, 1452,
	136, 1452,
	137, 1452,
	138, 1452,
	140, 1452,
	141, 1452,
	142, 1452,
	145, 1452,
	146, 1452,
	147, 1452,
	149, 1452,
	150, 1452,
	151, 1452,
	153, 1452,
	154, 1452,
	155, 1452,
	157, 1452,
	158, 1452,
	159, 1452,
	160, 1452,
	161, 1452,
	162, 1452,
	163, 1452,
	164, 1452,
	165, 1452,
	166, 1452,
	167, 1452,
	168, 1452,
	169, 1452,
	170, 1452,
	171, 1452,
	172, 1452,
	173, 1452,
	181, 1452,
	182, 1452,
	183, 1452,
	184, 1452,
	188, 1452,
	190, 1452,
	191, 1452,
	192, 1452,
	194, 1452,
	195, 1452,
	198, 1452,
	199, 1452,
	200, 1452,
	201, 1452,
	202, 1452,
	203, 1452,
	204, 1452,
	205, 1452,
	206, 1452,
	207, 1452,
	208, 1452,
	209, 1452,
	210, 1452,
	211, 1452,
	213, 1452,
	214, 1452,
	216, 1452,
	217, 1452,
	219, 1452,
	220, 1452,
	221, 1452,
	222, 1452,
	223, 1452,
	224, 1452,
	225, 1452,
	226, 1452,
	227, 1452,
	228, 1452,
	229, 1452,
	231, 1452,
	232, 1452,
	234, 1452,
	235, 1452,
	236, 1452,
	237, 1452,
	238, 1452,
	243, 1452,
	244, 1452,
	245, 1452,
	248, 1452,
	249, 1452,
	250, 1452,
	251, 1452,
	253, 1452,
	255, 1452,
	256, 1452,
	258, 1452,
	260, 1452,
	261, 1452,
	262, 1452,
	264, 1452,
	268, 1452,
	269, 1452,
	270, 1452,
	271, 1452,
	272, 1452,
	273, 1452,
	275, 1452,
	276, 1452,
	277, 1452,
	279, 1452,
	280, 1452,
	282, 1452,
	283, 1452,
	286, 1452,
	287, 1452,
	288, 1452,
	289, 1452,
	290, 1452,
	291, 1452,
	292, 1452,
	295, 1452,
	296, 1452,
	297, 1452,
	298, 1452,
	300, 1452,
	301, 1452,
	302, 1452,
	303, 1452,
	304, 1452,
	305, 1452,
	306, 1452,
	307, 1452,
	308, 1452,
	309, 1452,
	310, 1452,
	311, 1452,
	312, 1452,
	313, 1452,
	314, 1452,
	315, 1452,
	316, 1452,
	317, 1452,
	318, 1452,
	319, 1452,
	320, 1452,
	321, 1452,
	322, 1452,
	324, 1452,
	326, 1452,
	327, 1452,
	328, 1452,
	329, 1452,
	330, 1452,
	331, 1452,
	332, 1452,
	333, 1452,
	334, 1452,
	335, 1452,
	336, 1452,
	337, 1452,
	338, 1452,
	339, 1452,
	340, 1452,
	341, 1452,
	342, 1452,
	344, 1452,
	345, 1452,
	349, 1452,
	350, 1452,
	351, 1452,
	352, 1452,
	354, 1452,
	355, 1452,
	356, 1452,
	357, 1452,
	358, 1452,
	361, 1452,
	363, 1452,
	364, 1452,
	366, 1452,
	367, 1452,
	368, 1452,
	371, 1452,
	372, 1452,
	373, 1452,
	375, 1452,
	377, 1452,
	378, 1452,
	379, 1452,
	380, 1452,
	381, 1452,
	382, 1452,
	383, 1452,
	384, 1452,
	385, 1452,
	386, 1452,
	387, 1452,
	388, 1452,
	389, 1452,
	391, 1452,
	392, 1452,
	393, 1452,
	394, 1452,
	395, 1452,
	396, 1452,
	397, 1452,
	398, 1452,
	399, 1452,
	400, 1452,
	401, 1452,
	402, 1452,
	403, 1452,
	404, 1452,
	405, 1452,
	407, 1452,
	408, 1452,
	409, 1452,
	411, 1452,
	412, 1452,
	413, 1452,
	414, 1452,
	415, 1452,
	416, 1452,
	417, 1452,
	418, 1452,
	419, 1452,
	420, 1452,
	421, 1452,
	422, 1452,
	423, 1452,
	424, 1452,
	426, 1452,
	428, 1452,
	429, 1452,
	430, 1452,
	436, 1452,
	437, 1452,
	438, 1452,
	440, 1452,
	441, 1452,
	442, 1452,
	443, 1452,
	444, 1452,
	445, 1452,
	446, 1452,
	447, 1452,
	448, 1452,
	449, 1452,
	451, 1452,
	452, 1452,
	453, 1452,
	455, 1452,
	456, 1452,
	457, 1452,
	458, 1452,
	459, 1452,
	460, 1452,
	461, 1452,
	463, 1452,
	464, 1452,
	465, 1452,
	466, 1452,
	467, 1452,
	468, 1452,
	469, 1452,
	470, 1452,
	471, 1452,
	472, 1452,
	473, 1452,
	474, 1452,
	475, 1452,
	477, 1452,
	478, 1452,
	479, 1452,
	480, 1452,
	481, 1452,
	482, 1452,
	484, 1452,
	485, 1452,
	486, 1452,
	487, 1452,
	488, 1452,
	489, 1452,
	491, 1452,
	492, 1452,
	493, 1452,
	494, 1452,
	495, 1452,
	496, 1452,
	497, 1452,
	498, 1452,
	500, 1452,
	502, 1452,
	503, 1452,
	504, 1452,
	505, 1452,
	506, 1452,
	507, 1452,
	508, 1452,
	509, 1452,
	510, 1452,
	511, 1452,
	512, 1452,
	513, 1452,
	514, 1452,
	515, 1452,
	516, 1452,
	517, 1452,
	518, 1452,
	519, 1452,
	520, 1452,
	522, 1452,
	523, 1452,
	525, 1452,
	526, 1452,
	528, 1452,
	529, 1452,
	530, 1452,
	531, 1452,
	532, 1452,
	533, 1452,
	535, 1452,
	536, 1452,
	538, 1452,
	539, 1452,
	540, 1452,
	541, 1452,
	542, 1452,
	544, 1452,
	546, 1452,
	547, 1452,
	548, 1452,
	549, 1452,
	550, 1452,
	551, 1452,
	552, 1452,
	554, 1452,
	555, 1452,
	556, 1452,
	557, 1452,
	559, 1452,
	560, 1452,
	563, 1452,
	564, 1452,
	565, 1452,
	566, 1452,
	567, 1452,
	568, 1452,
	569, 1452,
	570, 1452,
	572, 1452,
	575, 1452,
	576, 1452,
	577, 1452,
	578, 1452,
	579, 1452,
	580, 1452,
	582, 1452,
	583, 1452,
	584, 1452,
	585, 1452,
	586, 1452,
	587, 1452,
	588, 1452,
	589, 1452,
	594, 1452,
	595, 1452,
	596, 1452,
	597, 1452,
	598, 1452,
	599, 1452,
	-2, 0,
	-1, 1744,
	1, 585,
	630, 585,
	632, 585,
	634, 585,
	-2, 1690,
	-1, 1747,
	4, 2919,
	11, 2919,
	12, 2919,
	14, 2919,
	15, 2919,
	16, 2919,
	17, 2919,
	18, 2919,
	19, 2919,
	21, 2919,
	22, 2919,
	23, 2919,
	24, 2919,
	25, 2919,
	26, 2919,
	27, 2919,
	28, 2919,
	30, 2919,
	31, 2919,
	34, 2919,
	35, 2919,
	37, 2919,
	39, 2919,
	41, 2919,
	43, 2919,
	44, 2919,
	46, 2919,
	47, 2919,
	48, 2919,
	49, 2919,
	50, 2919,
	51, 2919,
	52, 2919,
	53, 2919,
	54, 2919,
	56, 2919,
	57, 2919,
	58, 2919,
	59, 2919,
	61, 2919,
	62, 2919,
	63, 2919,
	64, 2919,
	65, 2919,
	66, 2919,
	67, 2919,
	70, 2919,
	71, 2919,
	72, 2919,
	73, 2919,
	74, 2919,
	76, 2919,
	77, 2919,
	78, 2919,
	79, 2919,
	82, 2919,
	83, 2919,
	84, 2919,
	85, 2919,
	86, 2919,
	87, 2919,
	88, 2919,
	89, 2919,
	90, 2919,
	92, 2919,
	93, 2919,
	94, 2919,
	95, 2919,
	96, 2919,
	98, 2919,
	99, 2919,
	100, 2919,
	101, 2919,
	102, 2919,
	103, 2919,
	104, 2919,
	105, 2919,
	107, 2919,
	108, 2919,
	109, 2919,
	110, 2919,
	111, 2919,
	112, 2919,
	113, 2919,
	121, 2919,
	122, 2919,
	123, 2919,
	124, 2919,
	125, 2919,
	127, 2919,
	128, 2919,
	129, 2919,
	130, 2919,
	132, 2919,
	133, 2919,
	134, 2919,
	136, 2919,
	137, 2919,
	138, 2919,
	140, 2919,
	141, 2919,
	142, 2919,
	145, 2919,
	146, 2919,
	147, 2919,
	149, 2919,
	150, 2919,
	151, 2919,
	153, 2919,
	154, 2919,
	155, 2919,
	157, 2919,
	158, 2919,
	159, 2919,
	160, 2919,
	161, 2919,
	162, 2919,
	163, 2919,
	164, 2919,
	165, 2919,
	166, 2919,
	167, 2919,
	168, 2919,
	169, 2919,
	170, 2919,
	171, 2919,
	172, 2919,
	173, 2919,
	177, 2919,
	178, 2919,
	179, 2919,
	180, 2919,
	181, 2919,
	182, 2919,
	183, 2919,
	184, 2919,
	187, 2919,
	188, 2919,
	190, 2919,
	191, 2919,
	192, 2919,
	194, 2919,
	195, 2919,
	197, 2919,
	198, 2919,
	199, 2919,
	200, 2919,
	201, 2919,
	202, 2919,
	203, 2919,
	204, 2919,
	205, 2919,
	206, 2919,
	207, 2919,
	208, 2919,
	209, 2919,
	210, 2919,
	211, 2919,
	213, 2919,
	214, 2919,
	216, 2919,
	217, 2919,
	219, 2919,
	220, 2919,
	221, 2919,
	222, 2919,
	223, 2919,
	224, 2919,
	225, 2919,
	226, 2919,
	227, 2919,
	228, 2919,
	229, 2919,
	230, 2919,
	231, 2919,
	232, 2919,
	233, 2919,
	234, 2919,
	235, 2919,
	236, 2919,
	237, 2919,
	238, 2919,
	240, 2919,
	241, 2919,
	243, 2919,
	244, 2919,
	245, 2919,
	247, 2919,
	248, 2919,
	249, 2919,
	250, 2919,
	251, 2919,
	253, 2919,
	255, 2919,
	256, 2919,
	257, 2919,
	258, 2919,
	259, 2919,
	260, 2919,
	261, 2919,
	262, 2919,
	263, 2919,
	264, 2919,
	266, 2919,
	267, 2919,
	268, 2919,
	269, 2919,
	270, 2919,
	271, 2919,
	272, 2919,
	273, 2919,
	275, 2919,
	276, 2919,
	277, 2919,
	279, 2919,
	280, 2919,
	281, 2919,
	282, 2919,
	283, 2919,
	284, 2919,
	286, 2919,
	287, 2919,
	288, 2919,
	289, 2919,
	290, 2919,
	291, 2919,
	292, 2919,
	295, 2919,
	296, 2919,
	297, 2919,
	298, 2919,
	299, 2919,
	300, 2919,
	301, 2919,
	302, 2919,
	303, 2919,
	304, 2919,
	305, 2919,
	306, 2919,
	307, 2919,
	308, 2919,
	309, 2919,
	310, 2919,
	311, 2919,
	312, 2919,
	313, 2919,
	314, 2919,
	315, 2919,
	316, 2919,
	317, 2919,
	318, 2919,
	319, 2919,
	320, 2919,
	321, 2919,
	322, 2919,
	324, 2919,
	325, 2919,
	326, 2919,
	327, 2919,
	328, 2919,
	329, 2919,
	330, 2919,
	331, 2919,
	332, 2919,
	333, 2919,
	334, 2919,
	335, 2919,
	336, 2919,
	337, 2919,
	338, 2919,
	339, 2919,
	340, 2919,
	341, 2919,
	342, 2919,
	344, 2919,
	345, 2919,
	348, 2919,
	349, 2919,
	350, 2919,
	351, 2919,
	352, 2919,
	354, 2919,
	355, 2919,
	356, 2919,
	357, 2919,
	358, 2919,
	361, 2919,
	363, 2919,
	366, 2919,
	367, 2919,
	368, 2919,
	369, 2919,
	371, 2919,
	372, 2919,
	373, 2919,
	375, 2919,
	377, 2919,
	378, 2919,
	379, 2919,
	380, 2919,
	381, 2919,
	382, 2919,
	383, 2919,
	384, 2919,
	385, 2919,
	386, 2919,
	387, 2919,
	388, 2919,
	389, 2919,
	391, 2919,
	392, 2919,
	393, 2919,
	394, 2919,
	395, 2919,
	396, 2919,
	397, 2919,
	398, 2919,
	399, 2919,
	400, 2919,
	401, 2919,
	402, 2919,
	403, 2919,
	404, 2919,
	405, 2919,
	407, 2919,
	408, 2919,
	409, 2919,
	411, 2919,
	412, 2919,
	413, 2919,
	414, 2919,
	415, 2919,
	416, 2919,
	417, 2919,
	418, 2919,
	419, 2919,
	420, 2919,
	421, 2919,
	422, 2919,
	423, 2919,
	424, 2919,
	426, 2919,
	428, 2919,
	429, 2919,
	430, 2919,
	436, 2919,
	437, 2919,
	438, 2919,
	439, 2919,
	440, 2919,
	441, 2919,
	442, 2919,
	443, 2919,
	444, 2919,
	445, 2919,
	446, 2919,
	447, 2919,
	448, 2919,
	449, 2919,
	451, 2919,
	452, 2919,
	453, 2919,
	454, 2919,
	455, 2919,
	456, 2919,
	457, 2919,
	458, 2919,
	459, 2919,
	460, 2919,
	461, 2919,
	462, 2919,
	463, 2919,
	464, 2919,
	465, 2919,
	466, 2919,
	467, 2919,
	468, 2919,
	469, 2919,
	470, 2919,
	471, 2919,
	472, 2919,
	473, 2919,
	474, 2919,
	475, 2919,
	477, 2919,
	478, 2919,
	479, 2919,
	480, 2919,
	481, 2919,
	482, 2919,
	484, 2919,
	485, 2919,
	486, 2919,
	487, 2919,
	488, 2919,
	489, 2919,
	490, 2919,
	491, 2919,
	492, 2919,
	493, 2919,
	494, 2919,
	495, 2919,
	496, 2919,
	497, 2919,
	498, 2919,
	500, 2919,
	502, 2919,
	503, 2919,
	504, 2919,
	505, 2919,
	506, 2919,
	507, 2919,
	508, 2919,
	509, 2919,
	510, 2919,
	511, 2919,
	512, 2919,
	513, 2919,
	514, 2919,
	515, 2919,
	516, 2919,
	517, 2919,
	518, 2919,
	519, 2919,
	520, 2919,
	522, 2919,
	523, 2919,
	524, 2919,
	525, 2919,
	526, 2919,
	528, 2919,
	529, 2919,
	530, 2919,
	531, 2919,
	532, 2919,
	533, 2919,
	535, 2919,
	536, 2919,
	538, 2919,
	539, 2919,
	540, 2919,
	541, 2919,
	542, 2919,
	544, 2919,
	546, 2919,
	547, 2919,
	548, 2919,
	549, 2919,
	550, 2919,
	551, 2919,
	552, 2919,
	554, 2919,
	555, 2919,
	556, 2919,
	557, 2919,
	559, 2919,
	560, 2919,
	563, 2919,
	564, 2919,
	565, 2919,
	566, 2919,
	567, 2919,
	568, 2919,
	569, 2919,
	570, 2919,
	572, 2919,
	575, 2919,
	576, 2919,
	577, 2919,
	578, 2919,
	579, 2919,
	580, 2919,
	582, 2919,
	583, 2919,
	584, 2919,
	585, 2919,
	586, 2919,
	587, 2919,
	588, 2919,
	589, 2919,
	594, 2919,
	595, 2919,
	596, 2919,
	597, 2919,
	598, 2919,
	599, 2919,
	600, 2919,
	602, 2919,
	611, 2919,
	612, 2919,
	613, 2919,
	614, 2919,
	615, 2919,
	616, 2919,
	618, 2919,
	619, 2919,
	620, 2919,
	621, 2919,
	622, 2919,
	623, 2919,
	624, 2919,
	625, 2919,
	626, 2919,
	629, 2919,
	632, 2919,
	633, 2919,
	635, 2919,
	636, 2919,
	-2, 0,
	-1, 1752,
	196, 2793,
	543, 2793,
	613, 2793,
	633, 2793,
	-2, 0,
	-1, 1800,
	196, 942,
	-2, 2785,
	-1, 1801,
	196, 943,
	-2, 2578,
	-1, 1802,
	196, 944,
	-2, 2740,
	-1, 1807,
	413, 994,
	482, 994,
	526, 994,
	548, 994,
	-2, 0,
	-1, 1818,
	1, 1524,
	630, 1524,
	632, 1524,
	634, 1524,
	-2, 0,
	-1, 1835,
	1, 989,
	630, 989,
	632, 989,
	634, 989,
	-2, 0,
	-1, 1836,
	1, 1033,
	630, 1033,
	632, 1033,
	634, 1033,
	-2, 0,
	-1, 1837,
	1, 1041,
	630, 1041,
	632, 1041,
	634, 1041,
	-2, 0,
	-1, 1840,
	1, 998,
	630, 998,
	632, 998,
	634, 998,
	-2, 0,
	-1, 1842,
	1, 1004,
	630, 1004,
	632, 1004,
	634, 1004,
	-2, 0,
	-1, 1845,
	1, 1000,
	630, 1000,
	632, 1000,
	634, 1000,
	-2, 0,
	-1, 1850,
	1, 1014,
	630, 1014,
	632, 1014,
	634, 1014,
	-2, 0,
	-1, 1884,
	1, 2775,
	630, 2775,
	632, 2775,
	633, 2775,
	634, 2775,
	-2, 0,
	-1, 1888,
	1, 1092,
	630, 1092,
	632, 1092,
	634, 1092,
	-2, 0,
	-1, 1905,
	1, 1574,
	634, 1574,
	-2, 1579,
	-1, 1908,
	176, 1733,
	189, 1733,
	285, 1733,
	359, 1733,
	-2, 1671,
	-1, 2008,
	156, 1692,
	176, 1692,
	189, 1692,
	252, 1692,
	285, 1692,
	359, 1692,
	370, 1692,
	561, 1692,
	-2, 2143,
	-1, 2069,
	632, 2318,
	-2, 0,
	-1, 2105,
	156, 1692,
	176, 1692,
	189, 1692,
	252, 1692,
	285, 1692,
	359, 1692,
	370, 1692,
	561, 1692,
	-2, 1825,
	-1, 2144,
	543, 2790,
	633, 2790,
	636, 2790,
	-2, 0,
	-1, 2161,
	631, 1966,
	-2, 1954,
	-1, 2193,
	196, 2790,
	633, 2790,
	636, 2790,
	-2, 0,
	-1, 2236,
	1, 752,
	634, 752,
	-2, 1579,
	-1, 2411,
	233, 282,
	-2, 2466,
	-1, 2412,
	233, 283,
	-2, 338,
	-1, 2523,
	1, 991,
	630, 991,
	632, 991,
	634, 991,
	-2, 0,
	-1, 2524,
	1, 1035,
	630, 1035,
	632, 1035,
	634, 1035,
	-2, 0,
	-1, 2525,
	1, 1043,
	630, 1043,
	632, 1043,
	634, 1043,
	-2, 0,
	-1, 2526,
	1, 1094,
	630, 1094,
	632, 1094,
	634, 1094,
	-2, 0,
	-1, 2567,
	1, 1016,
	630, 1016,
	632, 1016,
	634, 1016,
	-2, 0,
	-1, 2589,
	1, 1077,
	630, 1077,
	632, 1077,
	634, 1077,
	-2, 0,
	-1, 2636,
	460, 1760,
	461, 1760,
	-2, 1999,
	-1, 2667,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2019,
	-1, 2668,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2020,
	-1, 2669,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2021,
	-1, 2670,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2022,
	-1, 2671,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2023,
	-1, 2672,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2024,
	-1, 2673,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2025,
	-1, 2674,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2026,
	-1, 2686,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2038,
	-1, 2687,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2039,
	-1, 2688,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2040,
	-1, 2692,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2047,
	-1, 2698,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2051,
	-1, 2700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2059,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2060,
	-1, 2702,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2061,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2062,
	-1, 2877,
	5, 2470,
	196, 2329,
	631, 2467,
	-2, 2458,
	-1, 2878,
	196, 2330,
	-2, 2870,
	-1, 2879,
	196, 2331,
	-2, 2668,
	-1, 2880,
	196, 2332,
	-2, 2544,
	-1, 2881,
	196, 2333,
	-2, 2606,
	-1, 2882,
	196, 2334,
	-2, 2653,
	-1, 2883,
	196, 2335,
	-2, 2788,
	-1, 2884,
	196, 2336,
	-2, 2126,
	-1, 2956,
	1, 1826,
	2, 1826,
	110, 1826,
	156, 1826,
	176, 1826,
	189, 1826,
	197, 1826,
	215, 1826,
	218, 1826,
	247, 1826,
	252, 1826,
	263, 1826,
	281, 1826,
	285, 1826,
	325, 1826,
	359, 1826,
	364, 1826,
	370, 1826,
	450, 1826,
	454, 1826,
	561, 1826,
	573, 1826,
	591, 1826,
	592, 1826,
	593, 1826,
	603, 1826,
	630, 1826,
	632, 1826,
	634, 1826,
	636, 1826,
	-2, 1825,
	-1, 2969,
	631, 2439,
	-2, 2453,
	-1, 2971,
	1, 355,
	591, 355,
	-2, 1719,
	-1, 3001,
	631, 1965,
	-2, 1955,
	-1, 3216,
	1, 1427,
	445, 1382,
	484, 1382,
	606, 1382,
	630, 1427,
	632, 1427,
	634, 1427,
	-2, 1719,
	-1, 3394,
	365, 1763,
	-2, 2909,
	-1, 3395,
	365, 1764,
	-2, 2772,
	-1, 3399,
	460, 2395,
	461, 2395,
	-2, 2124,
	-1, 3400,
	460, 2399,
	461, 2399,
	-2, 2125,
	-1, 3401,
	460, 2396,
	461, 2396,
	-2, 2124,
	-1, 3402,
	460, 2400,
	461, 2400,
	-2, 2125,
	-1, 3415,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2049,
	-1, 3416,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2053,
	-1, 3422,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2055,
	-1, 3649,
	1, 747,
	630, 747,
	632, 747,
	634, 747,
	-2, 1579,
	-1, 3848,
	45, 2430,
	-2, 1165,
	-1, 3853,
	1, 1427,
	630, 1427,
	632, 1427,
	634, 1427,
	-2, 1719,
	-1, 3960,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2057,
	-1, 3967,
	257, 0,
	259, 0,
	348, 0,
	-2, 2076,
	-1, 4035,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2105,
	-1, 4036,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2106,
	-1, 4037,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2107,
	-1, 4041,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2111,
	-1, 4042,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2112,
	-1, 4043,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2113,
	-1, 4091,
	631, 2440,
	-2, 2454,
	-1, 4306,
	633, 3026,
	-2, 1645,
	-1, 4363,
	257, 0,
	259, 0,
	348, 0,
	-2, 2077,
	-1, 4366,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2080,
	-1, 4367,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2082,
	-1, 4490,
	633, 2455,
	-2, 1462,
	-1, 4649,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2081,
	-1, 4650,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2083,
	-1, 4661,
	257, 0,
	-2, 2116,
	-1, 4852,
	257, 0,
	-2, 2117,
	-1, 5069,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2873,
}

const sqlPrivate = 57344

const sqlLast = 148161

var sqlAct = [...]int{
	291, 3289, 5005, 5004, 1426, 3553, 5260, 5187, 4722, 5131,
	4901, 3170, 5068, 4893, 5055, 4945, 5081, 3140, 3835, 3834,
	5115, 5201, 4961, 2408, 5038, 5016, 4486, 4995, 5019, 1651,
	5082, 5140, 5083, 4801, 1482, 4821, 4108, 2296, 4788, 3846,
	3072, 1423, 4772, 4000, 5079, 4346, 1350, 4856, 4602, 2485,
	5067, 4607, 4596, 4568, 4541, 4727, 4637, 3259, 3952, 3676,
	3679, 2497, 4670, 4298, 1169, 1770, 2646, 3870, 4290, 1621,
	4807, 4930, 755, 1416, 4487, 2495, 2909, 4467, 1917, 2715,
	894, 3073, 4215, 3311, 3155, 4612, 3864, 3408, 3819, 3739,
	4265, 3808, 4246, 3682, 4248, 2654, 3824, 2305, 4666, 2149,
	3278, 1501, 2148, 1418, 827, 2111, 3248, 894, 3663, 3823,
	3275, 2218, 3826, 3801, 3800, 3668, 3664, 1594, 3273, 3665,
	2983, 4345, 3568, 4094, 2458, 3900, 3898, 3576, 2647, 766,
	3559, 3599, 4402, 972, 3536, 1168, 190, 1768, 3306, 3223,
	2397, 3606, 968, 4, 3290, 2395, 1160, 3557, 2384, 3703,
	2333, 5116, 2795, 3171, 2080, 2055, 2317, 4061, 2651, 3535,
	4857, 2205, 285, 891, 2016, 1339, 2949, 1986, 2728, 3392,
	963, 1421, 3305, 2446, 2396, 1708, 3185, 2493, 2382, 2793,
	889, 823, 2374, 2355, 2362, 284, 3260, 1219, 2284, 2948,
	1330, 2288, 1465, 1905, 2784, 2216, 1395, 2929, 1815, 2906,
	2618, 1480, 2081, 2712, 1224, 1484, 2616, 1745, 2635, 1711,
	2984, 800, 3283, 895, 1406, 3097, 896, 2445, 2377, 3098,
	3058, 4962, 2100, 1623, 1452, 1043, 2050, 3827, 2787, 1333,
	2090, 3012, 2938, 1312, 190, 2873, 1187, 2000, 2765, 2839,
	200, 2097, 900, 115, 2951, 201, 2919, 1919, 1918, 2617,
	2619, 1850, 1835, 808, 1347, 843, 2405, 1645, 819, 1329,
	1736, 119, 105, 1226, 2471, 903, 2386, 1743, 1602, 900,
	989, 5132, 5188, 2640, 1477, 1200, 46, 45, 759, 43,
	34, 32, 30, 1310, 1924, 283, 756, 1269, 768, 944,
	884, 1215, 903, 783, 1335, 3445, 742, 1657, 1064, 1904,
	764, 4075, 3439, 4076, 945, 1650, 4109, 2207, 2207, 2207,
	2207, 5271, 5263, 3555, 5077, 2928, 3781, 2207, 2207, 5251,
	5250, 4695, 4692, 2928, 2928, 836, 839, 1932, 1933, 4689,
	1409, 1164, 5220, 1976, 1977, 1978, 4726, 5218, 5161, 5117,
	5107, 4726, 2417, 5118, 2928, 3254, 5105, 3880, 5102, 2228,
	2928, 1963, 5103, 5099, 1164, 2790, 5065, 5100, 3879, 1935,
	2417, 5064, 5063, 5053, 5051, 2417, 3316, 4726, 4726, 1982,
	5042, 5041, 1841, 5014, 4726, 4726, 4981, 4726, 4974, 4973,
	2992, 3634, 2928, 2928, 1327, 1222, 1988, 4966, 4944, 4941,
	4923, 2417, 2417, 4726, 4558, 1934, 4854, 4835, 4803, 4745,
	2992, 4324, 4142, 2417, 4744, 4733, 1954, 4732, 2417, 2417,
	4725, 4726, 1461, 4438, 4726, 1951, 1932, 1933, 3631, 4677,
	3616, 4651, 2225, 2417, 1153, 2992, 4623, 1461, 4620, 4536,
	3316, 1144, 3781, 2928, 4514, 4365, 1143, 4314, 2928, 2992,
	1963, 3893, 2486, 4308, 3014, 2494, 1165, 3893, 1935, 4262,
	4173, 4141, 2791, 4263, 4174, 4142, 2228, 4086, 4084, 4068,
	4065, 4087, 4085, 2928, 3984, 98, 3980, 3892, 2417, 3552,
	2928, 3893, 3547, 2928, 3546, 1988, 2928, 3497, 2928, 2921,
	3454, 3498, 1932, 1933, 1934, 3253, 3455, 1373, 3495, 2988,
	1313, 1313, 3496, 1957, 1958, 1959, 1960, 1159, 3487, 3781,
	3485, 3456, 3488, 1940, 2928, 2928, 1963, 3315, 3300, 1365,
	2417, 3316, 2481, 2225, 1935, 2228, 3407, 3299, 3037, 3506,
	3507, 2481, 2928, 2991, 2981, 2973, 2928, 2992, 2928, 2417,
	1314, 2927, 2228, 4982, 2792, 2928, 2789, 2228, 2480, 1932,
	1933, 1988, 2481, 4858, 4849, 1345, 1973, 4837, 3316, 1983,
	1934, 1316, 4065, 1317, 1932, 1933, 1962, 1964, 2920, 1659,
	4600, 4558, 2225, 1963, 4515, 251, 4324, 4264, 3147, 2310,
	3057, 1935, 2242, 2206, 2222, 3253, 1366, 2416, 1963, 3165,
	3048, 2076, 1949, 1950, 1644, 4191, 1935, 3955, 3927, 2098,
	2367, 2965, 1940, 1817, 3881, 1650, 2964, 2928, 1988, 2963,
	1971, 2962, 1366, 1932, 1933, 2961, 1318, 1934, 1315, 1152,
	1151, 1780, 251, 1988, 3882, 1955, 253, 1150, 1954, 1149,
	3444, 1148, 1934, 1147, 1146, 1142, 1141, 1951, 1140, 1139,
	1138, 1761, 1137, 3363, 4420, 1935, 1136, 3506, 3507, 1342,
	3524, 3525, 3526, 1135, 1217, 1962, 1964, 1134, 1133, 1132,
	1131, 1130, 1129, 1128, 1127, 1126, 1125, 1124, 1940, 1123,
	4361, 1105, 1041, 253, 1040, 1658, 1039, 252, 1038, 1037,
	1036, 1934, 1035, 1034, 1033, 1032, 1031, 1030, 1029, 1028,
	1027, 1026, 245, 4359, 1025, 1671, 1024, 2208, 2208, 2208,
	2208, 246, 1023, 1022, 1021, 3512, 1985, 2208, 2208, 1020,
	1019, 1018, 1017, 2794, 1955, 1957, 1958, 1959, 1960, 1016,
	2559, 1962, 1964, 1015, 252, 1940, 3521, 1014, 1013, 1012,
	202, 1011, 1010, 4377, 1221, 4614, 1009, 3253, 1008, 1007,
	1940, 1006, 1665, 1005, 994, 993, 992, 987, 986, 979,
	978, 977, 962, 961, 3506, 3507, 919, 3524, 3525, 3526,
	918, 917, 2822, 916, 2225, 1961, 907, 906, 905, 4861,
	4118, 2225, 2225, 904, 866, 865, 834, 202, 1962, 1964,
	1955, 833, 832, 251, 814, 279, 278, 277, 1956, 1940,
	276, 275, 274, 1962, 1964, 1985, 158, 3879, 2741, 2742,
	2743, 2760, 2761, 2762, 1949, 1950, 273, 272, 1659, 271,
	1198, 1428, 1224, 270, 269, 268, 1974, 3522, 267, 2763,
	266, 265, 264, 3512, 263, 262, 261, 3286, 1659, 2820,
	260, 1366, 259, 3521, 253, 258, 2788, 1955, 257, 1224,
	1224, 1224, 256, 255, 254, 4080, 3894, 3602, 3467, 3450,
	1987, 3441, 1955, 3343, 1988, 3233, 251, 2996, 2970, 3268,
	1784, 1985, 1659, 2955, 3065, 3065, 3550, 2806, 2225, 3005,
	2804, 2101, 2608, 2269, 2753, 2227, 2124, 1956, 2027, 1899,
	1504, 1653, 1473, 2749, 1224, 252, 2228, 3024, 2206, 2225,
	1224, 1626, 1224, 3528, 5092, 1428, 2222, 2611, 1985, 1635,
	245, 1931, 5091, 1469, 1470, 1471, 1349, 253, 1456, 246,
	5088, 3551, 5066, 5050, 4949, 2020, 2025, 2018, 1985, 1670,
	1224, 4846, 1224, 4840, 1224, 1173, 1972, 4838, 4717, 2920,
	3512, 1626, 4665, 1985, 4621, 3522, 4599, 1366, 202, 1987,
	1975, 1952, 1948, 1956, 1945, 1943, 1944, 1936, 1937, 1938,
	1939, 1941, 1942, 4444, 4400, 4616, 1428, 4399, 252, 1612,
	1713, 2754, 2755, 2756, 2757, 4393, 1664, 2058, 2058, 4392,
	1843, 2748, 4391, 245, 2057, 2057, 1626, 1961, 4384, 4383,
	3523, 4381, 246, 1626, 4376, 4373, 4372, 4261, 1341, 3506,
	3507, 4122, 1224, 1765, 1224, 4275, 1607, 4121, 4120, 1626,
	1956, 1400, 1403, 2061, 2056, 1987, 4090, 4056, 1224, 4055,
	1224, 202, 2018, 1448, 1648, 1956, 1985, 4054, 3976, 1413,
	3971, 3597, 3543, 3534, 3505, 3502, 1450, 3501, 3499, 3494,
	3493, 1717, 1720, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 3522, 4179, 3063, 3492, 3489, 1326, 3486, 3466,
	2758, 2759, 3449, 3442, 3440, 3301, 2956, 3506, 3507, 1626,
	1487, 1488, 1987, 2777, 1343, 1633, 1931, 1434, 3521, 1497,
	900, 1591, 1596, 2461, 2424, 2422, 1930, 1987, 5266, 1224,
	5209, 5208, 1224, 2751, 1167, 5130, 2019, 1442, 2017, 5128,
	1351, 4002, 5006, 903, 1417, 251, 4276, 4928, 3523, 4913,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 4909, 4908,
	1476, 4907, 190, 190, 4887, 251, 3885, 4886, 4884, 4860,
	4189, 1647, 3270, 1985, 1646, 1706, 3506, 3507, 1629, 4859,
	4833, 1479, 2718, 4819, 4816, 1489, 1490, 3515, 3516, 3508,
	3509, 3510, 3511, 3513, 3514, 1785, 253, 1748, 1750, 251,
	4815, 4799, 4798, 1952, 1948, 4741, 1945, 1943, 1944, 1936,
	1937, 1938, 1939, 1941, 1942, 3512, 253, 1597, 4712, 251,
	1611, 1417, 251, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	4663, 4646, 4645, 2724, 3623, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 4588, 251, 1456, 3548, 252, 1456, 1746,
	253, 4584, 4581, 3062, 3062, 3523, 4559, 4419, 4398, 4325,
	4177, 4176, 245, 1599, 4157, 4156, 251, 252, 1224, 1165,
	253, 246, 4615, 253, 1224, 1938, 1939, 1941, 1942, 3594,
	1739, 4154, 245, 3512, 3062, 4071, 4059, 3966, 2005, 3506,
	3507, 246, 3895, 1417, 1417, 253, 2752, 3518, 3519, 3520,
	202, 252, 3889, 3856, 3517, 3515, 3516, 3508, 3509, 3510,
	3511, 3513, 3514, 3761, 3714, 4276, 245, 253, 3681, 3625,
	202, 252, 3471, 3470, 252, 246, 3465, 3522, 1932, 1933,
	1790, 3431, 1859, 3247, 3090, 2064, 245, 2063, 2062, 245,
	1760, 1723, 2059, 2051, 2049, 246, 252, 3003, 246, 3002,
	1909, 2967, 3512, 2960, 202, 2926, 1779, 1903, 1987, 2802,
	1935, 245, 3506, 3507, 2004, 2123, 2079, 2073, 252, 2072,
	246, 2007, 2071, 2070, 202, 2069, 2068, 3285, 2067, 2066,
	1224, 1224, 1224, 245, 251, 2065, 1224, 3269, 2046, 2045,
	2044, 2043, 246, 1347, 2042, 1347, 1934, 2041, 2040, 202,
	2039, 2038, 2037, 2036, 3518, 3519, 3520, 2035, 1985, 1808,
	1504, 3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514,
	2078, 202, 1224, 2034, 1844, 894, 1428, 2033, 2032, 2031,
	2020, 2166, 894, 2006, 1428, 253, 1428, 2003, 1998, 1441,
	1910, 2127, 2821, 1370, 1361, 2738, 2739, 2740, 2764, 2750,
	2744, 4863, 2746, 2747, 2745, 2732, 2733, 2734, 2735, 2736,
	2737, 4862, 2087, 1737, 3522, 3512, 4591, 2145, 4440, 1144,
	1914, 1913, 1906, 4369, 1143, 2195, 4117, 2197, 2134, 4083,
	4074, 3453, 2994, 2958, 1742, 4690, 252, 4442, 4116, 2060,
	3523, 2019, 3621, 2001, 3506, 3507, 1428, 1483, 2139, 1908,
	1466, 245, 1224, 2119, 1940, 3141, 1468, 1927, 1928, 2819,
	246, 1165, 5200, 3717, 4917, 4910, 4619, 251, 4562, 4561,
	4517, 5084, 4560, 4516, 1483, 2108, 1224, 4422, 2133, 4332,
	1932, 1933, 190, 4331, 1504, 2084, 2085, 2230, 3512, 202,
	1483, 4330, 4329, 4328, 4327, 1985, 4326, 2805, 4143, 4078,
	2803, 2052, 2053, 2254, 2253, 4077, 3897, 1483, 2262, 2260,
	2299, 1481, 1935, 3896, 3785, 3783, 3782, 5157, 253, 5155,
	4808, 1461, 2345, 1483, 4279, 4841, 1467, 3522, 2234, 4839,
	5080, 1456, 2058, 3953, 1461, 2129, 2101, 900, 2140, 2057,
	2267, 251, 2026, 1901, 900, 2189, 2041, 2041, 1934, 4206,
	3491, 3490, 3413, 2131, 2233, 3101, 1464, 4716, 251, 4172,
	903, 3183, 2248, 1121, 4269, 3683, 1313, 903, 2109, 252,
	2398, 4879, 2212, 2029, 2106, 2214, 2514, 3523, 3116, 1461,
	4880, 2219, 2099, 1860, 245, 2221, 2486, 4802, 1165, 1807,
	2224, 4880, 253, 246, 1816, 5113, 3517, 3515, 3516, 3508,
	3509, 3510, 3511, 3513, 3514, 2077, 2210, 4597, 1985, 253,
	3312, 3751, 1122, 3837, 4137, 3836, 4138, 3809, 4548, 1817,
	2364, 2399, 202, 2118, 2117, 4258, 2116, 2114, 2113, 2112,
	2257, 4212, 4203, 4182, 1345, 3923, 1345, 2103, 4736, 4667,
	41, 3647, 2580, 252, 2160, 1462, 2491, 1985, 2430, 2236,
	3506, 3507, 1611, 1626, 1626, 2146, 3459, 2132, 245, 3555,
	252, 4004, 2232, 2785, 1504, 2462, 3001, 246, 2163, 3510,
	3511, 3513, 3514, 2074, 5089, 245, 1325, 2054, 4708, 3817,
	2455, 1985, 1716, 2344, 246, 1640, 3099, 1437, 1399, 3143,
	3523, 2310, 5104, 2128, 5101, 4529, 202, 4527, 1741, 3875,
	3162, 3159, 1611, 2351, 3157, 4148, 4902, 2341, 4603, 2349,
	5013, 3686, 4167, 202, 3282, 2359, 1794, 2790, 2409, 2414,
	1773, 3792, 5192, 5137, 5158, 4767, 5159, 4739, 1342, 4735,
	1342, 4714, 3947, 3517, 3515, 3516, 3508, 3509, 3510, 3511,
	3513, 3514, 4503, 2274, 4225, 2275, 5090, 3651, 2263, 1839,
	2255, 2354, 2259, 1692, 2354, 2282, 2283, 1684, 1119, 1117,
	1626, 3038, 1626, 2308, 1626, 2276, 2277, 957, 2354, 1857,
	1458, 1115, 2280, 2281, 1642, 2237, 1742, 1858, 2304, 2573,
	1113, 5262, 1626, 1626, 2589, 4918, 1839, 2586, 3061, 1110,
	2258, 2316, 4760, 4747, 2249, 2571, 1626, 1468, 2626, 4551,
	4550, 4223, 4222, 1101, 3059, 4214, 3622, 4197, 1626, 4196,
	2378, 1626, 1626, 1626, 2791, 4194, 4224, 900, 2524, 4193,
	3061, 4181, 4140, 2401, 2402, 4501, 3512, 4139, 3653, 3342,
	3798, 2338, 2352, 4498, 3797, 894, 3059, 3753, 2451, 3615,
	903, 2403, 3464, 2587, 2835, 1693, 3463, 3462, 3516, 3508,
	3509, 3510, 3511, 3513, 3514, 1836, 1463, 1224, 2834, 2515,
	2624, 3461, 1838, 3225, 1468, 2656, 3417, 1467, 1647, 2456,
	3181, 1646, 2588, 4737, 2468, 3180, 1856, 3164, 3153, 958,
	2350, 2337, 2334, 3145, 2525, 3135, 2358, 3134, 1936, 1937,
	1938, 1939, 1941, 1942, 3716, 1224, 2792, 3126, 2789, 1838,
	2489, 2388, 2387, 1792, 2388, 2387, 3125, 3124, 1462, 2391,
	3106, 3105, 2415, 4709, 1163, 3066, 2075, 3683, 1459, 2519,
	2499, 1837, 3508, 3509, 3510, 3511, 3513, 3514, 1460, 2982,
	2399, 1224, 2379, 1224, 1467, 2699, 2486, 3279, 3522, 1907,
	1224, 5193, 5138, 2166, 2166, 1504, 2465, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1746, 1224, 1746, 1224, 1224, 1224, 1224,
	2437, 2478, 3749, 2476, 4644, 2438, 2353, 900, 2544, 2353,
	1739, 2470, 2473, 1165, 2473, 1165, 2454, 2628, 1451, 2474,
	1162, 4449, 1224, 2353, 2505, 806, 1224, 1224, 2625, 1985,
	903, 1442, 2310, 2995, 1224, 2154, 2615, 2482, 1224, 2483,
	1224, 1224, 3120, 1458, 4777, 2309, 1688, 3009, 1504, 2710,
	1741, 2436, 2652, 2653, 1224, 1224, 1224, 1224, 4497, 806,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 3103, 3514,
	1485, 1486, 2986, 1643, 2306, 2794, 4499, 1341, 3045, 1341,
	2708, 2523, 4482, 1729, 2610, 1728, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 2534, 1224, 1485, 1486, 1787,
	1224, 4518, 2766, 2767, 2308, 1942, 2623, 1385, 2785, 2302,
	4459, 3523, 1347, 1485, 1486, 2598, 2766, 2782, 4475, 1504,
	1107, 1809, 4468, 1461, 2567, 1727, 3133, 1726, 1347, 1463,
	2264, 2265, 3924, 3075, 3319, 2626, 2606, 2601, 1164, 2506,
	4466, 2510, 2307, 2830, 1224, 1504, 1485, 1486, 2639, 4470,
	1900, 1462, 1897, 1343, 1701, 1343, 2347, 4895, 3129, 3358,
	3089, 1855, 2876, 2876, 2890, 5158, 2766, 5195, 2578, 2910,
	2912, 2318, 2303, 3750, 4476, 4495, 2918, 4458, 2714, 2614,
	2613, 2612, 2714, 2620, 1817, 1144, 2627, 2585, 1144, 1144,
	2643, 1459, 2730, 2644, 2645, 1817, 2322, 2624, 2788, 754,
	2565, 1460, 3390, 2943, 2781, 3127, 960, 959, 1876, 3161,
	2528, 2972, 2722, 5224, 3405, 4151, 2160, 2160, 4469, 2720,
	2968, 1788, 2089, 3041, 2832, 1870, 749, 1440, 2704, 2833,
	2119, 3650, 2836, 5086, 2837, 2838, 2522, 1874, 1805, 5194,
	2163, 2163, 2935, 3160, 3158, 3088, 3043, 3156, 3130, 1428,
	1428, 3078, 2705, 3032, 2319, 2600, 2475, 2726, 2108, 2706,
	4178, 3934, 3371, 2711, 2794, 805, 2985, 1165, 1912, 5196,
	3508, 3509, 3510, 3511, 3513, 3514, 1458, 1165, 2779, 2380,
	3933, 1165, 3360, 2531, 3044, 2622, 4897, 3011, 2289, 4643,
	1504, 3033, 3060, 2290, 4164, 3128, 3993, 1793, 4870, 805,
	4500, 2392, 4549, 190, 4778, 3042, 4238, 4195, 2934, 2093,
	2989, 1003, 2696, 1111, 1111, 3008, 3027, 4776, 4192, 2957,
	5204, 2365, 2885, 4774, 2872, 2997, 1111, 2389, 2901, 1161,
	2916, 3007, 2914, 2572, 1155, 1112, 1093, 1456, 3052, 2166,
	2942, 1313, 2947, 2936, 1111, 2953, 2954, 2940, 2941, 2570,
	3030, 2924, 2925, 3102, 3404, 2625, 2060, 2106, 4125, 2096,
	4112, 1157, 1463, 2381, 3804, 1712, 2390, 4239, 2323, 3796,
	3990, 1165, 3747, 4773, 3163, 2091, 2309, 3035, 2361, 3123,
	3374, 807, 3104, 955, 5198, 954, 1461, 3656, 1504, 4471,
	4493, 4482, 3019, 2094, 3733, 1852, 4472, 5170, 3023, 2607,
	2597, 2532, 4775, 1345, 1626, 2360, 3067, 4477, 4496, 1156,
	2291, 4237, 3034, 3004, 5179, 807, 4162, 3029, 5087, 1345,
	1710, 1428, 2052, 2053, 1459, 3216, 3018, 4475, 2295, 4978,
	3021, 3174, 3022, 2623, 1460, 2324, 2325, 2092, 3109, 5178,
	2356, 2980, 1224, 1224, 3928, 1224, 3036, 1417, 3013, 4474,
	1687, 863, 3991, 1433, 3028, 3734, 1094, 5226, 3064, 2707,
	3428, 5145, 2320, 4351, 3077, 2794, 3121, 4350, 4478, 2709,
	3805, 1428, 3873, 2307, 2289, 3258, 3570, 3725, 3051, 2290,
	2421, 2420, 1791, 4476, 1093, 3872, 3039, 3397, 3398, 2694,
	3367, 3426, 2697, 3108, 3251, 1871, 1417, 1342, 3154, 3732,
	3139, 2207, 1626, 2357, 1690, 3802, 4990, 2292, 2297, 1157,
	2321, 1384, 3093, 1342, 5057, 1626, 5058, 1626, 3302, 3670,
	4700, 3373, 2365, 1626, 3220, 3266, 3107, 5085, 1417, 1417,
	3746, 3080, 3083, 3745, 1626, 1626, 3293, 3070, 3726, 3122,
	2599, 3132, 3742, 2693, 3114, 3115, 3117, 3118, 3119, 3307,
	908, 3175, 3053, 3054, 3370, 3142, 3055, 3056, 3872, 4494,
	1428, 1656, 1428, 1663, 2330, 1669, 2095, 3182, 4896, 861,
	1093, 3026, 3217, 3218, 3322, 3323, 4903, 915, 4925, 3764,
	3313, 3131, 3724, 5202, 1224, 3221, 3330, 3331, 3332, 750,
	3144, 3137, 5197, 2293, 3151, 1157, 2291, 2154, 2154, 900,
	3262, 3344, 2160, 3345, 1094, 4473, 1712, 3228, 1099, 1098,
	3310, 3309, 3230, 2335, 2295, 3167, 3168, 3169, 2340, 1461,
	3076, 2794, 903, 3652, 1789, 2331, 2163, 2394, 4976, 3219,
	2892, 2313, 1868, 1759, 1597, 1764, 190, 2326, 3226, 3423,
	804, 3304, 3710, 1872, 4578, 1108, 2300, 4483, 4484, 1778,
	1647, 1783, 1224, 3231, 3314, 2566, 1095, 3419, 1224, 1224,
	3320, 2713, 2348, 1818, 3340, 3372, 3346, 3245, 3698, 2329,
	3424, 3297, 1611, 4977, 3429, 751, 1641, 1368, 5144, 4251,
	2047, 3619, 2310, 1355, 2721, 3569, 2530, 2346, 2393, 4249,
	1094, 2342, 2314, 2292, 2297, 2527, 2368, 3317, 4471, 1357,
	5203, 2375, 3277, 3708, 3324, 4472, 3325, 3288, 2298, 3298,
	4639, 1439, 1875, 1004, 1224, 1224, 4477, 1842, 2971, 2327,
	1224, 2521, 1804, 1806, 3789, 1746, 1352, 752, 3697, 753,
	3376, 1869, 3378, 1224, 1224, 2336, 2312, 5205, 3671, 1224,
	1224, 3296, 3295, 1873, 2389, 1224, 3803, 3709, 3337, 2695,
	2365, 4347, 1911, 4163, 2300, 4656, 1099, 1098, 4474, 3061,
	5168, 5024, 3704, 4530, 3348, 5222, 3350, 3226, 3352, 773,
	3354, 3355, 1358, 2289, 3347, 3081, 4253, 4478, 2290, 2293,
	2093, 2776, 4939, 2390, 1997, 5123, 3469, 1096, 2939, 5227,
	1224, 1224, 1224, 3364, 4431, 5124, 1224, 3420, 862, 2952,
	1359, 4432, 1164, 4006, 1095, 5211, 1224, 995, 4252, 909,
	910, 4251, 4590, 1154, 4339, 1097, 4352, 3138, 2369, 3706,
	4687, 4249, 3385, 1224, 4554, 3396, 3452, 4113, 2287, 1374,
	2096, 1372, 2300, 3949, 996, 3387, 1341, 4931, 1611, 2294,
	3386, 3388, 1099, 1098, 1356, 1823, 2937, 4946, 5030, 1417,
	864, 4932, 1341, 4960, 860, 4638, 4818, 2639, 2636, 3406,
	3391, 4553, 4552, 4430, 2094, 4296, 3860, 3447, 3448, 3633,
	3425, 1100, 3451, 2979, 2444, 4579, 2086, 1371, 1364, 741,
	3427, 2208, 3339, 4768, 4274, 4933, 4045, 2089, 3705, 2285,
	1095, 1921, 5143, 1922, 2298, 2291, 2577, 3349, 1921, 3351,
	4396, 3353, 4348, 2642, 1611, 5232, 1611, 2311, 4253, 2250,
	4734, 1916, 1343, 2295, 4473, 1224, 1224, 1224, 1224, 3607,
	3418, 4684, 4827, 3677, 1224, 1224, 1224, 4877, 1343, 1224,
	4297, 2247, 4218, 2286, 3443, 1096, 4198, 980, 4149, 4147,
	4252, 1224, 1347, 1504, 3861, 3852, 3673, 1224, 2632, 1224,
	3562, 3563, 3379, 4935, 3267, 3381, 4483, 4484, 1347, 3178,
	3261, 912, 911, 1097, 985, 3249, 2469, 2332, 2463, 2457,
	2449, 2429, 2428, 3989, 2093, 4947, 1504, 2346, 4934, 1681,
	4812, 1376, 1165, 2154, 4133, 813, 4060, 2115, 1347, 4996,
	4250, 1504, 2292, 2297, 2348, 3950, 4936, 3065, 3458, 2930,
	1920, 4640, 3110, 1428, 2893, 3545, 1921, 1920, 2245, 3578,
	4963, 2579, 2243, 2166, 4299, 4608, 4353, 1504, 3587, 1100,
	4794, 1096, 3246, 3564, 2096, 2294, 1387, 1428, 2343, 913,
	914, 4792, 4711, 2345, 3689, 1428, 2933, 2095, 4247, 3635,
	2091, 3685, 1735, 3684, 3614, 2511, 3411, 3389, 4073, 1097,
	2372, 3567, 3566, 5122, 2503, 2246, 2492, 1224, 2094, 1846,
	1845, 2426, 1840, 4107, 2978, 2977, 997, 998, 3629, 1224,
	3574, 2976, 2339, 1353, 1922, 2975, 2974, 2932, 2293, 4257,
	2299, 1922, 2931, 1721, 3082, 2273, 3596, 1428, 3572, 4046,
	1162, 3672, 1733, 2166, 2633, 1002, 4890, 1722, 4723, 4569,
	4047, 3812, 2092, 3086, 4270, 1100, 4354, 2347, 3579, 4155,
	1224, 2370, 3620, 2467, 4397, 1920, 2299, 4144, 1997, 3660,
	3661, 3648, 4250, 3540, 3541, 3542, 1428, 5231, 4796, 1354,
	3722, 2300, 3605, 3654, 1456, 3601, 852, 3609, 3610, 3611,
	3612, 3687, 2385, 3556, 3691, 1428, 3593, 1428, 5165, 3736,
	4698, 3738, 3573, 3600, 3571, 2371, 3641, 3585, 4696, 3224,
	3577, 3584, 3688, 3588, 3589, 3693, 1224, 1224, 3695, 3925,
	2364, 3920, 3632, 853, 1504, 3626, 3627, 2364, 3628, 3617,
	3752, 3318, 4948, 3111, 3112, 1428, 3674, 4811, 3658, 3775,
	3229, 4134, 3680, 2298, 2344, 3227, 981, 982, 3583, 3591,
	3637, 3592, 1428, 3639, 3640, 4795, 3787, 1824, 3643, 4724,
	3644, 2496, 3645, 2398, 1797, 3586, 4719, 5002, 3767, 4718,
	3769, 4706, 3765, 3773, 4891, 4453, 4452, 3779, 5010, 4993,
	3701, 2095, 3659, 1345, 1626, 3719, 4403, 3638, 3780, 3743,
	3721, 3642, 4062, 2801, 4688, 4435, 1893, 1428, 1626, 1345,
	1626, 3723, 3649, 5032, 1504, 5169, 5167, 5106, 3762, 3735,
	4937, 894, 1626, 3737, 1895, 1892, 4938, 3608, 1890, 3657,
	2593, 4921, 4707, 999, 1000, 1626, 2160, 2800, 1864, 1345,
	1862, 1834, 4911, 1832, 812, 1830, 1428, 4145, 3806, 1828,
	3853, 1826, 2272, 4694, 1734, 1820, 4662, 4446, 1814, 3774,
	2163, 4395, 3707, 1347, 4256, 3537, 3965, 3868, 3822, 3580,
	3581, 3582, 5003, 3807, 3715, 3810, 3786, 3866, 3921, 4892,
	1812, 3728, 3842, 1731, 2294, 1626, 3918, 1342, 3731, 3851,
	1611, 1611, 3754, 3630, 3500, 3430, 3250, 1626, 3729, 1626,
	3152, 3146, 3730, 1342, 1732, 3100, 3307, 1001, 3006, 2602,
	2383, 2513, 3757, 2502, 2487, 3307, 2160, 2126, 3763, 2122,
	1896, 1772, 4780, 4451, 3538, 3945, 3859, 3944, 3776, 3936,
	2569, 3888, 1916, 1342, 2536, 3784, 3877, 2407, 2946, 3362,
	2163, 3788, 3794, 3361, 3910, 3132, 3327, 2621, 1851, 2539,
	2427, 1504, 2196, 2194, 1504, 2030, 1786, 3908, 1705, 3926,
	1309, 5078, 3845, 983, 984, 3256, 4531, 3901, 4205, 1611,
	4204, 3795, 4535, 4513, 4992, 5141, 3862, 3937, 4606, 4540,
	4526, 3916, 4601, 900, 4464, 2132, 4463, 3986, 1224, 4295,
	4286, 2454, 1109, 3799, 1224, 1224, 4221, 3108, 1224, 1224,
	1224, 3814, 1224, 3766, 4200, 4170, 903, 3843, 3865, 3848,
	3869, 1224, 2166, 3849, 4435, 190, 190, 2595, 1894, 1891,
	1224, 4168, 1889, 4146, 2594, 1224, 3855, 3850, 3838, 3280,
	3272, 1504, 1863, 3265, 1861, 1833, 3917, 1831, 3874, 1829,
	1224, 3257, 3242, 1827, 3241, 1825, 3748, 3883, 1504, 1819,
	3886, 3887, 1813, 3222, 3912, 3942, 2560, 3025, 2166, 2166,
	1224, 1224, 3020, 1224, 1224, 1224, 3943, 2425, 2423, 2400,
	2366, 3903, 3914, 2328, 1811, 2315, 2301, 1730, 3919, 2229,
	2226, 1224, 2223, 2220, 2215, 1224, 3902, 2166, 2166, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1224, 1165,
	1224, 4018, 3876, 4019, 3968, 2213, 3951, 2568, 1224, 1224,
	2166, 2535, 2209, 2200, 2406, 1224, 3793, 3393, 3930, 3777,
	3931, 5136, 3932, 5062, 2375, 1925, 1224, 2138, 1417, 1322,
	3409, 3948, 5159, 3911, 2251, 4889, 2605, 1347, 1347, 3382,
	3380, 1224, 2239, 2240, 1345, 3215, 2413, 2652, 4009, 1114,
	1116, 1118, 5044, 4954, 4622, 4547, 1323, 4450, 3308, 3655,
	2268, 1686, 4829, 3978, 3979, 3087, 3061, 3061, 4822, 4307,
	2310, 1887, 1888, 1504, 3899, 2526, 2652, 4024, 3973, 3975,
	4092, 3867, 3059, 3084, 2603, 2466, 1428, 1428, 3996, 1407,
	3985, 4057, 1408, 2563, 2558, 5043, 2533, 4504, 2893, 2893,
	4001, 1428, 1428, 4079, 894, 1428, 4008, 2154, 4542, 4053,
	3179, 4015, 3992, 3994, 3995, 4016, 1341, 1156, 1810, 4017,
	1932, 1933, 1478, 841, 1224, 1932, 1933, 4110, 4111, 3410,
	1611, 2604, 1341, 4021, 4848, 4023, 4721, 3091, 1342, 1926,
	4049, 3778, 4123, 4124, 4404, 4382, 4130, 3702, 3092, 3113,
	1475, 1929, 1224, 1435, 190, 1375, 5153, 1935, 4217, 5114,
	280, 4058, 1341, 3240, 4283, 2160, 4050, 4069, 4070, 2238,
	1324, 3092, 3940, 2450, 1408, 1446, 3159, 3157, 1408, 3166,
	3148, 3946, 4216, 3150, 3096, 1224, 1224, 2154, 1934, 2163,
	4066, 4067, 1343, 1934, 844, 844, 858, 3149, 3095, 3909,
	3904, 3905, 3906, 3907, 3094, 4064, 1867, 5001, 1343, 738,
	4983, 2160, 2160, 4953, 4950, 4888, 4813, 4787, 4699, 4293,
	4285, 4273, 4089, 3854, 1224, 1224, 3287, 2917, 4081, 2235,
	2147, 4150, 1224, 5199, 4720, 2163, 2163, 3136, 1343, 3913,
	2160, 2160, 1639, 1638, 1632, 5034, 1158, 3618, 4119, 2385,
	5035, 5230, 4082, 1626, 1626, 1650, 1626, 3506, 3507, 4952,
	1626, 4183, 4374, 1626, 2163, 2163, 900, 4126, 1428, 2796,
	4131, 5172, 4235, 2160, 4132, 1932, 1933, 2279, 3047, 5034,
	2893, 2893, 2893, 2893, 5035, 4115, 4188, 4190, 1649, 903,
	1796, 4187, 1650, 2166, 2278, 3046, 1795, 2163, 3365, 2831,
	2279, 2278, 1866, 4292, 4814, 1865, 4761, 4544, 4213, 4539,
	4538, 4219, 4207, 4433, 4429, 4428, 4370, 4344, 4114, 3997,
	3771, 4229, 4175, 4169, 3768, 4171, 3368, 2024, 1345, 1345,
	2023, 4180, 3384, 2609, 5215, 5180, 5048, 1626, 4987, 4986,
	4985, 4920, 4919, 1224, 4866, 4240, 4241, 4864, 4790, 4751,
	4691, 1347, 1224, 4300, 4309, 4282, 4686, 4266, 3108, 4685,
	4683, 1626, 4682, 4680, 4586, 4566, 1626, 1626, 1626, 4502,
	4441, 4315, 4427, 4255, 4426, 4425, 4320, 4313, 4243, 4260,
	4166, 4158, 4234, 3858, 3857, 4280, 3694, 3636, 3369, 1626,
	3293, 1626, 3680, 4236, 3359, 3336, 1626, 3335, 1504, 3334,
	3333, 4220, 3271, 3175, 3307, 4226, 4301, 3244, 3243, 4304,
	3085, 4317, 4259, 4272, 3016, 4244, 4233, 4281, 4268, 3010,
	2999, 2998, 1342, 1342, 2987, 2725, 1504, 4321, 2596, 1224,
	1224, 2564, 2557, 2556, 1232, 1224, 1224, 2166, 4284, 2555,
	1224, 1224, 2554, 1224, 2553, 2464, 2439, 2435, 1224, 2434,
	4289, 2433, 2432, 2431, 4335, 4245, 2203, 2202, 4254, 1224,
	2201, 2199, 2137, 2136, 1886, 1885, 1821, 1700, 4333, 4287,
	1699, 1698, 1697, 4336, 1696, 1224, 1695, 1341, 4302, 1694,
	1689, 1685, 287, 287, 287, 4303, 744, 745, 1683, 760,
	744, 760, 771, 1682, 4310, 811, 4318, 4305, 4311, 831,
	1616, 1615, 4319, 1614, 838, 838, 838, 838, 1495, 1494,
	4356, 1493, 4355, 1492, 287, 1491, 1438, 1394, 1393, 4368,
	1392, 3234, 1391, 1417, 3237, 1390, 3239, 1389, 4337, 1388,
	1386, 1381, 1380, 1379, 976, 4349, 1347, 1378, 1377, 4364,
	1304, 287, 969, 8, 1347, 2241, 2154, 1120, 1504, 1504,
	1106, 1504, 4894, 1343, 4481, 4480, 2160, 4479, 1347, 2592,
	97, 1691, 932, 91, 2373, 4334, 4165, 1070, 5031, 1626,
	1626, 4409, 3284, 4924, 1674, 3284, 940, 5012, 3696, 3184,
	2163, 2538, 1822, 2540, 3595, 2959, 4975, 4378, 3468, 1504,
	4855, 4655, 2154, 2154, 2799, 2028, 3549, 93, 1208, 1254,
	4577, 4576, 4465, 4152, 4343, 3825, 2454, 4573, 4572, 2151,
	2153, 1172, 1507, 5056, 1224, 2252, 5221, 4436, 4437, 1214,
	2266, 2154, 2154, 2261, 3000, 1347, 4394, 1347, 2875, 1231,
	1228, 2155, 4412, 4414, 2157, 1230, 1229, 2156, 2048, 1227,
	2150, 4291, 1345, 3252, 3291, 3884, 1740, 1738, 1072, 2256,
	4454, 4455, 1428, 4491, 2154, 2719, 4512, 4492, 2783, 3356,
	3457, 4417, 1504, 4408, 1428, 190, 4405, 1428, 4521, 4406,
	4407, 4524, 4401, 4411, 4410, 2021, 4508, 4509, 4457, 4505,
	744, 744, 1224, 1188, 1210, 1504, 4439, 4421, 287, 4418,
	2780, 1369, 1199, 3575, 3554, 3871, 4088, 2631, 1502, 4445,
	2160, 4506, 4448, 949, 3503, 4460, 2786, 1360, 2898, 2891,
	2887, 3646, 3281, 4462, 1902, 4669, 1999, 3292, 4447, 4434,
	1898, 1472, 1192, 3600, 2163, 2717, 2012, 1626, 1626, 4456,
	3435, 2641, 4543, 3878, 4545, 3598, 1342, 2993, 5037, 4005,
	3366, 2443, 1321, 1320, 1367, 1319, 5018, 5015, 2363, 4580,
	3820, 3821, 2244, 3040, 1428, 2729, 3839, 1204, 4592, 1610,
	4528, 1341, 1341, 2584, 4507, 4511, 1504, 3938, 4546, 4537,
	3560, 1626, 4271, 1702, 4570, 4728, 4567, 1216, 4520, 1984,
	3211, 4523, 3210, 4883, 1457, 4525, 1455, 4609, 4564, 4522,
	4488, 1454, 4488, 4565, 1453, 5189, 3177, 1626, 1626, 1626,
	1626, 1626, 1626, 1626, 2893, 2893, 4598, 4557, 2376, 4161,
	4160, 4159, 4593, 250, 289, 3403, 4563, 1923, 1504, 1915,
	247, 249, 248, 3700, 4093, 3604, 1798, 1345, 4556, 4555,
	1224, 1224, 1224, 5112, 4185, 1345, 3811, 1343, 1343, 25,
	4610, 845, 846, 847, 4575, 3050, 4571, 2271, 1504, 1345,
	4604, 4583, 4613, 1224, 4589, 4587, 1224, 1224, 4582, 1474,
	4136, 4641, 24, 4627, 23, 22, 1224, 4631, 21, 2166,
	120, 44, 20, 4611, 1224, 1224, 162, 160, 137, 157,
	156, 4595, 129, 1417, 155, 154, 153, 152, 4633, 151,
	159, 1504, 150, 1626, 2893, 2893, 2893, 2893, 2893, 2893,
	2893, 2893, 2893, 2893, 2893, 2893, 2893, 2893, 2893, 2893,
	2893, 2893, 2893, 2893, 4647, 2893, 1345, 1428, 1345, 4642,
	4624, 1342, 4625, 149, 144, 148, 4618, 1619, 147, 1342,
	146, 145, 143, 141, 142, 136, 140, 2154, 139, 1504,
	138, 135, 134, 1342, 133, 132, 131, 1224, 130, 128,
	161, 127, 126, 2454, 204, 125, 124, 123, 4693, 122,
	1224, 121, 824, 825, 63, 62, 117, 1676, 118, 1224,
	19, 4664, 42, 14, 2166, 4675, 4676, 67, 68, 4705,
	1417, 4658, 18, 4634, 1224, 4635, 13, 1224, 4652, 4678,
	37, 4679, 96, 109, 108, 4702, 107, 4703, 38, 104,
	36, 17, 16, 1224, 15, 102, 1224, 101, 100, 35,
	1342, 33, 1342, 1504, 11, 9, 4731, 39, 1186, 1754,
	2110, 1428, 12, 5, 195, 4770, 194, 4754, 197, 4755,
	4701, 1626, 1626, 1626, 4704, 1769, 193, 4710, 196, 95,
	192, 2299, 191, 94, 31, 10, 187, 4806, 4278, 87,
	189, 4750, 1347, 188, 186, 185, 184, 88, 85, 183,
	90, 182, 86, 89, 29, 6, 4779, 66, 7, 4636,
	3922, 4766, 112, 4740, 113, 1341, 4789, 1504, 4797, 4805,
	1626, 2154, 40, 83, 4800, 82, 4753, 4752, 4793, 81,
	4748, 80, 28, 65, 27, 1799, 4823, 4784, 4785, 3822,
	179, 228, 227, 226, 225, 224, 223, 222, 4763, 221,
	216, 220, 4810, 218, 217, 4828, 1224, 1224, 219, 215,
	241, 240, 4782, 4781, 239, 238, 237, 4786, 231, 230,
	236, 4791, 2160, 1224, 2166, 4769, 4809, 4742, 4743, 235,
	234, 4832, 233, 4834, 232, 229, 4771, 4804, 244, 4824,
	4826, 1343, 76, 214, 213, 212, 2163, 210, 206, 1182,
	1428, 4820, 209, 1428, 211, 1428, 1428, 4613, 4825, 4831,
	208, 207, 205, 4762, 4830, 4764, 243, 4765, 2125, 242,
	77, 1362, 177, 1224, 178, 1224, 75, 1224, 176, 4836,
	175, 174, 4844, 4845, 173, 3711, 3712, 1347, 3713, 172,
	4878, 4865, 171, 170, 4867, 74, 4868, 4869, 181, 180,
	1224, 26, 1347, 2, 1, 1383, 4876, 4488, 0, 0,
	0, 0, 0, 0, 0, 0, 4843, 287, 0, 287,
	287, 0, 1412, 287, 1422, 0, 4853, 2160, 4906, 0,
	0, 0, 0, 0, 0, 1436, 0, 0, 0, 3758,
	3759, 4875, 3760, 831, 4874, 0, 831, 0, 4871, 0,
	1341, 2163, 0, 0, 0, 4905, 0, 0, 1341, 1347,
	1347, 4898, 4847, 0, 0, 0, 0, 0, 4927, 838,
	0, 0, 1341, 4929, 0, 0, 4899, 1347, 0, 0,
	1347, 0, 0, 0, 1626, 4942, 4943, 0, 0, 0,
	0, 0, 2270, 287, 1626, 287, 287, 1412, 0, 287,
	287, 4916, 0, 4957, 4914, 0, 4959, 0, 1422, 1224,
	1224, 0, 0, 4922, 0, 0, 0, 0, 0, 1224,
	0, 4756, 287, 0, 1652, 0, 1343, 0, 4940, 4971,
	0, 4972, 0, 1345, 1343, 0, 0, 4951, 0, 1341,
	1672, 1341, 4809, 0, 4956, 0, 0, 1679, 1343, 4965,
	4967, 0, 4488, 4964, 4970, 4969, 0, 0, 4968, 0,
	0, 0, 4988, 0, 0, 0, 1704, 4488, 1422, 0,
	1224, 1224, 287, 287, 1224, 1412, 4980, 0, 1626, 1428,
	5009, 4984, 1428, 0, 0, 4979, 0, 2160, 4915, 0,
	1611, 0, 0, 0, 4991, 0, 831, 0, 287, 287,
	0, 0, 0, 5036, 4999, 5000, 0, 0, 0, 5033,
	1766, 2163, 5040, 5017, 5020, 1343, 5008, 1343, 5007, 0,
	5028, 1774, 0, 5029, 4488, 4488, 976, 1342, 0, 5039,
	0, 5026, 5061, 0, 4989, 5022, 0, 1224, 1224, 1224,
	0, 5059, 4488, 5027, 0, 4488, 5021, 0, 0, 0,
	5025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5045, 0, 0, 0, 5052, 5049, 0,
	0, 0, 2418, 5093, 1224, 0, 0, 5060, 1345, 0,
	0, 0, 0, 0, 0, 5098, 0, 5076, 5073, 5074,
	5075, 0, 0, 1345, 0, 0, 5094, 0, 0, 0,
	0, 0, 0, 2154, 0, 0, 5121, 287, 2299, 0,
	0, 0, 5120, 1417, 5119, 5095, 0, 0, 5096, 0,
	0, 0, 5127, 0, 0, 5109, 0, 5129, 0, 0,
	1224, 287, 0, 5111, 5133, 0, 0, 0, 1428, 0,
	5126, 0, 5142, 4789, 5125, 0, 0, 0, 0, 0,
	1345, 1345, 0, 0, 5134, 0, 5135, 0, 5152, 5160,
	0, 0, 0, 0, 0, 5148, 5149, 0, 1345, 0,
	0, 1345, 1342, 5139, 5156, 5154, 0, 5163, 5151, 5150,
	0, 0, 0, 5175, 5162, 0, 5164, 1342, 0, 1347,
	0, 1347, 5166, 5185, 5176, 0, 5173, 0, 5171, 0,
	5177, 5183, 5182, 5174, 0, 5181, 5017, 0, 2154, 5020,
	0, 0, 0, 0, 0, 5184, 0, 5186, 5191, 5039,
	0, 0, 0, 5190, 0, 0, 0, 0, 0, 0,
	1428, 0, 0, 1186, 1186, 1186, 0, 0, 0, 5207,
	5213, 5206, 0, 5214, 1342, 1342, 0, 5217, 5108, 0,
	0, 5110, 0, 0, 5212, 0, 5225, 5216, 0, 0,
	1224, 1224, 1342, 0, 5219, 1342, 5223, 0, 0, 1224,
	1224, 5210, 5228, 0, 1588, 0, 5233, 0, 5239, 0,
	0, 0, 0, 5237, 0, 5244, 5248, 0, 0, 5243,
	0, 5249, 5240, 5247, 5245, 3293, 5242, 5241, 0, 0,
	5246, 0, 0, 0, 0, 0, 5253, 1428, 5254, 5256,
	5252, 5257, 0, 5261, 5259, 5258, 0, 5255, 0, 5264,
	0, 0, 0, 0, 0, 3293, 0, 1224, 0, 0,
	0, 5268, 0, 5270, 5261, 5265, 744, 0, 5272, 3910,
	0, 0, 0, 5267, 0, 5234, 5235, 0, 0, 0,
	0, 0, 3908, 2655, 4488, 0, 4488, 287, 0, 287,
	0, 4096, 3901, 287, 0, 0, 1341, 0, 2154, 0,
	0, 2893, 0, 0, 0, 0, 1652, 1412, 1422, 287,
	0, 287, 2135, 3432, 3433, 0, 0, 0, 0, 287,
	2484, 760, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 5269, 1932, 1933, 0, 0, 2498, 2500,
	0, 0, 2204, 0, 0, 0, 4097, 0, 0, 0,
	0, 0, 2504, 0, 287, 0, 0, 0, 1963, 0,
	0, 287, 5236, 0, 2512, 0, 1935, 2516, 2517, 2518,
	0, 0, 1343, 4098, 0, 4095, 2797, 0, 0, 3912,
	0, 0, 2893, 0, 4106, 964, 0, 0, 0, 0,
	4104, 0, 0, 1988, 831, 0, 3903, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	1345, 3902, 1345, 78, 0, 967, 966, 0, 0, 0,
	0, 0, 0, 0, 0, 4105, 0, 0, 0, 0,
	4101, 79, 838, 0, 838, 0, 0, 0, 0, 78,
	0, 1341, 0, 0, 838, 838, 0, 0, 84, 0,
	0, 3202, 0, 0, 0, 4102, 1341, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3911, 0,
	0, 0, 0, 2969, 84, 4288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3192, 3190, 0, 0, 92,
	0, 0, 3194, 3196, 3186, 3530, 3531, 3532, 3533, 0,
	0, 0, 0, 0, 1342, 0, 1342, 0, 0, 0,
	1940, 0, 0, 1341, 1341, 92, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	970, 1341, 1343, 0, 1341, 3212, 0, 0, 0, 0,
	0, 0, 4338, 51, 0, 114, 0, 0, 0, 0,
	0, 98, 111, 0, 0, 0, 970, 0, 0, 0,
	0, 1631, 0, 1962, 1964, 0, 0, 0, 2893, 51,
	0, 114, 0, 0, 0, 0, 0, 98, 111, 0,
	0, 0, 0, 0, 0, 1932, 1933, 0, 4099, 1343,
	1343, 0, 0, 0, 0, 287, 4100, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 1343, 0, 1963,
	1343, 0, 0, 0, 0, 99, 0, 1935, 3049, 0,
	2893, 0, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3909, 3904, 3905, 3906, 3907, 0,
	0, 99, 0, 0, 1988, 2893, 0, 0, 0, 0,
	4103, 0, 0, 1934, 0, 0, 287, 0, 0, 0,
	287, 0, 0, 0, 1954, 287, 0, 0, 0, 0,
	0, 287, 0, 1951, 3913, 0, 0, 0, 0, 0,
	0, 3188, 0, 0, 1588, 0, 0, 287, 0, 287,
	0, 0, 3204, 744, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 831, 0, 0,
	0, 976, 0, 0, 0, 0, 3203, 3193, 3191, 3195,
	3197, 3187, 3189, 3205, 3207, 0, 0, 0, 0, 3964,
	0, 0, 0, 0, 3199, 3201, 3209, 0, 0, 0,
	0, 287, 0, 1412, 287, 0, 0, 0, 0, 0,
	0, 1957, 1958, 1959, 1960, 0, 0, 0, 0, 831,
	0, 1940, 0, 0, 0, 0, 287, 0, 0, 103,
	3213, 0, 0, 0, 2537, 0, 0, 0, 0, 287,
	287, 0, 287, 0, 287, 1956, 287, 0, 287, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 2574, 1962, 1964, 2575, 0, 2576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 106,
	0, 4533, 110, 287, 287, 287, 287, 0, 0, 0,
	1949, 1950, 0, 1341, 0, 1341, 0, 1987, 0, 0,
	0, 0, 0, 0, 198, 106, 0, 0, 110, 251,
	0, 0, 811, 0, 0, 0, 831, 971, 0, 0,
	0, 0, 158, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 2010, 0, 3206,
	0, 2015, 0, 971, 4585, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 4594, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 1343, 0, 0, 0, 0, 0, 0, 0, 4617,
	0, 0, 0, 0, 0, 0, 253, 163, 0, 0,
	0, 0, 0, 0, 1936, 1937, 1938, 1939, 1941, 1942,
	3176, 0, 0, 203, 1985, 0, 0, 0, 0, 2731,
	3214, 252, 0, 163, 0, 0, 0, 0, 0, 3198,
	3200, 3208, 0, 0, 0, 0, 245, 0, 0, 203,
	0, 0, 0, 0, 0, 246, 0, 252, 1588, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 1961, 965, 199, 0, 0, 0, 3961,
	3962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 1956, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 3506, 3507, 744, 3524, 3525, 3526, 0,
	0, 0, 287, 0, 744, 0, 0, 0, 0, 3321,
	0, 0, 4697, 0, 0, 0, 287, 0, 0, 0,
	3328, 3329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 1422, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4025,
	4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035,
	4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 0,
	4048, 0, 3521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 1422, 0, 0, 760,
	0, 760, 0, 0, 0, 3015, 0, 0, 0, 0,
	0, 287, 0, 0, 287, 0, 0, 0, 287, 0,
	287, 0, 0, 78, 0, 1412, 0, 287, 287, 0,
	1422, 1422, 3031, 0, 0, 0, 0, 287, 0, 1952,
	1948, 79, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941,
	1942, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3512,
	0, 838, 838, 0, 0, 838, 838, 0, 0, 0,
	0, 0, 0, 0, 3074, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1588,
	287, 3561, 0, 0, 0, 3529, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 0, 0,
	970, 0, 0, 0, 831, 0, 0, 0, 0, 3528,
	0, 0, 0, 0, 3590, 114, 0, 0, 1179, 0,
	0, 98, 111, 0, 0, 0, 0, 0, 0, 3603,
	0, 287, 78, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 287, 3172, 1652, 0, 0, 0,
	79, 3522, 0, 0, 0, 3624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 1588, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 3232, 0, 0, 99, 0, 0, 0, 4912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 1652,
	0, 0, 287, 0, 0, 0, 0, 0, 4926, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3276, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	3074, 0, 744, 1588, 4955, 0, 0, 0, 0, 970,
	0, 3172, 976, 3074, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 114, 0, 0, 0, 0, 1588,
	98, 111, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 1412, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1422, 287, 0,
	0, 1412, 0, 1412, 3523, 1412, 0, 0, 0, 2990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978,
	0, 0, 287, 287, 287, 287, 1412, 0, 0, 1412,
	0, 287, 0, 0, 1969, 1963, 287, 0, 0, 0,
	0, 5046, 0, 1935, 5047, 0, 0, 0, 0, 0,
	0, 0, 3603, 1982, 0, 0, 0, 0, 198, 106,
	0, 0, 110, 0, 0, 0, 0, 287, 0, 0,
	1988, 0, 0, 0, 1588, 287, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	1954, 0, 0, 0, 0, 0, 0, 971, 0, 1951,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3518, 3519, 3520, 0, 0, 0, 0,
	3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 0,
	253, 1932, 1933, 0, 0, 0, 0, 2723, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 1963, 0, 163, 0, 0,
	0, 0, 1588, 1935, 0, 0, 0, 1957, 1958, 1959,
	1960, 0, 0, 203, 0, 0, 0, 1940, 0, 3939,
	0, 252, 1502, 0, 0, 0, 0, 0, 0, 0,
	1988, 1652, 0, 0, 0, 0, 245, 198, 106, 1934,
	0, 110, 0, 0, 0, 246, 0, 0, 1631, 199,
	1954, 0, 0, 0, 0, 1631, 0, 0, 0, 1951,
	1973, 0, 0, 1983, 0, 0, 0, 0, 251, 0,
	1962, 1964, 0, 0, 202, 0, 971, 0, 0, 0,
	3790, 158, 0, 0, 0, 0, 0, 1979, 0, 1980,
	0, 0, 0, 0, 0, 0, 1949, 1950, 0, 3982,
	3506, 3507, 0, 3524, 3525, 3526, 0, 0, 3815, 0,
	0, 0, 0, 0, 1971, 3959, 3998, 0, 0, 253,
	0, 3844, 0, 4360, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 1957, 1958, 1959,
	1960, 0, 0, 0, 0, 0, 163, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	252, 3891, 0, 0, 0, 0, 287, 0, 1981, 3521,
	0, 0, 0, 3915, 0, 245, 0, 0, 0, 0,
	0, 0, 287, 0, 246, 0, 0, 744, 199, 1970,
	1962, 1964, 744, 0, 0, 744, 0, 0, 744, 744,
	1985, 0, 0, 0, 744, 0, 0, 0, 0, 0,
	0, 0, 287, 1751, 0, 0, 1949, 1950, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 3506, 3507, 0, 3524, 3525, 3526, 0,
	0, 4091, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 3970, 0, 0, 1961,
	0, 0, 0, 0, 0, 287, 3512, 0, 0, 287,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 4661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3074, 3074, 287, 0, 3666, 3669, 0,
	1974, 0, 3521, 0, 3074, 0, 2135, 0, 0, 0,
	0, 0, 0, 0, 0, 3074, 2135, 0, 3074, 2135,
	1985, 0, 2135, 0, 0, 3666, 3528, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 287, 287, 3669,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4713, 3669, 0,
	287, 0, 3741, 0, 3741, 0, 0, 0, 3522, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3074, 0, 3074, 0, 3772, 3074, 3669, 3512,
	0, 3074, 1956, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 3669, 0, 0, 831, 0,
	0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945, 1943,
	1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0,
	0, 0, 4387, 0, 0, 0, 4386, 0, 0, 1985,
	1412, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 3528,
	0, 0, 0, 0, 0, 287, 0, 3816, 0, 0,
	0, 3818, 3074, 0, 0, 287, 0, 0, 287, 0,
	0, 3847, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 3522, 3276, 0, 0, 1412, 0, 287, 0, 0,
	3074, 0, 744, 0, 0, 0, 0, 0, 0, 3074,
	0, 3523, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 4852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 1948, 0, 1945, 1943,
	1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 3929, 0,
	0, 0, 78, 0, 0, 1588, 0, 0, 0, 1932,
	1933, 1631, 1985, 0, 0, 4882, 0, 0, 3935, 0,
	79, 0, 1652, 0, 0, 0, 1412, 287, 0, 287,
	0, 1588, 0, 1963, 0, 1412, 0, 84, 0, 0,
	4904, 1935, 0, 0, 0, 0, 0, 0, 0, 4227,
	4228, 0, 0, 0, 0, 0, 4230, 0, 0, 4231,
	0, 0, 0, 0, 0, 0, 287, 0, 1988, 0,
	0, 1186, 0, 0, 0, 0, 0, 1934, 92, 0,
	0, 0, 0, 1186, 0, 0, 3506, 3507, 1954, 3524,
	3525, 3526, 1631, 1631, 3523, 0, 0, 1951, 0, 0,
	3518, 3519, 3520, 0, 0, 0, 0, 3517, 3515, 3516,
	3508, 3509, 3510, 3511, 3513, 3514, 0, 0, 0, 970,
	0, 0, 3506, 3507, 4003, 3524, 3525, 3526, 0, 4416,
	0, 0, 51, 0, 114, 0, 0, 0, 0, 0,
	98, 111, 0, 0, 0, 3969, 0, 1932, 1933, 0,
	0, 0, 0, 3958, 0, 0, 0, 4316, 0, 0,
	0, 0, 2498, 4322, 4323, 3521, 0, 4443, 0, 0,
	0, 1963, 0, 0, 0, 1957, 1958, 1959, 1960, 1935,
	1968, 0, 0, 0, 0, 1940, 0, 0, 1588, 0,
	0, 0, 4341, 0, 0, 0, 0, 0, 0, 0,
	0, 3521, 0, 0, 99, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 287, 287, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 0, 0, 1962, 1964,
	0, 0, 0, 3518, 3519, 3520, 744, 744, 0, 0,
	3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 0,
	0, 0, 3512, 0, 1949, 1950, 0, 0, 1588, 0,
	0, 0, 0, 0, 1631, 1631, 1631, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 3421, 0, 0, 0, 0, 0, 1955, 3512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 1958, 1959, 1960, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 3528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 4423, 4424, 0, 3528, 0,
	0, 831, 0, 0, 3522, 0, 1962, 1964, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 4199, 0, 0,
	4201, 4202, 1949, 1950, 0, 1588, 0, 3741, 1588, 0,
	3522, 0, 0, 0, 0, 0, 0, 198, 106, 0,
	0, 110, 287, 0, 0, 0, 4653, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 3172, 1961, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 3669, 0, 287, 0, 1985, 971, 760, 760, 1422,
	1956, 158, 0, 0, 0, 0, 0, 0, 0, 4653,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 3276, 1588, 0, 3276, 2135, 0,
	0, 1985, 0, 287, 0, 0, 0, 0, 0, 253,
	3847, 0, 1588, 0, 0, 287, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 287, 1985, 2655, 0, 0,
	0, 0, 1987, 2498, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 3074, 287, 0, 3523, 0, 0,
	0, 0, 203, 0, 3172, 0, 0, 976, 3074, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 3523, 246, 1961, 0, 0, 199, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2655, 0, 4626, 0, 4628, 4629, 4630, 1956, 4632,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 1952, 1948, 0, 1945, 1943, 1944, 1936,
	1937, 1938, 1939, 1941, 1942, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4379, 0, 0,
	1987, 0, 0, 1968, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3518, 3519, 3520, 4681,
	0, 0, 0, 3517, 3515, 3516, 3508, 3509, 3510, 3511,
	3513, 3514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 3518, 3519, 3520, 0, 1652, 0, 287, 3517,
	3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938,
	1939, 1941, 1942, 0, 0, 0, 1968, 1422, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	1422, 0, 287, 1422, 0, 1968, 0, 0, 0, 0,
	1968, 0, 0, 0, 3074, 3074, 0, 3666, 1631, 1631,
	3741, 3074, 0, 0, 0, 0, 0, 0, 0, 4490,
	0, 4490, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3074, 0, 2135, 0, 4783, 0, 3666,
	0, 1652, 1652, 287, 3669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3669, 0, 287,
	3669, 0, 287, 0, 0, 3741, 1968, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3074, 0, 3074, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 1631,
	1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
	1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 3074, 3074,
	0, 0, 0, 169, 3276, 3276, 0, 0, 0, 0,
	0, 3666, 78, 0, 48, 47, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 287, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 1588, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 0, 0, 0, 50, 0, 166, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 1968, 1968,
	1968, 1968, 1968, 1968, 1968, 1968, 49, 0, 92, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 78, 0, 52, 70, 0, 0, 0,
	0, 0, 0, 0, 53, 0, 0, 0, 0, 59,
	0, 79, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 114, 0, 0, 0, 84, 0,
	98, 111, 0, 0, 0, 0, 0, 2897, 71, 0,
	0, 0, 2868, 2869, 2870, 2871, 2864, 2865, 2866, 2867,
	0, 1968, 0, 0, 0, 0, 0, 1968, 0, 0,
	2498, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 1588, 1588, 54, 1588, 0, 0, 3074, 2135,
	0, 2135, 0, 0, 3847, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 4729, 0, 4729, 0, 0, 0, 0,
	970, 0, 0, 1588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 2844, 2845, 2846, 2847,
	831, 98, 111, 0, 0, 0, 0, 0, 1186, 0,
	0, 3741, 1652, 0, 1652, 1412, 0, 0, 0, 0,
	2856, 2857, 2858, 2859, 2852, 2853, 2854, 2855, 2860, 2861,
	2862, 2863, 0, 0, 3669, 0, 287, 0, 0, 0,
	0, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1588, 0, 0, 0,
	0, 0, 0, 3847, 0, 99, 4490, 0, 0, 1652,
	0, 0, 0, 3074, 0, 0, 0, 0, 0, 1588,
	0, 0, 0, 0, 0, 0, 0, 0, 4817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1652, 0, 0, 2840, 2841, 2842, 2843, 2848, 2849, 2850,
	2851, 0, 2088, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 287,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4003, 58, 0, 0, 0, 0, 61, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 60, 198, 106, 0,
	0, 110, 0, 3741, 4873, 56, 0, 0, 0, 168,
	0, 3847, 0, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 4490, 1588, 0, 0, 0, 64, 0, 0, 103,
	0, 158, 0, 0, 0, 0, 4490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 1588, 0, 0, 0, 867, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 198, 106,
	0, 0, 110, 4490, 4490, 1588, 163, 0, 0, 0,
	0, 0, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 4490, 203, 287, 4490, 0, 0, 0, 0, 251,
	252, 0, 0, 0, 2135, 879, 1171, 971, 0, 0,
	0, 0, 158, 0, 1652, 245, 1652, 0, 0, 0,
	0, 0, 0, 1588, 246, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1422, 0, 0, 0, 0,
	253, 0, 0, 202, 0, 0, 3, 0, 872, 4997,
	0, 0, 0, 0, 0, 888, 0, 0, 0, 0,
	0, 1186, 0, 0, 0, 4729, 0, 163, 287, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 203, 0, 0, 0, 1588, 0, 0,
	0, 252, 0, 3074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 1968,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 199,
	0, 0, 876, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 806,
	0, 0, 0, 0, 202, 0, 0, 4003, 0, 1968,
	0, 1588, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 874, 1968, 0, 0,
	0, 1652, 0, 0, 0, 0, 1968, 1968, 1968, 1968,
	1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
	1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
	1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1968,
	1968, 1968, 0, 0, 0, 0, 0, 1968, 0, 1968,
	1968, 1968, 1968, 0, 0, 887, 0, 0, 0, 0,
	0, 2897, 2897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3847, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978, 0,
	0, 0, 0, 3074, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 4490, 1963, 4490, 0, 1968, 1652, 0,
	0, 0, 1935, 0, 0, 0, 0, 869, 0, 286,
	286, 286, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 1988,
	1968, 0, 0, 1968, 0, 0, 1968, 0, 1934, 0,
	873, 901, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 1951, 3074,
	0, 0, 0, 0, 0, 0, 1631, 0, 901, 0,
	0, 0, 0, 0, 0, 0, 3172, 0, 0, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3074,
	0, 0, 0, 0, 0, 883, 0, 0, 0, 0,
	0, 871, 0, 3172, 0, 0, 0, 0, 1968, 0,
	0, 3527, 0, 2897, 2897, 2897, 2897, 0, 0, 1968,
	0, 1968, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1958, 1959, 1960,
	0, 0, 0, 0, 0, 0, 1940, 0, 0, 0,
	0, 868, 0, 0, 0, 1186, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 1983, 0, 0, 807, 0, 0, 0, 1962,
	1964, 0, 0, 0, 0, 0, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 1979, 0, 1980, 0,
	0, 0, 0, 0, 0, 1949, 1950, 0, 0, 0,
	0, 885, 886, 0, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1431, 0, 0, 1969, 1963, 0,
	0, 0, 0, 0, 1631, 0, 1935, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 1171, 1171, 1171, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 1985,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 1654, 0, 1660, 0, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 0, 0, 0, 0, 1974,
	1940, 0, 0, 0, 1968, 1968, 0, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 1762, 0, 1932, 1933,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	1776, 0, 1781, 1973, 0, 0, 1983, 0, 0, 0,
	0, 0, 1963, 1962, 1964, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 1980, 0, 0, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 1972,
	0, 1847, 1955, 0, 1853, 0, 0, 0, 0, 0,
	1946, 1947, 1953, 1975, 1952, 1948, 1968, 1945, 1943, 1944,
	1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 1968, 1968, 0, 2897, 2897, 0,
	0, 1968, 0, 1985, 1957, 1958, 1959, 1960, 0, 0,
	0, 3527, 3527, 0, 1940, 1968, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	2009, 0, 1961, 0, 0, 0, 2022, 1962, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 2897, 2897, 2897,
	2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897,
	2897, 2897, 2897, 2897, 2897, 2897, 2897, 0, 2897, 3527,
	3527, 3527, 3527, 1974, 286, 0, 286, 286, 0, 0,
	286, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 1932, 1933, 1987, 1965, 1966,
	1967, 1976, 1977, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 1963,
	0, 0, 2082, 2082, 2082, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 0, 0,
	286, 0, 286, 286, 0, 0, 286, 286, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 1985, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 901,
	0, 0, 0, 1972, 1954, 0, 0, 0, 0, 1932,
	1933, 0, 0, 1951, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 1963, 0, 3481, 0, 0, 0, 3482,
	0, 1935, 0, 0, 0, 0, 1961, 0, 0, 286,
	286, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 1956,
	0, 0, 0, 0, 1256, 286, 286, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 1957, 1958, 1959, 1960, 0, 0, 1951, 1171, 0,
	0, 1940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 1983, 0, 0,
	0, 0, 0, 3414, 1962, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 1980, 0, 1957, 1958, 1959, 1960, 0,
	1949, 1950, 0, 0, 286, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 0, 1962, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 1949, 1950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 1968, 0, 0, 1968,
	3527, 3527, 1968, 0, 0, 0, 1968, 0, 1348, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	1968, 1968, 1968, 1968, 0, 0, 1956, 0, 1985, 1968,
	0, 1968, 0, 0, 3527, 3527, 3527, 3527, 3527, 3527,
	3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527,
	3527, 3527, 3527, 3527, 1974, 0, 0, 3527, 0, 0,
	1968, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 2104, 0, 1344, 1961, 1987, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 2104, 286, 0,
	1956, 0, 0, 0, 0, 0, 901, 0, 0, 0,
	0, 0, 0, 901, 0, 0, 0, 0, 0, 2561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 1968, 0, 1972, 0, 0, 2590, 0, 0,
	0, 0, 1987, 0, 0, 1946, 1947, 1953, 1975, 1952,
	1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941,
	1942, 0, 0, 1968, 0, 0, 2774, 0, 0, 0,
	2775, 0, 0, 2630, 0, 2634, 0, 0, 0, 0,
	0, 0, 2648, 0, 0, 0, 0, 1968, 1968, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 0, 2698, 0, 2700, 2701,
	2702, 2703, 0, 1952, 1948, 0, 1945, 1943, 1944, 1936,
	1937, 1938, 1939, 1941, 1942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2009, 0, 0, 0,
	2778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2808, 2811, 2814, 2817,
	0, 1968, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1933, 0, 0, 0, 0, 0, 921, 0,
	2889, 0, 2900, 2902, 2907, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 1968, 1968, 0, 923,
	0, 1968, 1968, 1935, 924, 1968, 1968, 0, 0, 0,
	1968, 0, 0, 0, 1968, 0, 0, 0, 0, 1968,
	0, 0, 286, 0, 0, 0, 901, 0, 0, 0,
	1988, 0, 0, 0, 2897, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 925, 0, 942, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 927, 0,
	0, 0, 0, 286, 0, 0, 0, 286, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 286, 0,
	950, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 286, 2897, 286, 0, 0, 0,
	0, 948, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 1958, 1959,
	1960, 0, 0, 0, 0, 0, 922, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 929,
	0, 286, 0, 1968, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 952, 0, 0, 0,
	0, 806, 0, 286, 0, 0, 0, 0, 0, 0,
	1962, 1964, 0, 0, 0, 0, 901, 286, 0, 286,
	0, 286, 0, 286, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 1348, 0, 1949, 1950, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	286, 286, 286, 286, 0, 0, 0, 951, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 1968, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 1968,
	3527, 2897, 0, 0, 0, 0, 0, 1968, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 3235, 3236, 0, 3238, 0, 0,
	1985, 0, 0, 1348, 0, 931, 0, 0, 0, 0,
	0, 0, 3527, 2897, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 1968, 2897, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 934, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 1968, 1961,
	0, 0, 0, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 791, 0, 0,
	0, 0, 0, 1344, 0, 0, 3357, 0, 0, 0,
	0, 0, 0, 941, 1987, 0, 0, 0, 774, 1344,
	0, 3527, 0, 775, 0, 0, 0, 0, 0, 0,
	0, 936, 0, 286, 0, 937, 955, 0, 954, 0,
	0, 0, 938, 0, 0, 0, 0, 0, 0, 0,
	1968, 3527, 0, 286, 1968, 0, 0, 939, 0, 0,
	0, 0, 947, 0, 776, 0, 0, 0, 956, 0,
	953, 0, 0, 3527, 0, 777, 0, 807, 0, 0,
	1989, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 286, 0, 0, 1952, 1948, 0, 1945, 1943,
	1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 286, 797,
	0, 286, 0, 0, 0, 286, 0, 286, 0, 0,
	0, 0, 0, 0, 286, 286, 3415, 3416, 0, 0,
	779, 0, 3422, 0, 286, 0, 0, 1932, 1933, 0,
	1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 0, 0,
	0, 3436, 3437, 0, 0, 780, 0, 2778, 0, 0,
	1969, 1963, 0, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 1982,
	0, 0, 0, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	806, 0, 3446, 286, 0, 1934, 0, 1348, 0, 1348,
	0, 0, 0, 0, 0, 0, 1954, 286, 3460, 0,
	0, 0, 0, 0, 1348, 1951, 0, 796, 0, 0,
	286, 1968, 0, 791, 0, 3472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2167, 0, 0, 0, 0,
	0, 0, 0, 0, 774, 0, 1968, 0, 0, 775,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 286, 0, 0, 0, 0, 793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 0, 1957, 1958, 1959, 1960, 0, 0, 0,
	0, 777, 0, 1940, 0, 0, 0, 0, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 778, 0, 0, 2907, 2907, 2907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 286,
	0, 0, 0, 2082, 0, 797, 1973, 286, 0, 1983,
	0, 3565, 0, 803, 0, 784, 1962, 1964, 0, 0,
	0, 0, 0, 0, 0, 0, 779, 0, 0, 0,
	0, 0, 0, 1979, 0, 1980, 0, 0, 1968, 0,
	0, 0, 1949, 1950, 0, 804, 0, 785, 0, 0,
	0, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 781, 1955, 0, 0, 0, 782,
	0, 0, 286, 0, 286, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 286, 806, 0, 786, 0,
	0, 0, 0, 801, 802, 0, 799, 0, 0, 0,
	0, 0, 794, 0, 0, 787, 0, 0, 0, 1171,
	0, 0, 0, 796, 1981, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 286,
	286, 286, 286, 0, 0, 0, 1985, 0, 286, 0,
	788, 0, 795, 286, 0, 0, 0, 1348, 1348, 0,
	0, 789, 3699, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 793, 0, 0, 0, 790, 0, 0, 0,
	0, 798, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 1961, 0, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3755, 3756,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 784, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 1348, 0, 1348, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 785, 0, 0, 1348, 1348, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 1348, 1348, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 805, 0, 0, 0,
	0, 0, 0, 0, 786, 0, 0, 0, 0, 801,
	802, 0, 799, 0, 0, 0, 0, 0, 794, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1946, 1947, 1953,
	1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938,
	1939, 1941, 1942, 0, 0, 0, 788, 0, 795, 0,
	0, 0, 4385, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 0, 2167, 2167, 1348,
	0, 0, 0, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	2648, 0, 0, 0, 0, 0, 3956, 3957, 0, 0,
	3960, 0, 1932, 1933, 3963, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 3967, 0, 0, 0, 0, 0, 2104,
	0, 0, 3974, 0, 0, 1969, 1963, 3565, 0, 0,
	0, 286, 0, 0, 1935, 0, 0, 0, 0, 0,
	0, 0, 3987, 0, 1982, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 4010, 4011, 0, 4012, 4013, 4014, 0, 0,
	1934, 0, 286, 0, 0, 0, 286, 286, 0, 0,
	0, 1954, 0, 4020, 0, 0, 0, 4022, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 1348, 0, 0, 0,
	4051, 4052, 0, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 4063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 0, 0, 4072, 286, 286, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 1957, 1958,
	1959, 1960, 0, 0, 0, 0, 0, 286, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 0, 0, 0, 4135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	1980, 0, 0, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 4153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 901, 0, 1348, 0, 0, 0, 4184, 0,
	0, 0, 286, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 4208, 4209, 0, 1981,
	0, 0, 0, 2167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 286, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 286, 4312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 1348,
	0, 1348, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 1348,
	0, 4357, 4358, 0, 0, 0, 0, 4362, 4363, 0,
	0, 0, 4366, 4367, 0, 0, 0, 0, 0, 0,
	4371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4380, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 1344, 1344,
	0, 0, 0, 0, 0, 0, 0, 3972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 288, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4534, 1969, 1963, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	286, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 1209, 116, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 282, 282, 740,
	0, 0, 286, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 4648, 4649, 4650, 0, 1348, 1348, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 2648, 0, 0, 4659, 4660,
	0, 0, 0, 0, 116, 0, 286, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 4668, 4671, 0, 0,
	0, 1973, 1348, 0, 1983, 1348, 0, 0, 0, 0,
	0, 1962, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2167, 1979, 0,
	1980, 1348, 0, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 0, 0, 1145, 0, 0, 0,
	0, 0, 4730, 0, 0, 0, 0, 0, 1166, 0,
	0, 4738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4746, 2167, 0, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 4757, 0, 1344, 4759, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 1331,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1348, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 2104, 0, 2104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 286,
	0, 1974, 1348, 0, 1348, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 1348,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4881, 0, 0, 0, 4885,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 1348, 0, 1348, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 3484, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2648, 0, 0, 0, 0, 0, 0, 0,
	0, 4671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2167, 288, 0, 288,
	288, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 2167, 2167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 2167, 2167, 288, 1508, 288, 288, 0, 0, 288,
	288, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5072,
	5072, 5072, 288, 0, 2167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 1348, 1348, 0, 0, 0, 5097, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 0, 0,
	1508, 0, 0, 2104, 0, 0, 0, 1508, 288, 288,
	0, 0, 1398, 0, 1398, 1398, 0, 0, 0, 0,
	0, 0, 5072, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 2104, 0,
	0, 0, 5072, 5229, 0, 0, 116, 0, 116, 0,
	116, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1348, 1348, 0,
	1348, 0, 0, 0, 1348, 0, 0, 1348, 0, 286,
	0, 0, 0, 1755, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 116, 116, 0, 0, 0, 2167, 0, 0,
	2104, 2104, 0, 0, 0, 0, 0, 0, 116, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 2104, 0,
	286, 2104, 0, 0, 116, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	1348, 1348, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 1348, 0, 1348, 0, 0, 0, 0,
	1348, 0, 1348, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 1508, 0, 0, 0, 0, 288,
	288, 288, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 1145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 2002, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 2014, 0, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 1348, 0,
	0, 0, 1348, 1348, 0, 1348, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 1348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	2104, 1348, 2104, 0, 0, 0, 0, 0, 2120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2130, 0, 1609, 0, 2102, 0,
	2105, 0, 116, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1398,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 1508, 1508, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	1348, 0, 0, 0, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 1348, 1348, 1348, 1348, 1348, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	288, 0, 1348, 0, 0, 288, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 288,
	0, 0, 1348, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 1508, 0, 1508, 0,
	0, 0, 0, 2167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 1508, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 1348, 0, 0,
	1508, 288, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 1508, 1508, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 0, 0, 288,
	288, 0, 288, 1348, 288, 0, 288, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 288, 288, 288, 0, 0, 0,
	0, 2441, 0, 0, 0, 2448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 893, 2460, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2472, 0, 2472, 1348, 1348, 1348, 0, 0,
	2479, 0, 893, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1166, 0, 1166, 0, 0,
	0, 1348, 0, 0, 1348, 0, 2448, 0, 0, 2508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2545, 0, 2547, 0, 2549,
	0, 2551, 0, 2552, 0, 0, 0, 0, 2167, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 2581, 2582,
	2583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1145, 0, 0, 1145, 1145, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1348, 1348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 1348, 0, 0, 0, 1348, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 1348, 2716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 288, 0, 0, 0, 288, 1166,
	288, 0, 0, 0, 0, 0, 0, 288, 288, 2008,
	0, 0, 0, 2008, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 1331, 0, 0,
	0, 2966, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 288, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 288, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 3017, 0, 0, 1398,
	0, 0, 0, 1398, 0, 1398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 2460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 1348, 0, 1348, 0, 0, 0, 1508,
	0, 1508, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 1508, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2448, 2448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 288, 288, 288, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 3255, 0, 116,
	0, 116, 0, 0, 0, 2460, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	116, 0, 0, 0, 0, 1505, 116, 0, 0, 0,
	3326, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3338, 0, 3341, 0, 0, 0, 0, 1932, 1933, 0,
	1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1982,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 3375, 1609, 3377,
	1609, 1627, 0, 0, 0, 1934, 3383, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 1627, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1398, 0, 0, 0, 0, 0, 0, 0,
	3412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 1958, 1959, 1960, 0, 0, 0,
	0, 0, 0, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 1962, 1964, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 1949, 1950, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 288,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 288, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 1961, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3613,
	0, 0, 0, 0, 0, 1505, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	893, 0, 0, 0, 0, 0, 0, 893, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	1398, 0, 0, 0, 1609, 1609, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 1508, 0, 1508, 0, 0, 0, 1508, 0,
	1987, 0, 0, 0, 0, 288, 1508, 0, 0, 0,
	3662, 0, 0, 0, 0, 288, 0, 0, 288, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3718, 3720, 0, 0, 2460, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	116, 116, 0, 116, 0, 0, 1972, 0, 0, 0,
	0, 1508, 0, 1508, 0, 0, 0, 1946, 1947, 1953,
	1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938,
	1939, 1941, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 116, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 288, 1508, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3840, 0, 0, 2448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 1627,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3941, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 1627, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 1627, 0,
	0, 3954, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 1627, 1627, 1627, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 288, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	893, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 1331, 0, 0, 0, 1508, 1508, 0,
	1508, 0, 0, 0, 1508, 0, 0, 1508, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 288, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	1508, 1508, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 1505, 1508, 0, 0, 0, 288,
	1508, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 4267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2460, 0, 0, 0, 0,
	4294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 1508, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 1331, 0, 0, 0,
	0, 0, 0, 1508, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4340, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 116, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 1508, 0, 0, 288,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 288, 0, 0, 0, 1508, 0, 1627, 0, 0,
	1628, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 1506, 1627, 0, 0, 0, 0, 0, 1627, 0,
	0, 1508, 1508, 1508, 1508, 1508, 1508, 1508, 0, 1627,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 2460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 1628,
	0, 1628, 0, 0, 0, 1508, 116, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 1628, 1628,
	1628, 0, 0, 1508, 1932, 1933, 2460, 1965, 1966, 1967,
	1976, 1977, 1978, 288, 0, 0, 4605, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 1969, 1963, 0,
	0, 116, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 1954, 0, 0, 288, 0, 0, 0,
	0, 0, 1951, 0, 0, 1508, 1508, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 1969, 1963, 0, 288, 288,
	1940, 0, 0, 0, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 0, 116, 4715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 1973, 0, 1506, 1983, 0, 0, 0,
	0, 1954, 0, 1962, 1964, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 1980, 0, 0, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2460, 0, 0, 0, 0, 0, 1971, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 1506, 0, 0, 0, 1505, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 288, 0, 0, 0, 0, 1508, 0,
	0, 0, 1970, 4842, 1609, 2716, 0, 0, 1508, 0,
	0, 1973, 0, 1985, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	1980, 0, 0, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 0, 0, 0, 288, 0,
	1955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 1505,
	1970, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 4958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 1628, 0, 1627, 0, 1627, 0, 0, 0, 1505,
	0, 0, 0, 1972, 0, 0, 893, 1627, 0, 0,
	0, 0, 0, 1956, 1946, 1947, 1953, 1975, 1952, 1948,
	1627, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 5011, 0, 0, 0, 0, 0, 3483,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 1627, 0, 1627, 0, 0, 0, 0, 1628,
	5054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 1628, 0, 116, 0, 0, 116,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 1932, 1933, 3480, 1965, 1966,
	1967, 1976, 1977, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 1963,
	0, 0, 0, 0, 0, 0, 1505, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1958, 1959, 1960, 0, 0, 0, 0, 0,
	0, 1940, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 893,
	0, 0, 0, 0, 1973, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 1962, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 1980, 0, 0, 0, 0, 0, 0,
	1949, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 1627, 1627,
	0, 1627, 0, 0, 1985, 1627, 0, 0, 1627, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 1627, 1627, 1627, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 1627, 0, 0, 0,
	0, 1627, 0, 1505, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952,
	1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 1628, 0, 0,
	0, 1506, 0, 1505, 1505, 0, 1505, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 1627, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 1969, 1963, 0, 0, 0, 0,
	0, 0, 0, 1935, 0, 0, 0, 0, 1506, 0,
	1505, 1506, 0, 1982, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 1627, 1627, 0, 0, 0, 0, 0, 1951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 1505, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 1958, 1959,
	1960, 0, 0, 1505, 0, 0, 0, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	1962, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 1979, 1627, 1980,
	0, 0, 0, 0, 0, 0, 1949, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 1627, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1933, 0, 1965,
	1966, 1967, 1976, 1977, 1978, 0, 0, 0, 0, 1961,
	0, 0, 1505, 0, 0, 1627, 0, 0, 0, 1969,
	1963, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	1628, 1628, 1956, 1628, 0, 0, 0, 1628, 1982, 0,
	1628, 0, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 0, 1988, 0, 0, 0, 0,
	1974, 0, 0, 0, 1934, 0, 0, 1969, 1963, 0,
	0, 0, 0, 0, 0, 1954, 1935, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 1982, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 1628, 1628, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1958, 1959, 1960, 1628, 0, 1628, 0,
	1972, 0, 1940, 1628, 0, 1506, 0, 0, 0, 0,
	0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945, 1943,
	1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 3478, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 1973, 0, 0, 1983, 0,
	1940, 0, 0, 0, 0, 1962, 1964, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 1979, 0, 1980, 0, 0, 0, 0, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 1983, 0, 0, 1971,
	0, 0, 0, 1962, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	1979, 0, 1980, 0, 0, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 1627, 0, 1506, 1506, 0, 1506, 0,
	0, 0, 1955, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 1628, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1961, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1628, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2775, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 0, 0, 4998, 0, 0, 1506, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 1628,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1509, 304, 305, 1510, 1511,
	1512, 0, 1513, 686, 1514, 1515, 1516, 306, 1517, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 1518, 691, 318, 319,
	320, 321, 322, 323, 1519, 1520, 0, 324, 692, 693,
	694, 1521, 325, 326, 695, 1522, 1589, 1523, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1524, 336, 337,
	338, 335, 339, 1525, 340, 1628, 341, 342, 343, 344,
	345, 346, 1526, 347, 348, 349, 1288, 350, 351, 352,
	1527, 1528, 1530, 1529, 1531, 1532, 1533, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 1534, 363, 359,
	361, 1535, 364, 362, 365, 1536, 366, 367, 368, 1537,
	1538, 369, 370, 371, 1539, 372, 373, 374, 1540, 375,
	376, 377, 1541, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	1542, 293, 1543, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 1544, 396, 397, 398, 1545,
	399, 400, 1546, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1547, 413,
	704, 1548, 705, 414, 1549, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1291, 422, 423, 1550,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1551, 1290, 511, 432, 709, 710, 1552, 711,
	1553, 433, 434, 1292, 712, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1554, 445, 447, 446, 1555, 448, 713, 1295, 449, 450,
	1296, 1556, 451, 452, 453, 454, 455, 456, 459, 1557,
	1558, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1559, 295, 1299, 505, 506, 507, 508, 1560,
	714, 509, 715, 512, 513, 1561, 0, 514, 0, 515,
	1562, 1563, 517, 518, 519, 1564, 1565, 520, 521, 716,
	1300, 522, 1301, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1566, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 1567, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 1568, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 1569, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 1570, 604, 605, 603, 606, 607, 608, 1571,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 1572, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 1573, 639, 640,
	0, 635, 626, 1574, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 1575, 649, 727, 728, 729, 730, 1576,
	659, 1577, 650, 651, 652, 653, 731, 654, 732, 1578,
	655, 656, 657, 658, 0, 660, 661, 1579, 1580, 662,
	663, 665, 667, 668, 664, 666, 669, 1581, 670, 1582,
	0, 671, 672, 673, 733, 734, 735, 1583, 675, 674,
	676, 677, 678, 736, 679, 680, 1584, 1585, 1586, 1587,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 2944, 0, 0, 0, 0,
	0, 0, 0, 2945, 296, 297, 299, 298, 300, 301,
	302, 303, 1509, 304, 305, 1510, 1511, 1512, 0, 1513,
	686, 1514, 1515, 1516, 306, 1517, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 1518, 691, 318, 319, 320, 321, 322,
	323, 1519, 1520, 0, 324, 692, 693, 694, 1521, 325,
	326, 695, 1522, 1589, 1523, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 1524, 336, 337, 338, 335, 339,
	1525, 340, 0, 341, 342, 343, 344, 345, 346, 1526,
	347, 348, 349, 1288, 350, 351, 352, 1527, 1528, 1530,
	1529, 1531, 1532, 1533, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 1534, 363, 359, 361, 1535, 364,
	362, 365, 1536, 366, 367, 368, 1537, 1538, 369, 370,
	371, 1539, 372, 373, 374, 1540, 375, 376, 377, 1541,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 1542, 293, 1543,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 1544, 396, 397, 398, 1545, 399, 400, 1546,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 1547, 413, 704, 1548, 705,
	414, 1549, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1291, 422, 423, 1550, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 1551,
	1290, 511, 432, 709, 710, 1552, 711, 1553, 433, 434,
	1292, 712, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1554, 445, 447,
	446, 1555, 448, 713, 1295, 449, 450, 1296, 1556, 451,
	452, 453, 454, 455, 456, 459, 1557, 1558, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 1559,
	295, 1299, 505, 506, 507, 508, 1560, 714, 509, 715,
	512, 513, 1561, 0, 514, 0, 515, 1562, 1563, 517,
	518, 519, 1564, 1565, 520, 521, 716, 1300, 522, 1301,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 1566, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 1567,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 1568, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 1569, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 1570,
	604, 605, 603, 606, 607, 608, 1571, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 1572, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 1573, 639, 640, 0, 635, 626,
	1574, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	1575, 649, 727, 728, 729, 730, 1576, 659, 1577, 650,
	651, 652, 653, 731, 654, 732, 1578, 655, 656, 657,
	658, 0, 660, 661, 1579, 1580, 662, 663, 665, 667,
	668, 664, 666, 669, 1581, 670, 1582, 0, 671, 672,
	673, 733, 734, 735, 1583, 675, 674, 676, 677, 678,
	736, 679, 680, 1584, 1585, 1586, 1587, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 3981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3983, 296,
	297, 299, 298, 300, 301, 302, 303, 1509, 304, 305,
	1510, 1511, 1512, 0, 1513, 686, 1514, 1515, 1516, 306,
	1517, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 1518, 691,
	318, 319, 320, 321, 322, 323, 1519, 1520, 0, 324,
	692, 693, 694, 1521, 325, 326, 695, 1522, 1589, 1523,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1524,
	336, 337, 338, 335, 339, 1525, 340, 0, 341, 342,
	343, 344, 345, 346, 1526, 347, 348, 349, 1288, 350,
	351, 352, 1527, 1528, 1530, 1529, 1531, 1532, 1533, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 1534,
	363, 359, 361, 1535, 364, 362, 365, 1536, 366, 367,
	368, 1537, 1538, 369, 370, 371, 1539, 372, 373, 374,
	1540, 375, 376, 377, 1541, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 1542, 293, 1543, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 1544, 396, 397,
	398, 1545, 399, 400, 1546, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1547, 413, 704, 1548, 705, 414, 1549, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1291, 422,
	423, 1550, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1551, 1290, 511, 432, 709, 710,
	1552, 711, 1553, 433, 434, 1292, 712, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1554, 445, 447, 446, 1555, 448, 713, 1295,
	449, 450, 1296, 1556, 451, 452, 453, 454, 455, 456,
	459, 1557, 1558, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1559, 295, 1299, 505, 506, 507,
	508, 1560, 714, 509, 715, 512, 513, 1561, 0, 514,
	0, 515, 1562, 1563, 517, 518, 519, 1564, 1565, 520,
	521, 716, 1300, 522, 1301, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1566, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 1567, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 1568, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 1569, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 1570, 604, 605, 603, 606, 607,
	608, 1571, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 1572,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 1573,
	639, 640, 0, 635, 626, 1574, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 1575, 649, 727, 728, 729,
	730, 1576, 659, 1577, 650, 651, 652, 653, 731, 654,
	732, 1578, 655, 656, 657, 658, 0, 660, 661, 1579,
	1580, 662, 663, 665, 667, 668, 664, 666, 669, 1581,
	670, 1582, 0, 671, 672, 673, 733, 734, 735, 1583,
	675, 674, 676, 677, 678, 736, 679, 680, 1584, 1585,
	1586, 1587, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4415, 296, 297,
	299, 298, 300, 301, 302, 303, 1509, 304, 305, 1510,
	1511, 1512, 0, 1513, 686, 1514, 1515, 1516, 306, 1517,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 1518, 691, 318,
	319, 320, 321, 322, 323, 1519, 1520, 0, 324, 692,
	693, 694, 1521, 325, 326, 695, 1522, 1589, 1523, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1524, 336,
	337, 338, 335, 339, 1525, 340, 0, 341, 342, 343,
	344, 345, 346, 1526, 347, 348, 349, 1288, 350, 351,
	352, 1527, 1528, 1530, 1529, 1531, 1532, 1533, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 1534, 363,
	359, 361, 1535, 364, 362, 365, 1536, 366, 367, 368,
	1537, 1538, 369, 370, 371, 1539, 372, 373, 374, 1540,
	375, 376, 377, 1541, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 1542, 293, 1543, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 1544, 396, 397, 398,
	1545, 399, 400, 1546, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 1547,
	413, 704, 1548, 705, 414, 1549, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	1550, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 1551, 1290, 511, 432, 709, 710, 1552,
	711, 1553, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1554, 445, 447, 446, 1555, 448, 713, 1295, 449,
	450, 1296, 1556, 451, 452, 453, 454, 455, 456, 459,
	1557, 1558, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 1559, 295, 1299, 505, 506, 507, 508,
	1560, 714, 509, 715, 512, 513, 1561, 0, 514, 0,
	515, 1562, 1563, 517, 518, 519, 1564, 1565, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 1566, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 1567, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 1568, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 1569, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 1570, 604, 605, 603, 606, 607, 608,
	1571, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 1572, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 1573, 639,
	640, 0, 635, 626, 1574, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 1575, 649, 727, 728, 729, 730,
	1576, 659, 1577, 650, 651, 652, 653, 731, 654, 732,
	1578, 655, 656, 657, 658, 0, 660, 661, 1579, 1580,
	662, 663, 665, 667, 668, 664, 666, 669, 1581, 670,
	1582, 0, 671, 672, 673, 733, 734, 735, 1583, 675,
	674, 676, 677, 678, 736, 679, 680, 1584, 1585, 1586,
	1587, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4413, 296, 297, 299,
	298, 300, 301, 302, 303, 1509, 304, 305, 1510, 1511,
	1512, 0, 1513, 686, 1514, 1515, 1516, 306, 1517, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 1518, 691, 318, 319,
	320, 321, 322, 323, 1519, 1520, 0, 324, 692, 693,
	694, 1521, 325, 326, 695, 1522, 1589, 1523, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1524, 336, 337,
	338, 335, 339, 1525, 340, 0, 341, 342, 343, 344,
	345, 346, 1526, 347, 348, 349, 1288, 350, 351, 352,
	1527, 1528, 1530, 1529, 1531, 1532, 1533, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 1534, 363, 359,
	361, 1535, 364, 362, 365, 1536, 366, 367, 368, 1537,
	1538, 369, 370, 371, 1539, 372, 373, 374, 1540, 375,
	376, 377, 1541, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	1542, 293, 1543, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 1544, 396, 397, 398, 1545,
	399, 400, 1546, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1547, 413,
	704, 1548, 705, 414, 1549, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1291, 422, 423, 1550,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1551, 1290, 511, 432, 709, 710, 1552, 711,
	1553, 433, 434, 1292, 712, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1554, 445, 447, 446, 1555, 448, 713, 1295, 449, 450,
	1296, 1556, 451, 452, 453, 454, 455, 456, 459, 1557,
	1558, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1559, 295, 1299, 505, 506, 507, 508, 1560,
	714, 509, 715, 512, 513, 1561, 0, 514, 0, 515,
	1562, 1563, 517, 518, 519, 1564, 1565, 520, 521, 716,
	1300, 522, 1301, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1566, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 1567, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 1568, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 1569, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 1570, 604, 605, 603, 606, 607, 608, 1571,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 1572, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 1573, 639, 640,
	0, 635, 626, 1574, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 1575, 649, 727, 728, 729, 730, 1576,
	659, 1577, 650, 651, 652, 653, 731, 654, 732, 1578,
	655, 656, 657, 658, 0, 660, 661, 1579, 1580, 662,
	663, 665, 667, 668, 664, 666, 669, 1581, 670, 1582,
	0, 671, 672, 673, 733, 734, 735, 1583, 675, 674,
	676, 677, 678, 736, 679, 680, 1584, 1585, 1586, 1587,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4654,
	296, 297, 299, 298, 300, 301, 302, 303, 1509, 304,
	305, 1510, 1511, 1512, 0, 1513, 686, 1514, 1515, 1516,
	306, 1517, 307, 308, 1287, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 1518,
	691, 318, 319, 320, 321, 322, 323, 1519, 1520, 0,
	324, 692, 693, 694, 1521, 325, 326, 695, 1522, 1589,
	1523, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	1524, 336, 337, 338, 335, 339, 1525, 340, 0, 341,
	342, 343, 344, 345, 346, 1526, 347, 348, 349, 1288,
	350, 351, 352, 1527, 1528, 1530, 1529, 1531, 1532, 1533,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	1534, 363, 359, 361, 1535, 364, 362, 365, 1536, 366,
	367, 368, 1537, 1538, 369, 370, 371, 1539, 372, 373,
	374, 1540, 375, 376, 377, 1541, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 1542, 293, 1543, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 1544, 396,
	397, 398, 1545, 399, 400, 1546, 1289, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 1547, 413, 704, 1548, 705, 414, 1549, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1291,
	422, 423, 1550, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 1551, 1290, 511, 432, 709,
	710, 1552, 711, 1553, 433, 434, 1292, 712, 1293, 435,
	436, 437, 1294, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 1554, 445, 447, 446, 1555, 448, 713,
	1295, 449, 450, 1296, 1556, 451, 452, 453, 454, 455,
	456, 459, 1557, 1558, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1297, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1298, 503, 491, 1559, 295, 1299, 505, 506,
	507, 508, 1560, 714, 509, 715, 512, 513, 1561, 0,
	514, 0, 515, 1562, 1563, 517, 518, 519, 1564, 1565,
	520, 521, 716, 1300, 522, 1301, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 1566,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 1567, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 1568, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 1569,
	578, 579, 580, 1302, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 1570, 604, 605, 603, 606,
	607, 608, 1571, 609, 610, 592, 593, 611, 612, 1303,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	1572, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	1573, 639, 640, 0, 635, 626, 1574, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 1575, 649, 727, 728,
	729, 730, 1576, 659, 1577, 650, 651, 652, 653, 731,
	654, 732, 1578, 655, 656, 657, 658, 0, 660, 661,
	1579, 1580, 662, 663, 665, 667, 668, 664, 666, 669,
	1581, 670, 1582, 0, 671, 672, 673, 733, 734, 735,
	1583, 675, 674, 676, 677, 678, 736, 679, 680, 1584,
	1585, 1586, 1587, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4519, 296, 297, 299, 298, 300, 301, 302,
	303, 1509, 304, 305, 1510, 1511, 1512, 0, 1513, 686,
	1514, 1515, 1516, 306, 1517, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 1518, 691, 318, 319, 320, 321, 322, 323,
	1519, 1520, 0, 324, 692, 693, 694, 1521, 325, 326,
	695, 1522, 1589, 1523, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1524, 336, 337, 338, 335, 339, 1525,
	340, 0, 341, 342, 343, 344, 345, 346, 1526, 347,
	348, 349, 1288, 350, 351, 352, 1527, 1528, 1530, 1529,
	1531, 1532, 1533, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 1534, 363, 359, 361, 1535, 364, 362,
	365, 1536, 366, 367, 368, 1537, 1538, 369, 370, 371,
	1539, 372, 373, 374, 1540, 375, 376, 377, 1541, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 1542, 293, 1543, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 1544, 396, 397, 398, 1545, 399, 400, 1546, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 1547, 413, 704, 1548, 705, 414,
	1549, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1291, 422, 423, 1550, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 1551, 1290,
	511, 432, 709, 710, 1552, 711, 1553, 433, 434, 1292,
	712, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1554, 445, 447, 446,
	1555, 448, 713, 1295, 449, 450, 1296, 1556, 451, 452,
	453, 454, 455, 456, 459, 1557, 1558, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1559, 295,
	1299, 505, 506, 507, 508, 1560, 714, 509, 715, 512,
	513, 1561, 0, 514, 0, 515, 1562, 1563, 517, 518,
	519, 1564, 1565, 520, 521, 716, 1300, 522, 1301, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 1566, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 1567, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 1568, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 1569, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 1570, 604,
	605, 603, 606, 607, 608, 1571, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 1572, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 1573, 639, 640, 0, 635, 626, 1574,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 1575,
	649, 727, 728, 729, 730, 1576, 659, 1577, 650, 651,
	652, 653, 731, 654, 732, 1578, 655, 656, 657, 658,
	0, 660, 661, 1579, 1580, 662, 663, 665, 667, 668,
	664, 666, 669, 1581, 670, 1582, 0, 671, 672, 673,
	733, 734, 735, 1583, 675, 674, 676, 677, 678, 736,
	679, 680, 1584, 1585, 1586, 1587, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4342, 296, 297, 299, 298,
	300, 301, 302, 303, 1509, 304, 305, 1510, 1511, 1512,
	0, 1513, 686, 1514, 1515, 1516, 306, 1517, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 1518, 691, 318, 319, 320,
	321, 322, 323, 1519, 1520, 0, 324, 692, 693, 694,
	1521, 325, 326, 695, 1522, 1589, 1523, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1524, 336, 337, 338,
	335, 339, 1525, 340, 0, 341, 342, 343, 344, 345,
	346, 1526, 347, 348, 349, 1288, 350, 351, 352, 1527,
	1528, 1530, 1529, 1531, 1532, 1533, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 1534, 363, 359, 361,
	1535, 364, 362, 365, 1536, 366, 367, 368, 1537, 1538,
	369, 370, 371, 1539, 372, 373, 374, 1540, 375, 376,
	377, 1541, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 1542,
	293, 1543, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 1544, 396, 397, 398, 1545, 399,
	400, 1546, 1289, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 1547, 413, 704,
	1548, 705, 414, 1549, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1291, 422, 423, 1550, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 1551, 1290, 511, 432, 709, 710, 1552, 711, 1553,
	433, 434, 1292, 712, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 1554,
	445, 447, 446, 1555, 448, 713, 1295, 449, 450, 1296,
	1556, 451, 452, 453, 454, 455, 456, 459, 1557, 1558,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 1559, 295, 1299, 505, 506, 507, 508, 1560, 714,
	509, 715, 512, 513, 1561, 0, 514, 0, 515, 1562,
	1563, 517, 518, 519, 1564, 1565, 520, 521, 716, 1300,
	522, 1301, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 1566, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 1567, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	1568, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 1569, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 1570, 604, 605, 603, 606, 607, 608, 1571, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 1572, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 1573, 639, 640, 0,
	635, 626, 1574, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 1575, 649, 727, 728, 729, 730, 1576, 659,
	1577, 650, 651, 652, 653, 731, 654, 732, 1578, 655,
	656, 657, 658, 0, 660, 661, 1579, 1580, 662, 663,
	665, 667, 668, 664, 666, 669, 1581, 670, 1582, 0,
	671, 672, 673, 733, 734, 735, 1583, 675, 674, 676,
	677, 678, 736, 679, 680, 1584, 1585, 1586, 1587, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3999, 296,
	297, 299, 298, 300, 301, 302, 303, 1509, 304, 305,
	1510, 1511, 1512, 0, 1513, 686, 1514, 1515, 1516, 306,
	1517, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 1518, 691,
	318, 319, 320, 321, 322, 323, 1519, 1520, 0, 324,
	692, 693, 694, 1521, 325, 326, 695, 1522, 1589, 1523,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1524,
	336, 337, 338, 335, 339, 1525, 340, 0, 341, 342,
	343, 344, 345, 346, 1526, 347, 348, 349, 1288, 350,
	351, 352, 1527, 1528, 1530, 1529, 1531, 1532, 1533, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 1534,
	363, 359, 361, 1535, 364, 362, 365, 1536, 366, 367,
	368, 1537, 1538, 369, 370, 371, 1539, 372, 373, 374,
	1540, 375, 376, 377, 1541, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 1542, 293, 1543, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 1544, 396, 397,
	398, 1545, 399, 400, 1546, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1547, 413, 704, 1548, 705, 414, 1549, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1291, 422,
	423, 1550, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1551, 1290, 511, 432, 709, 710,
	1552, 711, 1553, 433, 434, 1292, 712, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1554, 445, 447, 446, 1555, 448, 713, 1295,
	449, 450, 1296, 1556, 451, 452, 453, 454, 455, 456,
	459, 1557, 1558, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1559, 295, 1299, 505, 506, 507,
	508, 1560, 714, 509, 715, 512, 513, 1561, 0, 514,
	0, 515, 1562, 1563, 517, 518, 519, 1564, 1565, 520,
	521, 716, 1300, 522, 1301, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1566, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 1567, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 1568, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 1569, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 1570, 604, 605, 603, 606, 607,
	608, 1571, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 1572,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 1573,
	639, 640, 0, 635, 626, 1574, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 1575, 649, 727, 728, 729,
	730, 1576, 659, 1577, 650, 651, 652, 653, 731, 654,
	732, 1578, 655, 656, 657, 658, 0, 660, 661, 1579,
	1580, 662, 663, 665, 667, 668, 664, 666, 669, 1581,
	670, 1582, 0, 671, 672, 673, 733, 734, 735, 1583,
	675, 674, 676, 677, 678, 736, 679, 680, 1584, 1585,
	1586, 1587, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3813, 296, 297, 299, 298, 300, 301, 302, 303,
	1509, 304, 305, 1510, 1511, 1512, 0, 1513, 686, 1514,
	1515, 1516, 306, 1517, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 1518, 691, 318, 319, 320, 321, 322, 323, 1519,
	1520, 0, 324, 692, 693, 694, 1521, 325, 326, 695,
	1522, 1589, 1523, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1524, 336, 337, 338, 335, 339, 1525, 340,
	0, 341, 342, 343, 344, 345, 346, 1526, 347, 348,
	349, 1288, 350, 351, 352, 1527, 1528, 1530, 1529, 1531,
	1532, 1533, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 1534, 363, 359, 361, 1535, 364, 362, 365,
	1536, 366, 367, 368, 1537, 1538, 369, 370, 371, 1539,
	372, 373, 374, 1540, 375, 376, 377, 1541, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 1542, 293, 1543, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	1544, 396, 397, 398, 1545, 399, 400, 1546, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1547, 413, 704, 1548, 705, 414, 1549,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1291, 422, 423, 1550, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 1551, 1290, 511,
	432, 709, 710, 1552, 711, 1553, 433, 434, 1292, 712,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1554, 445, 447, 446, 1555,
	448, 713, 1295, 449, 450, 1296, 1556, 451, 452, 453,
	454, 455, 456, 459, 1557, 1558, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 1559, 295, 1299,
	505, 506, 507, 508, 1560, 714, 509, 715, 512, 513,
	1561, 0, 514, 0, 515, 1562, 1563, 517, 518, 519,
	1564, 1565, 520, 521, 716, 1300, 522, 1301, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 1566, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 1567, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 1568, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 1569, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 1570, 604, 605,
	603, 606, 607, 608, 1571, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 1572, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 1573, 639, 640, 0, 635, 626, 1574, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 1575, 649,
	727, 728, 729, 730, 1576, 659, 1577, 650, 651, 652,
	653, 731, 654, 732, 1578, 655, 656, 657, 658, 0,
	660, 661, 1579, 1580, 662, 663, 665, 667, 668, 664,
	666, 669, 1581, 670, 1582, 0, 671, 672, 673, 733,
	734, 735, 1583, 675, 674, 676, 677, 678, 736, 679,
	680, 1584, 1585, 1586, 1587, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2798, 296, 297, 299, 298, 300,
	301, 302, 303, 1509, 304, 305, 1510, 1511, 1512, 0,
	1513, 686, 1514, 1515, 1516, 306, 1517, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 1518, 691, 318, 319, 320, 321,
	322, 323, 1519, 1520, 0, 324, 692, 693, 694, 1521,
	325, 326, 695, 1522, 1589, 1523, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1524, 336, 337, 338, 335,
	339, 1525, 340, 0, 341, 342, 343, 344, 345, 346,
	1526, 347, 348, 349, 1288, 350, 351, 352, 1527, 1528,
	1530, 1529, 1531, 1532, 1533, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 1534, 363, 359, 361, 1535,
	364, 362, 365, 1536, 366, 367, 368, 1537, 1538, 369,
	370, 371, 1539, 372, 373, 374, 1540, 375, 376, 377,
	1541, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 1542, 293,
	1543, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 1544, 396, 397, 398, 1545, 399, 400,
	1546, 1289, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 1547, 413, 704, 1548,
	705, 414, 1549, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 1291, 422, 423, 1550, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	1551, 1290, 511, 432, 709, 710, 1552, 711, 1553, 433,
	434, 1292, 712, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1554, 445,
	447, 446, 1555, 448, 713, 1295, 449, 450, 1296, 1556,
	451, 452, 453, 454, 455, 456, 459, 1557, 1558, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1559, 295, 1299, 505, 506, 507, 508, 1560, 714, 509,
	715, 512, 513, 1561, 0, 514, 0, 515, 1562, 1563,
	517, 518, 519, 1564, 1565, 520, 521, 716, 1300, 522,
	1301, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 1566, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	1567, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 1568,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 1569, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	1570, 604, 605, 603, 606, 607, 608, 1571, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 1572, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 1573, 639, 640, 0, 635,
	626, 1574, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 1575, 649, 727, 728, 729, 730, 1576, 659, 1577,
	650, 651, 652, 653, 731, 654, 732, 1578, 655, 656,
	657, 658, 0, 660, 661, 1579, 1580, 662, 663, 665,
	667, 668, 664, 666, 669, 1581, 670, 1582, 0, 671,
	672, 673, 733, 734, 735, 1583, 675, 674, 676, 677,
	678, 736, 679, 680, 1584, 1585, 1586, 1587, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 1500,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2419, 296, 297,
	299, 298, 300, 301, 302, 303, 1509, 304, 305, 1510,
	1511, 1512, 0, 1513, 686, 1514, 1515, 1516, 306, 1517,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 1518, 691, 318,
	319, 320, 321, 322, 323, 1519, 1520, 0, 324, 692,
	693, 694, 1521, 325, 326, 695, 1522, 1589, 1523, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1524, 336,
	337, 338, 335, 339, 1525, 340, 0, 341, 342, 343,
	344, 345, 346, 1526, 347, 348, 349, 1288, 350, 351,
	352, 1527, 1528, 1530, 1529, 1531, 1532, 1533, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 1534, 363,
	359, 361, 1535, 364, 362, 365, 1536, 366, 367, 368,
	1537, 1538, 369, 370, 371, 1539, 372, 373, 374, 1540,
	375, 376, 377, 1541, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 1542, 293, 1543, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 1544, 396, 397, 398,
	1545, 399, 400, 1546, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 1547,
	413, 704, 1548, 705, 414, 1549, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	1550, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 1551, 1290, 511, 432, 709, 710, 1552,
	711, 1553, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 1554, 445, 447, 446, 1555, 448, 713, 1295, 449,
	450, 1296, 1556, 451, 452, 453, 454, 455, 456, 459,
	1557, 1558, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 1559, 295, 1299, 505, 506, 507, 508,
	1560, 714, 509, 715, 512, 513, 1561, 0, 514, 0,
	515, 1562, 1563, 517, 518, 519, 1564, 1565, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 1566, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 1567, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 1568, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 1569, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 1570, 604, 605, 603, 606, 607, 608,
	1571, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 1572, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 1573, 639,
	640, 0, 635, 626, 1574, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 1575, 649, 727, 728, 729, 730,
	1576, 659, 1577, 650, 651, 652, 653, 731, 654, 732,
	1578, 655, 656, 657, 658, 0, 660, 661, 1579, 1580,
	662, 663, 665, 667, 668, 664, 666, 669, 1581, 670,
	1582, 0, 671, 672, 673, 733, 734, 735, 1583, 675,
	674, 676, 677, 678, 736, 679, 680, 1584, 1585, 1586,
	1587, 681, 682, 737, 683, 684, 685, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 1509, 304, 305, 1510, 1511, 1512, 0, 1513,
	686, 1514, 1515, 1516, 306, 1517, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 1518, 691, 318, 319, 320, 321, 322,
	323, 1519, 1520, 0, 324, 692, 693, 694, 1521, 325,
	326, 695, 1522, 1589, 1523, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 1524, 336, 337, 338, 335, 339,
	1525, 340, 0, 341, 342, 343, 344, 345, 346, 1526,
	347, 348, 349, 1288, 350, 351, 352, 1527, 1528, 1530,
	1529, 1531, 1532, 1533, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 1534, 363, 359, 361, 1535, 364,
	362, 365, 1536, 366, 367, 368, 1537, 1538, 369, 370,
	371, 1539, 372, 373, 374, 1540, 375, 376, 377, 1541,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 1542, 293, 1543,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 1544, 396, 397, 398, 1545, 399, 400, 1546,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 1547, 413, 704, 1548, 705,
	414, 1549, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1291, 422, 423, 1550, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 1551,
	1290, 511, 432, 709, 710, 1552, 711, 1553, 433, 434,
	1292, 712, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1554, 445, 447,
	446, 1555, 448, 713, 1295, 449, 450, 1296, 1556, 451,
	452, 453, 454, 455, 456, 459, 1557, 1558, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 1559,
	295, 1299, 505, 506, 507, 508, 1560, 714, 509, 715,
	512, 513, 1561, 0, 514, 0, 515, 1562, 1563, 517,
	518, 519, 1564, 1565, 520, 521, 716, 1300, 522, 1301,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 1566, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 1567,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 1568, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 1569, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 1570,
	604, 605, 603, 606, 607, 608, 1571, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 1572, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 1573, 639, 640, 0, 635, 626,
	1574, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	1575, 649, 727, 728, 729, 730, 1576, 659, 1577, 650,
	651, 652, 653, 731, 654, 732, 1578, 655, 656, 657,
	658, 0, 660, 661, 1579, 1580, 662, 663, 665, 667,
	668, 664, 666, 669, 1581, 670, 1582, 0, 671, 672,
	673, 733, 734, 735, 1583, 675, 674, 676, 677, 678,
	736, 679, 680, 1584, 1585, 1586, 1587, 681, 682, 737,
	683, 684, 685, 2773, 0, 1223, 1195, 1196, 1197, 1193,
	1194, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	2770, 304, 305, 0, 0, 0, 0, 0, 1247, 1211,
	0, 0, 306, 0, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 1260, 0, 316, 1267, 317,
	1266, 0, 1277, 318, 319, 320, 321, 322, 323, 1213,
	1246, 1178, 324, 1307, 1308, 694, 0, 325, 326, 1253,
	0, 1234, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239,
	1238, 1242, 353, 354, 355, 356, 357, 1270, 358, 360,
	1264, 1263, 1183, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 2771, 0, 369, 1255, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1189, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1278, 1279, 391, 1202, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1262, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1289, 401,
	402, 403, 1275, 1276, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1285, 0, 1212, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1248, 1249, 1252,
	510, 1291, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1290, 511,
	432, 1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1286, 1295, 449, 450, 1296, 0, 451, 452, 453,
	454, 455, 456, 459, 1241, 1240, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 1180, 295, 1299,
	505, 506, 507, 508, 1203, 1251, 509, 1265, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1300, 522, 1301, 1280, 523,
	524, 1190, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1281, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1261, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 1191, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1244, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 1259,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1306, 629, 630, 631, 632, 1282, 636,
	637, 638, 0, 639, 640, 1177, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1271, 1272, 1273, 1274, 0, 659, 0, 650, 651, 652,
	653, 1283, 654, 1284, 1201, 655, 656, 657, 658, 0,
	660, 661, 0, 1184, 662, 663, 665, 667, 668, 664,
	666, 669, 1245, 670, 0, 0, 671, 672, 673, 733,
	1268, 1305, 2769, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 1174, 1175, 2772, 0, 0, 0, 0, 0,
	0, 0, 1207, 2768, 0, 1167, 1205, 1223, 1195, 1196,
	1197, 1193, 1194, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1247, 1211, 0, 0, 306, 0, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 1260, 0, 316,
	1267, 317, 1266, 0, 1277, 318, 319, 320, 321, 322,
	323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325,
	326, 1253, 0, 1234, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 1237, 1235, 1236,
	1243, 1239, 1238, 1242, 353, 354, 355, 356, 357, 1270,
	358, 360, 1264, 1263, 1183, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1255,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1189, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1278, 1279, 391, 1202, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1262, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 1275, 1276, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1285, 0, 1212,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1248,
	1249, 1252, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1290, 511, 432, 1257, 1258, 0, 1218, 0, 433, 434,
	1292, 1250, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1286, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 1241, 1240, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 1180,
	295, 1299, 505, 506, 507, 508, 1203, 1251, 509, 1265,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1300, 522, 1301,
	1280, 523, 524, 1190, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1281, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1261, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 1191, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 251,
	604, 605, 603, 606, 607, 608, 1244, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 1259, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 1306, 629, 630, 631, 632,
	1282, 636, 637, 638, 0, 639, 640, 1177, 635, 626,
	253, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 1271, 1272, 1273, 1274, 0, 659, 0, 650,
	651, 652, 653, 1283, 654, 1284, 1201, 655, 656, 657,
	658, 0, 660, 661, 0, 1184, 662, 663, 665, 667,
	668, 664, 666, 669, 1245, 670, 0, 0, 671, 672,
	673, 1747, 1268, 1305, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 245, 681, 682, 737,
	683, 684, 685, 1181, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 0, 0,
	0, 0, 0, 0, 1174, 1175, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 2013, 2011, 0, 0, 1205, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 251, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 253,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	1747, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 245, 681, 682, 737, 683,
	684, 685, 1181, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 1223, 1195, 1196, 1197, 1193,
	1194, 1206, 0, 2013, 3434, 0, 0, 1205, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1247, 1211,
	0, 0, 306, 0, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 1260, 0, 316, 1267, 317,
	1266, 0, 1277, 318, 319, 320, 321, 322, 323, 1213,
	1246, 1178, 324, 1307, 1308, 694, 0, 325, 326, 1253,
	0, 1234, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239,
	1238, 1242, 353, 354, 355, 356, 357, 1270, 358, 360,
	1264, 1263, 1183, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1255, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1189, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1278, 1279, 391, 1202, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1262, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1289, 401,
	402, 403, 1275, 1276, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1285, 0, 1212, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1248, 1249, 1252,
	510, 1291, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1290, 511,
	432, 1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1286, 1295, 449, 450, 1296, 0, 451, 452, 453,
	454, 455, 456, 459, 1241, 1240, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 1180, 295, 1299,
	505, 506, 507, 508, 1203, 1251, 509, 1265, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1300, 522, 1301, 1280, 523,
	524, 1190, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1281, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1261, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 1191, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 251, 604, 605,
	603, 606, 607, 608, 1244, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 1259,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 1306, 629, 630, 631, 632, 1282, 636,
	637, 638, 0, 639, 640, 1177, 635, 626, 253, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	1271, 1272, 1273, 1274, 0, 659, 0, 650, 651, 652,
	653, 1283, 654, 1284, 1201, 655, 656, 657, 658, 0,
	660, 661, 0, 1184, 662, 663, 665, 667, 668, 664,
	666, 669, 1245, 670, 0, 0, 671, 672, 673, 1747,
	1268, 1305, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 245, 681, 682, 737, 683, 684,
	685, 1181, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 1174, 1175, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 2013, 2011, 0, 0, 1205, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	2903, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 2908, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 2904, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 2905, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 2818, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 0, 0, 0, 0, 0,
	0, 0, 0, 1207, 2816, 0, 2815, 1205, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 1207, 2813, 0, 2812, 1205,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 1207, 2810, 0,
	2809, 1205, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	2807, 0, 1849, 1205, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	1848, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 1170, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 1185, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 5023, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 1185, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 2650, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 2649, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 4749, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 1185, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 1185, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 4306,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 2083, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 1207, 0, 0, 0, 1205, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 3977, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 2083, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 1207, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	2908, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 0,
	0, 0, 0, 0, 0, 0, 0, 1207, 2011, 0,
	2913, 1205, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 2911, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 2899, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 2888, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 2886, 0,
	2877, 2884, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 2880, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	2881, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 2882, 469, 2879, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 2883, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 2878, 685, 1181, 0, 0, 0,
	2874, 0, 2877, 2884, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 2880, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 2881, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 2882, 469, 2879, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 2883, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 2878, 685, 1181, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 0, 0, 0, 0, 0, 0, 2019,
	0, 1207, 0, 0, 0, 1205, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 2629, 304, 305, 0, 0, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 2591, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 2562, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	1854, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 1782, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 1777, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 1763, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 1758, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	1668, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1667, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 1662, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1661, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 1655, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 1618, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 1600, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 1604, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 1605, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 1603, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	1432, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 5071, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 5070, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 1174, 1175, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 5069, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 1178, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 5071, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 1183, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	1180, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 1177, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 5070, 661, 0, 1184, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1181, 0, 0, 0, 0, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 1176, 0,
	0, 0, 0, 0, 0, 1174, 1175, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 1178, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 4673, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 1183, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 4674, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 1180, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 1190, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 4672, 585, 1191, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	1177, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 1184, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1181, 0, 0, 0,
	0, 0, 1223, 1195, 1196, 1197, 3401, 3402, 1206, 0,
	1176, 0, 0, 0, 0, 0, 0, 1174, 1175, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 1299, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 660, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1181, 0,
	0, 0, 0, 0, 1223, 1195, 1196, 1197, 3399, 3400,
	1206, 0, 1176, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 1213, 1246,
	1178, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 1183, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1189,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 1180, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	1190, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 1177, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 1184, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1181, 0, 0, 0, 0, 0, 1223, 1195, 1196, 1197,
	1193, 1194, 1206, 0, 1176, 0, 0, 0, 0, 0,
	0, 1174, 1175, 296, 297, 299, 298, 300, 301, 302,
	303, 1207, 304, 305, 0, 1205, 0, 0, 0, 1247,
	1211, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 1260, 0, 316, 1267,
	317, 1266, 0, 1277, 318, 319, 320, 321, 322, 323,
	1213, 1246, 1178, 324, 1307, 1308, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 1270, 358,
	360, 1264, 1263, 1183, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1255, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1189, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 1202, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1262, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 1275, 1276, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 1212, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 1257, 1258, 0, 1218, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 1180, 295,
	1299, 505, 506, 507, 508, 1203, 1251, 509, 1265, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 1190, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1261, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 1191, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	1259, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 1306, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 1177, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 1271, 1272, 1273, 1274, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 1201, 655, 656, 657, 658,
	0, 660, 661, 0, 1184, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 1268, 1305, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 1181, 0, 0, 0, 0, 0, 1223, 1195,
	1196, 1197, 1193, 1194, 1206, 0, 1176, 0, 0, 0,
	0, 0, 0, 2637, 2638, 296, 297, 299, 298, 300,
	301, 302, 303, 1207, 304, 305, 0, 1205, 0, 0,
	0, 1247, 1211, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 1260, 0,
	316, 1267, 317, 1266, 0, 1277, 318, 319, 320, 321,
	322, 323, 1213, 1246, 0, 324, 1307, 1308, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	1270, 358, 360, 1264, 1263, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1255, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1189, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 1202, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1262, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 1275, 1276, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	1212, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 1257, 1258, 0, 1218, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	0, 295, 1299, 505, 506, 507, 508, 1203, 1251, 509,
	1265, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 1190, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1261, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 1191, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 1259, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 1306, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 1271, 1272, 1273, 1274, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 1201, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 1268, 1305, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	1223, 1195, 1196, 1197, 1193, 1194, 1206, 0, 2896, 0,
	0, 0, 0, 0, 0, 2894, 2895, 296, 297, 299,
	298, 300, 301, 302, 303, 1207, 304, 305, 0, 1205,
	0, 0, 0, 1247, 1211, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	1260, 0, 316, 1267, 317, 1266, 0, 1277, 318, 319,
	320, 321, 322, 323, 1213, 1246, 0, 324, 1307, 1308,
	694, 0, 325, 326, 1253, 0, 1234, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	1237, 1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355,
	356, 357, 1270, 358, 360, 1264, 1263, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1255, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1189, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1278, 1279, 391,
	1202, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1262, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 1275, 1276, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1285, 0, 1212, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1248, 1249, 1252, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1290, 511, 432, 1257, 1258, 0, 1218,
	0, 433, 434, 1292, 1250, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1286, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 1241,
	1240, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 0, 295, 1299, 505, 506, 507, 508, 1203,
	1251, 509, 1265, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 1280, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 1281, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1261, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 3394, 3395, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 1244,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 1259, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 1306, 629,
	630, 631, 632, 1282, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 1271, 1272, 1273, 1274, 0,
	659, 0, 650, 651, 652, 653, 1283, 654, 1284, 1201,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 1245, 670, 0,
	0, 671, 672, 673, 733, 1268, 1305, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 2264, 2265, 296,
	297, 299, 298, 300, 301, 302, 303, 1207, 304, 305,
	0, 1205, 0, 0, 0, 1247, 1211, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 0, 1260, 0, 316, 1267, 317, 1266, 0, 1277,
	318, 319, 320, 321, 322, 323, 1213, 1246, 1178, 324,
	1307, 1308, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 5071, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 1270, 358, 360, 1264, 1263, 1183,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1255, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1189, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 1202, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1262, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 1275,
	1276, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 1212, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 1257, 1258,
	0, 1218, 0, 433, 434, 0, 1250, 0, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 1180, 295, 0, 505, 506, 507,
	508, 1203, 1251, 509, 1265, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 1190, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1261, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 1191, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 1259, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	1306, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 1177, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 1271, 1272, 1273,
	1274, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 1201, 655, 656, 657, 658, 0, 5070, 661, 0,
	1184, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 733, 1268, 1305, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 2915, 0, 1223, 1195, 1196, 1197, 1193, 1194,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	1175, 296, 297, 299, 298, 300, 301, 302, 303, 1207,
	304, 305, 0, 1205, 0, 0, 0, 1247, 1211, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 1260, 0, 316, 1267, 317, 1266,
	0, 1277, 318, 319, 320, 321, 322, 323, 0, 1246,
	0, 324, 1307, 1308, 694, 0, 325, 326, 1253, 0,
	1234, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238,
	1242, 353, 354, 355, 356, 357, 1270, 358, 360, 1264,
	1263, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1255, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1278, 1279, 391, 1202, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1262, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 1275, 1276, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1285, 0, 1212, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1248, 1249, 1252, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1290, 511, 432,
	1257, 1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1286, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 1241, 1240, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 0, 295, 1299, 505,
	506, 507, 508, 1203, 1251, 509, 1265, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 1280, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 1281, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1261,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	1191, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 1244, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 1259, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 1306, 629, 630, 631, 632, 1282, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 1271,
	1272, 1273, 1274, 0, 659, 0, 650, 651, 652, 653,
	1283, 654, 1284, 1201, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 1245, 670, 0, 0, 671, 672, 673, 733, 1268,
	1305, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	0, 1630, 0, 1223, 1195, 1196, 1197, 1193, 1194, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 1207, 0, 0, 0, 1205, 1247, 1211, 0, 0,
	306, 0, 307, 308, 1287, 309, 310, 311, 312, 313,
	314, 315, 687, 1260, 0, 316, 1267, 317, 1266, 0,
	1277, 318, 319, 320, 321, 322, 323, 0, 1246, 0,
	324, 1307, 1308, 694, 0, 325, 326, 1253, 0, 1234,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1288,
	350, 351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242,
	353, 354, 355, 356, 357, 1270, 358, 360, 1264, 1263,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1255, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1278, 1279, 391, 1202, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1262, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1289, 401, 402, 403,
	1275, 1276, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1285, 0, 1212, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1248, 1249, 1252, 510, 1291,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1290, 511, 432, 1257,
	1258, 0, 1218, 0, 433, 434, 1292, 1250, 1293, 435,
	436, 437, 1294, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1286,
	1295, 449, 450, 1296, 0, 451, 452, 453, 454, 455,
	456, 459, 1241, 1240, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1297, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1298, 503, 491, 0, 295, 1299, 505, 506,
	507, 508, 1203, 1251, 509, 1265, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1300, 522, 1301, 1280, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	1281, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1261, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1302, 581, 582, 583, 584, 585, 1191,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1244, 609, 610, 592, 593, 611, 612, 1303,
	613, 614, 615, 616, 617, 618, 619, 1259, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 1306, 629, 630, 631, 632, 1282, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 1271, 1272,
	1273, 1274, 0, 659, 0, 650, 651, 652, 653, 1283,
	654, 1284, 1201, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	1245, 670, 0, 0, 671, 672, 673, 733, 1268, 1305,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	1167, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	1207, 0, 0, 0, 1205, 1247, 0, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 1246, 0, 324,
	692, 693, 694, 0, 325, 326, 1253, 0, 1234, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 1237, 1235, 1236, 1243, 1239, 1238, 1242, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1278,
	1279, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1285, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1248, 1249, 1252, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1290, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1292, 1250, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1332, 445, 447, 446, 0, 448, 1286, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 1241, 1240, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 0, 295, 1299, 505, 506, 507,
	508, 0, 1251, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 1338, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 1280, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 1281,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 1340,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 251, 604, 605, 603, 606, 607,
	608, 1244, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 1282, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 253, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 1283, 654,
	1284, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 1245,
	670, 0, 0, 671, 672, 673, 1747, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 245, 681, 682, 737, 683, 684, 685, 1346, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 1336, 0, 2107,
	0, 1247, 0, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 1246, 0, 324, 692, 693, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1332, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	0, 295, 1299, 505, 506, 507, 508, 0, 1251, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 1338,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 723, 1340, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	251, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 253, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 1747, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 245, 681, 682,
	737, 683, 684, 685, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3558, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1336, 0, 2107, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 306, 0, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 1246, 0, 324, 692, 693, 694,
	0, 325, 326, 1253, 0, 1234, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1288, 350, 351, 352, 1237,
	1235, 1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1278, 1279, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1289, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1285,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1248, 1249, 1252, 510, 1291, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1290, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1292, 1250, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 1332,
	445, 447, 446, 0, 448, 1286, 1295, 449, 450, 1296,
	0, 451, 452, 453, 454, 455, 456, 459, 1241, 1240,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 0, 295, 1299, 505, 506, 507, 508, 0, 1251,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	1338, 517, 518, 519, 0, 0, 520, 521, 716, 1300,
	522, 1301, 1280, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 1281, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 723, 1340, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1244, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 1282, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 1283, 654, 1284, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 1245, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 1328, 0, 1346, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1247, 0, 0, 1336, 306, 1334, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 1246, 0, 324, 692, 693, 694, 0,
	325, 326, 1253, 0, 1234, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 1237, 1235,
	1236, 1243, 1239, 1238, 1242, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1278, 1279, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1285, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1248, 1249, 1252, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1290, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 1292, 1250, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1332, 445,
	447, 446, 0, 448, 1286, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 1241, 1240, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	0, 295, 1299, 505, 506, 507, 508, 0, 1251, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 1338,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 1280, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 1281, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 723, 1340, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 1244, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 1282, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 1283, 654, 1284, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 1245, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 1346, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1247, 0, 0, 1336, 306, 1334, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 1246, 0, 324, 692, 693, 694, 0, 325,
	326, 1253, 0, 1234, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 1237, 1235, 1236,
	1243, 1239, 1238, 1242, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1278, 1279, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1285, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1248,
	1249, 1252, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1290, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1292, 1250, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1332, 445, 447,
	446, 0, 448, 1286, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 1241, 1240, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 0,
	295, 1299, 505, 506, 507, 508, 0, 1251, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 1338, 517,
	518, 519, 0, 0, 520, 521, 716, 1300, 522, 1301,
	1280, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 1281, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 1340, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1244, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	1282, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 1283, 654, 1284, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 1245, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 1346, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1247,
	0, 0, 1336, 306, 1334, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 1246, 0, 324, 692, 693, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 0, 295,
	1299, 505, 506, 507, 508, 0, 1251, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 1346, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 306, 4489, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	1246, 0, 324, 692, 693, 694, 0, 325, 326, 1253,
	0, 1234, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243, 1239,
	1238, 1242, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1278, 1279, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1285, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1248, 1249, 1252,
	510, 1291, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1290, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1292, 1250,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1286, 1295, 449, 450, 1296, 0, 451, 452, 453,
	454, 455, 456, 459, 1241, 1240, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 0, 295, 1299,
	505, 506, 507, 508, 0, 1251, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1300, 522, 1301, 1280, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 1281, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 1340, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1244, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 1282, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 1283, 654, 1284, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 1245, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 2741, 2742, 2743, 2760, 2761, 2762, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 2763, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 2003, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 1988, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 2753, 0, 336,
	337, 338, 335, 339, 0, 340, 2749, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 2754, 2755, 2756, 2757, 392, 393,
	394, 701, 0, 0, 2748, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 2758, 2759, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 2751, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 2752,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 1987, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 1625, 2738, 2739,
	2740, 2764, 2750, 2744, 0, 2746, 2747, 2745, 2732, 2733,
	2734, 2735, 2736, 2737, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1589, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1290, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1292, 712, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 0,
	0, 1299, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1300, 522, 1301,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 251,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	253, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 1747, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 245, 681, 682, 737,
	683, 684, 685, 0, 1744, 246, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 202, 0, 0, 0, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 1589, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1290,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1292,
	712, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 0, 0,
	1299, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 251, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 253,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	1747, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 0, 0, 245, 681, 682, 737, 683,
	684, 685, 1625, 1624, 246, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 202, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 1287, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 1589, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1288, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1289, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 1291, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 1290, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 1292, 712, 1293, 435, 436,
	437, 1294, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 1295,
	449, 450, 1296, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1297, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1298, 503, 491, 0, 0, 1299, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 1300, 522, 1301, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 1302, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 1303, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 1625, 1624,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 1771,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 1287,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 1589, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1288, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1289, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 1291, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 1290, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 1292, 712, 1293, 435, 436, 437, 1294, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 1295, 449, 450, 1296, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1297,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1298, 503, 491,
	0, 0, 1299, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 1300, 522,
	1301, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 1302, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 1303, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 0, 0, 0, 681, 682,
	737, 683, 684, 685, 1625, 1624, 0, 0, 0, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 3890, 0, 686, 0, 0,
	0, 306, 0, 307, 308, 1287, 309, 310, 311, 312,
	313, 314, 315, 687, 688, 0, 316, 689, 317, 690,
	0, 691, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 692, 693, 694, 0, 325, 326, 695, 0,
	1589, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1288, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 696,
	697, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 698,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 699, 700, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 701, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1289, 401, 402,
	403, 702, 703, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 704, 0, 705, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 706, 707, 708, 510,
	1291, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 1290, 511, 432,
	709, 710, 0, 711, 0, 433, 434, 1292, 712, 1293,
	435, 436, 437, 1294, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	713, 1295, 449, 450, 1296, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1297, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1298, 503, 491, 0, 0, 1299, 505,
	506, 507, 508, 0, 714, 509, 715, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 716, 1300, 522, 1301, 717, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 718, 536, 537, 538, 719, 539, 540,
	541, 720, 542, 721, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 722,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 2501, 567, 573, 574, 575, 576, 577,
	0, 578, 579, 580, 1302, 581, 582, 583, 584, 585,
	723, 586, 0, 587, 588, 595, 596, 597, 589, 590,
	591, 598, 599, 600, 601, 602, 0, 604, 605, 603,
	606, 607, 608, 0, 609, 610, 592, 593, 611, 612,
	1303, 613, 614, 615, 616, 617, 618, 619, 724, 0,
	620, 0, 621, 622, 623, 624, 625, 627, 594, 628,
	633, 634, 725, 629, 630, 631, 632, 726, 636, 637,
	638, 0, 639, 640, 0, 635, 626, 0, 641, 642,
	643, 644, 645, 646, 0, 647, 648, 0, 649, 727,
	728, 729, 730, 0, 659, 0, 650, 651, 652, 653,
	731, 654, 732, 0, 655, 656, 657, 658, 0, 660,
	661, 0, 0, 662, 663, 665, 667, 668, 664, 666,
	669, 0, 670, 0, 0, 671, 672, 673, 733, 734,
	735, 0, 675, 674, 676, 677, 678, 736, 679, 680,
	0, 0, 0, 0, 681, 682, 737, 683, 684, 685,
	1625, 2411, 0, 0, 0, 0, 2412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 1771, 0, 686, 0, 0, 0, 306, 0, 307,
	308, 1287, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 1589, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1288, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1289, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 1291, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 1290, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 1292, 712, 1293, 435, 436, 437, 1294,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 2410, 447, 446, 0, 448, 713, 1295, 449, 450,
	1296, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1297, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1298,
	503, 491, 0, 0, 1299, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	1300, 522, 1301, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	1302, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 1303, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 0, 0, 0,
	681, 682, 737, 683, 684, 685, 1625, 1624, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 1771, 0, 686,
	0, 0, 0, 306, 0, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 1589, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1290,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1292,
	712, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 0, 0,
	1299, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 1167, 0, 290, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 1753, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 251, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 253, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 1747,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 245, 681, 682, 737, 683, 684,
	685, 0, 0, 246, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 202, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 3173, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 2121, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 5238, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 0,
	290, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 306, 3841, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 687,
	688, 0, 316, 689, 317, 690, 0, 691, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 692, 693,
	694, 0, 325, 326, 695, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 696, 697, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 698, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 699, 700, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	701, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 702, 703, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	704, 0, 705, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 706, 707, 708, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 709, 710, 0, 711,
	0, 433, 434, 0, 712, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 713, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	714, 509, 715, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 716,
	0, 522, 0, 717, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 718,
	536, 537, 538, 719, 539, 540, 541, 720, 542, 721,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 722, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 0, 578, 579, 580,
	0, 581, 582, 583, 584, 585, 723, 586, 0, 587,
	588, 595, 596, 597, 589, 590, 591, 598, 599, 600,
	601, 602, 0, 604, 605, 603, 606, 607, 608, 0,
	609, 610, 592, 593, 611, 612, 0, 613, 614, 615,
	616, 617, 618, 619, 724, 0, 620, 0, 621, 622,
	623, 624, 625, 627, 594, 628, 633, 634, 725, 629,
	630, 631, 632, 726, 636, 637, 638, 0, 639, 640,
	0, 635, 626, 0, 641, 642, 643, 644, 645, 646,
	0, 647, 648, 0, 649, 727, 728, 729, 730, 0,
	659, 0, 650, 651, 652, 653, 731, 654, 732, 0,
	655, 656, 657, 658, 0, 660, 661, 0, 0, 662,
	663, 665, 667, 668, 664, 666, 669, 0, 670, 0,
	0, 671, 672, 673, 733, 734, 735, 0, 675, 674,
	676, 677, 678, 736, 679, 680, 0, 290, 0, 0,
	681, 682, 737, 683, 684, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 1741, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 1346, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 306, 3294, 307, 308, 1287, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 1246, 0, 324, 692, 693, 694, 0, 325, 326,
	1253, 0, 1234, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1288, 350, 351, 352, 1237, 1235, 1236, 1243,
	1239, 1238, 1242, 353, 354, 355, 356, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1278, 1279, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1289,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1285, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1248, 1249,
	1252, 510, 1291, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1290,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 1292,
	1250, 1293, 435, 436, 437, 1294, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1286, 1295, 449, 450, 1296, 0, 451, 452,
	453, 454, 455, 456, 459, 1241, 1240, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1297, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1298, 503, 491, 0, 295,
	1299, 505, 506, 507, 508, 0, 1251, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 1300, 522, 1301, 1280,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 1281, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 1302, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 598, 599, 600, 601, 602, 0, 604,
	605, 603, 606, 607, 608, 1244, 609, 610, 592, 593,
	611, 612, 1303, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 1282,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 0,
	641, 642, 643, 644, 645, 646, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 1283, 654, 1284, 0, 655, 656, 657, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 1245, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 290, 0, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 290, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 686, 0, 0, 0, 306, 0, 307, 308, 4002,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 0, 641, 642, 643, 644, 645, 646, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 991, 0, 892, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 2488, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 899, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 988,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 990, 0, 635, 626,
	897, 641, 642, 643, 644, 645, 898, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 2165, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 902, 0, 0, 0,
	306, 0, 307, 308, 1287, 309, 310, 311, 312, 313,
	314, 315, 0, 2171, 0, 316, 2161, 317, 2177, 0,
	2184, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 2187, 2188, 0, 0, 325, 326, 0, 0, 1589,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1288,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 1270, 358, 360, 2175, 2174,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1255, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 2173, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1289, 401, 402, 403,
	2182, 2183, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 0, 0, 0, 510, 1291,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 1290, 511, 432, 2168,
	2169, 0, 2164, 0, 433, 434, 1292, 0, 1293, 435,
	436, 437, 1294, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 0,
	1295, 449, 450, 1296, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1297, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1298, 503, 491, 0, 0, 1299, 505, 506,
	507, 508, 0, 0, 509, 2176, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 0, 1300, 522, 1301, 0, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 2158, 536, 537, 538, 2159, 539, 540, 541,
	0, 542, 0, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 2172, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1302, 581, 582, 583, 584, 585, 0,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 1303,
	613, 614, 615, 616, 617, 618, 619, 2170, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 2186, 629, 630, 631, 632, 0, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 2178, 2179,
	2180, 2181, 0, 659, 0, 650, 651, 652, 653, 0,
	654, 0, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 0, 2162, 2185,
	0, 675, 674, 676, 677, 678, 0, 679, 680, 0,
	0, 0, 0, 681, 682, 0, 683, 684, 685, 892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 4129, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 2152, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 899,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 4128, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 897, 641, 642, 643, 644, 645, 898, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 4127, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 892, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 2192, 304, 305, 0, 0, 0, 0, 902, 686,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 687, 688, 0, 316, 689,
	317, 690, 0, 691, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 692, 693, 694, 0, 325, 326,
	695, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 899, 357, 0, 358,
	360, 696, 697, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 698, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 699, 700, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 701, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 702, 703, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 704, 0, 705, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 706, 707,
	708, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 709, 710, 0, 711, 0, 433, 434, 0,
	712, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 713, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 714, 509, 715, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 716, 0, 522, 0, 717,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 718, 536, 537, 538, 719,
	539, 540, 541, 720, 542, 721, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 722, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 0, 578, 579, 580, 0, 581, 582, 583,
	584, 585, 723, 586, 0, 587, 588, 595, 596, 597,
	589, 590, 591, 2191, 599, 600, 601, 602, 0, 2193,
	605, 603, 606, 607, 608, 0, 609, 610, 592, 593,
	611, 612, 0, 613, 614, 615, 616, 617, 618, 619,
	724, 0, 620, 0, 621, 622, 623, 624, 625, 627,
	594, 628, 633, 634, 725, 629, 630, 631, 632, 726,
	636, 637, 638, 0, 639, 640, 0, 635, 626, 897,
	641, 642, 643, 644, 645, 898, 0, 647, 648, 0,
	649, 727, 728, 729, 730, 0, 659, 0, 650, 651,
	652, 653, 731, 654, 732, 0, 655, 656, 2190, 658,
	0, 660, 661, 0, 0, 662, 663, 665, 667, 668,
	664, 666, 669, 0, 670, 0, 0, 671, 672, 673,
	733, 734, 735, 0, 675, 674, 676, 677, 678, 736,
	679, 680, 0, 892, 0, 0, 681, 682, 737, 683,
	684, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 2143, 304,
	305, 0, 0, 0, 0, 902, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 899, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	2142, 599, 600, 601, 602, 0, 2144, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 897, 641, 642, 643,
	644, 645, 898, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 2141, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 890,
	0, 892, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 902, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 899, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 897, 641, 642, 643, 644, 645,
	898, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 892, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	902, 686, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 687, 688, 0,
	316, 689, 317, 690, 0, 691, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 692, 693, 694, 0,
	325, 326, 695, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 899, 357,
	0, 358, 360, 696, 697, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 698, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 699, 700, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 701, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 702, 703, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 704, 0,
	705, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	706, 707, 708, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 709, 710, 0, 711, 0, 433,
	434, 0, 712, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 713, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 714, 509,
	715, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 716, 0, 522,
	0, 717, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 718, 536, 537,
	538, 719, 539, 540, 541, 720, 542, 721, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 722, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 0, 578, 579, 580, 0, 581,
	582, 583, 584, 585, 723, 586, 0, 587, 588, 595,
	596, 597, 589, 590, 591, 598, 599, 600, 601, 602,
	0, 604, 605, 603, 606, 607, 608, 0, 609, 610,
	592, 593, 611, 612, 0, 613, 614, 615, 616, 617,
	618, 619, 724, 0, 620, 0, 621, 622, 623, 624,
	625, 627, 594, 628, 633, 634, 725, 629, 630, 631,
	632, 726, 636, 637, 638, 0, 639, 640, 0, 635,
	626, 897, 641, 642, 643, 644, 645, 898, 0, 647,
	648, 0, 649, 727, 728, 729, 730, 0, 659, 0,
	650, 651, 652, 653, 731, 654, 732, 0, 655, 656,
	657, 658, 0, 660, 661, 0, 0, 662, 663, 665,
	667, 668, 664, 666, 669, 0, 670, 0, 0, 671,
	672, 673, 733, 734, 735, 0, 675, 674, 676, 677,
	678, 736, 679, 680, 0, 892, 0, 0, 681, 682,
	737, 683, 684, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 902, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 899, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 2541, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 2542, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 897, 641,
	642, 643, 644, 645, 898, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 2543, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 290, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 902, 686, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 687, 688, 0, 316, 689, 317, 690, 0, 691,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	692, 693, 694, 0, 325, 326, 695, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 696, 697, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 698, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 699,
	700, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 701, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 702,
	703, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 704, 0, 705, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 706, 707, 708, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 709, 710,
	0, 711, 0, 433, 434, 0, 712, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 713, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 714, 509, 715, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 716, 0, 522, 0, 717, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 718, 536, 537, 538, 719, 539, 540, 541, 720,
	542, 721, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 722, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 723, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 0, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 724, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	725, 629, 630, 631, 632, 726, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 727, 728, 729,
	730, 0, 659, 0, 650, 651, 652, 653, 731, 654,
	732, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 733, 734, 735, 0,
	675, 674, 676, 677, 678, 736, 679, 680, 0, 0,
	0, 0, 681, 682, 737, 683, 684, 685, 0, 0,
	0, 0, 0, 0, 0, 1625, 1624, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 902, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1589, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1288, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1291, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1290, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1292, 712,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 1295, 449, 450, 1296, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 0, 0, 1299,
	505, 506, 507, 508, 4232, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1300, 522, 1301, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1625, 1624, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1589, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1288, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1290, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1295, 449,
	450, 1296, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 0, 0, 1299, 505, 506, 507, 508,
	3791, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 0, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 1803, 0, 1625,
	1624, 0, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1287, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 1589, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1288, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 1801, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1289, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 1291, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1290, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 1292, 712, 1293, 435, 436, 437, 1294, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 1295, 449, 450, 1296,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1297, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1298, 503,
	491, 0, 0, 1299, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 1300,
	522, 1301, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 1802, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 1302,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 1800, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 1303, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 0, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 1675, 0, 1625, 1624, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1589, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1677,
	707, 708, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1290, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1292, 712, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 0,
	0, 1299, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1300, 522, 1301,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 0, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 1620, 0, 1625, 1624, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 1287, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 1589, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1288, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1289, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 1291, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1290, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 1292, 712,
	1293, 435, 436, 437, 1294, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 1295, 449, 450, 1296, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1297, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1298, 503, 491, 0, 0, 1299,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 1300, 522, 1301, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 1302, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 1303, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 0, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 1625, 1624, 0, 0, 0, 0, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 1287, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 1589, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1288, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1289, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 1291, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1290, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 1292, 712, 1293, 435, 436, 437,
	1294, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 1295, 449,
	450, 1296, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1297, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1298, 503, 491, 0, 0, 1299, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 1300, 522, 1301, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 1302, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 1303, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1625, 1624, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1287, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 1589, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1288, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1289, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 1291, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1290, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	1292, 712, 1293, 435, 436, 437, 1294, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 1295, 449, 450, 1296, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1297, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1298, 503, 491, 0,
	0, 1299, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 1300, 522, 1301,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 1302, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 1303, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1625, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 1287, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 1589,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1288,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1289, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 1291,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 1290, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 1292, 712, 1293, 435,
	436, 437, 1294, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	1295, 449, 450, 1296, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1297, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1298, 503, 491, 0, 0, 1299, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 1300, 522, 1301, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 1302, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 1303,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	3075, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 3833, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 3079, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	3832, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 3078, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 3829, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 3831, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 3828,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 3077, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 3830, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 3075, 325, 326, 695,
	0, 0, 3069, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 3071, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 3079, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 3078, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3068, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 3077, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 3076, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1883, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 1882, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 1881, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 1884, 590, 591,
	598, 599, 600, 601, 602, 0, 1880, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 1878, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 1879, 674, 676, 677, 678, 736, 679, 680, 1593,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1595, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1338, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1590, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1592, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	1338, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1496, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1498,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 1338, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 770, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 769, 302, 303,
	758, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 761, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 767, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 763, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 757, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 758, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 761, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 762, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 763, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 758, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 761, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 762, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 763, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	758, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 761, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 4242, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 763, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 2447, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 1338, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 3727, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 3264,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 3263, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 2509, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 2453, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 2452,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 2440, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 2442, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 2404, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 1338, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1719, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1718, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1613, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1606, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1608, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1415, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1414, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1405,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1404, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1402, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1401, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1397, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1396,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 739, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 281, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 761, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 762, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 763, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 2550, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 2548, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 2546, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 2459, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 2217, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 2211, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 975, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 974,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 973, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 859, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 848, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 857, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 850, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 856, 400, 852,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 853, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 851, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 854, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	855, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	849, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 842, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 848, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 857, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 850, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 856, 400, 852, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 853, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 851, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	854, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 855, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 849, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 3832, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 4574, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1443, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	1446, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 1444,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 830,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	829, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 828, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 1447, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 826, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1443, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 1446, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 1444, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 830, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 829, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 828, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 1447, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 826, 728, 729, 730, 0, 659, 0, 650,
	1445, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 837, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	835, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 748, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 747, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 746, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	3173, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 4872, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 3667, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 4461,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	4186, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 2950, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 3173, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 3303,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 2348, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 829, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 828, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 826, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2520, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 2507, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1775, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1767,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 820, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 816, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 821, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 830,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	829, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 828, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 1752, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 826, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1725, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1724,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1709, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1707, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1703, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1680,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1678, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1673, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1634, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 1598, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 1449, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 829, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	828, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 826, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 1420,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1419, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 1411, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1410, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	1363, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 840, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 820,
	0, 290, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 816, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 815, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 821, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 830, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 829, 582, 583, 584, 585, 817, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 828, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 818, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 826, 728, 729, 730,
	0, 659, 0, 650, 822, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 809, 0, 290,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	810, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 772, 0, 290, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 706,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 765, 0, 290, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 743, 0, 290, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3863, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 829, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 828, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 826, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 3770,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 3744, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3740, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3692, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 3690, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 3678,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 3675, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3274, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 290, 0, 0, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 687, 688, 0, 316, 689, 317,
	690, 0, 691, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 692, 693, 694, 0, 325, 326, 695,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	696, 697, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	698, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 699, 700, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 701, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 702, 703, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 704, 0, 705, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 706, 707, 708,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 709, 710, 0, 711, 0, 433, 434, 0, 712,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 713, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 714, 509, 715, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 716, 0, 522, 0, 717, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 718, 536, 537, 538, 719, 539,
	540, 541, 720, 542, 721, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	722, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 723, 586, 0, 587, 588, 810, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 0, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 724,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 725, 629, 630, 631, 632, 726, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	727, 728, 729, 730, 0, 659, 0, 650, 651, 652,
	653, 731, 654, 732, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 733,
	734, 735, 0, 675, 674, 676, 677, 678, 736, 679,
	680, 290, 0, 0, 0, 681, 682, 737, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 686, 0, 2477, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	687, 688, 0, 316, 689, 317, 690, 0, 691, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 692,
	693, 694, 0, 325, 326, 695, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 696, 697, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 698, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 699, 700,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 701, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 702, 703,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 704, 0, 705, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 706, 707, 708, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 709, 710, 0,
	711, 0, 433, 434, 0, 712, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 713, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 714, 509, 715, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	716, 0, 522, 0, 717, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	718, 536, 537, 538, 719, 539, 540, 541, 720, 542,
	721, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 722, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 723, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	0, 0, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 724, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 725,
	629, 630, 631, 632, 726, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 727, 728, 729, 730,
	0, 659, 0, 650, 651, 652, 653, 731, 654, 732,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 733, 734, 735, 0, 675,
	674, 676, 677, 678, 736, 679, 680, 290, 0, 0,
	0, 681, 682, 737, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 687, 688, 0, 316,
	689, 317, 690, 0, 691, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 692, 693, 694, 0, 325,
	326, 695, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 696, 697, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 698, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 699, 700, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 701, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 702, 703, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 704, 0, 705,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1382,
	707, 708, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 709, 710, 0, 711, 0, 433, 434,
	0, 712, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 713, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 714, 509, 715,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 716, 0, 522, 0,
	717, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 718, 536, 537, 538,
	719, 539, 540, 541, 720, 542, 721, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 722, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 723, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 0, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 724, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 725, 629, 630, 631, 632,
	726, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 727, 728, 729, 730, 0, 659, 0, 650,
	651, 652, 653, 731, 654, 732, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 733, 734, 735, 0, 675, 674, 676, 677, 678,
	736, 679, 680, 290, 0, 0, 0, 681, 682, 737,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 687, 688, 0, 316, 689, 317, 690, 0,
	691, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 692, 693, 694, 0, 325, 326, 695, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 696, 697,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 698, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	699, 700, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 701, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	702, 703, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 704, 0, 705, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 706, 707, 708, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 709,
	710, 0, 711, 0, 433, 434, 0, 712, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 713,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 714, 509, 715, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 716, 0, 522, 0, 717, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 718, 536, 537, 538, 719, 539, 540, 541,
	720, 542, 721, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 722, 556,
	557, 1311, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 723,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 0, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 724, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 725, 629, 630, 631, 632, 726, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 727, 728,
	729, 730, 0, 659, 0, 650, 651, 652, 653, 731,
	654, 732, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 733, 734, 735,
	0, 675, 674, 676, 677, 678, 736, 679, 680, 290,
	0, 0, 0, 681, 682, 737, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 687, 688,
	0, 316, 689, 317, 690, 0, 691, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 692, 693, 694,
	0, 325, 326, 695, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 696, 697, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 698, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 699, 700, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 701,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 702, 703, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 704,
	0, 705, 0, 0, 415, 416, 417, 418, 419, 420,
	421, 706, 707, 708, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 709, 710, 0, 711, 0,
	433, 434, 0, 712, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 713, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 714,
	509, 715, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 716, 0,
	522, 0, 717, 523, 524, 516, 525, 526, 0, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 718, 536,
	537, 538, 719, 539, 540, 541, 720, 542, 721, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 0, 554, 555, 722, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 723, 0, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 0, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 724, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 725, 629, 630,
	631, 632, 726, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 727, 728, 729, 730, 0, 659,
	0, 650, 651, 652, 653, 731, 654, 732, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 733, 734, 735, 0, 675, 674, 676,
	677, 678, 736, 679, 680, 1715, 0, 1427, 0, 681,
	682, 737, 683, 684, 685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	0, 317, 0, 0, 0, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 0, 0, 0, 0, 325,
	326, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 1429, 353, 354, 355, 356, 357, 0,
	358, 360, 0, 0, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 0, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 0, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1714,
	0, 0, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 0, 0, 0, 0, 0, 433, 434,
	0, 0, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 0, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 509, 0,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 0, 0, 522, 0,
	0, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 0, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 0, 578, 579, 580, 0, 581, 582,
	583, 584, 585, 0, 586, 0, 587, 588, 595, 596,
	597, 589, 590, 591, 598, 599, 600, 601, 602, 0,
	604, 605, 603, 606, 607, 608, 1430, 609, 610, 592,
	593, 611, 612, 0, 613, 614, 615, 616, 617, 618,
	619, 0, 0, 620, 0, 621, 622, 623, 624, 625,
	627, 594, 628, 633, 634, 0, 629, 630, 631, 632,
	0, 636, 637, 638, 0, 639, 640, 0, 635, 626,
	0, 641, 642, 643, 644, 645, 646, 0, 647, 648,
	0, 649, 0, 0, 0, 0, 0, 659, 0, 650,
	651, 652, 653, 0, 654, 0, 0, 655, 656, 657,
	658, 0, 660, 661, 0, 0, 662, 663, 665, 667,
	668, 664, 666, 669, 0, 670, 0, 0, 671, 672,
	673, 0, 0, 0, 0, 675, 674, 676, 677, 678,
	0, 679, 680, 1637, 0, 1427, 0, 681, 682, 0,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 0, 317,
	0, 0, 0, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 0, 0, 0, 0, 325, 326, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 1429, 353, 354, 355, 356, 357, 0, 358, 360,
	0, 0, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	0, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 0, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 0, 0, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1636, 0, 0,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 0, 0, 0, 0, 0, 433, 434, 0, 0,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 0, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 0, 509, 0, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 0, 0, 522, 0, 0, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 0, 536, 537, 538, 0, 539,
	540, 541, 0, 542, 0, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 0, 578, 579, 580, 0, 581, 582, 583, 584,
	585, 0, 586, 0, 587, 588, 595, 596, 597, 589,
	590, 591, 598, 599, 600, 601, 602, 0, 604, 605,
	603, 606, 607, 608, 1430, 609, 610, 592, 593, 611,
	612, 0, 613, 614, 615, 616, 617, 618, 619, 0,
	0, 620, 0, 621, 622, 623, 624, 625, 627, 594,
	628, 633, 634, 0, 629, 630, 631, 632, 0, 636,
	637, 638, 0, 639, 640, 0, 635, 626, 0, 641,
	642, 643, 644, 645, 646, 0, 647, 648, 0, 649,
	0, 0, 0, 0, 0, 659, 0, 650, 651, 652,
	653, 0, 654, 0, 0, 655, 656, 657, 658, 0,
	660, 661, 0, 0, 662, 663, 665, 667, 668, 664,
	666, 669, 0, 670, 0, 0, 671, 672, 673, 0,
	0, 0, 0, 675, 674, 676, 677, 678, 0, 679,
	680, 1425, 0, 1427, 0, 681, 682, 0, 683, 684,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 0, 0, 0, 316, 0, 317, 0, 0,
	0, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 0, 0, 0, 0, 325, 326, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 1429,
	353, 354, 355, 356, 357, 0, 358, 360, 0, 0,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 0, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 0, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	0, 0, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1424, 0, 0, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 0,
	0, 0, 0, 0, 433, 434, 0, 0, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 0,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 0, 509, 0, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 0, 0, 522, 0, 0, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 0, 536, 537, 538, 0, 539, 540, 541,
	0, 542, 0, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 0,
	578, 579, 580, 0, 581, 582, 583, 584, 585, 0,
	586, 0, 587, 588, 595, 596, 597, 589, 590, 591,
	598, 599, 600, 601, 602, 0, 604, 605, 603, 606,
	607, 608, 1430, 609, 610, 592, 593, 611, 612, 0,
	613, 614, 615, 616, 617, 618, 619, 0, 0, 620,
	0, 621, 622, 623, 624, 625, 627, 594, 628, 633,
	634, 0, 629, 630, 631, 632, 0, 636, 637, 638,
	0, 639, 640, 0, 635, 626, 0, 641, 642, 643,
	644, 645, 646, 0, 647, 648, 0, 649, 0, 0,
	0, 0, 0, 659, 0, 650, 651, 652, 653, 0,
	654, 0, 0, 655, 656, 657, 658, 0, 660, 661,
	0, 0, 662, 663, 665, 667, 668, 664, 666, 669,
	0, 670, 0, 0, 671, 672, 673, 0, 0, 0,
	0, 675, 674, 676, 677, 678, 0, 679, 680, 2231,
	0, 1427, 0, 681, 682, 0, 683, 684, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 0, 317, 0, 0, 0, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 0,
	0, 0, 0, 325, 326, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 1429, 353, 354,
	355, 356, 357, 0, 358, 360, 0, 0, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 0, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 0, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 0, 0, 0, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 0, 0, 0,
	0, 0, 433, 434, 0, 0, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 0, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 509, 0, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	0, 0, 522, 0, 0, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	0, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 0, 578, 579,
	580, 0, 581, 582, 583, 584, 585, 0, 586, 0,
	587, 588, 595, 596, 597, 589, 590, 591, 598, 599,
	600, 601, 602, 0, 604, 605, 603, 606, 607, 608,
	1430, 609, 610, 592, 593, 611, 612, 0, 613, 614,
	615, 616, 617, 618, 619, 0, 0, 620, 0, 621,
	622, 623, 624, 625, 627, 594, 628, 633, 634, 0,
	629, 630, 631, 632, 0, 636, 637, 638, 0, 639,
	640, 0, 635, 626, 0, 641, 642, 643, 644, 645,
	646, 0, 647, 648, 0, 649, 0, 0, 0, 0,
	0, 659, 0, 650, 651, 652, 653, 0, 654, 0,
	0, 655, 656, 657, 658, 0, 660, 661, 0, 0,
	662, 663, 665, 667, 668, 664, 666, 669, 0, 670,
	0, 0, 671, 672, 673, 0, 0, 0, 0, 675,
	674, 676, 677, 678, 0, 679, 680, 2198, 0, 1427,
	0, 681, 682, 0, 683, 684, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1429, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 0, 0, 0, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 0, 0, 0, 0, 0,
	433, 434, 0, 0, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 0, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	509, 0, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 0, 0,
	522, 0, 0, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 0, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 0, 578, 579, 580, 0,
	581, 582, 583, 584, 585, 0, 586, 0, 587, 588,
	595, 596, 597, 589, 590, 591, 598, 599, 600, 601,
	602, 0, 604, 605, 603, 606, 607, 608, 1430, 609,
	610, 592, 593, 611, 612, 0, 613, 614, 615, 616,
	617, 618, 619, 0, 0, 620, 0, 621, 622, 623,
	624, 625, 627, 594, 628, 633, 634, 0, 629, 630,
	631, 632, 0, 636, 637, 638, 0, 639, 640, 0,
	635, 626, 0, 641, 642, 643, 644, 645, 646, 0,
	647, 648, 0, 649, 0, 0, 0, 0, 0, 659,
	0, 650, 651, 652, 653, 0, 654, 0, 0, 655,
	656, 657, 658, 0, 660, 661, 0, 0, 662, 663,
	665, 667, 668, 664, 666, 669, 0, 670, 0, 0,
	671, 672, 673, 0, 0, 0, 0, 675, 674, 676,
	677, 678, 1427, 679, 680, 0, 0, 0, 0, 681,
	682, 0, 683, 684, 685, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 0, 0, 0, 316, 0, 317, 0, 0, 0,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	0, 0, 0, 0, 325, 326, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 1429, 353,
	354, 355, 356, 357, 0, 358, 360, 0, 0, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 0, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 0,
	0, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 0, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 0,
	0, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 0, 0, 0, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 0, 0,
	0, 0, 0, 433, 434, 0, 0, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 0, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 0, 509, 0, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 0, 0, 522, 0, 0, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 0, 536, 537, 538, 0, 539, 540, 541, 0,
	542, 0, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 0, 578,
	579, 580, 0, 581, 582, 583, 584, 585, 0, 586,
	0, 587, 588, 595, 596, 597, 589, 590, 591, 598,
	599, 600, 601, 602, 0, 604, 605, 603, 606, 607,
	608, 1430, 609, 610, 592, 593, 611, 612, 0, 613,
	614, 615, 616, 617, 618, 619, 0, 0, 620, 0,
	621, 622, 623, 624, 625, 627, 594, 628, 633, 634,
	0, 629, 630, 631, 632, 0, 636, 637, 638, 0,
	639, 640, 0, 635, 626, 0, 641, 642, 643, 644,
	645, 646, 0, 647, 648, 0, 649, 0, 0, 0,
	0, 0, 659, 0, 650, 651, 652, 653, 0, 654,
	0, 0, 655, 656, 657, 658, 0, 660, 661, 0,
	0, 662, 663, 665, 667, 668, 664, 666, 669, 0,
	670, 0, 0, 671, 672, 673, 0, 0, 0, 0,
	675, 674, 676, 677, 678, 0, 679, 680, 0, 0,
	0, 0, 681, 682, 0, 683, 684, 685, 1932, 1933,
	0, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1963, 0, 0, 0, 0, 0, 1932, 1933,
	1935, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1963, 0, 0, 0, 0, 1988, 0, 0,
	1935, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 0, 0,
	0, 0, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 0, 0,
	0, 0, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 1962, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 1980, 1973, 0, 0,
	1983, 0, 0, 1949, 1950, 0, 0, 1962, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 1979, 0, 1980, 0, 0, 0,
	0, 0, 0, 1949, 1950, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 1961, 0, 1932, 1933,
	0, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 1956,
	0, 1969, 1963, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 1987, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 1972, 0, 4994,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 1946, 1947,
	1953, 1975, 1952, 1948, 1940, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 0, 0, 4900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1933, 0, 1965,
	1966, 1967, 1976, 1977, 1978, 0, 0, 1973, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 1962, 1964, 1969,
	1963, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 0, 1979, 0, 1980, 0, 1982, 0,
	0, 0, 0, 1949, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 1971, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 1957, 1958, 1959, 1960, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 0, 1973, 1961, 0, 1983, 0,
	0, 0, 0, 0, 0, 1962, 1964, 1969, 1963, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 1956,
	0, 0, 1979, 0, 1980, 0, 1982, 0, 0, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 1974, 0, 1971,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 0, 0, 1972, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 0, 0, 4851,
	0, 0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 1973, 1961, 0, 1983, 0, 0, 0,
	0, 0, 0, 1962, 1964, 1969, 1963, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 1956, 0, 0,
	1979, 0, 1980, 0, 1982, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 1974, 0, 1971, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 0, 0, 0, 1972, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 4850, 0, 0,
	1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978, 0,
	0, 1973, 1961, 0, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 1969, 1963, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 1956, 0, 0, 1979, 0,
	1980, 0, 1982, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 1974, 0, 1971, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 1951, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 1957, 1958, 1959, 1960,
	0, 0, 0, 1972, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 0, 0, 4657, 0, 0, 1932, 1933,
	0, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 1973,
	1961, 0, 1983, 0, 0, 0, 0, 0, 0, 1962,
	1964, 1969, 1963, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 1956, 0, 0, 1979, 0, 1980, 0,
	1982, 0, 0, 0, 0, 1949, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 1974, 0, 1971, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 1955, 0,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 0, 0,
	0, 1972, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 4485, 0, 0, 1932, 1933, 0, 1965,
	1966, 1967, 1976, 1977, 1978, 0, 0, 1973, 1961, 0,
	1983, 0, 0, 0, 0, 0, 0, 1962, 1964, 1969,
	1963, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 1956, 0, 0, 1979, 0, 1980, 0, 1982, 0,
	0, 0, 0, 1949, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 1974,
	0, 1971, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 1957, 1958, 1959, 1960, 0, 0, 0, 1972,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 1953, 1975, 1952, 1948, 0, 1945, 1943, 1944,
	1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0, 0,
	0, 4390, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 0, 1973, 1961, 0, 1983, 0,
	0, 0, 0, 0, 0, 1962, 1964, 1969, 1963, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 1956,
	0, 0, 1979, 0, 1980, 0, 1982, 0, 0, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 1974, 0, 1971,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 0, 0, 1972, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 0, 0, 4389,
	0, 0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 1973, 1961, 0, 1983, 0, 0, 0,
	0, 0, 0, 1962, 1964, 1969, 1963, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 1956, 0, 0,
	1979, 0, 1980, 0, 1982, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 1974, 0, 1971, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 0, 0, 0, 1972, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 4388, 0, 0,
	1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978, 0,
	0, 1973, 1961, 0, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 1969, 1963, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 1956, 0, 0, 1979, 0,
	1980, 0, 1982, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 1974, 0, 1971, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 1951, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 1957, 1958, 1959, 1960,
	0, 0, 0, 1972, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 0, 0, 4007, 0, 0, 1932, 1933,
	0, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 1973,
	1961, 0, 1983, 0, 0, 0, 0, 0, 0, 1962,
	1964, 1969, 1963, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 1956, 0, 0, 1979, 0, 1980, 0,
	1982, 0, 0, 0, 0, 1949, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 1974, 0, 1971, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 1955, 0,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 0, 0,
	0, 1972, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 3476, 0, 0, 1932, 1933, 0, 1965,
	1966, 1967, 1976, 1977, 1978, 0, 0, 1973, 1961, 0,
	1983, 0, 0, 0, 0, 0, 0, 1962, 1964, 1969,
	1963, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 1956, 0, 0, 1979, 0, 1980, 0, 1982, 0,
	0, 0, 0, 1949, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 1974,
	0, 1971, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 1957, 1958, 1959, 1960, 0, 0, 0, 1972,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 1953, 1975, 1952, 1948, 0, 1945, 1943, 1944,
	1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0, 0,
	0, 3475, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 0, 1973, 1961, 0, 1983, 0,
	0, 0, 0, 0, 0, 1962, 1964, 1969, 1963, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 1956,
	0, 0, 1979, 0, 1980, 0, 1982, 0, 0, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 1974, 0, 1971,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 0, 0, 1972, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 0, 0, 3474,
	0, 0, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 1973, 1961, 0, 1983, 0, 2378, 0,
	0, 0, 0, 1962, 1964, 0, 0, 1969, 1963, 0,
	0, 0, 0, 0, 0, 0, 1935, 1956, 0, 0,
	1979, 0, 1980, 0, 0, 0, 1982, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 1974, 0, 1971, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	2379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 1972, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 3473, 0, 0,
	0, 0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 1961, 1973, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 1962, 1964, 1969, 1963, 0, 0, 0,
	0, 0, 0, 0, 1935, 1956, 0, 0, 0, 0,
	1979, 0, 1980, 0, 1982, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 1974, 0, 0, 0, 1971, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 1955, 0, 0, 2310, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 2308, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 0, 1972, 0, 0, 0, 0, 1940, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 3438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 1961, 0, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 1979, 0,
	1980, 0, 0, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 2380, 0, 0,
	0, 0, 0, 1974, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 1933,
	1955, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1969, 1963, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 2381, 0, 0, 0, 0, 1934, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 1985, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2309,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 1958, 1959, 1960, 0, 0,
	0, 0, 0, 0, 1940, 5147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1933, 0, 1965,
	1966, 1967, 1976, 1977, 1978, 0, 0, 1973, 0, 0,
	1983, 0, 0, 0, 0, 1987, 0, 1962, 1964, 1969,
	1963, 0, 0, 0, 0, 0, 2307, 0, 1935, 0,
	0, 0, 0, 0, 1979, 0, 1980, 0, 1982, 0,
	0, 0, 0, 1949, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 1971, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 1957, 1958, 1959, 1960, 0, 0, 0, 0,
	0, 0, 1940, 0, 3538, 0, 0, 0, 0, 5146,
	0, 3537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 0, 1973, 1961, 0, 1983, 0,
	0, 0, 0, 0, 0, 1962, 1964, 1969, 1963, 0,
	0, 0, 0, 3409, 0, 0, 1935, 0, 0, 1956,
	0, 0, 1979, 0, 1980, 0, 1982, 0, 0, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 1974, 0, 1971,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3410, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 0, 0, 1972, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 2923, 0, 0, 0, 0,
	0, 0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 1973, 1961, 0, 1983, 0, 0, 0,
	0, 0, 0, 1962, 1964, 1969, 1963, 0, 0, 0,
	2922, 0, 0, 0, 1935, 0, 0, 1956, 0, 0,
	1979, 0, 1980, 0, 1982, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 1974, 0, 1971, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 0, 0, 0, 1972, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978, 0,
	0, 1973, 1961, 0, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 1969, 1963, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 1956, 0, 0, 1979, 0,
	1980, 0, 1982, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 1974, 0, 1971, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 1951, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 1957, 1958, 1959, 1960,
	0, 0, 0, 1972, 0, 0, 1940, 0, 4758, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 1933,
	0, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 1973,
	1961, 0, 1983, 0, 0, 0, 0, 0, 0, 1962,
	1964, 1969, 1963, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 1956, 0, 0, 1979, 0, 1980, 0,
	1982, 0, 0, 0, 0, 1949, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 1974, 0, 1971, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 1955, 0,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 0, 0,
	0, 1972, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1933, 0, 1965,
	1966, 1967, 1976, 1977, 1978, 0, 0, 1973, 1961, 0,
	1983, 0, 0, 0, 0, 0, 0, 1962, 1964, 1969,
	1963, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 1956, 0, 0, 1979, 0, 1980, 0, 1982, 0,
	0, 0, 0, 1949, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 1974,
	0, 1971, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 1955, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 1164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 1957, 1958, 1959, 1960, 0, 0, 0, 1972,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 1953, 1975, 1952, 1948, 0, 1945, 1943, 1944,
	1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 0, 1973, 1961, 0, 1983, 0,
	0, 0, 0, 0, 0, 1962, 1964, 1969, 1963, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 1956,
	0, 0, 1979, 0, 1980, 0, 1982, 0, 0, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 1974, 0, 1971,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 0, 0, 1972, 0, 0,
	1940, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 1973, 1961, 0, 1983, 0, 0, 0,
	0, 0, 0, 1962, 1964, 1969, 1963, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 1956, 0, 0,
	1979, 0, 1980, 0, 1982, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 1974, 0, 1971, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 0, 0, 0, 1972, 0, 0, 1940, 0,
	4210, 0, 0, 0, 0, 0, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978, 0,
	0, 1973, 1961, 0, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 1969, 1963, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 1956, 0, 0, 1979, 0,
	1980, 0, 1982, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 1974, 0, 1971, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 1951, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 1957, 1958, 1959, 1960,
	0, 0, 0, 1972, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	1961, 0, 1983, 0, 0, 0, 0, 0, 0, 1962,
	1964, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 1979, 0, 1980, 0,
	0, 0, 0, 0, 0, 1949, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1933, 1955, 1965,
	1966, 1967, 1976, 1977, 1978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 1969,
	1963, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 1985,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 1958, 1959, 1960, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 3544, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1933, 0, 1965,
	1966, 1967, 1976, 1977, 1978, 1973, 0, 0, 1983, 0,
	0, 0, 0, 1987, 0, 1962, 1964, 0, 0, 1969,
	1963, 0, 0, 0, 3539, 0, 3988, 0, 1935, 0,
	0, 0, 1979, 0, 1980, 0, 0, 0, 1982, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 1971,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 1951, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 1947, 1953, 1975, 1952, 1948, 0, 1945, 1943, 1944,
	1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 1957, 1958, 1959, 1960, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 1933, 0, 1965, 1966, 1967,
	1976, 1977, 1978, 0, 1961, 1973, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 1962, 1964, 1969, 1963, 0,
	0, 0, 0, 0, 0, 0, 1935, 1956, 0, 0,
	0, 0, 1979, 0, 1980, 0, 1982, 0, 0, 0,
	0, 1949, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 1974, 0, 0, 0, 1971,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1955, 0, 0, 0, 0, 0,
	0, 0, 1951, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	1957, 1958, 1959, 1960, 0, 1972, 0, 0, 0, 0,
	1940, 0, 0, 0, 0, 0, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 1933, 0, 1965, 1966, 1967, 1976, 1977,
	1978, 0, 0, 1973, 1961, 0, 1983, 0, 0, 0,
	0, 0, 0, 1962, 1964, 1969, 1963, 0, 0, 0,
	3477, 0, 0, 0, 1935, 0, 0, 1956, 0, 0,
	1979, 0, 1980, 0, 1982, 0, 0, 0, 0, 1949,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 1974, 0, 1971, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 1955, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 1957, 1958,
	1959, 1960, 0, 3504, 0, 1972, 0, 0, 1940, 0,
	0, 0, 0, 0, 0, 0, 1946, 1947, 1953, 1975,
	1952, 1948, 0, 1945, 1943, 1944, 1936, 1937, 1938, 1939,
	1941, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 1933, 0, 1965, 1966, 1967, 1976, 1977, 1978, 0,
	0, 1973, 1961, 0, 1983, 0, 0, 0, 0, 0,
	0, 1962, 1964, 1969, 1963, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 1956, 0, 0, 1979, 0,
	1980, 0, 1982, 0, 0, 0, 0, 1949, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 1974, 0, 1971, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	1955, 0, 0, 0, 0, 0, 0, 0, 1951, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 1957, 1958, 1959, 1960,
	0, 0, 0, 1972, 0, 0, 1940, 0, 0, 0,
	0, 0, 0, 0, 1946, 1947, 1953, 1975, 1952, 1948,
	0, 1945, 1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 1933,
	0, 1965, 1966, 1967, 1976, 1977, 1978, 0, 0, 1973,
	1961, 0, 1983, 0, 0, 0, 0, 0, 0, 1962,
	1964, 1969, 1963, 0, 0, 0, 0, 0, 0, 0,
	1935, 0, 0, 1956, 0, 0, 1979, 0, 1980, 0,
	1982, 0, 0, 0, 0, 1949, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 1974, 0, 1971, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 1955, 0,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 0, 0,
	0, 1972, 0, 0, 1940, 0, 0, 0, 0, 0,
	0, 0, 1946, 1947, 1953, 1975, 1952, 1948, 0, 1945,
	1943, 1944, 1936, 1937, 1938, 1939, 1941, 1942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 1933,
	0, 1965, 1966, 1967, 1976, 1977, 1978, 1973, 1961, 0,
	1983, 0, 0, 0, 0, 0, 0, 1962, 1964, 0,
	0, 1969, 1963, 0, 0, 0, 0, 0, 0, 0,
	1935, 1956, 0, 0, 1979, 0, 1980, 0, 0, 0,
	1982, 0, 0, 1949, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 1974,
	0, 1971, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 2490, 0, 1957, 1958, 1959, 1960, 0, 1972,
	0, 0, 0, 0, 1940, 0, 0, 0, 0, 0,
	1946, 1947, 1953, 1975, 1952, 1948, 0, 1945, 1943, 1944,
	1936, 1937, 1938, 1939, 1941, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 1973, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 1962, 1964, 0,
	0, 0, 0, 1042, 0, 1093, 0, 0, 0, 1956,
	0, 0, 0, 0, 1979, 0, 1980, 0, 0, 0,
	0, 0, 0, 1949, 1950, 0, 0, 0, 0, 0,
	1050, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 1065, 0, 1048,
	1047, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 1067, 0, 0, 0, 0, 0, 1049, 0,
	0, 0, 0, 1052, 0, 0, 0, 0, 1104, 0,
	1077, 0, 0, 0, 0, 0, 0, 0, 1062, 1063,
	0, 0, 0, 0, 0, 1981, 0, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 1054, 0, 0, 0,
	0, 0, 1055, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 1056, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 1091, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 0, 0, 0, 1956,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1059, 1060, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1068, 1066, 0, 0, 0, 0, 0, 0,
	1061, 0, 0, 0, 1078, 0, 0, 1099, 1098, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1101, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1946, 1947,
	1953, 1975, 1952, 1948, 0, 1945, 1943, 1944, 1936, 1937,
	1938, 1939, 1941, 1942, 0, 1053, 0, 0, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 0, 1086, 1087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 1084, 0, 0,
	0, 0, 0, 0, 0, 1102, 1079, 0, 0, 1071,
	1069, 0, 0, 1074, 0, 0, 0, 0, 0, 1075,
	0, 0, 1044, 0, 1097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 1076, 0, 0, 0, 0, 0, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	1081, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1085,
}

var sqlPact = [...]int{
	8212, -1000, -1000, -1000, -1000, 200, -1000, -1000, 199, 198,
	194, 191, 188, 186, 182, 181, 180, 178, 177, -1000,
	-1000, 176, 174, 171, 170, -1000, -1000, 169, -1000, -1000,
	165, -1000, 163, 162, 148, -1000, -1000, 147, -1000, 146,
	-1000, -1000, -1000, -1000, 143, 142, 141, 99749, 99161, 100335,
	2495, 126759, 109139, 2177, 88589, 126171, 88001, 125583, 2371, 11145,
	124995, 2963, 140, -1000, 124407, 138, 137, 132, -1000, 108551,
	123819, 106201, 105613, 2307, -1000, 131, 130, -1000, 8724, 77367,
	129, 124, 123, 122, 2528, 119, -1000, 117, 116, -1000,
	112, -1000, 10656, 1620, -1000, 109, 108, -1000, 5393, 105025,
	107, 106, 105, 2915, 104, 103, 74423, 102, 101, 100,
	2785, 3073, -1000, -1000, 2220, -1000, -1000, 99, 97, 95,
	94, 92, 88, 87, 85, 84, 83, 79, 75, 68,
	-1000, 67, 66, 65, 60, 59, -1000, 58, 52, 50,
	-1000, 47, -1000, 46, 45, 44, 43, 42, 41, 40,
	39, 38, 36, 35, 34, 32, 30, 28, 147561, -1000,
	-1000, 27, -1000, 2098, 1777, 1768, 1759, 1747, 1746, 1006,
	25, 23, 22, 21, 20, 19, 18, 17, 16, 15,
	14, 13, 9, 2, -2, -4, -5, -6, -8, -9,
	136, -10, -11, -13, -15, -17, -24, -25, 2312, 3747,
	-1000, 1748, 1072, 34242, 3191, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 135549, 127345, -26, -83, -28,
	-1000, 3557, 1035, 62014, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 263, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	449, 2582, 753, -1000, -1000, -1000, 123231, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2494, -34, -1000, 2248, -1000,
	-1000, -1000, -1000, -1000, 752, -1000, 2493, 2444, 291, 2442,
	-1000, -1000, -1000, 3622, 2656, 4066, 4065, 4061, 4060, 4059,
	134963, 1964, 4058, 2734, 4057, 4055, 4053, 4050, 4048, 4046,
	4045, -1000, 98573, 1096, 97985, 97397, 3617, 122645, 96809, 122057,
	137899, 52398, 1055, 3620, -1000, -1000, -1000, -1000, -1000, -1000,
	127345, -1000, 1095, -1000, -1000, 4044, 2205, 748, 107963, -1000,
	-1000, 121469, 1996, -1000, -1000, -1000, 947, 1244, 36650, 36650,
	36650, 239, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3624,
	-1000, -1000, -1000, -1000, 127345, 2920, 2920, 1472, 1456, 1456,
	2920, 2920, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4043, 4041, 4039, 4037, 4036, -1000, -1000, -1000, 87413, 26827,
	86825, 86237, 120881, 51796, 96221, 95633, 4031, 4029, 4028, 51194,
	82121, 59619, 3745, 120293, 137311, 3744, 3743, 1093, 2247, 1510,
	-1000, -1000, -1000, -1000, -1000, -1000, -52, 79128, 3814, 127345,
	-1000, 238, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 50592,
	663, 49990, 730, 49388, 683, 119705, -1000, -1000, -1000, -1000,
	81523, -1000, 119117, 2654, 4021, 4016, 1196, 4009, 3489, 1903,
	4008, 2042, 1280, 4007, 4004, 4002, 4000, 3999, 3998, 3995,
	1607, 118529, 3189, 117941, 1923, 136723, 1090, 95045, 100335, 2821,
	117353, 1575, 1533, -1000, -1000, -1000, -1000, 3301, 3070, 3020,
	1401, -1000, -1000, -1000, -1000, 65572, 7282, 6302, -1000, -1000,
	11391, 116765, 68552, 100335, 100335, -1000, -1000, -1000, -1000, -1000,
	-1000, 48786, 629, 48184, 981, 116177, -1000, -1000, 66168, 3145,
	1138, -1000, -1000, -1000, -1000, -1000, 115589, 47582, 609, 46980,
	848, 127345, -1000, 3187, 2077, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2460, 1704, 3818, 2961, 80925, 2216,
	1502, 3571, 3298, 3276, 1582, 2234, 3273, 3994, 2823, 3269,
	3267, 3263, 3261, 3259, 1363, 2780, 370, 2778, 33640, 3179,
	1906, 46378, 1595, 1571, 3258, 3256, 3830, 3693, 2198, 2203,
	2215, 2186, 85649, 3993, 3992, 3509, 3246, 3243, 3015, 3242,
	-1000, 3144, 1605, 236, -1000, -1000, -1000, -1000, -1000, -1000,
	1531, -1000, -1000, -1000, -1000, -1000, 90933, -1000, -1000, 1500,
	-1000, -1000, 1500, -1000, -1000, -1000, -1000, -1000, 1386, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1748, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2546, -1000, 2246, -1000, -1000, -1000,
	2702, 3526, 3526, 3526, 3618, 434, 424, -1000, 136, -1000,
	-1000, 147107, -1000, -1000, 53000, 53000, 53000, 53000, 53000, 53000,
	53000, 53000, 2388, -1000, 747, -1000, -1000, 804, -1000, 746,
	673, 597, -1000, -1000, -1000, -1000, -1000, -1000, 742, -1000,
	-1000, -1000, -1000, -1000, -1000, 3777, -1000, 29891, -1000, -1000,
	-1000, 447, 739, 53000, -1000, -1000, 3855, 3852, 901, -1000,
	235, 969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3186, 738, 737, -1000, 736, 732,
	716, 712, 711, -1000, 710, -1000, 709, 707, 706, 703,
	700, 699, 698, 697, -1000, 2257, -1000, -1000, -1000, -1000,
	-1000, -1000, 653, 652, 652, 652, -1000, 1084, -1000, -1000,
	-1000, 363, 651, 362, 647, 646, 644, -1000, 694, 688,
	687, 685, 684, 682, 681, 678, 676, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1080, -1000, -1000, -1000, -1000, 1373,
	-55, 127345, -1000, 449, -55, -1000, -1000, 675, -1000, 38474,
	38474, 38474, -1000, -1000, 2492, 53000, -1000, 2757, -1000, -46,
	-46, 924, 63781, -1000, 60814, 924, 297, 820, 69727, -1000,
	3143, -1000, -1000, 674, 233, -1000, -1000, -1000, -1000, 27423,
	3141, 127345, 127345, 127345, 100335, 100335, 100335, 127345, 3991, 3990,
	3415, 53000, -1000, -1000, 76779, 139658, 100921, -1000, -1000, 3721,
	75009, 76192, 3184, 139658, 3183, 139075, 3989, -1000, -1000, -1000,
	-1000, -1000, 3384, 3988, 3985, 3984, -1000, 127345, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 242, 3383, -1000, -1000, 104437,
	242, 3376, -1000, 242, 3345, -1000, 103851, -1000, -1000, 2414,
	3344, -1000, -1000, 250, 3343, -1000, -1000, -1000, 243, 3341,
	-1000, -1000, 232, -121, 3340, -1000, -1000, -1000, -1000, -1000,
	-1000, 147107, -1000, -1000, -1000, 138487, -1000, 3531, -1000, 127345,
	-1000, 53000, -1000, -1000, 3720, 1763, 3568, 3660, -1000, -1000,
	-64, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2709, 2690,
	1187, 2532, -1000, 3429, 1489, 36650, 3477, -1000, -1000, -1000,
	-1000, -1000, 230, 27423, 3024, -1000, -1000, 127345, -1000, 127345,
	2920, 2920, -1000, -1000, -1000, 3823, 3822, 2920, 2920, 127345,
	127345, -1000, -1000, -1000, -1000, -1000, -1000, 2429, 3337, 1587,
	-1000, 2530, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2232, 3336, -1000, 2112, 3334, 2165, -1000, -1000, 2568,
	-1000, 143621, 1414, -1000, -1000, -1000, -1000, 1918, 3331, -45,
	-1000, -1000, 2651, -1000, -1000, -1000, -1000, 143413, -1000, 3097,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1862,
	-1000, -1000, 2279, 2228, -1000, 1327, 3330, -1000, 2960, 2960,
	94457, 3355, 67956, 66168, 79128, -59, -1000, -1000, -1000, -1000,
	-1000, -126, -1000, 26224, 147107, -1000, -1000, -1000, -1000, 1992,
	147107, 906, -1000, -1000, 3329, -1000, 147107, 905, -1000, -1000,
	3328, -1000, 2779, -1000, 3181, -1000, -1000, 2606, 2605, 1045,
	-1000, 3981, -1000, -1000, 3980, -1000, 3979, 3977, 3975, -1000,
	1833, 2210, 3974, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 93871, 2490, -1000, -1000, 90347, -1000, 2604, 3658, -1000,
	93283, 1088, -1000, 1018, 2603, -1000, 103265, 1024, 2602, -1000,
	3973, 3613, 2851, 1018, 2600, -1000, -1000, -1000, -1000, -1000,
	1059, -1000, 71486, -1000, 71486, -1000, 1752, -1000, 134377, -46,
	100335, 3777, -1000, -94, -1000, -1000, -1000, 1035, -1000, 64973,
	-1000, 64973, 107375, 82717, 983, 3138, 73834, 146899, -1000, 1043,
	-1000, -1000, 147107, -1000, -1000, -1000, 2774, -1000, -191, 2958,
	-1000, 82717, 67360, 3137, 2772, -1000, 147107, -1000, -1000, -1000,
	-1000, 147107, -1000, -1000, -1000, 82717, 90347, -1000, 115001, 92695,
	-1000, -1000, 1594, 2761, -1000, -1000, -1000, 82717, 3135, 1333,
	82717, 82717, 82717, -1000, 114413, -1000, -1000, 2214, 1326, 3512,
	2188, 100335, -1000, 2139, -1000, -1000, -1000, 3543, 3352, 127345,
	-1000, -1000, 3180, -1000, 78541, 102679, -1000, 102093, -1000, 101507,
	-1000, 100335, -1000, 100335, -1000, 3972, 3970, 3967, -1000, -1000,
	3961, -1000, 3960, 3536, -1000, 708, 45776, 147107, 3535, -1000,
	3959, 2132, 3179, 147107, -1000, 3348, 1783, 1767, 127345, -1000,
	-1000, 127345, -1000, 127345, -1000, -1000, -1000, 2517, 1641, -1000,
	-1000, 2708, -1000, -1000, -1000, 1039, -1000, -1000, 100335, 100335,
	100335, 100335, 1305, -1000, 45174, -1000, -1000, 3248, 3956, 1853,
	-1000, 1993, -1000, 3133, 3537, -1000, 1589, 1913, 229, 3859,
	-1000, -1000, 251, -1000, -1000, -64, -1000, 133791, -1000, 2702,
	-1000, 127345, -1000, 2695, 3163, 3178, 1847, 2514, 2810, -1000,
	44572, 2745, 56612, 2526, 136, -1000, -1000, 136, 136, 35446,
	-1000, -1000, 75009, 75009, 27423, 1316, 53000, 53000, 53000, 53000,
	53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000,
	53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000,
	53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000, 53000,
	53000, 53000, 2239, 53000, 1382, 53000, 53000, 53000, 53000, 1886,
	-1000, -1000, 2120, 491, 2163, 673, -1000, -1000, -1000, 3794,
	3794, 3794, 1257, 1257, 1257, 9059, 9059, 542, 3953, 804,
	-1000, 53000, -1000, 89, 64367, 53000, 28021, -1000, 424, 9874,
	2722, -1000, 421, 28653, -1000, -1000, -1000, 29891, 597, 43940,
	53000, 1063, 147107, -1000, -1000, 1580, 3791, 25621, 3075, 3008,
	668, 858, 855, 33008, 32376, 31744, 31112, 817, 750, 53000,
	53000, 53000, 53000, 53000, 53000, 53000, 53000, -1000, -1000, 3821,
	-1000, 3791, -1000, -1000, -1000, -1000, 3791, 1309, 1295, 3791,
	-1000, 3791, 3791, 8190, 8190, 43338, 42736, 42134, 57214, 41532,
	53000, 30510, 40930, 40328, -1000, 59020, 127345, -55, 3718, 53000,
	283, -1000, 144531, -1000, 283, 283, 664, -101, 147107, 2760,
	2760, 62603, 2563, 2394, 2394, 2394, -1000, 924, 20156, 924,
	112655, 2408, 924, 924, 220, 259, 414, 60218, 2757, 112655,
	793, 662, -29, -33, -35, -1000, -1000, -38, -43, -1000,
	-1000, 100335, 660, 28021, 27423, 215, 2189, -107, 2799, 2798,
	2794, 2788, -1000, 2787, 2489, -1000, -1000, -1000, 1960, -108,
	1376, 100335, 127345, 1524, 3952, -104, -1000, 6153, -109, -1000,
	1384, 214, 3791, -1000, -1000, -1000, -1000, -1000, 3949, 3948,
	-1000, 1073, 658, 656, 228, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 653, 652, 652, 652, -1000, 363, 651,
	362, 647, 646, 644, -1000, -1000, -1000, -1000, -1000, 3132,
	100335, 127345, 1499, 3947, 89175, -121, 100921, -99, -1000, -1000,
	127345, -1000, -1000, -1000, 3942, -1000, 100335, -1000, -1000, 100335,
	242, 3323, -1000, 100335, -1000, 100335, 241, 3318, -1000, -1000,
	127345, -1000, 100335, 100335, -1000, 127345, 127345, 127345, 139658, 139658,
	240, -1000, 100335, 903, -114, 1204, -64, -1000, -1000, -1000,
	-1000, 1500, -1000, 1785, -1000, -1000, -1000, -1000, -1000, -1000,
	1535, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 901,
	-1000, -1000, -1000, -1000, 3816, 3799, -56, -1000, -1000, 27423,
	-1000, 1988, -1000, -1000, -1000, -1000, 127345, 127345, -1000, -1000,
	127345, 127345, -1000, -1000, -66, 1729, 563, 1362, -1000, 85061,
	2658, 3516, 3938, 2839, 3498, 1741, -1000, 1633, 643, -1000,
	3638, 90933, 3691, 3685, 1397, -1000, 3129, -1000, -1000, -1000,
	946, 1806, 1891, 1358, 1357, 90933, 2112, -1000, 75009, -1000,
	2860, 3616, 1456, 1505, 1456, 1456, 1429, -1000, 90933, 1888,
	1354, 1353, 1344, -1000, -1000, 1757, 1710, -1000, -1000, 113827,
	1588, -1000, 1334, 1332, 3738, 2546, 2349, 832, 2107, -1000,
	1400, 1330, 3125, -1000, -1000, -68, 3667, 3684, 1397, -1000,
	3124, 1325, -1000, -1000, -1000, 3615, 100335, 27423, 1650, 1647,
	1646, 1883, 1324, -57, -1000, 3665, 1775, -1000, 90347, 90347,
	109725, 127345, 3754, 82717, -1000, 2611, -1000, -1000, -1000, 3570,
	3563, -1000, -1000, 1322, 1317, -1000, 1067, 5395, 3451, -1000,
	139658, 1067, 1067, 2125, 3314, 2906, 1824, -1000, 2942, 908,
	2937, -1000, -1000, -1000, 908, -59, 79128, 127345, 212, -1000,
	89, 53000, 53000, 89, 53000, 89, -1000, 3645, 3305, 3303,
	3936, -1000, -1000, -1000, -1000, -1000, 3935, 2164, 2730, -1000,
	-1000, 642, 2599, 3120, 127345, 91, -1000, 100335, 3210, 3302,
	139658, 2112, 2594, -1000, -1000, 92107, -1000, 3294, 449, 2588,
	-1000, 696, 3930, 3291, -1000, 133205, -1000, 3531, 1396, 3290,
	1131, 686, 3717, -1000, 686, 72073, -1000, 127345, -1000, -46,
	5419, 83889, -115, -124, 413, -1000, 113241, 127345, 127345, 3465,
	2171, 2170, -1000, 1007, 66168, -1000, 66168, -125, -1000, -191,
	2928, 1604, 66168, -1000, 983, -151, 908, -1000, 908, -1000,
	100335, 3177, -1000, 82717, 82717, -1000, 983, 983, 983, -1000,
	-1000, -1000, -1000, 3928, 3927, 3925, 3923, -1000, -1000, 1016,
	100335, 127345, 100335, -1000, -1000, 1790, -1000, 210, -1000, 139658,
	-1000, 139658, 127345, 100335, -1000, 1016, 127345, 1016, 127345, 1016,
	127345, 1016, 1016, -1000, -1000, -1000, -1000, -1000, 89, -1000,
	-1000, 147107, -1000, 53000, -1000, -1000, 1632, 3922, 1781, -1000,
	3174, -1000, 3170, -1000, 0, -1000, -1000, 3820, 2020, -1000,
	3851, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3916,
	147107, -1000, 2118, -1000, -1000, -1000, -1000, 100335, 100335, 100335,
	100335, 127345, 3446, -1000, 127345, 3444, 100335, -1000, 3858, -1000,
	-1000, 90933, -1000, 2695, 3163, -1000, -1000, -1000, -1000, -1000,
	-1000, 1520, 2456, -1000, 2759, -1000, 1694, -1000, -1000, -1000,
	147107, 57816, -1000, -1000, 147107, 2007, -1000, 56010, 55408, -1000,
	-1000, 1842, 100335, 2818, -1000, 2818, -120, -1000, 144323, 2758,
	100335, -1000, -1000, -1000, -1000, -1000, 943, 592, 592, 1459,
	1459, 1459, 1459, 3644, 543, 5333, 471, 316, 316, 9567,
	9567, 9567, 9567, 9567, 316, 405, 1257, 1257, 405, 405,
	405, 405, 405, 1257, 1257, 1257, 316, 316, 316, 1257,
	9059, 147317, 9958, 53000, 53000, 1313, 2116, 491, 7446, 53000,
	10640, 10640, 10640, 10640, -1000, 2297, -1000, -1000, -1000, -1000,
	3119, 640, 57214, 57214, -1000, -1000, -1000, -1000, 29272, 53000,
	-1000, -1000, -1000, -1000, 39696, -1000, -1000, 143203, -337, 412,
	-1000, 208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 411, -110, -16, -1000, 53000,
	53000, 53000, 410, -1000, 206, 53000, 127345, -1000, 19075, 791,
	-150, -1000, -131, 1498, -1000, 53000, -1000, -1000, 1308, -1000,
	1294, 1293, 1289, -1000, 635, 407, -1000, 205, -1000, 2391,
	632, 631, 53000, -1000, -1000, -1000, -1000, -1000, 142995, -1000,
	-1000, 142787, -1000, -1000, 142579, -1000, -1000, 142371, -1000, -1000,
	-1000, -1000, -1000, 146691, 18660, 17904, 17281, 9363, 17133, 12771,
	-132, 406, -134, 404, 942, 941, 403, 388, 387, -144,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -155, 386, -1000, 3118, -110, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 385, -1000, 383, -1000, 146483,
	-110, 382, 6052, -1000, 57214, 57214, 57214, 57214, 381, -1000,
	144115, -1000, 146275, 39094, 39094, 39094, 380, 146065, 53000, -110,
	-158, -1000, -160, -1000, -1000, -1000, -1000, 555, -163, 1058,
	38474, 61425, 27423, -1000, 1058, 1058, 53000, -1000, 53000, 2769,
	-1000, -1000, -1000, -1000, 2768, 2092, 2760, 62603, -1000, -1000,
	-1000, -1000, 112655, -1000, 3777, 2949, -1000, 112655, -1000, -1000,
	127345, 449, -1000, 112655, 112655, 27423, 924, -1000, 924, 112655,
	587, -1000, -1000, -1000, -1000, -1000, 379, 72662, -16, 204,
	27423, 1018, -1000, -1000, 2894, 2894, 2894, 2894, 2894, 100335,
	-1000, -1000, 139658, 1286, -62, -123, 2926, -1000, 3751, -1000,
	2270, -1000, 75009, -1000, 803, 1166, 27423, -1000, -1000, -1000,
	628, -1000, 3791, 3791, -1000, 3791, 139658, 3117, 222, 2919,
	-1000, 2485, -60, 185, 139658, 3915, -1000, -1000, 242, -1000,
	100335, 242, 242, -1000, 100335, 100335, 2414, -1000, 250, -1000,
	243, -1000, -1000, -121, -1000, 1038, 36650, -1000, 1500, -1000,
	-1000, 1651, -1000, 2185, -1000, 1279, -1000, -1000, 36650, -1000,
	3468, -1000, 1897, -1000, -1000, -1000, -1000, 2728, 127345, 127345,
	100335, -1000, 110897, 127345, -1000, 2289, 139658, -1000, 2580, 132619,
	2557, 132033, 75009, -1000, -1000, 627, 960, 2755, 2753, 1128,
	127345, 127345, 2746, 131447, 130861, -1000, 3914, 127345, 2290, 53000,
	110897, 3614, 2452, 2243, 89, 89, -1000, 89, -1000, -1000,
	623, 1311, 100335, 100335, 127345, 139658, 100335, 2078, -1000, -1000,
	-1000, -1000, -1000, 91519, -1000, -1000, 1456, -1000, -1000, -1000,
	1456, 2112, 1995, 127345, 139658, 100335, 139658, 130275, 2094, 129689,
	2085, -1000, -1000, 2082, 1881, 127345, -1000, -1000, -1000, -1000,
	1554, -1000, 832, 1284, 3116, 53000, 53000, 2347, 89, 89,
	-1000, 89, 622, 27423, 2119, -1000, 3197, 127345, 3849, 129103,
	3845, 127345, 127345, 127345, 139658, 3524, 127345, -1000, -151, -61,
	-137, -1000, 893, 892, -126, -1000, 3754, -1000, 891, 2205,
	127345, 139658, -1000, 128517, 5395, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2319, 80327, 1142, 127345, 1327, -1000, -1000, 1878,
	1281, 1277, 90933, 2273, 1873, 1994, 139658, 66168, 1014, 66168,
	2844, -1000, -1000, 25018, -1000, 147107, 147107, -1000, 147107, -1000,
	77954, 82717, 127345, -1000, -1000, 1087, 127345, 84475, 1010, 3289,
	70899, -126, 983, 90347, 82717, 3207, 127345, 127345, -1000, -1000,
	2112, 3288, 449, 2579, -1000, 139658, 3714, 3287, 612, 3912,
	3911, -1000, 100335, 2482, 2578, -1000, -1000, 127931, 3279, 832,
	127345, 1058, 62603, 2088, -1000, 69141, 1111, 127345, 2015, 151,
	-1000, -1000, -1000, -19, 127345, -1000, 483, -1000, -1000, 5419,
	5419, 983, -137, 611, 66764, -165, -1000, 203, 601, 890,
	883, -1000, 3236, -1000, -191, -1000, 82717, 1007, 66168, 3110,
	-191, 2918, 3102, -1000, -1000, 1032, -1000, 1585, 2916, 983,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -47, 1968, 127345, -121, -121, -74, -62, -1000, 1016,
	-1000, 1016, -1000, 1016, -1000, -1000, -1000, 147107, -1000, -1000,
	-1000, 1779, 1760, 127345, -1000, 3160, -1000, 127345, -1000, -1000,
	27423, 127345, 100335, 27423, 100335, 3158, 3156, -1000, -1000, -1000,
	127345, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1156,
	-1000, 2007, 2448, -1000, 597, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2680, -1000, -63, 35446, 922, -1000,
	-1000, 100335, -48, 53000, 53000, 7308, 6670, 53000, 57214, 57214,
	-1000, 53000, 5584, -1000, -1000, -1000, -1000, -1000, 3090, 596,
	53000, 75009, 7421, 6942, -1000, 378, 12001, 405, -1000, 53000,
	-1000, 774, -1000, 376, 37872, -1000, 144947, -39, -166, -1000,
	20773, -110, -168, -1000, -1000, 802, -1000, 3255, -1000, 53000,
	145779, 2645, 2126, 1970, 1769, 3791, 3844, 24415, -1000, 73248,
	1060, 2413, 142163, -1000, -1000, -1000, -1000, 75009, 75009, 53000,
	53000, -1000, 53000, 53000, 53000, -1000, -1000, -1000, 3791, 927,
	-1000, -1000, -1000, 927, -1000, -1000, 1456, -1000, 1456, -1000,
	53000, -1000, -1000, 3089, 53000, -1000, 75009, 75009, 57214, 57214,
	57214, 57214, 57214, 57214, 57214, 57214, 57214, 57214, 57214, 57214,
	57214, 57214, 57214, 57214, 57214, 57214, 57214, 57214, 2723, 57214,
	3776, 3776, 3776, 1291, -1000, 3155, 3089, 53000, 53000, 75009,
	375, 367, 365, -1000, 53000, -110, -1000, -1000, 8313, 595,
	-1000, 2665, -1000, 3007, -1000, 53000, -1000, -176, -1000, 2757,
	-1000, -1000, 3007, 3007, -173, 147107, 62603, 62603, -1000, 594,
	53000, 2765, -1000, -1000, 790, -335, -1000, 882, -1000, -1000,
	-1000, -1000, -1000, -1000, 876, -1000, 449, -1000, -1000, -1000,
	202, 112655, 112655, 789, -1000, -174, -1000, -1000, -175, -1000,
	3713, 364, 27423, -1000, 1058, 5245, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2786, -287, 139658, 139658, 1869, 2440, 3843,
	-1000, 3807, 799, 786, 127, 3791, 356, 355, 349, -121,
	139658, 139658, 1867, 75605, 139658, -1000, -1000, -1000, 242, -1000,
	-1000, -1000, 241, -1000, -1000, -1000, -1000, 2841, -1000, -64,
	-1000, -1000, -1000, 53000, -1000, 1011, -1000, -1000, 3515, 593,
	1274, 1269, -1000, -181, -1000, 875, -1000, -1000, -1000, -1000,
	-1000, 3034, -1000, 3284, -1000, 2573, -1000, 1120, 2572, 2038,
	-1000, 53000, 590, 2847, 574, 573, 3909, 2249, 3908, 1129,
	3282, 2414, 3266, 2414, -1000, -1000, -1000, 952, -1000, 147107,
	-182, -1000, 2452, -1000, 570, 569, -1000, -66, 1697, 562,
	1268, 1030, -1000, -1000, 53000, 53000, 112069, -1000, 475, 3506,
	-50, -1000, -1000, -1000, 1827, 1266, 1262, -1000, -1000, -1000,
	-1000, 2112, 1816, 1256, 1254, -1000, -1000, -1000, -1000, -1000,
	2570, -1000, 127345, -1000, 3265, 127345, 127345, 1029, -1000, 3217,
	3215, 940, 127345, 53000, 53000, 145571, 145363, -1000, 1028, -1000,
	-1000, 53000, -1000, -68, 1252, 3661, 2566, 100335, -1000, 2414,
	3257, 1249, -1000, 1248, -1000, -1000, -1000, 3663, 3662, 1250,
	-1000, 109725, 82717, 82717, 3754, 66168, -1000, -1000, -1000, 82717,
	-1000, -1000, 79731, -1000, -1000, 1067, 127345, 139658, 100335, 1907,
	-1000, -1000, 89175, 89761, 127345, 2906, -121, 908, -1000, 2650,
	908, 1014, 3088, -1000, 2805, -1000, 1022, 100335, 3907, 345,
	-183, -69, 75009, -1000, -1000, -1000, -1000, 2557, 100335, 127345,
	1312, 2842, 127345, 127345, 3712, -1000, 2503, 624, 100335, 921,
	-1000, 3777, -1000, -1000, -1000, 127345, -1000, -1000, -1000, 3649,
	100335, 3711, 3251, 1018, 89, 100335, 3828, -1000, -1000, 3710,
	100335, 3250, 2481, 2564, 2717, 832, 83303, 1018, 2412, -84,
	-1000, 2015, 37252, 3504, -189, -1000, -1000, -1000, 1058, 72073,
	62603, 53000, 3905, -195, -1000, -1000, -1000, -1000, -1000, 109725,
	82717, 983, 127345, 127345, 3904, 82717, 82717, 82717, -70, 568,
	-1000, 873, 871, 870, -1000, -1000, -1000, -1000, -1000, -1000,
	869, 868, 860, 856, 1007, -1000, -1000, -191, 66168, 1007,
	66168, 89, -1000, 2426, 100335, 82717, -1000, 23812, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1016, 3842, -126, -1000, -1000,
	-1000, 2348, 2525, 2348, 1987, 1983, -1000, -1000, 2431, -1000,
	-1000, -1000, -1000, 2813, 3520, 27423, 3639, 10640, 53000, 53000,
	528, 6799, 626, 10640, 53000, 53000, 75009, 15386, -197, 53000,
	53000, -1000, 53000, 783, 147107, -1000, 3841, 53000, 344, 343,
	-1000, -1000, -1000, 3784, -1000, -1000, -1000, 147107, 53000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 342, -1000, 90, -1000,
	-1000, -1000, 136135, -1000, 53000, 339, 3612, -1000, 337, 336,
	11286, 6540, 141955, 141747, 141539, 330, -1000, -1000, 327, 323,
	147107, 3155, 147107, -1000, -1000, 1036, 1036, 1423, 1423, 1423,
	1423, 3776, 1218, 1629, 508, 968, 968, 968, 1105, 1291,
	1291, 968, 968, 968, 1291, 3085, 2737, 567, 7385, -1000,
	-1000, 147107, 147107, 315, -1000, -1000, -1000, -110, 312, 8313,
	-1000, 2998, 3611, 147107, -1000, 62603, 2998, 2998, -1000, -1000,
	2092, 127345, 147107, 62603, -1000, 2949, -1000, 21997, 21388, -1000,
	27423, -1000, -1000, -1000, -1000, 3777, -1000, 72662, -1000, 566,
	-1000, 1, -1000, 5245, -1000, 854, -1000, -1000, 82717, 82717,
	3903, 3902, 3900, 3840, 3839, 2428, 3838, 2894, -1000, 3013,
	-287, -180, 127345, -1000, -1000, 778, 3898, 798, 27423, 311,
	-1000, -1000, -1000, -121, -121, 127345, 3081, 100335, 127345, 1473,
	-121, -1000, -1000, -1000, 3464, 147107, 3154, 2983, 2982, 127345,
	127345, -1000, 110897, 36650, 1630, 111483, 127345, 3247, -1000, 3245,
	-1000, 1128, 2023, 141331, 63192, -1000, 63192, 127345, -1000, -1000,
	-1000, -1000, 2024, 1692, 3897, 1176, -1000, 3545, 127345, -1000,
	127345, -1000, -1000, -1000, 110897, -1000, 127345, 127345, 100335, 127345,
	-1000, 139658, 3226, -198, 147107, -72, -1000, 850, -1000, 1458,
	-1000, 23209, 127345, 139658, 100335, 127345, 139658, 100335, 3241, 1109,
	127345, -1000, 1107, 2362, -1000, -1000, 3213, -1000, 147107, 145155,
	89, 53000, 3225, -203, 27423, -1000, 3835, 3834, 3240, 3559,
	-1000, 127345, 3832, 127345, 100335, 3462, -1000, -1000, -1000, 1015,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1811, 1247, 1246,
	2478, 2477, 2437, -74, 2273, 1014, -75, 565, -1000, 849,
	-1000, -1000, 846, 845, 1014, -1000, 82717, 66168, 3893, 449,
	-1000, 2835, -1000, 106787, 84475, 2449, -1000, -1000, 561, 127345,
	127345, 560, -1000, 89, -1000, 3892, 110897, 552, -1000, 2424,
	-1000, 776, -1000, 139658, 2112, 89, 100335, -1000, 1004, 449,
	294, -76, -1000, 3249, 1125, 27423, 100335, 3239, 2719, 832,
	83303, -1000, 1396, 2810, -1000, -78, -1000, 581, 89, 2412,
	-1000, -84, 147107, -1000, 843, -204, 292, -1000, 3461, -1000,
	-1000, -206, -1000, -1000, 5151, 5151, 82717, 66168, 82717, 82717,
	82717, 66168, 82717, -1000, 1007, 908, -1000, -191, -1000, 2593,
	-1000, 983, -1000, -1000, -1000, -1000, -1000, 27423, 1742, -1000,
	541, 540, -1000, -1000, -1000, -1000, 3520, 10640, 10640, 53000,
	53000, 53000, 10640, 15386, -211, -1000, 10640, 10640, -110, -1000,
	-1000, 144947, -1000, -1000, -1000, 147107, -1000, 22606, 2352, -1000,
	141123, -1000, 35446, -1000, -1000, 53000, 53000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 57214, 3080, 539, 75009, -1000,
	-1000, 290, 1037, 53000, 54806, 2757, 1037, 1037, -1000, -213,
	-1000, -1000, -1000, 3777, -1000, 3777, 1, -1000, -1000, 3891,
	27423, -1000, 82717, -1000, -1000, -1000, -1000, -1000, -1000, 3890,
	3888, 2548, 3887, 3884, -1000, 2433, -1000, -1000, 3222, -214,
	796, -1000, 3878, -1000, -1000, 126, 139658, 3077, 125, 2905,
	-1000, 89, -1000, -1000, -1000, -1000, -1000, -1000, 2897, 3709,
	-1000, 2072, -1000, 127345, 127345, -1000, 127345, -1000, 27423, 127345,
	3026, 1315, -1000, 960, 2744, 527, 57214, 1155, 100335, 916,
	2974, 2971, -1000, 3733, 3603, 2943, -222, -1000, 127345, 53000,
	127345, -225, -227, 2537, -1000, -1000, 1153, 1275, 53000, 1151,
	-1000, -1000, -1000, 75009, 514, 2414, 2414, -1000, -228, -233,
	-1000, -1000, -1000, 53000, 1240, 127345, 36048, -1000, 3877, 3506,
	-1000, -1000, -1000, -1000, -1000, -1000, 127345, 127345, -1000, 127345,
	127345, -1000, 53000, -1000, 144739, 53000, 1239, -1000, -1000, -1000,
	3831, 2414, 27423, 2414, -1000, 2414, 3559, 1159, 2500, 127345,
	139658, 100335, 1825, 1825, 3153, -1000, -1000, -1000, 2518, 2518,
	82717, 66168, 66168, -1000, -88, 1014, -1000, 3708, 2351, 3876,
	-1000, -1000, -1000, -1000, 2743, -1000, -1000, -1000, 127345, 2732,
	2950, 63192, 511, 510, 127345, 984, -1000, -234, 84475, 1010,
	966, -1000, -1000, -1000, -1000, 449, -1000, 2837, 3707, -1000,
	3829, 509, 493, 127345, 2472, 492, 27423, 3502, 832, 83303,
	-1000, 3279, 2015, -1000, 2555, 127345, 3495, -1000, 2810, 491,
	-1000, 983, 489, 983, -1000, -235, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1007, -89, -1000, 888, 884,
	-1000, -1000, -1000, 100335, 100335, 53000, 53000, -1000, 10640, 10640,
	10640, -1000, 279, -1000, -1000, 2412, 3601, -1000, -92, 140915,
	140707, 733, 57214, 75009, -236, -1000, -1000, 127345, 147107, -93,
	-1000, 147107, 488, 478, 274, -1000, -1000, -1000, 771, 761,
	-1000, -1000, -1000, -1000, 3875, -1000, -1000, -1000, -1000, 139658,
	3872, -1000, 139658, -121, 139658, 139658, 1807, -1000, 110311, 127345,
	-1000, -1000, 2038, 2332, -1000, -1000, 127345, 2561, -1000, -1000,
	-1000, 988, 53000, 7385, 57214, 477, 53000, -1000, 476, 473,
	3706, 3434, -1000, 2830, 3068, 2032, 63192, -1000, 3520, -1000,
	140277, -1000, 1123, 2131, -1000, -1000, -1000, -1000, 147107, 57214,
	3559, 63192, -1000, -1000, 470, 468, 147107, 467, 842, 3066,
	-1000, -1000, -1000, -1000, -126, -126, -1000, 147107, 89, 147107,
	458, 3661, -1000, -1000, -1000, -1000, 2414, 100335, 841, -1000,
	-1000, -1000, 1232, -1000, -1000, -1000, -1000, 3870, 3869, 3055,
	89175, -1000, -242, -1000, -1000, -1000, 2135, 89, 1010, -1000,
	-1000, 2449, 456, -1000, 977, 2733, 2733, -243, 63192, 63192,
	-244, 2463, 2832, -1000, 272, 3705, 966, -1000, 3780, -1000,
	3704, 3460, -1000, 89, -1000, 3828, 63192, -1000, 100335, 63192,
	2469, 2236, 2705, 83303, -1000, 2717, -1000, -1000, -245, 127345,
	2015, -1000, -1000, 82717, -1000, -1000, -1000, 2593, -1000, 127345,
	-1000, 127345, -1000, -1000, -253, -254, -1000, 2192, 53000, 35446,
	-1000, -1000, 733, -256, -1000, -103, -1000, 3701, 54806, 3868,
	3867, 3866, -1000, -1000, -1000, -287, -1000, -121, -121, -121,
	127345, -1000, 2058, -1000, 2557, -1000, -1000, 3235, -1000, 2990,
	455, 140247, 7385, 2669, 127345, 19123, 2112, 2112, -1000, 3698,
	3061, -1000, -1000, 2347, 451, -1000, -1000, -1000, -1000, 922,
	127345, 977, 2989, 100335, 7385, 1127, -259, 2348, 2348, 53000,
	34844, 2360, -1000, 53000, -1000, -1000, 3559, 66168, 139658, -1000,
	-1000, 139658, 2464, -1000, 3036, 3804, -1000, 2463, 127345, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1123, -261, -262, -1000, -1000, 3540, -1000, 3459, 2835,
	89, -1000, -1000, 89, 3864, 1004, 271, -268, 1125, -269,
	100335, 2066, -1000, 832, -1000, 2719, 1058, 3409, -1000, -270,
	-1000, -271, -276, -1000, -1000, 270, 54204, 54204, 54204, -110,
	-120, -1000, 127345, 450, -1000, -1000, -1000, -1000, -1000, 118,
	-1000, -1000, 3206, 918, -1000, 852, 2016, 268, 1149, 260,
	252, -1000, -1000, -1000, 2943, -1000, 127345, -1000, -1000, -1000,
	918, 449, -1000, 53000, 1123, -279, -1000, 1106, -284, -1000,
	1104, -286, -1000, 3041, -1000, -292, 2414, -1000, -287, 240,
	1825, 992, 3641, -1000, -1000, -1000, 2685, -293, -1000, -1000,
	2032, 1123, 2347, 2628, -1000, 2351, 984, -1000, -1000, -1000,
	-1000, 1123, 448, 2032, 444, 1617, 832, -1000, -1000, 1456,
	3502, 3407, 1366, 983, -1000, -1000, -1000, 3238, -1000, 58418,
	2470, 1981, 143907, 3238, 3238, -1000, -1000, 139658, 127345, 977,
	3628, -1000, 900, 898, 1579, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1058, -294, -1000, 2669, 147107, 977, -1000,
	2348, 2895, -1000, 2348, 3040, -1000, 2359, -1000, -1000, -1000,
	-1000, 3039, -1000, 1909, 3770, -1000, -1000, 977, 127345, 2347,
	2032, 977, 1958, 1933, 3863, 1010, 2463, 2032, 63192, 2347,
	63192, 2278, -1000, 127345, -1000, 2236, 1365, -1000, 1735, -1000,
	-1000, 2034, 3729, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-121, -1000, -1000, 839, -1000, 3425, -1000, 1148, 2233, 2233,
	-1000, -1000, 852, -1000, -1000, 440, -1000, 439, -1000, 139658,
	2417, -1000, -1000, -1000, -1000, 977, 2347, 1058, -1000, 3862,
	-1000, 2463, -1000, 2347, -295, 977, -300, 2366, -1000, -1000,
	-126, 2066, -1000, 1709, 72073, 1977, -1000, -1000, 2397, 53602,
	53000, -1000, 3757, -1000, -1000, 2754, -1000, 2943, 53000, 53000,
	240, 70313, 1058, 977, -1000, -1000, 2685, 977, 1123, 1058,
	2032, -1000, 832, 1617, 72073, -278, -1000, -1000, -1000, 147107,
	-1000, -1000, -1000, -1000, -312, -313, -1000, -137, 109725, -1000,
	1058, -1000, 1058, 2032, -1000, 2347, 139658, 2278, -278, -1000,
	2347, 1228, -320, -1000, -1000, 2347, 977, -1000, -1000, -1000,
	-1000, -1000, 437, -1000, 977, 1058, 53000, 1058, -1000, -321,
	-1000, 2347, -1000,
}

var sqlPgo = [...]int{
	0, 4744, 4743, 4741, 4739, 4738, 4735, 4733, 4732, 4729,
	4724, 4721, 4720, 4718, 4716, 150, 4714, 4712, 4710, 4709,
	4706, 4702, 4701, 4700, 4694, 4692, 4688, 4687, 4685, 4684,
	4683, 4682, 4678, 4675, 4674, 4672, 4670, 4669, 4660, 4659,
	4658, 4656, 4655, 4654, 4651, 4650, 4649, 4648, 4644, 4643,
	4641, 4640, 4639, 4637, 4636, 4635, 4634, 4633, 4632, 4631,
	4630, 4624, 4623, 4622, 4621, 4619, 4615, 4613, 4612, 4604,
	4602, 4600, 4599, 56, 4598, 4597, 4595, 4594, 4593, 4592,
	4591, 4590, 4589, 4588, 4587, 4586, 4585, 4584, 4583, 4580,
	4579, 4578, 4577, 70, 4576, 282, 4575, 4574, 4573, 4572,
	4570, 4569, 4568, 4566, 4558, 4556, 4554, 4553, 281, 4552,
	142, 170, 4550, 4547, 4072, 4545, 4544, 280, 4541, 4539,
	4538, 4537, 4535, 297, 4534, 4532, 4531, 4530, 4529, 262,
	4528, 4526, 4524, 4523, 4522, 4520, 65, 137, 4516, 4512,
	1630, 4508, 4507, 4503, 4502, 4500, 4498, 4496, 261, 266,
	4495, 4494, 4493, 258, 181, 4492, 279, 4491, 4489, 4487,
	4486, 4485, 4484, 4482, 4481, 4480, 4479, 4478, 4476, 4475,
	4474, 4472, 4471, 4470, 4468, 4466, 4465, 4464, 4463, 4462,
	4461, 4460, 4458, 4455, 4454, 4453, 4422, 4420, 4419, 4417,
	4416, 4415, 4414, 4412, 4410, 4409, 4408, 4407, 4406, 252,
	225, 141, 4402, 4401, 277, 276, 4400, 4398, 4395, 4394,
	4392, 3653, 4390, 4389, 4377, 4375, 4373, 4372, 4371, 4369,
	4366, 153, 11, 49, 4364, 4363, 91, 94, 92, 83,
	125, 126, 4356, 4355, 123, 4354, 133, 119, 4353, 116,
	108, 19, 18, 243, 245, 12885, 240, 4352, 4351, 4350,
	250, 200, 4349, 247, 4347, 4345, 4343, 4341, 4340, 4339,
	87, 58, 218, 4338, 4326, 148, 178, 191, 188, 184,
	183, 161, 59, 100, 86, 63, 51, 14, 89, 221,
	22, 7, 272, 4325, 271, 9, 151, 20, 35, 4324,
	4321, 4316, 4314, 3964, 110, 4313, 278, 253, 176, 4312,
	4310, 4309, 800, 4307, 4305, 54, 255, 330, 84, 118,
	40, 138, 4303, 160, 174, 39, 4302, 244, 60, 4300,
	4297, 101, 95, 9061, 12859, 4293, 4289, 117, 73, 124,
	285, 185, 162, 210, 115, 171, 175, 103, 216, 213,
	187, 291, 4287, 264, 4286, 3690, 111, 195, 167, 6318,
	4285, 4283, 4282, 88, 4281, 106, 4280, 4279, 71, 15,
	6, 2, 149, 38, 37, 3, 4278, 45, 121, 53,
	25, 4277, 28, 4276, 4275, 4274, 4273, 52, 4272, 46,
	172, 4271, 4270, 295, 4269, 146, 66, 26, 4268, 29,
	231, 4267, 246, 147, 4265, 4263, 257, 196, 4261, 76,
	238, 4260, 4256, 4255, 4252, 4251, 4250, 154, 1, 144,
	4247, 4246, 157, 4245, 62, 249, 206, 4244, 67, 4242,
	4241, 186, 57, 156, 284, 198, 232, 122, 230, 197,
	235, 4240, 4239, 4238, 199, 4237, 4236, 228, 179, 4234,
	4233, 214, 298, 93, 48, 78, 248, 85, 208, 169,
	4227, 212, 4226, 4225, 299, 193, 224, 44, 10, 13,
	96, 109, 4224, 5, 237, 168, 241, 127, 4223, 8592,
	2610, 915, 236, 4222, 159, 134, 79, 132, 164, 275,
	102, 4221, 4220, 4689, 4214, 4213, 4205, 4190, 194, 4188,
	4185, 4179, 166, 189, 222, 4178, 128, 74, 55, 24,
	130, 259, 294, 131, 229, 190, 260, 4177, 4176, 4175,
	202, 4174, 75, 177, 4173, 207, 267, 68, 4171, 99,
	4170, 158, 644, 82, 155, 4169, 226, 4168, 4167, 4166,
	4165, 4164, 4161, 4160, 287, 239, 4159, 4158, 4154, 34,
	205, 4153, 273, 152, 201, 105, 64, 4150, 104, 3358,
	4149, 263, 223, 69, 4, 4146, 41, 4145, 3576, 61,
	4143, 0, 15337, 10034, 12674, 14495, 4142, 4344, 4141, 4140,
	4139, 227, 81, 4138, 4137, 4135, 112, 4133, 90, 4132,
	4131, 77, 4130, 27, 16, 21, 32, 30, 724, 385,
	4129, 4128, 165, 140, 135, 4127, 283, 233, 4126, 4125,
	4124, 4121, 98, 4120, 47, 4118, 43, 4117, 4116, 50,
	12, 31, 4115, 4114, 163, 4113, 120, 217, 173, 4112,
	180, 4111, 72, 145, 4109, 4108, 268, 215, 219, 97,
	4107, 289, 4106, 211, 4104, 4103, 23, 4098, 4097, 251,
	114, 113, 36, 256, 139, 42, 192, 220, 4096, 4094,
	182, 4093, 4092, 4091, 293, 4090, 3652, 274, 4089, 33,
	4087, 4085, 4084, 8, 4082, 4080, 209, 3412, 4077, 4075,
	17, 4070, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 626, 626, 626,
	627, 627, 628, 628, 628, 26, 51, 19, 20, 20,
	20, 20, 629, 629, 629, 629, 39, 27, 52, 32,
	32, 32, 32, 32, 224, 224, 224, 224, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 625, 625, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 630, 630, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 523, 523, 523, 554, 554, 554, 554, 556,
	556, 649, 649, 650, 650, 650, 650, 650, 139, 139,
	420, 420, 420, 61, 61, 61, 61, 61, 620, 620,
	226, 226, 226, 228, 228, 227, 227, 227, 227, 227,
	84, 84, 636, 636, 635, 634, 634, 634, 637, 637,
	637, 225, 225, 225, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 137, 137, 229, 229, 229, 231,
	231, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 236, 18, 18, 18, 118, 118,
	118, 118, 118, 118, 118, 113, 113, 558, 558, 559,
	559, 220, 220, 221, 221, 221, 221, 222, 222, 223,
	223, 223, 76, 76, 233, 233, 235, 235, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 65, 66, 66, 66, 66, 66, 66, 67, 67,
	74, 74, 74, 74, 74, 74, 74, 74, 201, 201,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 81, 81, 81, 81, 81, 651, 651, 651,
	651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
	651, 651, 651, 651, 651, 651, 652, 652, 653, 653,
	654, 654, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 90, 90,
	381, 381, 344, 344, 91, 91, 91, 92, 92, 93,
	93, 78, 78, 617, 617, 618, 618, 618, 618, 514,
	514, 95, 95, 419, 419, 96, 96, 96, 96, 96,
	96, 97, 97, 97, 97, 97, 97, 97, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 105, 105, 106, 106, 106,
	103, 103, 103, 100, 100, 100, 99, 99, 99, 104,
	104, 104, 616, 333, 333, 102, 102, 102, 101, 101,
	101, 397, 397, 107, 107, 107, 107, 345, 108, 108,
	108, 108, 108, 108, 108, 108, 111, 111, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 516, 516, 4, 4, 263, 263, 262, 262, 262,
	262, 5, 5, 5, 266, 266, 265, 264, 109, 109,
	109, 481, 481, 114, 114, 114, 435, 435, 115, 115,
	115, 115, 115, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 622, 622, 390, 390, 296, 296,
	296, 296, 127, 127, 127, 127, 128, 128, 128, 128,
	129, 129, 206, 206, 145, 145, 145, 145, 144, 144,
	144, 144, 144, 144, 144, 144, 68, 68, 68, 69,
	69, 70, 70, 71, 71, 72, 72, 73, 73, 73,
	73, 73, 148, 148, 31, 31, 31, 31, 149, 149,
	646, 646, 151, 147, 147, 147, 147, 147, 146, 146,
	150, 150, 150, 150, 152, 154, 154, 154, 154, 154,
	153, 153, 153, 153, 153, 155, 155, 548, 548, 405,
	405, 546, 546, 568, 568, 547, 547, 351, 351, 351,
	351, 351, 352, 352, 352, 557, 557, 557, 557, 557,
	557, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 207, 207, 207,
	208, 208, 213, 213, 214, 214, 214, 215, 215, 215,
	212, 212, 212, 209, 209, 210, 210, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 218, 218, 216,
	216, 217, 217, 657, 657, 656, 656, 219, 219, 219,
	219, 219, 182, 182, 182, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 406, 406, 185, 185,
	185, 169, 169, 157, 157, 157, 157, 157, 157, 157,
	157, 232, 232, 232, 232, 162, 162, 162, 162, 162,
	162, 162, 162, 163, 163, 163, 158, 158, 171, 171,
	171, 171, 171, 164, 164, 165, 165, 165, 166, 166,
	166, 166, 193, 193, 168, 168, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 159, 159, 159, 159, 173,
	173, 173, 173, 442, 442, 442, 199, 199, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 196, 196, 196, 196, 196, 196,
	638, 638, 639, 639, 639, 189, 189, 189, 189, 189,
	189, 495, 495, 183, 183, 183, 183, 188, 188, 188,
	188, 191, 191, 191, 191, 425, 425, 180, 180, 180,
	181, 181, 181, 186, 186, 198, 187, 382, 382, 184,
	184, 190, 190, 190, 190, 192, 192, 192, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 161, 161, 161,
	161, 194, 194, 179, 179, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 658, 658, 175, 175,
	175, 174, 174, 174, 174, 177, 177, 178, 178, 178,
	178, 178, 178, 176, 167, 197, 619, 619, 614, 614,
	614, 614, 614, 614, 614, 614, 614, 615, 615, 615,
	615, 621, 621, 119, 119, 119, 119, 119, 119, 119,
	130, 130, 130, 130, 130, 130, 130, 133, 133, 120,
	120, 120, 120, 120, 120, 120, 123, 123, 121, 121,
	121, 121, 122, 122, 85, 85, 85, 85, 85, 17,
	17, 17, 86, 86, 287, 287, 241, 241, 241, 369,
	369, 242, 242, 359, 359, 359, 359, 237, 237, 238,
	238, 239, 240, 240, 87, 87, 659, 659, 659, 631,
	631, 631, 632, 632, 632, 632, 632, 632, 353, 353,
	354, 354, 461, 461, 461, 461, 461, 357, 357, 357,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 367,
	368, 368, 360, 360, 366, 365, 365, 364, 364, 363,
	363, 361, 362, 362, 362, 371, 371, 370, 373, 373,
	372, 460, 577, 577, 579, 579, 579, 579, 579, 579,
	579, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 443, 443,
	660, 660, 661, 662, 575, 575, 575, 576, 571, 571,
	572, 572, 572, 572, 572, 355, 355, 356, 356, 356,
	356, 573, 574, 388, 388, 499, 578, 578, 580, 580,
	582, 663, 663, 663, 663, 663, 663, 664, 664, 664,
	459, 459, 458, 458, 457, 457, 379, 379, 583, 583,
	583, 583, 584, 584, 584, 584, 584, 587, 586, 585,
	585, 585, 585, 585, 89, 89, 89, 422, 422, 421,
	421, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 203, 203, 299, 299,
	299, 83, 83, 83, 14, 14, 14, 14, 14, 14,
	14, 314, 314, 15, 15, 15, 633, 633, 633, 88,
	88, 88, 88, 88, 88, 377, 377, 377, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 624, 624, 623, 623, 300, 300,
	666, 666, 94, 94, 94, 94, 94, 94, 94, 94,
	517, 517, 518, 518, 82, 82, 82, 82, 82, 444,
	444, 441, 441, 440, 440, 387, 387, 497, 497, 497,
	498, 304, 304, 305, 305, 260, 260, 260, 34, 33,
	24, 24, 28, 28, 29, 29, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 30, 30, 54, 54, 54,
	54, 55, 55, 55, 55, 58, 58, 59, 59, 53,
	53, 53, 53, 56, 56, 50, 50, 60, 60, 60,
	60, 60, 640, 642, 642, 641, 641, 645, 645, 645,
	645, 645, 645, 643, 643, 644, 644, 647, 647, 648,
	648, 126, 126, 131, 131, 131, 131, 131, 132, 132,
	132, 132, 134, 134, 134, 134, 143, 143, 202, 202,
	202, 202, 202, 202, 202, 62, 62, 62, 62, 75,
	75, 75, 75, 141, 668, 668, 668, 142, 142, 142,
	667, 667, 297, 297, 454, 454, 455, 455, 669, 669,
	456, 456, 456, 456, 456, 290, 289, 291, 291, 292,
	292, 80, 80, 80, 280, 280, 279, 281, 281, 282,
	282, 277, 277, 560, 560, 284, 284, 284, 285, 285,
	273, 273, 274, 274, 275, 275, 276, 276, 288, 288,
	555, 555, 670, 670, 117, 117, 117, 205, 205, 343,
	343, 343, 451, 451, 451, 380, 380, 311, 311, 453,
	453, 453, 453, 453, 418, 418, 418, 204, 204, 395,
	395, 408, 408, 409, 409, 511, 511, 410, 124, 124,
	125, 125, 140, 140, 245, 245, 243, 243, 243, 243,
	243, 243, 243, 243, 250, 250, 251, 251, 252, 252,
	253, 254, 254, 254, 254, 398, 398, 255, 255, 255,
	244, 244, 244, 246, 246, 246, 246, 246, 246, 246,
	249, 249, 249, 249, 256, 256, 256, 248, 248, 594,
	594, 594, 596, 596, 598, 598, 597, 597, 593, 593,
	595, 595, 665, 665, 424, 424, 424, 376, 378, 374,
	374, 375, 375, 385, 385, 383, 384, 384, 386, 386,
	496, 496, 496, 261, 261, 261, 415, 415, 415, 415,
	416, 416, 447, 447, 445, 445, 445, 445, 446, 446,
	448, 448, 448, 449, 449, 450, 450, 412, 412, 413,
	413, 414, 414, 414, 414, 477, 477, 247, 247, 247,
	392, 392, 392, 393, 393, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 468, 468, 466, 466,
	466, 466, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 501, 502, 502, 394, 394, 503, 452, 452, 612,
	612, 612, 613, 613, 494, 494, 504, 504, 504, 504,
	504, 504, 492, 492, 493, 493, 512, 513, 513, 428,
	428, 428, 428, 426, 426, 429, 429, 429, 429, 429,
	427, 427, 505, 505, 505, 505, 417, 417, 506, 506,
	506, 506, 507, 508, 508, 509, 509, 462, 463, 463,
	519, 519, 519, 519, 521, 391, 391, 391, 391, 391,
	570, 569, 569, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 536, 536, 536, 536, 536, 536,
	536, 522, 522, 522, 522, 522, 526, 526, 526, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	527, 527, 532, 532, 533, 533, 533, 528, 529, 534,
	534, 534, 534, 671, 671, 538, 538, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 524, 524, 524, 531,
	531, 531, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 436, 436, 438, 438, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	471, 471, 471, 471, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 588,
	588, 588, 588, 588, 588, 588, 588, 473, 473, 591,
	591, 592, 592, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 599, 599, 600, 600, 602, 602,
	603, 603, 604, 605, 605, 605, 606, 607, 607, 601,
	601, 608, 608, 608, 608, 609, 609, 610, 610, 610,
	610, 610, 611, 611, 611, 611, 611, 483, 483, 484,
	484, 490, 490, 490, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 350,
	350, 349, 301, 301, 301, 301, 301, 301, 403, 403,
	401, 401, 401, 404, 404, 402, 402, 400, 400, 399,
	399, 480, 480, 478, 478, 482, 482, 430, 430, 537,
	537, 537, 537, 537, 537, 537, 537, 431, 431, 431,
	439, 432, 432, 433, 433, 433, 433, 433, 474, 475,
	434, 434, 434, 476, 476, 485, 489, 489, 488, 487,
	487, 486, 486, 464, 464, 465, 465, 411, 411, 672,
	672, 407, 407, 510, 510, 510, 510, 347, 347, 396,
	396, 346, 346, 338, 338, 339, 339, 339, 339, 389,
	389, 491, 491, 539, 539, 540, 540, 541, 541, 542,
	542, 543, 544, 545, 479, 479, 322, 321, 308, 309,
	320, 319, 318, 307, 310, 315, 316, 317, 312, 313,
	329, 328, 327, 278, 283, 334, 335, 335, 337, 337,
	336, 336, 324, 325, 326, 515, 306, 340, 340, 341,
	341, 341, 342, 342, 342, 342, 302, 302, 303, 303,
	330, 330, 331, 332, 332, 323, 323, 323, 293, 293,
	293, 294, 294, 295, 295, 553, 553, 550, 550, 550,
	551, 551, 551, 552, 552, 552, 552, 549, 549, 549,
	549, 549, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 562, 562, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 564, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 567, 567,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 4, 3, 3,
	4, 3, 4, 4, 4, 3, 5, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 4, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 3, 2, 1, 4, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 4, 3, 1, 2, 3, 2, 2,
	2, 4, 6, 3, 1, 2, 2, 7, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 4, 4, 3, 4, 1, 1,
	1, 1, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 3, 5, 7,
	3, 3, 3, 4, 8, 6, 4, 5, 5, 5,
	3, 0, 1, 1, 1, 4, 4, 3, 4, 4,
	3, 4, 4, 1, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 4, 6, 4, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 5, 3, 5, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 7, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 5, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 10, 11, 9, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 6, 1, 3, 1, 2, 0, 1, 2,
	3, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 3, 0, 4, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 3, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 16, 19, 15, 18, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 14, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -110, -107, -76, -74, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -61, -63, -77,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-68, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -150, -151, 484, -62, -75, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -83, -79, -90, -84, -78,
	-81, -651, 106, -595, -98, -101, -134, -655, 168, 232,
	-120, -121, -122, 386, -128, -129, 446, -131, -132, -133,
	449, 169, -70, -69, 162, -243, -245, -147, -146, -148,
	-206, -157, -158, -159, -160, -161, -163, -164, -166, -193,
	-167, -168, -169, -170, -171, -172, -176, -196, -173, -174,
	-175, -178, -177, -179, -184, -180, -181, -182, -183, -185,
	-186, -188, -189, -190, -191, -192, -194, -195, 489, -187,
	-197, -165, -198, 554, 52, 505, 85, 152, 457, 21,
	-7, -8, -9, -10, -11, -12, -13, -17, -16, -60,
	-4, -5, -80, -82, -85, -86, -87, -94, -88, -89,
	-594, -99, -100, -103, -105, -106, -102, -104, 445, 606,
	-246, -244, 631, 570, -162, -21, -26, -22, -23, -25,
	-27, -24, -28, -29, -30, -46, -51, -48, -49, -47,
	-50, -52, -53, -54, -55, -56, -57, -58, -59, -33,
	-39, -40, -34, -35, -36, -37, -38, -41, -42, -43,
	-44, -45, -19, -20, -32, 593, 602, -249, -247, -248,
	-256, 476, 578, 527, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	-345, 2, -324, -330, -331, -332, -323, -293, -564, -567,
	4, -561, -565, 175, 242, 347, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	195, 198, 199, 200, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 213, 217, 219, 220, 221, 222, 223,
	224, 225, 231, 232, 234, 235, 236, 237, 238, 243,
	244, 245, 249, 255, 256, 260, 261, 262, 264, 268,
	269, 270, 271, 272, 273, 275, 277, 276, 279, 282,
	283, 286, 287, 288, 289, 290, 291, 295, 296, 292,
	297, 298, 300, 301, 304, 302, 305, 306, 303, 307,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 308, 309, 324, 322, 326, 327, 328, 329,
	330, 345, 340, 341, 342, 334, 335, 331, 336, 332,
	333, 337, 338, 344, 339, 349, 350, 351, 352, 355,
	229, 248, 357, 358, 361, 363, 380, 366, 367, 368,
	371, 372, 375, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 391, 392, 394, 395, 396, 398,
	399, 400, 402, 404, 405, 407, 408, 409, 411, 412,
	413, 414, 415, 416, 417, 418, 420, 421, 423, 422,
	424, 426, 428, 429, 430, 436, 437, 444, 438, 440,
	441, 442, 443, 445, 446, 447, 448, 449, 451, 452,
	453, 455, 456, 457, 458, 459, 461, 463, 464, 468,
	469, 470, 486, 487, 508, 465, 466, 467, 471, 472,
	473, 474, 475, 479, 477, 478, 480, 481, 482, 484,
	485, 488, 489, 491, 492, 493, 494, 495, 496, 497,
	500, 502, 503, 504, 505, 506, 526, 507, 509, 513,
	514, 515, 516, 510, 511, 525, 518, 519, 520, 522,
	523, 528, 529, 530, 531, 532, 533, 535, 536, 538,
	546, 547, 548, 549, 551, 554, 555, 556, 557, 544,
	559, 560, 563, 564, 568, 565, 569, 566, 567, 570,
	572, 575, 576, 577, 583, 582, 584, 585, 586, 588,
	589, 594, 595, 597, 598, 599, 37, 53, 54, 57,
	59, 61, 72, 73, 74, 78, 129, 130, 159, 171,
	172, 184, 201, 202, 214, 216, 226, 227, 228, 250,
	251, 253, 258, 280, 354, 356, 373, 377, 393, 397,
	401, 403, 419, 460, 498, 512, 517, 539, 540, 541,
	542, 550, 552, 578, 579, 580, 587, 596, -345, 2,
	-324, 364, -317, 2, -293, -293, 404, 29, 2, 29,
	392, 478, 530, 532, 2, -622, -390, 2, 29, -296,
	-293, 106, 212, 476, -317, 2, -622, 212, -390, 26,
	2, -293, 2, 378, 23, 28, 69, 80, 102, 145,
	170, 193, 198, -654, 380, 412, 463, 480, 525, 536,
	551, 2, 582, 301, 477, 527, 242, 124, 556, 471,
	-633, 468, 469, 378, 410, 455, 215, 571, -297, 2,
	465, -293, 301, 2, 634, 98, 77, 460, 481, -153,
	2, 291, 547, -154, -155, -152, 539, -548, 471, 455,
	324, -293, 634, 634, 634, 29, -306, 2, -293, -306,
	2, -211, 2, -306, -656, -218, -217, -216, 22, 437,
	183, 273, 196, 233, 329, 407, 194, 50, -211, 2,
	527, 242, 471, 124, 523, 634, 634, 2, 527, 383,
	582, 477, 124, 416, 242, 556, 198, 145, 28, 71,
	48, 533, 610, 471, -633, 607, 608, 301, 131, -620,
	2, -614, 4, -565, -561, -339, -338, 527, 533, 124,
	-332, -323, 623, -331, 634, 634, 634, 634, 2, 261,
	262, 414, 413, 481, 482, 29, 634, 634, 634, 634,
	468, 2, 170, 23, 28, 69, 97, 102, 131, 193,
	198, 369, -652, 380, 412, 480, 525, 529, 536, 551,
	-632, 507, 71, 471, -631, -633, 301, 556, 145, -440,
	124, 291, 210, 564, 532, 530, 562, 137, 249, 567,
	566, 634, 634, -111, 2, 631, 33, 32, -110, -114,
	147, 484, -236, 527, 254, 2, -293, 634, 634, 634,
	2, 261, 262, 468, 469, 29, 634, 634, 196, -614,
	523, 2, 634, 634, 634, 2, 29, 261, 262, 468,
	469, 254, 2, 71, 473, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 2, -200, 481, 507, 222, 49, 48, 77,
	29, 411, 82, 384, 125, 131, 154, 557, 213, 242,
	243, 269, 97, 98, -442, 46, 262, 71, 261, 469,
	-638, 468, -495, 528, 472, 478, 522, 89, 273, 465,
	547, 549, 106, 572, 456, 599, 416, 417, 520, 430,
	292, 163, 197, 4, 124, 324, 455, 483, 277, 276,
	539, 291, 464, 387, 87, 634, -665, 2, 527, -667,
	2, 547, 547, 2, -667, 2, -667, 2, -667, 2,
	-668, 547, 596, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, -244, -246, -245, 634, 634, 634, 634,
	634, 634, 634, -200, 481, 2, 77, 29, 29, -383,
	-385, 561, 252, 156, 370, -243, -245, 2, -594, -546,
	2, -469, -568, -471, 621, 622, 614, 524, 70, -349,
	346, 600, -483, 131, 562, 364, -567, -472, -485, 159,
	380, 460, -404, 8, 9, 5, 6, 7, -302, -473,
	-479, 553, 174, 353, -342, 635, 10, 631, -591, -245,
	-484, 38, 216, 68, -550, -341, -303, -522, 253, -340,
	-323, -588, -589, 4, -561, -562, -551, -525, -533, -529,
	-530, -536, -293, -564, 80, 115, 116, 114, 119, 118,
	294, 293, 120, 117, 483, 571, 69, 37, 226, 227,
	258, 354, 228, 78, -590, 146, -563, 250, 251, 498,
	54, 419, 184, 130, 129, 356, 59, 57, 579, -534,
	126, 539, 540, 541, 542, 201, 202, 61, 171, 172,
	377, 401, 517, 550, 552, 214, 280, 45, 110, 197,
	247, 230, 257, 259, 263, 281, 284, 325, 343, 348,
	374, 376, 454, 490, -671, 580, 512, 72, 73, 189,
	-596, 422, -597, -317, -596, 634, 634, 636, 634, -374,
	-376, -378, 2, 29, 143, 631, 2, -500, 2, -501,
	-505, -245, 274, -504, 631, -502, 629, -324, 365, -592,
	461, -588, -589, -302, -323, -341, 4, -561, -563, 633,
	-379, 631, 124, 471, 527, 81, 242, 97, 170, 198,
	-435, 631, -293, 29, 364, 543, 636, -375, 409, -481,
	631, 364, 367, 196, 367, 63, 305, 2, 2, 2,
	2, 2, 226, -293, 527, 123, 2, 272, 2, 2,
	2, 2, 2, 2, 2, -397, 226, 2, -324, 582,
	-397, 226, 2, -397, 226, 2, -441, 2, 91, -307,
	226, 2, -293, -333, 226, 2, -328, -330, -337, 226,
	2, -335, -293, -556, 226, 2, -554, 4, -561, 120,
	483, -469, 2, -140, 2, 63, -293, 582, 2, 486,
	2, 631, -153, 2, 74, 547, 45, 481, -154, 2,
	-455, 2, -456, -289, -290, -291, -512, -292, 260, 408,
	418, 603, 135, 346, 599, -646, 196, 613, 543, -546,
	-546, -546, -405, 633, -213, 56, -306, -657, -656, -657,
	-544, 29, -539, 8, -540, 621, 622, -544, -544, -657,
	-657, 2, 2, 2, 2, 2, 2, -505, 226, -324,
	2, -321, -549, 4, -561, -565, -562, -566, -564, 29,
	32, 33, 34, 36, 38, 39, 40, 42, 60, 68,
	69, 75, 79, 81, 91, 97, 106, 114, 115, 117,
	116, 118, 119, 120, 131, 135, 139, 143, 144, 148,
	152, 156, 174, 176, 189, 193, 196, 212, 215, 218,
	233, 246, 252, 254, 274, 278, 285, 293, 294, 346,
	353, 359, 364, 365, 369, 370, 390, 406, 425, 450,
	476, 483, 501, 521, 527, 537, 543, 545, 553, 561,
	562, 571, 573, 581, 590, 591, 592, 593, -567, 80,
	2, -505, 226, 2, -327, 226, -505, -330, 2, -307,
	2, -469, -626, 535, 166, 438, 2, -346, 226, -324,
	-326, -330, -328, 2, 2, 2, 2, -469, 2, -558,
	2, -553, 10, -552, 5, 4, -561, -565, -562, -472,
	2, -483, 29, -335, 2, -554, 226, 2, 29, 29,
	582, 409, 254, 543, 636, -396, -338, -339, -545, 4,
	8, -389, -293, 633, -469, 2, -140, -123, 2, 189,
	-469, 226, 2, -140, 226, 2, -469, 226, 2, -140,
	226, 2, -293, 2, -634, 2, -558, 226, 226, -293,
	2, 305, 2, 2, 551, 2, 102, 527, 123, 2,
	442, -653, 463, 555, 2, 2, 2, 2, 2, 2,
	2, 527, -312, 2, -293, 189, -335, 226, -336, 2,
	477, -666, 422, -554, 226, 2, 582, -328, 226, 2,
	-328, 242, 256, -307, 226, 2, 532, 530, 532, 530,
	196, 2, 254, 2, 254, 2, -506, 2, -507, -501,
	-508, 629, 365, -516, 2, -515, -552, 578, -111, 631,
	-111, 631, 481, 631, -558, -324, -324, -469, 2, -140,
	-123, 2, -469, 2, -140, 2, -293, 2, -137, -558,
	-136, 631, 196, 572, -293, 2, -469, 2, -140, -123,
	2, -469, 2, -140, 2, -236, 189, 2, 124, 527,
	-200, 2, 189, 573, 2, 8, 2, 233, -232, -558,
	472, 181, 417, 2, 486, 2, 487, 77, -442, 599,
	77, 196, 2, 196, 2, -425, 2, 593, 409, 196,
	2, 2, -619, 2, 364, 196, 2, 196, 2, 196,
	2, 196, 2, 196, 2, -199, 482, 548, 526, 413,
	262, 2, -140, 590, -123, 262, 261, -469, 590, 2,
	-639, 189, 469, -469, 2, 546, 271, 164, 196, -425,
	2, 196, 2, 196, 2, 5, 2, 43, 414, 508,
	2, 260, 408, 508, 2, 506, 2, -324, 527, 582,
	477, 124, 29, 2, 468, 2, 2, 92, 93, 196,
	2, 196, 2, 211, 196, 2, 196, 527, -406, 633,
	599, 2, -417, -505, -454, -455, -454, 543, -383, -385,
	-200, 486, 2, -250, -415, -252, 189, -445, -446, -253,
	285, 176, 359, -254, -424, 29, 143, -424, -424, 63,
	632, 632, 11, 12, 79, 43, 621, 622, 623, 624,
	187, 625, 626, 619, 620, 618, 611, 612, 616, 266,
	267, 99, 615, 613, 90, 299, 462, 177, 178, 179,
	180, 439, 240, 35, 241, 14, 15, 16, -349, 34,
	369, 284, 600, 230, 490, 614, 17, 18, 19, 257,
	259, 348, 53, 233, -301, 380, -348, 524, 70, -469,
	-469, -469, -469, -469, -469, -469, -469, 376, 631, -411,
	-464, 629, -245, 631, 631, 631, 631, -545, -245, -469,
	-483, 632, -402, 631, -245, -483, -478, 631, 460, 629,
	631, -486, -469, 5, 5, 5, 631, 633, -599, 594,
	189, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 403, -527, 631,
	-526, 631, -526, -526, 583, -524, 631, 602, 595, 631,
	-524, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 583, 533, 636, -596, -379, 631,
	-407, -510, -469, 623, -407, -407, 364, -399, -469, 110,
	-428, 263, 325, 197, 281, 454, 247, -466, 635, -466,
	-494, 602, -245, -502, -323, -245, -504, 631, -500, -494,
	-112, -545, -95, -108, -117, -140, -156, -204, -205, 623,
	-324, 631, 196, 631, 633, -549, 196, -389, -307, -335,
	-324, -340, -341, -346, -318, -293, 2, 2, 142, -399,
	-614, 556, 471, 29, 477, -556, -296, 39, -480, -519,
	-520, -570, 635, -569, -522, -532, -528, -531, 393, 397,
	-551, 57, 579, -534, 253, 4, -561, -563, 250, 251,
	498, 54, 419, 184, 130, 129, 356, 59, 539, 540,
	541, 542, 201, 202, 61, 580, 512, 72, 73, -614,
	556, 471, 29, 477, 189, -556, 189, -556, 2, 2,
	159, 2, 2, 2, -293, -271, 636, 67, 447, 159,
	-397, 226, -271, 159, -271, 159, -347, 226, -346, -271,
	159, -271, 636, 159, -271, 636, 159, 633, 636, 159,
	-556, 2, -441, -548, -399, 39, -455, 2, 131, 4,
	5, -669, 636, 283, -352, 298, 345, 221, 365, 597,
	357, 135, -557, 5, 4, -479, -491, 131, 291, 253,
	-539, -541, 9, -542, 621, 622, -547, -546, 113, 633,
	-549, -214, 248, 41, -306, -306, -657, -657, 8, 8,
	-657, -657, -306, -306, -268, 440, 484, 379, -267, 25,
	30, 147, 244, 330, 576, 165, -364, 245, 445, -361,
	383, 159, 502, 565, -626, -629, 467, 535, 166, 438,
	94, 357, 484, 379, 440, 159, -421, -423, 39, 122,
	330, 378, 64, 236, 303, 304, 505, 587, 159, 484,
	379, 440, 379, -15, -282, 25, 147, -284, -279, 484,
	30, -629, 103, 440, 606, 445, 389, 519, 406, -629,
	-626, 279, -628, 589, 344, -270, 502, 565, -626, -629,
	467, 440, -269, -366, -361, 383, 159, 635, 25, 147,
	440, 484, 379, -649, -650, 30, -263, -262, 25, 147,
	484, 568, -266, 233, -265, 25, -149, -129, -148, 445,
	484, -149, 2, 440, 379, -623, -314, -593, 233, 593,
	159, -314, -314, -505, 226, -643, 189, 2, -636, -136,
	275, 5, 10, -558, -136, -396, 636, 636, -549, 623,
	469, 468, 159, 159, 159, 159, 262, 189, 346, 346,
	593, 2, 2, 2, 2, 2, 198, -631, -654, 2,
	2, -324, 226, -381, 364, -617, -618, 527, -324, 346,
	45, -327, 226, 2, -330, 582, -623, 346, -329, 226,
	-324, 39, 631, 346, 2, -441, 2, 242, -593, 346,
	-506, -343, -324, -501, -343, 484, -317, 39, -466, -324,
	632, 636, -516, -516, -558, -223, 593, 196, 631, -236,
	593, 593, 262, -513, 636, -512, 233, -559, -558, -137,
	-558, 443, 196, 262, -558, -617, -307, 2, -324, 2,
	527, 264, -558, 196, 233, -223, -558, -558, -558, -548,
	29, 487, 2, -199, 482, 548, 93, 487, 2, -324,
	527, 124, 242, 83, -643, 189, 2, -293, -621, 189,
	-615, 455, 471, 556, -614, -324, 124, -324, 124, -324,
	124, -324, -324, 2, 2, 2, 2, 2, 88, 2,
	-140, -469, 2, 88, 2, 48, 503, -639, 189, 2,
	546, 2, 546, 2, -293, -293, -293, 359, 507, 283,
	593, -324, -324, -324, -325, -330, 472, 528, 557, 469,
	-469, 2, -658, 2, 196, 189, 2, 527, 242, 527,
	242, 124, 196, 77, 124, 29, 527, 466, 633, 4,
	-271, 636, -297, -250, -415, -548, -416, -415, -251, -250,
	-253, 189, 418, 566, 330, 488, 268, -446, -445, 29,
	-469, -450, 183, 329, -469, -448, -471, 621, 622, -540,
	-542, -398, 357, -244, -244, -244, -386, -496, -469, 406,
	242, -521, -519, -519, -322, -549, 539, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, 284, 230, 490, 53, 233, -469, 543,
	-469, -469, -469, -469, 322, 346, 353, 553, 174, 563,
	143, 357, -672, 521, 42, -476, -245, -403, 631, -490,
	36, 501, 29, -483, 631, 2, -464, -469, -465, -350,
	-348, -293, 621, 622, 623, 624, 625, 626, 611, 612,
	613, 14, 15, 16, 616, 620, 618, 619, 187, 99,
	615, 299, 462, 90, 177, 178, 179, 180, 266, 267,
	17, 18, 19, 35, 614, -400, -399, -399, 632, 581,
	29, 143, 623, 2, 632, 636, 39, 632, -469, -400,
	-482, -478, -399, -489, -488, 590, -436, -437, 598, 308,
	127, 224, 306, -438, 475, -543, 8, -549, 623, -600,
	182, 215, 631, 632, 2, 632, 2, 632, -469, 2,
	632, -469, 2, 632, -469, 2, 632, -469, 2, 632,
	2, 632, 2, -469, -469, -469, -469, -469, -469, -469,
	-399, 8, -543, -543, 539, 539, -543, -543, -543, -535,
	393, 394, 395, 396, 286, 287, 288, 289, 397, 398,
	399, 400, 314, 315, 316, 317, 310, 311, 312, 313,
	318, 319, 320, 321, 206, 207, 208, 209, 202, 203,
	204, 205, -535, -430, 2, -537, -399, 4, 598, 308,
	127, 224, 306, 475, 5, -430, 2, -431, 2, -469,
	-399, -432, -470, -471, 621, 622, 614, -349, -433, 2,
	-469, -400, -469, 60, 278, 545, -434, -469, 196, -399,
	-399, 2, -399, 2, -472, 2, -597, 39, -399, -392,
	636, 196, 39, 4, -392, -392, 631, 632, 636, -429,
	219, 302, 297, 256, -429, -500, -428, 263, -426, 374,
	-426, -426, -494, -308, 629, 637, -549, -494, -493, -492,
	39, -317, 371, -494, -494, 633, 632, -493, 630, -612,
	631, 634, 634, 634, 634, 634, -324, 631, -399, -549,
	633, 509, 2, 632, 257, 257, 257, 257, 257, 364,
	461, 632, 543, -616, -333, -337, 528, 2, 593, -110,
	366, 632, 636, -391, 38, 629, 633, -543, 2, 2,
	-538, 583, 631, 631, -437, 631, 196, -616, -337, 528,
	2, -622, -390, -390, 543, -293, 2, -324, -397, -271,
	159, -397, -397, -271, 636, 159, -307, -328, -333, -335,
	-337, -293, -554, -556, -271, -329, -646, 632, 547, -456,
	-351, 418, 500, 441, 479, 523, 9, 9, 636, -549,
	-215, 470, 330, -306, -306, -306, -306, 636, -647, 97,
	543, 81, 631, 471, -286, 292, 543, -460, 226, 81,
	-571, 97, -310, -572, -293, 75, 562, 406, 193, 157,
	-647, 97, 406, -647, 97, 2, 244, 97, 484, 507,
	631, 29, 63, -505, 43, 43, 29, -627, -628, 279,
	196, 599, 527, 242, 471, 543, 543, -505, -423, -519,
	122, 303, 304, 63, -544, -544, 63, -544, -544, -544,
	593, -327, -505, 471, 543, 543, 543, 428, 518, 428,
	518, -279, -154, 518, 543, 543, 29, -200, 448, 131,
	-670, 613, 428, 279, -628, 543, 196, 636, 43, 43,
	29, -627, 196, 543, -346, -308, 577, 44, 577, 44,
	577, 543, 44, 471, 543, 636, 44, -262, -617, -617,
	-222, -221, -293, 5, -389, -265, -558, -264, 328, 77,
	543, 543, -15, 484, -624, -298, 109, 336, 296, 337,
	101, 333, 100, 332, 107, 334, 108, 335, 584, 349,
	585, 350, 66, 331, 307, 338, 504, 339, 586, 351,
	-299, -300, 150, 385, 575, 124, -554, -15, -15, 484,
	379, 440, 159, -644, 233, 29, -633, 233, -513, 233,
	-513, -338, -293, 633, -140, -469, -469, -140, -469, -140,
	48, 159, 159, 2, 2, -666, 272, 631, -355, 346,
	196, -389, -514, 636, 254, -324, 175, 159, -554, -422,
	-421, 346, -329, 226, 2, 159, -379, 346, 153, 631,
	416, 2, 159, -309, 226, -294, -293, -441, -273, 531,
	159, -419, 573, -451, -140, 631, 131, 39, -451, -408,
	-409, -511, -410, -310, 631, -317, -466, -111, -515, 632,
	632, 632, -222, 368, -236, -380, -311, -310, 123, 420,
	420, -229, 593, -136, -137, 632, 636, -513, 233, 510,
	-137, -558, -223, -223, -513, -513, -324, 189, -558, -558,
	-223, -223, -223, 2, 2, 2, 2, -425, -324, -307,
	-346, -324, 29, 633, -556, -556, -337, -333, -425, -307,
	-425, -307, -425, -307, -425, -425, -140, -469, 507, 2,
	481, 189, 189, 633, -425, 8, -382, 450, 5, 2,
	416, 124, 527, 383, 242, -324, -346, -324, -346, -307,
	124, -307, 125, -324, 4, -505, -416, -251, 365, 268,
	488, -448, -449, -471, 460, 461, -449, 460, 461, 8,
	9, 8, 9, -255, 492, 352, -397, 636, -260, 40,
	139, 268, -324, 599, 155, -469, -469, 543, -672, 521,
	-476, 155, -469, 322, 353, 553, 174, 563, 143, 357,
	196, 631, -470, -470, 632, -401, -469, -469, 630, 639,
	632, 633, 632, -385, 636, -383, -469, -399, -399, 632,
	633, -399, -389, 630, 630, 636, 632, -487, -488, 148,
	-469, 543, 543, 543, 543, 631, 632, 633, -605, 375,
	631, 631, -469, 632, 632, 632, 632, 39, 636, 636,
	636, 632, 636, 636, 636, 632, 632, 632, 636, 632,
	599, 599, 632, 632, 632, 632, 636, 632, 636, 632,
	196, 632, 632, -439, 390, 632, 11, 12, 621, 622,
	623, 624, 187, 625, 626, 619, 620, 618, 611, 612,
	613, 90, 299, 462, 14, 15, 16, -349, 257, 233,
	-470, -470, -470, -470, 632, -474, -475, 196, 189, 39,
	-434, -434, -434, 632, 196, -399, 632, 632, 631, -598,
	301, 346, 632, -463, -462, 591, -510, -393, 2, -500,
	-319, -549, -463, -463, -399, -469, 263, 263, -427, 573,
	364, -429, -500, -493, -545, -468, -467, 191, 40, 139,
	340, 341, 342, 229, 192, -493, -317, -379, -493, -493,
	-549, -494, -494, -492, 632, -613, -545, 632, -394, -503,
	-592, -385, 633, -549, -233, -593, -201, 5, 353, -201,
	-201, -201, -201, -324, -556, 543, 543, 233, 26, 391,
	-519, 629, 630, 8, -549, 631, -543, -543, -543, -556,
	196, 196, 233, 364, 196, -554, 2, -271, -397, -271,
	-271, -346, -347, -271, -271, -271, -420, 593, -546, -455,
	560, 86, 418, 539, -546, 121, 470, -267, 440, 484,
	-310, -310, -324, -240, -239, -237, -293, 5, -334, -293,
	210, 429, -554, 346, -460, 226, -272, 346, 226, -318,
	-519, 631, -443, 595, 268, 268, 573, -310, -318, 268,
	226, -310, 226, -318, 2, -318, -625, 418, 358, -469,
	-238, -237, 63, -362, 290, 416, 347, -268, 440, 484,
	379, -140, -140, -140, 631, -646, 573, 142, -324, -346,
	-324, -334, -554, -329, 484, 379, 440, 343, -340, -544,
	-544, -421, 484, 379, 440, -334, -554, -327, -554, -278,
	226, -293, 428, -278, 226, 428, 428, 471, -307, 428,
	599, 47, -670, 543, 196, -469, -469, -269, -140, -140,
	-140, 631, -308, -270, 440, 5, 226, -310, 5, -310,
	226, 5, -293, -310, -334, -554, -650, 25, 147, -310,
	-223, 636, 613, 613, -266, 613, -334, -554, -298, 385,
	-558, 353, 569, -307, -623, -314, 471, 543, 543, -505,
	-640, -641, 212, 453, 471, 456, -556, -136, -226, 593,
	-136, -220, 237, 623, -620, -558, -293, 582, -293, -353,
	-356, -354, -310, -461, -460, -575, -576, -571, 284, 242,
	562, 256, 175, 97, -241, -242, 595, 593, 159, -344,
	-324, 629, -223, -618, -558, 175, -315, -293, -335, -336,
	159, -379, 346, -554, 39, 159, 631, 2, 2, -328,
	364, 346, -309, 226, -274, 149, -670, -307, -463, -393,
	-418, -453, 450, 364, -380, 578, -317, -418, -395, 636,
	196, 613, 633, -380, -509, 623, -111, -111, -223, 631,
	631, -558, 632, 636, 633, 631, 613, 613, -231, 368,
	-230, 151, 270, 255, 494, 495, 496, 497, 141, 493,
	128, 327, 238, 533, -513, -558, -229, -137, 196, -513,
	233, 196, -71, 593, 527, 233, -223, 635, 456, -293,
	-425, -425, -425, 481, 481, -293, 189, -389, -320, -549,
	-307, -324, -321, -346, 189, 189, -307, 566, -449, 365,
	295, -496, -261, 601, -324, 635, -469, -469, 155, 155,
	-469, -470, -470, -469, 155, 196, 631, -469, -480, 34,
	34, 632, 636, -465, -469, -348, 632, 581, -385, -385,
	632, 623, -549, 635, 632, -478, 152, -469, 537, 308,
	224, 306, -438, 306, -438, -438, -543, 5, -549, 623,
	-606, -313, 631, -293, 591, -384, 370, 632, -521, -519,
	-469, -469, -469, -469, -469, -543, -524, -524, -539, -539,
	-469, -474, -469, -521, -519, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, 143, 346, 357, -470, -475,
	-474, -469, -469, -519, 632, 632, 632, -399, -110, 631,
	301, -412, 215, -469, -513, 636, -412, -412, 632, -500,
	-500, 631, -469, 263, 630, 636, 638, 613, 613, -379,
	633, -492, -493, 630, 632, 636, 632, 636, -452, 39,
	632, -549, -463, -235, -234, 140, 56, 111, 138, 353,
	361, 195, 220, 415, 155, 190, 149, 257, -642, 593,
	-556, -556, 471, 367, 5, 8, 629, 630, 633, -543,
	632, 632, 632, -556, -556, 471, -614, 556, 471, 29,
	-556, -271, -271, 123, 330, -469, -212, 593, 595, 543,
	543, 632, 636, 613, 63, 233, 159, 346, 575, 346,
	-572, 157, -577, -469, 631, 242, 631, 631, 2, -257,
	-258, -259, 147, 484, 25, -648, 2, 573, 159, -271,
	159, -271, 597, 632, 636, -362, 631, 631, 543, 471,
	-286, 543, 593, -399, -469, -224, 131, -548, -629, 635,
	-629, 635, 471, 543, 543, 471, 543, 543, 346, -293,
	159, -293, -293, 593, 173, 173, 599, -278, -469, -469,
	189, 543, 593, -399, 543, -523, 51, 27, 346, -328,
	-271, 159, 543, 543, 556, 484, -221, -558, -558, -136,
	-558, -558, 353, -15, -334, -554, -329, 484, 379, 440,
	-622, -622, 212, -337, -644, -513, -228, 368, -227, 151,
	452, 141, 270, 238, -513, -226, 196, 254, 593, -329,
	2, 632, 632, 636, 636, -578, -272, -324, -309, 242,
	242, -316, -294, 39, 361, 361, 631, -324, -91, 593,
	-512, -545, -315, 45, -327, 39, 159, -623, -140, -329,
	-517, -518, 5, 39, -324, 159, 364, 346, -275, 277,
	-670, -553, -593, -385, -418, -407, 347, 95, 632, -463,
	-409, -393, -469, 2, 632, -222, -558, -223, -236, -311,
	2, -559, -558, -558, 636, 631, 613, 613, 613, 613,
	613, 613, 613, -229, -513, -136, -229, -137, -140, 368,
	-324, -558, 623, -425, 5, -368, -367, 383, 357, -368,
	460, 460, 365, 183, 273, -260, -308, -469, -469, 155,
	34, 34, -469, -469, -480, 632, -469, -469, -399, 630,
	5, -469, 632, 632, 8, -469, 632, 633, -607, -293,
	-469, 632, 63, 632, 632, 636, 636, 632, 632, 632,
	632, 632, 632, 632, -475, 196, 143, 357, 631, 632,
	632, -110, -477, 218, 63, -500, -477, -477, -427, -389,
	-500, -467, -308, 629, -308, 629, -549, -545, -503, 631,
	633, -234, 613, -558, -558, 2, 2, 2, 5, 5,
	415, 346, 353, 5, -201, 212, -642, -642, 593, -337,
	630, 2, 629, -549, 632, -337, 196, -616, -337, 528,
	123, 189, 223, 223, -310, -310, -239, -546, 527, 460,
	-278, 406, -460, 159, 159, -579, 97, -581, 79, 175,
	106, 346, 353, 562, 406, 75, 131, 364, 425, -660,
	-661, -662, 39, 604, 605, 632, -387, -497, -592, 631,
	-293, -387, -389, 346, 515, 131, 364, 346, 131, 364,
	588, 123, 2, 556, 82, -310, -318, -237, -389, -389,
	-324, -334, -554, 167, 632, 636, 613, 2, 623, 623,
	-334, -554, -329, -334, -554, -327, 159, 578, -278, 578,
	381, 173, 543, -140, -469, 167, 632, -308, 5, 5,
	159, -305, 79, -310, 5, -310, -328, 123, 593, 471,
	543, 543, 364, 364, 367, -640, -641, -226, 636, 631,
	613, 613, 613, -226, -559, -136, 2, -379, -369, 244,
	-310, -576, -573, -574, 406, -461, -580, -582, 175, 406,
	-357, 631, -309, -294, 631, -140, 2, -240, 631, -355,
	368, 630, -554, -422, -140, -329, -377, 593, -379, 632,
	636, 153, -444, 573, -308, -324, 159, -276, 276, -670,
	-553, -273, -447, -445, 144, 631, 364, -140, -385, 613,
	632, 632, 123, 632, -230, -231, -558, -136, -558, -558,
	-558, -136, -558, -229, -513, -513, -72, -73, 242, 97,
	388, -223, -321, 527, 242, 631, 631, -260, -469, -469,
	-469, 632, -385, -549, 623, -601, 383, 632, -496, -469,
	-469, -470, 196, 631, -480, 632, -602, 592, -469, -413,
	-414, -469, 458, 112, 216, -602, -602, 632, -545, -545,
	2, -558, 2, 2, 353, 2, 2, 367, 2, 543,
	629, 2, 196, -556, 196, 196, 233, -140, 233, 39,
	428, -460, -318, -318, -322, -315, 175, 226, 353, 588,
	-443, 268, 631, -470, 566, -324, 631, 2, 225, 225,
	31, 63, -663, 135, 246, 632, 636, -498, -304, -293,
	-469, -498, 632, 632, 353, 566, 353, 588, -469, 566,
	-519, 631, -271, -271, 632, 632, -469, 543, -548, 104,
	-546, 2, -629, -278, -389, -389, -307, -469, 189, -469,
	543, 5, -271, -322, -271, -271, -305, 556, 363, -334,
	-554, -329, -645, 528, 478, 557, 472, 199, 459, -645,
	189, -227, -228, -558, -136, -136, -226, 39, -363, -364,
	2, -578, 268, -315, 268, 235, 158, -387, 631, 631,
	-389, -659, 593, 632, -353, -241, -92, -93, 544, -512,
	-379, 330, 123, 39, 5, 631, 631, -293, 364, 631,
	-308, -288, 96, -670, -553, -274, -418, 347, -389, 97,
	-447, -476, -223, 631, -223, 632, -229, 636, 29, 631,
	29, 631, -324, -346, -399, -399, 632, -385, 63, 636,
	632, 632, -470, -480, 632, -603, -604, -313, 636, 631,
	631, 485, 630, 630, 2, -556, 2, -556, -556, -556,
	471, -278, 406, -293, -572, -581, -315, 346, -242, 573,
	593, -469, -470, -295, 631, -469, 631, 631, 39, 131,
	246, 136, 231, -459, -664, 105, 516, 234, -497, -260,
	632, -458, 573, 425, -470, -305, -387, 631, 631, 631,
	613, 196, -140, 631, -523, -271, -328, 613, 543, 2,
	2, 196, -622, 632, -635, 423, -140, -241, 631, -242,
	-358, 84, 98, 132, 225, 200, 243, 507, 513, 29,
	-358, 632, -387, -387, 632, -359, 364, 123, 330, 632,
	39, -93, 9, 39, 123, -140, -517, -387, -324, -387,
	364, -280, -279, 285, -553, -275, 632, -318, -418, -559,
	-73, -389, -389, 632, 632, -608, 416, 461, 217, -399,
	-386, 632, 636, 39, -414, 2, 2, 2, -642, -337,
	428, -272, 159, 219, 632, -583, 300, -293, 632, -422,
	-422, 39, 136, 231, -365, -361, 631, -261, -498, -242,
	219, -324, -630, 573, 632, -371, -370, -367, -373, -372,
	-367, -399, -546, 104, 381, -399, -305, -136, -556, -556,
	364, -637, 197, -636, 5, 10, -359, -388, -499, -310,
	-458, 632, 632, 85, 123, -369, -140, -140, 2, -377,
	632, 632, -444, 632, -324, -277, -560, 428, 430, -670,
	-276, -463, 144, 632, 632, 632, 632, -609, -610, 53,
	559, 113, -469, -609, -609, -604, -606, 196, 175, -457,
	602, -584, -587, -586, 609, 491, 197, 382, 632, 515,
	587, 632, 632, -663, -389, -457, -379, -469, -458, 632,
	636, 578, 632, 636, 578, 632, 196, 632, -271, -642,
	-271, -645, -225, 593, 48, -287, -286, 632, 636, -459,
	-458, -365, 405, 137, 147, -363, -659, -458, 631, -459,
	631, -285, -284, -670, -539, -288, 144, 347, 566, -223,
	-611, 157, -610, 402, 188, 460, 402, 188, -611, -611,
	-556, -315, -242, 58, -586, 609, -587, 609, 566, 137,
	-463, 632, -583, -242, -370, 233, -372, 196, 381, 196,
	468, -636, 31, -242, -499, -365, -459, -242, 461, 461,
	2, -241, -359, -459, -387, -365, -387, -281, -282, -283,
	-389, -280, 347, 566, 484, 113, 215, 538, 330, 34,
	613, -585, 330, 447, 67, 484, -585, -584, 631, 631,
	-556, 368, -242, -365, -463, 2, -359, -365, 632, -242,
	632, -555, 379, -277, 484, -408, 460, 372, -610, -469,
	24, 353, 131, -663, -399, -399, -271, -222, 631, -463,
	-242, -287, -242, -458, -463, -459, -670, -285, -408, -463,
	632, 632, -222, -463, -463, -459, -365, -554, -281, -463,
	-360, -361, 543, 632, -365, -242, 631, -242, -463, -399,
	-463, 632, -360,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 588, 589, 591, 592,
	593, 595, 596, 598, 600, 602, 603, 604, 606, 607,
	609, 610, 611, 612, 613, 615, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 704, 706, 0, 1548, 1550, 1552, 1554, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	372, 374, 376, 378, 0, 410, 412, 413, 415, 417,
	418, 420, -2, 0, 521, 522, 524, 526, -2, 0,
	1133, 1135, 1137, 0, 692, 694, 0, 1140, 1142, 1144,
	0, 0, 716, 717, 0, 1662, -2, 708, 710, 712,
	714, 791, 793, 795, 797, 799, 801, 803, 805, 807,
	809, 810, 812, 814, 816, 818, 820, 821, 823, 825,
	827, 828, 830, 831, 833, 835, 837, 839, 841, 843,
	845, 847, 849, 851, 853, 855, 857, 859, -2, 862,
	863, 864, 866, -2, -2, 0, -2, -2, -2, 1566,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 71, 471, 473, 475, 477, 479, 482, 484, 486,
	1720, 528, 530, 532, 534, 536, 538, 540, 0, 0,
	-2, 1734, 0, 0, 953, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 82, 127, 128, 129, 130, 131,
	132, 133, 86, 87, 88, 90, 91, 92, 93, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 124, 125, 84, 0, 0, 1693, 1695, 1697,
	1699, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	590, 594, 597, 599, 601, 605, 608, 614, 616, 618,
	573, 574, 577, 2432, 2450, 2451, 2452, 2455, 2456, 2457,
	2458, 2459, 2460, 2944, 3025, 3026, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885,
	2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895,
	2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905,
	2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915,
	2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 575, 576,
	1327, 0, 657, 655, 2417, 658, 2729, 660, 662, 515,
	516, 517, 518, 519, 520, 0, 685, 671, 1732, 686,
	688, 689, 690, 691, 652, 650, 0, 690, 685, 2487,
	683, 1546, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 450, 1386, 1387, 1388, 1531, 1532,
	2781, 1573, 0, 259, 705, -2, -2, 2909, -2, 745,
	746, -2, -2, 760, 764, 755, 2913, 0, 2784, 2767,
	-2, 767, 1549, 1551, 1553, 867, 868, 869, 2436, 873,
	871, 883, 884, 887, 0, 904, -2, 0, 2483, 2752,
	-2, -2, 905, 906, -2, -2, -2, -2, 885, 886,
	0, 0, 0, 0, 0, 44, 46, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 269, -2, -2, -2, -2, 0, 0, 2832, 2542,
	2385, 2452, 2388, 2383, 373, 375, 377, 379, 380, 0,
	0, 0, 0, 0, 0, 0, 411, 414, 416, 419,
	-2, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1207, 1199, 1200, 1453, 0, 0, 0,
	-2, 523, 525, 578, 579, 0, 1721, 1721, 586, 587,
	-2, 0, 0, 0, 0, 334, 324, 1134, 1136, 1138,
	1139, 0, 0, 0, 0, 0, 693, 695, 0, 0,
	2826, 301, 1141, 1143, 1145, 1146, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 709, 711, 713, 715, 792,
	794, 796, 798, 800, 802, 804, 806, 808, 811, 813,
	815, 817, 819, 822, 824, 826, 829, 832, 834, 836,
	838, 840, 842, 844, 846, 848, 850, 852, 854, 856,
	858, 860, 861, 912, 0, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, -2, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 1022,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	1113, 0, 0, 915, 918, 919, 920, 921, 922, 923,
	0, 995, 1020, 1021, 1031, 865, 0, 1367, 1722, 1575,
	1556, 1570, 1575, 1558, 1559, 1560, 1561, 1562, 1567, 1569,
	1563, 1564, 1565, 50, 52, 54, 56, 58, 60, 62,
	64, 66, 68, 70, 72, 472, 474, 476, 478, 480,
	483, 485, 487, -2, 1691, 1692, 529, 531, 533, 535,
	537, 539, 541, 696, 0, 699, 0, 917, 698, -2,
	0, 1726, 1726, 1726, 0, 0, 1692, 1690, 0, 702,
	703, 771, 772, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 2259, 2087, 0, 773, -2, 2120, 2122, 2884,
	2702, 2909, 2258, 2124, 2125, 2126, 2127, 2128, 0, 2130,
	2131, 2132, 2133, 2134, 2135, 0, 2137, 0, 2142, 2143,
	2144, 0, 2891, 2362, 2446, -2, 0, 0, 2897, 2442,
	0, 2225, 2160, -2, -2, 2469, 2448, 1931, 1932, 1933,
	1934, 1935, -2, -2, 2927, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 0, 2872, 2892, 2893,
	2898, 2900, 2894, 2881, 2185, 2556, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1958,
	1967, -2, -2, -2, -2, -2, -2, -2, 2885, 2886,
	2903, 2906, 2912, 2917, 2918, 2890, 2899, 2926, 2928, 2929,
	2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939,
	2940, 2941, 2942, 2943, 1959, -2, -2, -2, -2, 0,
	1709, 2745, 1712, 1327, 1710, 1694, 1696, 0, 1698, 0,
	0, 0, 1703, 1729, 1727, 0, 1778, 1707, 1708, 1801,
	1801, 1825, 0, 1806, 0, 1825, 1721, 1852, 0, 1812,
	2772, 2161, 2162, 0, 2452, 2447, -2, -2, 2924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 659, 661, 0, 0, 0, 684, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 454, 455,
	456, 457, 2892, 0, 0, 0, 462, 0, 464, 465,
	466, 467, 468, 469, 470, 229, 2892, 546, 571, 0,
	229, 2892, 549, 229, 2892, 552, 0, 555, 1451, 229,
	2892, 558, 2413, 229, 2892, 561, 563, 2421, 229, 2892,
	567, 2428, 2426, 568, 0, 570, 249, 245, 246, 247,
	248, 1542, 1543, 1544, 1545, 0, 1572, 1452, 707, 0,
	733, 0, 743, 744, 2880, -2, 0, 2793, 748, 749,
	-2, 751, 1576, 1580, 1581, 1582, 1583, 1584, 0, 0,
	0, 0, 1589, 0, 0, 0, 0, 740, 741, 758,
	759, 765, 768, 0, 876, 872, 888, 0, 903, 0,
	904, 904, 2402, 2393, 2394, 0, 0, 904, 904, 0,
	0, 907, 908, 909, 910, 911, 83, 0, 2892, 1852,
	85, 0, 2407, 2477, 2478, 2479, 2480, 2481, 2925, 2945,
	2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
	2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,
	2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
	3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,
	3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 2927,
	89, 0, 2892, 94, 0, 2892, 0, -2, 110, 0,
	126, 0, 153, -2, -2, -2, 134, 0, 2892, 0,
	2382, -2, 0, 241, 325, 326, 327, 0, 634, 0,
	643, 337, 338, 2465, 2466, 2473, 2474, 2475, 2476, 0,
	736, 2259, 0, 0, 1171, -2, 0, 1380, 1382, 1382,
	0, -2, 0, 0, 0, 1123, 2379, 2384, 1124, 1125,
	2403, 1126, 2389, 0, 381, 382, 383, 384, 385, 0,
	386, 2892, 388, 389, 0, 391, 392, 2892, 394, 395,
	0, 397, 0, 399, 0, 281, 285, 2892, 2892, 423,
	426, 0, 428, 429, 0, 431, 0, 0, 0, 435,
	-2, 451, 0, 448, 438, 439, 441, 442, 443, 444,
	445, 0, 491, 489, 2418, 0, -2, 2892, 0, 1168,
	0, 0, 1431, -2, 0, 1373, 0, 1438, 2892, 1434,
	0, -2, 0, 1719, 2892, 1593, 1203, 1204, 1205, 1206,
	1864, 512, 0, 1626, 0, 1628, 0, 1648, 1858, 1801,
	0, 0, 1863, 0, -2, 631, 2435, -2, 581, 0,
	582, 0, -2, 0, 351, 0, 0, 1149, 1151, 1152,
	1154, 1155, 1158, 1159, 1160, 1161, 0, 1163, 1838, 302,
	304, 0, 0, 0, 0, 1148, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 0, 0, 718, 0, 0,
	913, 914, 0, 0, 930, 931, 932, 0, 0, 351,
	-2, -2, -2, 940, 0, 947, 950, -2, 0, 0,
	0, 0, 957, 0, 962, 963, 964, 0, -2, 0,
	971, 973, 1132, 975, 0, 0, 977, 0, 981, 0,
	984, 0, 986, 0, 988, -2, -2, -2, 996, 997,
	-2, 1002, -2, 0, 1006, -2, 0, 1009, 0, 1012,
	-2, 0, 1022, 1018, 1019, 0, 0, 0, 0, 1039,
	1040, 0, 1049, 0, 1052, 1053, 1054, 0, 0, 1059,
	1060, 0, 1062, 1063, 1064, 1066, 1067, 1068, 0, 2861,
	2790, 2542, 0, 1076, -2, 1082, 1084, 0, -2, 0,
	1100, 0, 1104, 0, 0, 1112, 0, 0, 916, 0,
	924, 925, 229, 1856, 1555, -2, 1557, 0, -2, 0,
	697, 0, 701, 1751, 1677, 1674, 0, 1748, 1749, 1678,
	0, 0, 0, 1685, 0, 1724, 1725, 0, 0, 0,
	1664, 1665, 0, 0, 0, 0, 2264, 2265, 2266, 2267,
	2280, 2268, 2269, 2279, 2277, 2278, 2270, 2271, 2276, 2290,
	2291, 2281, 2282, 2272, 2285, 2283, 2284, 2286, 2287, 2288,
	2289, 0, 0, 2295, 0, 2273, 2274, 2275, 2303, 0,
	0, 2304, 0, 2306, 0, 2296, 2292, 2293, 2294, 0,
	2066, 2068, 2370, 0, 0, 0, 2302, 2297, 2298, 2004,
	2005, 2006, 2007, 2008, 2041, 2045, 2046, 0, 0, 2121,
	2367, 2366, 2123, 0, 0, 2318, 0, 2136, -2, 0,
	2259, 2313, 0, 0, 2145, 2146, 2147, 0, 0, 2318,
	0, 0, 2361, 2157, 2158, 1996, 0, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1944, 0,
	1946, 0, 1947, 1948, 1955, 1968, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 2342, -2,
	0, 0, 0, 0, 1960, 0, 0, 1711, 0, 0,
	1782, 2371, 2375, 2376, 1782, 1782, 0, 0, 2319, 1849,
	1849, 0, 0, 1844, 1844, 1844, 1842, 1825, 0, 1825,
	1835, 0, 1825, 1825, 0, -2, 1806, 0, 0, 1835,
	0, 1819, 619, 621, 623, 625, 626, 627, 629, 1853,
	1854, 0, 0, 0, 0, 2453, 0, 0, 0, 0,
	0, 0, 2438, 0, 0, 2412, 406, 407, 0, 0,
	0, 2843, 2784, 0, -2, 664, 687, 1721, 0, 2321,
	1879, 1883, 0, 1885, 1886, 1887, 1888, 1889, 0, 0,
	1880, -2, 1956, 1958, 1979, 2470, 2471, 2472, 1939, 1940,
	1941, 1942, 1943, 1951, 1938, 1938, 1938, 1949, 1978, 1970,
	1978, 1974, 1924, 1925, 1926, 1961, 1962, 1963, 1964, 0,
	2843, 2784, 0, -2, 0, 674, 0, 0, 1659, 452,
	0, 459, 460, 461, 0, 542, 0, 227, 228, 0,
	229, 2892, 547, 0, 550, 0, 229, 2892, 2377, 556,
	0, 559, 0, 0, 565, 0, 0, 0, 0, 0,
	229, 1661, 0, 0, 0, 0, -2, 753, 761, 762,
	763, 0, 1578, 0, 1585, 782, 783, 784, 1587, 1588,
	0, 1590, 756, 785, 786, 787, 788, 789, 790, 0,
	2391, 2392, 2397, 2398, 0, 0, 754, 775, 757, 0,
	769, 879, 874, 875, 889, 890, 0, 0, 2395, 2396,
	0, 0, 895, 896, 135, 1528, 0, 0, 182, 0,
	1528, 1528, 0, 0, 0, 0, 210, 0, 0, 1237,
	0, 0, 0, 0, 153, 167, 178, 147, 148, 149,
	0, 0, 0, 0, 0, 0, 95, 1349, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 1365, 0, 0,
	0, 0, 0, 112, 113, 0, 0, 118, 119, 0,
	0, 166, 0, 0, 0, 0, 0, 1623, 0, 157,
	153, 0, 0, 152, 154, 137, 0, 0, 153, 168,
	180, 0, 216, 218, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 251, 0, 633, 635, 0, 0,
	0, 0, 641, 0, 644, 0, 734, 738, 739, 0,
	0, 735, 737, 0, 0, 1374, 0, 0, 0, 1718,
	0, 0, 0, 0, 2892, 1526, 0, 1511, 0, 1838,
	2631, -2, -2, 302, 1838, 1122, 0, 0, 2453, 2387,
	0, 0, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 427, 430, 432, 433, 434, 0, 1430, 0, 440,
	481, 1296, 2892, 0, 0, 510, 503, 0, 506, 0,
	0, 1348, 2892, 1346, 2422, 0, 1371, 0, 1327, 2892,
	2420, 0, 0, 0, 1439, 2462, 1448, 1452, 1611, 0,
	514, 0, 1629, 1631, 0, 0, 1859, 0, 1861, 1801,
	1721, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 1162, 308, 0, 1837, 0, 0, 339, 1838,
	302, 2758, 0, 1147, 351, 351, 1838, 720, 1838, 722,
	0, 0, 933, 0, 0, 936, 351, 351, 351, 945,
	946, 948, 949, -2, -2, -2, -2, 951, 952, 1046,
	0, 0, 0, 1045, 965, 0, 967, 970, 974, 0,
	1116, 2767, 2784, 2843, 1130, 1046, 2542, 1046, 2542, 1046,
	2542, 1046, 1046, 990, 1034, 1042, 1001, 1008, 0, 1003,
	1007, 1010, 1013, 0, 1015, 1023, 0, -2, 0, 1026,
	0, 1028, 0, 1030, 1046, 1047, 1050, 0, 1058, 1061,
	0, 1069, 1070, 1071, 1072, 2433, 1073, 1074, 1075, -2,
	1079, 1080, 0, 1091, 1096, 1097, 1093, 0, 0, 0,
	0, 0, 0, 1107, 1108, 0, 0, 1115, 0, 926,
	1366, 0, 1568, 1751, 1677, 700, 1668, 1750, 1669, 1676,
	1679, 0, 0, 1681, 0, 1683, 0, 1746, 1747, 1754,
	1755, 0, 1765, 1766, 1758, 0, -2, 0, 0, 1761,
	1762, 1687, 0, 1704, 1705, 1706, 1735, 1738, 1467, 0,
	3025, 2000, 1874, 2001, 2002, 2406, 0, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, -2, -2, -2,
	-2, -2, -2, -2, -2, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, -2, -2, -2, 2042,
	2043, 2044, -2, 2305, 2307, 0, 2370, 0, -2, 0,
	-2, -2, -2, -2, 2063, 0, 2065, 2070, 2072, 2074,
	0, 0, 0, 0, 2369, 2084, 2353, 2354, 0, 0,
	2261, 2262, 2263, 2069, 0, 2088, 2368, 2365, 0, 0,
	2299, 0, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 0, 2317, 1734, 2149, 0,
	0, 0, 0, 2156, 2141, 2315, 0, 2314, 0, 0,
	0, 2325, 0, 2360, 2356, 0, 2404, 1995, 1982, 1983,
	1984, 1985, 1986, 1987, 1997, 0, 2401, 2439, 2445, 2235,
	0, 0, 0, 2186, 2187, 2188, 2189, 2190, 0, 2192,
	2193, 0, 2195, 2196, 0, 2198, 2199, 0, 2201, 2202,
	2203, 2204, 2205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 0, 0, 2207, 0, 2328, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2209, 0, 2211, 2319,
	2339, 0, 0, 2089, 0, 0, 0, 0, 0, 2214,
	2319, 2347, 0, 0, 0, 0, 0, 2319, 0, 2352,
	0, 2221, 0, 2223, 954, 955, 1713, 0, 0, 1869,
	0, 0, 0, 2374, 1869, 1869, 0, 1777, 0, 0,
	1845, 1846, 1847, 1848, 0, 0, 1849, 0, 1839, 1843,
	1840, 1841, 1835, 1798, 0, 0, 2408, 1835, 1804, 1834,
	0, 1327, 1824, 1835, 1835, 0, -2, 1808, 1825, 0,
	0, 620, 622, 624, 628, 630, 0, 0, 1734, -2,
	0, -2, 353, 1326, 0, 0, 0, 0, 0, 0,
	654, 656, 0, 0, 562, 0, 0, 670, 0, 648,
	0, 651, 0, 1870, 1873, 0, 0, 1884, 1890, 1891,
	0, -2, 0, 0, 1980, 0, 0, 0, 0, 0,
	682, 0, 685, 0, 0, 0, 463, 572, 229, 544,
	0, 229, 229, 553, 0, 0, 229, 564, 229, 2429,
	229, 2427, 250, 569, 1660, 262, 0, 742, 0, 1577,
	1586, 0, 779, 0, 781, 0, 2399, 2400, 0, 770,
	0, 877, 0, 891, 892, 893, 894, 0, 0, 0,
	0, 1527, 0, 0, 1474, 0, 0, 186, 2892, 0,
	231, 0, 0, 1289, 2414, 0, 1279, 0, 0, 2564,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 150, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 1351,
	1353, 1360, 1362, 0, 1356, 1357, 0, 1359, 1361, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 1383, 0, 0, 0, 1384, 1385, 1599, 1600,
	0, 1622, 1623, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 2381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 351, 638,
	639, 347, 344, 346, 640, 645, 0, 646, 0, 0,
	0, 0, 1376, 0, 1426, 1424, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 0, 0, 0, 0, -2, 1378, 1379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	342, 2380, 2390, 0, 1156, 1157, 387, 390, 393, 396,
	268, 0, 0, 425, 436, 0, 0, 1209, 1181, 0,
	0, 490, 351, 0, 0, 505, 0, 2431, 1166, 1344,
	1347, 0, 1327, 2892, 1394, 0, 0, 0, 0, 0,
	0, 1437, 0, 0, 2892, 2409, 2461, 2462, 1613, 1623,
	0, 1869, 0, 1646, 1632, 0, 0, 0, 1646, 1650,
	1651, 1653, 1654, 0, 0, 1860, 1866, 580, 632, 1721,
	1721, 351, 349, 2705, 0, 0, 1635, 1637, 0, 0,
	0, 294, 0, 305, 1838, 303, 0, 308, 0, 0,
	1838, 302, 0, 502, 719, 724, 928, 0, 0, 351,
	937, 938, 939, 992, 1036, 1044, 1095, 956, 958, 959,
	960, 0, 0, 0, 1131, 1127, 1128, 1129, 976, 1046,
	979, 1046, 982, 1046, 985, 987, 1005, 1011, 1024, 1017,
	1025, 0, 0, 0, 1038, 0, 1056, 0, 1065, 1078,
	0, 0, 0, 0, 0, 0, 0, 1101, 1102, 1103,
	1105, 1110, 1109, 1114, 927, 1857, 1672, 1673, 1675, 0,
	1684, 0, 0, 1760, -2, -2, 1759, 1763, 1764, -2,
	-2, -2, -2, 1680, 0, 1689, 1686, 0, 1745, 1465,
	1466, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	2085, 0, -2, 2064, 2067, 2071, 2073, 2075, 0, 0,
	0, 0, 0, 0, 2308, 0, 2310, 2086, 2363, 2366,
	2301, 0, 2257, 0, 0, 1733, 1734, 1734, 0, 2155,
	0, 2316, 0, 2323, 2324, 0, 2148, 0, 2357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2159, 0,
	0, 0, 0, 2191, 2194, 2197, 2200, 0, 0, 0,
	0, 2180, 0, 0, 0, 2184, 1950, 1936, 0, 1978,
	1976, 1977, 1971, 1978, 1975, 1928, 0, 1927, 0, 2206,
	0, 2208, 2210, 0, 0, 2212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2092, 2093, 2094, 2114, 2213, 2345, 2346, 0, 0, 0,
	0, 0, 0, 2219, 0, 2351, 2220, 2222, 1721, 0,
	1714, 0, 1779, 1768, 1868, 0, 2372, 1838, 1781, 1783,
	2373, 2411, 1768, 1768, 0, 2320, 0, 0, 1829, 0,
	0, 0, 1831, 1802, 0, 0, 1796, 0, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1803, 1327, 1833, 1805, 1809,
	2439, 0, 1835, 0, 1820, 0, 1822, 1855, 0, 1814,
	1817, 0, 0, 2454, 1869, 0, 400, 408, 409, 401,
	402, 403, 404, 0, 1514, 0, 0, 0, 0, 0,
	2322, 0, 1875, 0, 1881, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 1658, 458, 543, 229, 548,
	551, 2378, 229, 557, 560, 566, 258, 0, 732, -2,
	777, 778, 780, 0, 776, 882, 878, 183, 1528, 0,
	0, 0, 1470, 0, 1192, 0, 1187, 1188, 1472, 2425,
	1476, 1482, 1485, 0, 188, 2892, 200, 0, 2892, 0,
	1253, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	2892, 229, 2892, 229, 204, 206, 209, 0, 215, 211,
	0, 1189, 0, 1241, 0, 0, 1244, 136, 1528, 0,
	0, 139, 143, 155, 0, 0, 0, 165, 0, 0,
	0, 1487, 1491, 1499, 0, 0, 0, 1354, 1355, 1358,
	1364, 96, 0, 0, 0, 1495, 1497, 1503, 111, 114,
	2892, 2423, 0, 116, 2892, 0, 0, 0, 1469, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 141, 145,
	156, 0, 1505, 138, 0, 244, 0, 0, 234, 229,
	2892, 0, 236, 0, 237, 238, 252, 0, 0, 0,
	637, 0, 0, 0, 642, 0, 1169, 1170, 1425, 0,
	1369, 1370, 0, 1381, 1375, 0, 0, 0, 0, 0,
	1507, 1508, 0, 0, 0, 1526, 1523, 1838, 264, 0,
	1838, 272, 0, 2386, 0, 286, 422, 0, 0, 0,
	0, 1208, 1307, 1210, 1212, 1213, 1214, 231, 0, 2462,
	1279, 2620, 2462, 0, 0, 1176, 0, 0, 0, 496,
	492, 0, 501, 504, 509, 0, 508, 2415, -2, 0,
	0, 0, 0, -2, 0, 0, 1441, 1435, 1436, 0,
	0, 0, 0, 2892, 1615, 1623, 0, 1719, 1734, 513,
	1624, 1646, 0, 0, 0, 1634, 1630, 1627, 1869, 0,
	0, 0, 0, 0, 1862, 1865, 583, 584, 328, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 306, 0,
	309, 0, 0, 0, 314, 315, 316, 317, 318, 319,
	0, 0, 0, 0, 308, 340, 296, 1838, 0, 308,
	0, 0, 721, 0, 0, 0, 935, 0, 966, 969,
	978, 980, 983, 1027, 1029, 1046, 0, 1057, 1085, 2410,
	1086, 1231, 0, 1231, 0, 0, 1106, 1682, 0, 1757,
	1688, 1739, 1740, 0, 1467, 0, 2003, 2048, 0, 0,
	-2, 0, 0, 2052, 0, 0, 0, -2, 0, 0,
	0, 2309, 2311, 0, 2365, 2300, 2150, 0, 0, 0,
	2154, 2138, 2139, 0, 2260, 2326, 2355, 2359, 0, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 0, 2405, 2440, 2444,
	2233, 2234, 2238, 2419, 0, 0, 0, 2163, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 1973, 0, 0,
	2327, 2338, 2340, 2090, 2091, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, -2, -2, -2, 2108, 2109,
	2110, -2, -2, -2, 2115, 0, 0, 0, 2341, 2343,
	2344, 2348, 2349, 0, 2216, 2217, 2218, 2350, 0, 1721,
	1715, 1776, 0, 1867, 1780, 0, 1776, 1776, 1728, 1827,
	0, 0, 1851, 0, 1799, 0, 1800, 0, 0, 1832,
	0, 1807, 1810, 1811, 1821, 0, 1813, 0, 1816, 0,
	2150, -2, 352, 354, 356, 0, 359, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 663, 0,
	1514, 1514, 0, 665, 649, 0, 0, 1877, 0, 0,
	1953, 1957, 1981, 676, 678, 0, 0, 2843, 2784, 0,
	675, 545, 554, 260, 0, 1836, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 230, 0,
	1288, 0, 1251, 0, 0, 1278, 0, 0, 1294, 190,
	191, 192, 0, 0, 0, 0, 202, 0, 0, 198,
	0, 208, 214, 213, 0, 1238, 0, 0, 0, 0,
	1475, 0, 0, 0, 162, 163, 164, 0, 169, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 1605, 1606, 0, 1596, 159, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 1464,
	254, 0, 0, 0, 0, 0, 348, 343, 345, 0,
	1368, 1428, 1429, 1377, 1488, 1492, 1500, 0, 0, 0,
	0, 0, 690, 1525, 0, 272, 270, 0, 273, 0,
	276, 277, 0, 0, 272, 266, 0, 0, 0, 1327,
	437, 1179, 1295, 0, 0, 1297, 1215, 1219, 0, 2462,
	2462, 0, 2416, 0, 1177, 0, 0, 1296, 488, 0,
	495, 0, 507, 0, 1348, 0, 0, 1372, 1397, 1327,
	0, 1440, 1442, 0, 1450, 0, 0, 0, 1617, 1623,
	0, 1610, 1611, 1753, 1625, 1644, -2, 0, 0, 1734,
	1652, 1649, 1655, 1656, 0, 0, 0, 331, 0, 1636,
	1638, 0, 1150, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 308, 1838, 298, 1838, 335, 0,
	929, 351, 961, 1037, 1055, 1087, 1230, 0, 0, 1089,
	0, 0, 1756, 1743, 1744, 1741, 1467, 2050, 2054, 0,
	0, 0, 2056, -2, 0, 2078, -2, -2, 2312, 2364,
	2129, 1734, 2151, 2153, 2140, 2358, 1998, 0, 2240, 2237,
	0, 2224, 0, 2175, 2176, 0, 0, 2179, 2181, 2182,
	2183, 1937, 1930, 1929, 2337, 0, 0, 0, 0, 2215,
	1716, 0, 2229, 0, 0, 1784, 2229, 2229, 1828, 0,
	1830, 1797, 1785, 0, 1794, 0, 2440, 1823, 1815, 0,
	0, 357, 0, 361, 362, 363, 364, 365, 366, 0,
	0, 0, 0, 0, 405, 0, 666, 667, 0, 0,
	1871, 1876, 0, 1882, 1952, 0, 0, 0, 0, 0,
	261, 0, 880, 881, 184, 185, 1193, 1191, 1479, 1483,
	1480, 0, 187, 0, 0, 1252, 0, 1255, 0, 0,
	0, 0, 1262, 1279, 0, 0, 0, 0, 0, 0,
	1281, 0, 1280, 0, 0, 1311, 0, 1455, 1462, 0,
	-2, 0, 0, 0, 194, 220, 0, 0, 0, 0,
	223, 1529, 196, 0, 0, 229, 229, 1190, 0, 0,
	1471, 1473, 1486, 0, 0, 0, 0, 172, 0, 0,
	1489, 1493, 1501, 1496, 1498, 1504, 0, 0, 117, 0,
	0, 1607, 0, 158, 0, 0, 0, 1506, 242, 243,
	0, 229, 0, 229, 235, 229, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 1510, 263, 0, 0,
	0, 0, 0, 265, 341, 272, 424, 0, 1240, 0,
	1307, 1299, 1300, 1301, 0, 1211, 1306, 1308, 0, 0,
	1216, 0, 0, 0, 0, 1196, 1178, 0, 1209, 1181,
	0, 493, 1167, 1345, 1389, 1327, 1392, 0, 0, 1432,
	0, 0, 0, 0, 0, 0, 0, 1619, 1623, 0,
	1612, 1613, 1646, 1752, 0, 0, 0, 1633, 1753, 0,
	350, 351, 0, 351, 310, 0, 311, 312, 313, 320,
	321, 322, 323, 297, 300, 308, 723, 725, 0, 0,
	731, 934, 1229, 0, 0, 0, 0, 1742, 2058, -2,
	-2, 2079, 0, 2441, 2443, 1734, 0, 2226, 1736, 0,
	0, -2, 0, 0, 0, 1717, 1700, 0, 1775, 1767,
	1769, 1771, 2770, 2537, 2891, 1701, 1702, 1850, 0, 0,
	1818, 358, 367, 368, 0, 370, 371, 1513, 668, 0,
	0, 1878, 0, 673, 0, 0, 0, 870, 0, 0,
	1481, 189, 0, 0, 1256, 1257, 1259, 0, 1261, 1263,
	1264, 1181, 0, 1268, 0, 2464, 0, 1273, 1276, 1277,
	0, 0, 1290, 1312, 0, 1321, 0, 1457, 1467, 1461,
	0, 1459, 1323, 0, 193, 222, 195, 224, 219, 0,
	1464, 0, 197, 207, 0, 0, 140, 0, 0, 2531,
	175, 173, 171, 115, 121, 123, 1468, 161, 0, 142,
	0, 244, 253, 1463, 255, 239, 229, 0, 0, 1490,
	1494, 1502, 0, 1517, 1518, 1519, 1520, 0, 0, 0,
	0, 274, 0, 275, 278, 279, 0, 0, 1181, 1239,
	1180, 1298, 0, 1309, 1181, 0, 0, 0, 0, 0,
	0, 1183, 0, 1182, 0, 0, 494, 497, 0, 500,
	0, 0, 1396, 0, 1443, 1441, 0, 1449, 0, 0,
	0, 1595, 0, 0, 1614, 1615, 511, 1639, 0, 0,
	1646, 1657, 330, 0, 333, 307, 299, 0, 727, 0,
	729, 0, 1088, 1090, 0, 0, 2152, 2244, 0, 0,
	2177, 2178, -2, 0, 2118, 2228, 2230, 0, 0, 0,
	0, 0, 1786, 1795, 369, 1514, 1872, 680, 677, 679,
	0, 1477, 0, 1484, 231, 1254, 1258, 0, 1265, 0,
	0, 0, 1269, 1331, 0, 0, 1348, 1348, 1282, 0,
	0, 1315, 1316, 1236, 0, 1317, 1318, 1319, 1456, 1745,
	1462, 1181, 0, 0, 221, 226, 0, 0, 0, 0,
	0, 0, 160, 0, 233, 256, 1464, 0, 0, 1521,
	1522, 0, 0, 271, 290, 0, 1390, 1183, 0, 1310,
	1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1218, 1323, 0, 0, 1287, 1194, 0, 1197, 0, 1179,
	0, 498, 499, 0, 0, 1397, 0, 0, 1450, 0,
	0, 1602, 1594, 1623, 1616, 1617, 1869, 0, 1647, 0,
	726, 0, 0, 1098, 1099, 0, 0, 0, 0, 2239,
	1737, 2119, 0, 0, 1770, 1772, 1773, 1774, 669, 0,
	1478, 201, 0, 1325, 1267, 1336, 0, 0, 0, 0,
	0, 1283, 1313, 1314, 1311, 1235, 0, 1460, 1458, 1292,
	1325, 1327, 199, 0, 1323, 0, 1245, 0, 0, 1248,
	0, 0, 176, 2531, 174, 0, 229, 647, 1514, 229,
	0, 293, 0, 284, 282, 283, 1175, 0, 1303, 1305,
	1321, 1323, 1236, 0, 1198, 1240, 1196, 1391, 1395, 1393,
	1433, 1323, 0, 1321, 0, 1609, 1623, 1603, 1604, 0,
	1619, 0, 0, 351, 728, 730, 2236, 2256, 2245, -2,
	2846, 2538, 0, 2256, 2256, 2231, 2232, 0, 0, 1181,
	0, 1270, 1332, 1333, 0, 1328, 1329, 1330, 2463, 1271,
	1272, 1274, 1275, 1869, 0, 1322, 1331, 225, 1181, 1242,
	0, 0, 1243, 0, 0, 179, 0, 181, 257, 1512,
	1515, 0, 280, 0, 0, 1172, 1174, 1181, 0, 1236,
	1321, 1181, 0, 0, 0, 1181, 1183, 1321, 0, 1236,
	0, 1598, 1608, 0, 1618, 1595, 0, 1642, 0, 332,
	2241, 0, 0, 2247, 2248, 2249, 2250, 2251, 2242, 2243,
	681, 1260, 1266, 0, 1334, 0, 1335, 0, 0, 0,
	1291, 1320, 1336, 205, 1246, 0, 1249, 0, 177, 0,
	0, 288, 289, 1302, 1304, 1181, 1236, 1869, 1184, 0,
	1186, 1183, 1195, 1236, 0, 1181, 0, 1621, 1597, 1601,
	2424, 1602, 1640, 0, 0, 0, 2253, 2254, 0, 0,
	0, 1337, 0, 1340, 1341, 0, 1338, 1311, 0, 0,
	229, 0, 1869, 1181, 1286, 1185, 1175, 1181, 1323, 1869,
	1321, 1591, 1623, 1609, 0, 1869, 2252, 2255, 2246, 1324,
	1339, 1342, 1343, 1293, 0, 0, 1516, 291, 0, 1284,
	1869, 1173, 1869, 1321, 1446, 1236, 0, 1598, 1869, 1643,
	1233, 0, 0, 1285, 1444, 1236, 1181, 1620, 1592, 1641,
	1247, 1232, 0, 292, 1181, 1869, 0, 1869, 1447, 0,
	1445, 1233, 1250,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1737
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1803
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1953
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2015
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2062
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2074
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2095
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2216
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2225
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2236
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2242
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2408
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2418
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2421
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2479
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2862
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3329
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3338
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3344
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3349
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3354
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3462
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3694
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3743
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "CREATE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3758
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplemented(sqllex, "create access method")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "create cast")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "create publication")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "create rule")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "create server")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3789
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3792
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3793
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3796
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3797
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "drop server")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3944
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3954
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4000
		{

			sqlVAL.union.val = nil
		}
	case 511:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4028
		{
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4054
		{
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DROP")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4168
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4175
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4254
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4320
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4336
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4344
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4352
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "DELETE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "INSERT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "DELETE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "INSERT")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4542
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4575
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4666
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4682
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "GRANT")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4778
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "RESET")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "RESET")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "USE")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4869
		{
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "USE")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4991
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5001
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5106
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5125
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5129
		{
			return unimplemented(sqllex, "set from current")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5138
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5147
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5173
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.Low
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = tree.Normal
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.High
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5389
		{
			sqlVAL.union.val = true
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = false
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = false
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "FETCH")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "MOVE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = int64(1)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = int64(-1)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = int64(1)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = int64(1)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = int64(-1)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5557
		{
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5558
		{
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5561
		{
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.str = "client_encoding"
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.str = "timezone"
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5648
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.expr(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5784
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5790
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5865
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5905
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5918
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5926
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5950
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5986
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = true
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = true
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = false
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6046
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6073
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6089
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6097
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6146
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6148
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6152
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = true
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = false
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6167
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6172
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6203
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6218
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = true
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = false
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6233
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6236
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6265
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6275
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6286
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6308
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6313
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6318
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6352
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6357
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6362
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6367
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6396
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6412
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6423
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6441
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6449
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6470
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6475
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6480
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6484
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6493
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6516
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6587
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6597
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6610
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6743
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6786
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6797
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6955
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6974
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6996
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7010
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7074
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7089
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{

			sqlVAL.union.val = nil
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7123
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.str = ""
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7133
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = nil
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7156
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7160
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7196
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7209
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7223
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7306
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7323
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.str = ""
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7462
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7569
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{

			sqlVAL.union.val = true
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = false
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7624
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7628
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7631
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7728
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7739
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7756
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7766
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7849
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7936
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8021
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8030
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8038
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8072
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8081
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8084
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8086
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8099
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8103
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8130
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.str = ""
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = true
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8198
		{

			sqlVAL.union.val = true
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = false
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8213
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8227
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8239
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8251
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8261
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8271
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8275
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = true
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = true
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = nil
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8418
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8446
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8448
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8450
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8452
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8454
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8489
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8506
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8524
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8540
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8556
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8560
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = false
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = true
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = false
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = true
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = false
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8620
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8634
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.str = ""
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.str = ""
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8693
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8699
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8924
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8930
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8942
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8948
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8962
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8968
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9027
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = true
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = false
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.Types
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9091
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9115
		{
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9116
		{
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9119
		{
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9120
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9149
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9257
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9270
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9275
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9286
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9303
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9307
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9444
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.str = ""
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9472
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{

		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9504
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.str = ""
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.str = ""
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.str = ""
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.str = ""
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9559
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9739
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9777
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9809
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9830
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9845
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10024
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10026
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10131
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10147
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = true
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = false
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10201
		{
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = nil
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10215
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = true
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = false
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = false
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = true
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10245
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10249
		{
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10290
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10302
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10307
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10333
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10366
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10460
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10492
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10494
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10509
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10531
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10578
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10609
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10651
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10661
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10696
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10707
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10737
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10770
		{
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = nil
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = true
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = false
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.str = tree.AstFull
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.str = tree.AstRight
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.str = tree.AstInner
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10889
		{
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10890
		{
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.str = tree.AstHash
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.str = ""
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10959
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10964
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10982
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10994
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11004
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = true
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = false
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = true
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = false
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11053
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11066
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11074
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11075
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11093
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11103
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11123
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11172
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11184
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = types.Geography
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11234
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11242
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11268
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11276
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = nil
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = types.Int2
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = types.Int
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = types.Float4
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = types.Float
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11319
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11327
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11335
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = types.Bool
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = types.Float
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11368
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11374
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11396
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = types.String
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = true
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = false
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = types.Date
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11453
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11467
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11476
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11484
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11501
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = true
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = false
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = false
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = types.Interval
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11525
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11609
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11624
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = nil
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11654
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11714
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11863
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11871
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12058
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12188
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12196
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12292
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12297
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12323
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12347
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12381
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12392
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12393
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12408
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12417
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12483
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12608
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12613
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12622
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12640
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12649
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12654
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12664
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12669
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12674
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12683
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12684
		{
			return unimplemented(sqllex, "treat")
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12757
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12765
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12769
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12773
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.str = ""
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12859
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12915
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12927
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12956
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13032
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13114
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13177
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13218
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13229
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13258
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13274
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13346
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13350
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13372
		{
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13373
		{
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13377
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13387
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13396
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13445
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13453
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13476
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13485
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13489
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13493
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13497
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13503
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13522
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13526
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13542
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13551
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13562
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13571
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13579
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13596
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13689
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13693
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13711
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13745
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13749
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13753
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13767
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13771
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13775
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13815
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13828
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13835
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.str = ""
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13866
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13870
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
